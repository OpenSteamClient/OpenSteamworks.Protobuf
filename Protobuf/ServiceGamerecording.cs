// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_gamerecording.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_gamerecording.proto</summary>
  public static partial class ServiceGamerecordingReflection {

    #region Descriptor
    /// <summary>File descriptor for service_gamerecording.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceGamerecordingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtzZXJ2aWNlX2dhbWVyZWNvcmRpbmcucHJvdG8aIGdvb2dsZS9wcm90b2J1",
            "Zi9kZXNjcmlwdG9yLnByb3RvGhFjb21tb25fYmFzZS5wcm90byI0CjJDR2Ft",
            "ZVJlY29yZGluZ19DbGVhbnVwQmFja2dyb3VuZFJlY29yZGluZ3NfUmVxdWVz",
            "dCI1CjNDR2FtZVJlY29yZGluZ19DbGVhbnVwQmFja2dyb3VuZFJlY29yZGlu",
            "Z3NfUmVzcG9uc2UiVwonQ0dhbWVSZWNvcmRpbmdfQ2xpcENyZWF0ZWRfTm90",
            "aWZpY2F0aW9uEiwKB3N1bW1hcnkYASABKAsyGy5DR2FtZVJlY29yZGluZ19D",
            "bGlwU3VtbWFyeSJLCidDR2FtZVJlY29yZGluZ19DbGlwRGVsZXRlZF9Ob3Rp",
            "ZmljYXRpb24SDwoHY2xpcF9pZBgBIAEoCRIPCgdnYW1lX2lkGAIgASgEIqQD",
            "ChpDR2FtZVJlY29yZGluZ19DbGlwU3VtbWFyeRIPCgdjbGlwX2lkGAEgASgJ",
            "Eg8KB2dhbWVfaWQYAiABKAQSEwoLZHVyYXRpb25fbXMYAyABKAQSFQoNZGF0",
            "ZV9yZWNvcmRlZBgEIAEoDRIZChFzdGFydF90aW1lbGluZV9pZBgFIAEoCRIX",
            "Cg9zdGFydF9vZmZzZXRfbXMYBiABKAQSGQoRcHVibGlzaGVkX2ZpbGVfaWQY",
            "ByABKAQSEQoJZmlsZV9zaXplGAggASgEEgwKBG5hbWUYCSABKAkSFAoMZGF0",
            "ZV9jbGlwcGVkGAogASgNEhEKCXRlbXBvcmFyeRgLIAEoCBIXCg9vcmlnaW5h",
            "bF9kZXZpY2UYDCABKAkSIwobb3JpZ2luYWxfZ2FtaW5nX2RldmljZV90eXBl",
            "GA0gASgNEhcKD2RhdGVfZG93bmxvYWRlZBgOIAEoDRIVCg10aHVtYm5haWxf",
            "dXJsGA8gASgJEhcKD3RodW1ibmFpbF93aWR0aBgQIAEoDRIYChB0aHVtYm5h",
            "aWxfaGVpZ2h0GBEgASgNIjQKIUNHYW1lUmVjb3JkaW5nX0RlbGV0ZUNsaXBf",
            "UmVxdWVzdBIPCgdjbGlwX2lkGAEgASgJIiQKIkNHYW1lUmVjb3JkaW5nX0Rl",
            "bGV0ZUNsaXBfUmVzcG9uc2UihAEKIUNHYW1lUmVjb3JkaW5nX0V4cG9ydENs",
            "aXBfUmVxdWVzdBIPCgdjbGlwX2lkGAEgASgJEhcKD2V4cG9ydF9tcDRfcGF0",
            "aBgCIAEoCRI1CghzZXR0aW5ncxgDIAEoCzIjLkNHYW1lUmVjb3JkaW5nX0V4",
            "cG9ydENsaXBfU2V0dGluZ3MiJAoiQ0dhbWVSZWNvcmRpbmdfRXhwb3J0Q2xp",
            "cF9SZXNwb25zZSJ0CiJDR2FtZVJlY29yZGluZ19FeHBvcnRDbGlwX1NldHRp",
            "bmdzEhQKDGJpdHJhdGVfa2JwcxgBIAEoBRINCgV3aWR0aBgCIAEoBRIOCgZo",
            "ZWlnaHQYAyABKAUSGQoRZnJhbWVzX3Blcl9zZWNvbmQYBCABKAUiYAoqQ0dh",
            "bWVSZWNvcmRpbmdfRXhwb3J0UHJvZ3Jlc3NfTm90aWZpY2F0aW9uEhAKCHBy",
            "b2dyZXNzGAEgASgCEg8KB2NsaXBfaWQYAiABKAkSDwoHZXJlc3VsdBgDIAEo",
            "BSIuCixDR2FtZVJlY29yZGluZ19HZXRBY3RpdmVUaW1lbGluZUFwcHNfUmVx",
            "dWVzdCJxCi1DR2FtZVJlY29yZGluZ19HZXRBY3RpdmVUaW1lbGluZUFwcHNf",
            "UmVzcG9uc2USQAoEYXBwcxgBIAMoCzIyLkNHYW1lUmVjb3JkaW5nX0dldEFj",
            "dGl2ZVRpbWVsaW5lQXBwc19SZXNwb25zZV9BcHAi7wEKMUNHYW1lUmVjb3Jk",
            "aW5nX0dldEFjdGl2ZVRpbWVsaW5lQXBwc19SZXNwb25zZV9BcHASDwoHZ2Ft",
            "ZV9pZBgBIAEoBBIeChZtb3N0X3JlY2VudF9zdGFydF90aW1lGAIgASgNEiAK",
            "DnJlY29yZGluZ190eXBlGAMgASgFQgiCtRgEZW51bRIeChZ2aWRlb19kdXJh",
            "dGlvbl9zZWNvbmRzGAQgASgBEiEKGXRpbWVsaW5lX2R1cmF0aW9uX3NlY29u",
            "ZHMYBSABKAESEQoJaXNfYWN0aXZlGAYgASgIEhEKCWZpbGVfc2l6ZRgHIAEo",
            "BCJdCjNDR2FtZVJlY29yZGluZ19HZXRBbmRUcmltUG9zdEdhbWVIaWdobGln",
            "aHRzX1JlcXVlc3QSDwoHZ2FtZV9pZBgBIAEoBBIVCg1jcmVhdGVkX2FmdGVy",
            "GAIgASgNImQKNENHYW1lUmVjb3JkaW5nX0dldEFuZFRyaW1Qb3N0R2FtZUhp",
            "Z2hsaWdodHNfUmVzcG9uc2USLAoGZXZlbnRzGAEgAygLMhwuQ0dhbWVSZWNv",
            "cmRpbmdUaW1lbGluZUV2ZW50Ii4KLENHYW1lUmVjb3JkaW5nX0dldEF2YWls",
            "YWJsZURpc2tTcGFjZV9SZXF1ZXN0Ij0KLUNHYW1lUmVjb3JkaW5nX0dldEF2",
            "YWlsYWJsZURpc2tTcGFjZV9SZXNwb25zZRIMCgRzaXplGAEgASgBImQKH0NH",
            "YW1lUmVjb3JkaW5nX0dldENsaXBzX1JlcXVlc3QSDwoHZ2FtZV9pZBgBIAEo",
            "BBIVCg1jcmVhdGVkX2FmdGVyGAIgASgNEhkKEWluY2x1ZGVfdGVtcG9yYXJ5",
            "GAMgASgIIk0KIENHYW1lUmVjb3JkaW5nX0dldENsaXBzX1Jlc3BvbnNlEikK",
            "BGNsaXAYASADKAsyGy5DR2FtZVJlY29yZGluZ19DbGlwU3VtbWFyeSIrCilD",
            "R2FtZVJlY29yZGluZ19HZXRFbm91Z2hEaXNrU3BhY2VfUmVxdWVzdCJCCipD",
            "R2FtZVJlY29yZGluZ19HZXRFbm91Z2hEaXNrU3BhY2VfUmVzcG9uc2USFAoM",
            "ZW5vdWdoX3NwYWNlGAEgASgIIjAKLkNHYW1lUmVjb3JkaW5nX0dldFBsYXRm",
            "b3JtQ2FwYWJpbGl0aWVzX1JlcXVlc3QiVAovQ0dhbWVSZWNvcmRpbmdfR2V0",
            "UGxhdGZvcm1DYXBhYmlsaXRpZXNfUmVzcG9uc2USIQoZcGVyX3Byb2Nlc3Nf",
            "YXVkaW9fY2FwdHVyZRgBIAEoCCI6CidDR2FtZVJlY29yZGluZ19HZXRSZWNv",
            "cmRpbmdTaXplX1JlcXVlc3QSDwoHZ2FtZV9pZBgBIAEoBCI9CihDR2FtZVJl",
            "Y29yZGluZ19HZXRSZWNvcmRpbmdTaXplX1Jlc3BvbnNlEhEKCWZpbGVfc2l6",
            "ZRgBIAEoBCK5AQokQ0dhbWVSZWNvcmRpbmdfR2V0VGh1bWJuYWlsc19SZXF1",
            "ZXN0EhQKDHJlY29yZGluZ19pZBgBIAEoCRIPCgdjbGlwX2lkGAMgASgJEhcK",
            "D3N0YXJ0X29mZnNldF91cxgEIAMoAxIXCgptYWpvcl9heGlzGAUgASgNOgM1",
            "MTISIwoOdGltZV9wcmVjaXNpb24YBiABKAU6ATBCCIK1GARlbnVtEhMKC3Rp",
            "bWVsaW5lX2lkGAcgASgJIm0KJUNHYW1lUmVjb3JkaW5nX0dldFRodW1ibmFp",
            "bHNfUmVzcG9uc2USRAoKdGh1bWJuYWlscxgBIAMoCzIwLkNHYW1lUmVjb3Jk",
            "aW5nX0dldFRodW1ibmFpbHNfUmVzcG9uc2VfVGh1bWJuYWlsImQKL0NHYW1l",
            "UmVjb3JkaW5nX0dldFRodW1ibmFpbHNfUmVzcG9uc2VfVGh1bWJuYWlsEhIK",
            "CmltYWdlX2RhdGEYASABKAwSDQoFd2lkdGgYAiABKA0SDgoGaGVpZ2h0GAMg",
            "ASgNIjwKKUNHYW1lUmVjb3JkaW5nX0dldFRpbWVsaW5lc0ZvckFwcF9SZXF1",
            "ZXN0Eg8KB2dhbWVfaWQYASABKAQiYAoqQ0dhbWVSZWNvcmRpbmdfR2V0VGlt",
            "ZWxpbmVzRm9yQXBwX1Jlc3BvbnNlEjIKCXRpbWVsaW5lcxgBIAMoCzIfLkNH",
            "YW1lUmVjb3JkaW5nVGltZWxpbmVNZXRhZGF0YSI9CipDR2FtZVJlY29yZGlu",
            "Z19HZXRUaW1lbGluZXNGb3JDbGlwX1JlcXVlc3QSDwoHY2xpcF9pZBgBIAEo",
            "CSKaAQorQ0dhbWVSZWNvcmRpbmdfR2V0VGltZWxpbmVzRm9yQ2xpcF9SZXNw",
            "b25zZRIPCgdnYW1lX2lkGAEgASgEEjIKCXRpbWVsaW5lcxgCIAMoCzIfLkNH",
            "YW1lUmVjb3JkaW5nVGltZWxpbmVNZXRhZGF0YRImCh5maXJzdF90aW1lbGlu",
            "ZV9zdGFydF9vZmZzZXRfbXMYAyABKAQiXAotQ0dhbWVSZWNvcmRpbmdfR2V0",
            "VG90YWxEaXNrU3BhY2VVc2FnZV9SZXF1ZXN0EhMKC2ZvbGRlcl9wYXRoGAEg",
            "ASgJEhYKBHR5cGUYAiABKAVCCIK1GARlbnVtIj4KLkNHYW1lUmVjb3JkaW5n",
            "X0dldFRvdGFsRGlza1NwYWNlVXNhZ2VfUmVzcG9uc2USDAoEc2l6ZRgBIAEo",
            "BCIqCihDR2FtZVJlY29yZGluZ19Mb3dEaXNrU3BhY2VfTm90aWZpY2F0aW9u",
            "IkoKNkNHYW1lUmVjb3JkaW5nX01hbnVhbGx5RGVsZXRlUmVjb3JkaW5nc0Zv",
            "ckFwcHNfUmVxdWVzdBIQCghnYW1lX2lkcxgBIAMoBCI5CjdDR2FtZVJlY29y",
            "ZGluZ19NYW51YWxseURlbGV0ZVJlY29yZGluZ3NGb3JBcHBzX1Jlc3BvbnNl",
            "IkgKNUNHYW1lUmVjb3JkaW5nX1Bvc3RHYW1lSGlnaGxpZ2h0c0NoYW5nZWRf",
            "Tm90aWZpY2F0aW9uEg8KB2dhbWVfaWQYASABKAQi4QEKM0NHYW1lUmVjb3Jk",
            "aW5nX1JlY29yZGluZ1Nlc3Npb25DaGFuZ2VkX05vdGlmaWNhdGlvbhIjChFu",
            "b3RpZmljYXRpb25fdHlwZRgBIAEoBUIIgrUYBGVudW0SEwoLdGltZWxpbmVf",
            "aWQYAiABKAkSDwoHZ2FtZV9pZBgEIAEoBBISCgpzZXNzaW9uX2lkGAUgASgJ",
            "EhQKDHN0YXJ0X29mZnNldBgGIAEoBBITCgtkdXJhdGlvbl9tcxgHIAEoBBIg",
            "Cg5yZWNvcmRpbmdfdHlwZRgIIAEoBUIIgrUYBGVudW0i2gEKH0NHYW1lUmVj",
            "b3JkaW5nX1NhdmVDbGlwX1JlcXVlc3QSDwoHZ2FtZV9pZBgBIAEoBBI4CgVz",
            "dGFydBgCIAEoCzIpLkNHYW1lUmVjb3JkaW5nX1NhdmVDbGlwX1JlcXVlc3Rf",
            "UG9zaXRpb24SNgoDZW5kGAMgASgLMikuQ0dhbWVSZWNvcmRpbmdfU2F2ZUNs",
            "aXBfUmVxdWVzdF9Qb3NpdGlvbhIMCgRuYW1lGAQgASgJEhMKC3NyY19jbGlw",
            "X2lkGAUgASgJEhEKCXRlbXBvcmFyeRgGIAEoCCJSCihDR2FtZVJlY29yZGlu",
            "Z19TYXZlQ2xpcF9SZXF1ZXN0X1Bvc2l0aW9uEhMKC3RpbWVsaW5lX2lkGAEg",
            "ASgJEhEKCW9mZnNldF9tcxgCIAEoBCJQCiBDR2FtZVJlY29yZGluZ19TYXZl",
            "Q2xpcF9SZXNwb25zZRIsCgdzdW1tYXJ5GAEgASgLMhsuQ0dhbWVSZWNvcmRp",
            "bmdfQ2xpcFN1bW1hcnkiOAolQ0dhbWVSZWNvcmRpbmdfU3RhcnRSZWNvcmRp",
            "bmdfUmVxdWVzdBIPCgdnYW1lX2lkGAEgASgEIigKJkNHYW1lUmVjb3JkaW5n",
            "X1N0YXJ0UmVjb3JkaW5nX1Jlc3BvbnNlIjcKJENHYW1lUmVjb3JkaW5nX1N0",
            "b3BSZWNvcmRpbmdfUmVxdWVzdBIPCgdnYW1lX2lkGAEgASgEIlUKJUNHYW1l",
            "UmVjb3JkaW5nX1N0b3BSZWNvcmRpbmdfUmVzcG9uc2USLAoHc3VtbWFyeRgB",
            "IAEoCzIbLkNHYW1lUmVjb3JkaW5nX0NsaXBTdW1tYXJ5IkcKNENHYW1lUmVj",
            "b3JkaW5nX1N3aXRjaEJhY2tncm91bmRSZWNvcmRpbmdHYW1lX1JlcXVlc3QS",
            "DwoHZ2FtZV9pZBgBIAEoBCI3CjVDR2FtZVJlY29yZGluZ19Td2l0Y2hCYWNr",
            "Z3JvdW5kUmVjb3JkaW5nR2FtZV9SZXNwb25zZSKhAQorQ0dhbWVSZWNvcmRp",
            "bmdfVGltZWxpbmVDaGFuZ2VkX05vdGlmaWNhdGlvbhIjChFub3RpZmljYXRp",
            "b25fdHlwZRgBIAEoBUIIgrUYBGVudW0SEwoLdGltZWxpbmVfaWQYAiABKAkS",
            "DwoHZ2FtZV9pZBgDIAEoBBISCgpzdGFydF90aW1lGAQgASgNEhMKC2R1cmF0",
            "aW9uX21zGAUgASgEIlIKMENHYW1lUmVjb3JkaW5nX1RpbWVsaW5lRW50cnlD",
            "aGFuZ2VkX05vdGlmaWNhdGlvbhIeCgVlbnRyeRgBIAEoCzIPLkNUaW1lbGlu",
            "ZUVudHJ5ImwKKENHYW1lUmVjb3JkaW5nX1VwbG9hZENsaXBUb1N0ZWFtX1Jl",
            "cXVlc3QSDwoHY2xpcF9pZBgBIAEoCRINCgV0aXRsZRgCIAEoCRIMCgRkZXNj",
            "GAMgASgJEhIKCnZpc2liaWxpdHkYBCABKAUiWQopQ0dhbWVSZWNvcmRpbmdf",
            "VXBsb2FkQ2xpcFRvU3RlYW1fUmVzcG9uc2USLAoHc3VtbWFyeRgBIAEoCzIb",
            "LkNHYW1lUmVjb3JkaW5nX0NsaXBTdW1tYXJ5ImAKKkNHYW1lUmVjb3JkaW5n",
            "X1VwbG9hZFByb2dyZXNzX05vdGlmaWNhdGlvbhIQCghwcm9ncmVzcxgBIAEo",
            "AhIPCgdjbGlwX2lkGAIgASgJEg8KB2VyZXN1bHQYAyABKAUibworQ0dhbWVS",
            "ZWNvcmRpbmdfVXNlckFkZFRpbWVsaW5lRW50cnlfUmVxdWVzdBIPCgdnYW1l",
            "X2lkGAEgASgEEh4KBWVudHJ5GAIgASgLMg8uQ1RpbWVsaW5lRW50cnkSDwoH",
            "Y2xpcF9pZBgDIAEoCSJACixDR2FtZVJlY29yZGluZ19Vc2VyQWRkVGltZWxp",
            "bmVFbnRyeV9SZXNwb25zZRIQCghlbnRyeV9pZBgBIAEoBCJ5Ci5DR2FtZVJl",
            "Y29yZGluZ19Vc2VyUmVtb3ZlVGltZWxpbmVFbnRyeV9SZXF1ZXN0Eg8KB2dh",
            "bWVfaWQYASABKAQSEwoLdGltZWxpbmVfaWQYAiABKAkSEAoIZW50cnlfaWQY",
            "AyABKAQSDwoHY2xpcF9pZBgEIAEoCSIxCi9DR2FtZVJlY29yZGluZ19Vc2Vy",
            "UmVtb3ZlVGltZWxpbmVFbnRyeV9SZXNwb25zZSJyCi5DR2FtZVJlY29yZGlu",
            "Z19Vc2VyVXBkYXRlVGltZWxpbmVFbnRyeV9SZXF1ZXN0Eg8KB2dhbWVfaWQY",
            "ASABKAQSHgoFZW50cnkYAiABKAsyDy5DVGltZWxpbmVFbnRyeRIPCgdjbGlw",
            "X2lkGAMgASgJIjEKL0NHYW1lUmVjb3JkaW5nX1VzZXJVcGRhdGVUaW1lbGlu",
            "ZUVudHJ5X1Jlc3BvbnNlIjEKHkNHYW1lUmVjb3JkaW5nX1ppcENsaXBfUmVx",
            "dWVzdBIPCgdjbGlwX2lkGAEgASgJIjMKH0NHYW1lUmVjb3JkaW5nX1ppcENs",
            "aXBfUmVzcG9uc2USEAoIemlwX3BhdGgYASABKAki8QEKG0NHYW1lUmVjb3Jk",
            "aW5nVGltZWxpbmVFdmVudBIPCgdnYW1lX2lkGAEgASgEEhIKCnJ0X2NyZWF0",
            "ZWQYAiABKA0SFQoNcG9zc2libGVfY2xpcBgDIAEoBRITCgt0aW1lbGluZV9p",
            "ZBgEIAEoCRIQCghlbnRyeV9pZBgFIAEoBBIaChJ0aW1lbGluZV9vZmZzZXRf",
            "bXMYBiABKAQSEwoLZHVyYXRpb25fbXMYByABKAQSEwoLbWFya2VyX2ljb24Y",
            "CCABKAkSFAoMbWFya2VyX3RpdGxlGAkgASgJEhMKC3VzZXJfbWFya2VyGAog",
            "ASgIIrEBCh5DR2FtZVJlY29yZGluZ1RpbWVsaW5lTWV0YWRhdGESEwoLdGlt",
            "ZWxpbmVfaWQYASABKAkSDwoHZ2FtZV9pZBgCIAEoBBIVCg1kYXRlX3JlY29y",
            "ZGVkGAMgASgNEhMKC2R1cmF0aW9uX21zGAQgASgEEj0KCnJlY29yZGluZ3MY",
            "BSADKAsyKS5DR2FtZVJlY29yZGluZ1RpbWVsaW5lTWV0YWRhdGFfUmVjb3Jk",
            "aW5nIsICCihDR2FtZVJlY29yZGluZ1RpbWVsaW5lTWV0YWRhdGFfUmVjb3Jk",
            "aW5nEhQKDHJlY29yZGluZ19pZBgBIAEoCRIXCg9zdGFydF9vZmZzZXRfbXMY",
            "AiABKAQSEwoLZHVyYXRpb25fbXMYAyABKAQSIAoOcmVjb3JkaW5nX3R5cGUY",
            "BCABKAVCCIK1GARlbnVtEhkKEWRlbGV0ZV9vbl9jbGVhbnVwGAUgASgIEh0K",
            "FXZpZGVvX21hbmFnZXJfY2xpcF9pZBgGIAEoBBIeChZ2aWRlb19tYW5hZ2Vy",
            "X3ZpZGVvX2lkGAcgASgEEhgKEGNkbl9tYW5pZmVzdF91cmwYCCABKAkSEQoJ",
            "ZmlsZV9zaXplGAkgASgEEikKIXJlY29yZGluZ196ZXJvX3RpbWVsaW5lX29m",
            "ZnNldF9tcxgKIAEoBCL6AgoOQ1RpbWVsaW5lRW50cnkSEwoLdGltZWxpbmVf",
            "aWQYASABKAkSEAoIZW50cnlfaWQYAiABKAQSDAoEdGltZRgDIAEoBBIWCgR0",
            "eXBlGAQgASgFQgiCtRgEZW51bRIRCglnYW1lX21vZGUYBSABKAUSEAoIcmFu",
            "Z2VfaWQYBiABKAkSEwoLcmFuZ2VfdGl0bGUYByABKAkSFgoOcmFuZ2VfZHVy",
            "YXRpb24YCCABKAQSGwoTcmFuZ2VfcG9zc2libGVfY2xpcBgJIAEoBRIXCg90",
            "aW1lc3RhbXBfdGl0bGUYCiABKAkSEwoLbWFya2VyX2ljb24YCyABKAkSFAoM",
            "bWFya2VyX3RpdGxlGAwgASgJEhoKEm1hcmtlcl9kZXNjcmlwdGlvbhgNIAEo",
            "CRIXCg9tYXJrZXJfcHJpb3JpdHkYDiABKAUSGQoRc2NyZWVuc2hvdF9oYW5k",
            "bGUYDyABKA0SGAoQYWNoaWV2ZW1lbnRfbmFtZRgQIAEoCTKmGwoNR2FtZVJl",
            "Y29yZGluZxKIAQobQ2xlYW51cEJhY2tncm91bmRSZWNvcmRpbmdzEjMuQ0dh",
            "bWVSZWNvcmRpbmdfQ2xlYW51cEJhY2tncm91bmRSZWNvcmRpbmdzX1JlcXVl",
            "c3QaNC5DR2FtZVJlY29yZGluZ19DbGVhbnVwQmFja2dyb3VuZFJlY29yZGlu",
            "Z3NfUmVzcG9uc2USVQoKRGVsZXRlQ2xpcBIiLkNHYW1lUmVjb3JkaW5nX0Rl",
            "bGV0ZUNsaXBfUmVxdWVzdBojLkNHYW1lUmVjb3JkaW5nX0RlbGV0ZUNsaXBf",
            "UmVzcG9uc2USVQoKRXhwb3J0Q2xpcBIiLkNHYW1lUmVjb3JkaW5nX0V4cG9y",
            "dENsaXBfUmVxdWVzdBojLkNHYW1lUmVjb3JkaW5nX0V4cG9ydENsaXBfUmVz",
            "cG9uc2USdgoVR2V0QWN0aXZlVGltZWxpbmVBcHBzEi0uQ0dhbWVSZWNvcmRp",
            "bmdfR2V0QWN0aXZlVGltZWxpbmVBcHBzX1JlcXVlc3QaLi5DR2FtZVJlY29y",
            "ZGluZ19HZXRBY3RpdmVUaW1lbGluZUFwcHNfUmVzcG9uc2USiwEKHEdldEFu",
            "ZFRyaW1Qb3N0R2FtZUhpZ2hsaWdodHMSNC5DR2FtZVJlY29yZGluZ19HZXRB",
            "bmRUcmltUG9zdEdhbWVIaWdobGlnaHRzX1JlcXVlc3QaNS5DR2FtZVJlY29y",
            "ZGluZ19HZXRBbmRUcmltUG9zdEdhbWVIaWdobGlnaHRzX1Jlc3BvbnNlEnYK",
            "FUdldEF2YWlsYWJsZURpc2tTcGFjZRItLkNHYW1lUmVjb3JkaW5nX0dldEF2",
            "YWlsYWJsZURpc2tTcGFjZV9SZXF1ZXN0Gi4uQ0dhbWVSZWNvcmRpbmdfR2V0",
            "QXZhaWxhYmxlRGlza1NwYWNlX1Jlc3BvbnNlEnUKHkdldEJhY2tncm91bmRS",
            "ZWNvcmRpbmdGaWxlU2l6ZRIoLkNHYW1lUmVjb3JkaW5nX0dldFJlY29yZGlu",
            "Z1NpemVfUmVxdWVzdBopLkNHYW1lUmVjb3JkaW5nX0dldFJlY29yZGluZ1Np",
            "emVfUmVzcG9uc2USTwoIR2V0Q2xpcHMSIC5DR2FtZVJlY29yZGluZ19HZXRD",
            "bGlwc19SZXF1ZXN0GiEuQ0dhbWVSZWNvcmRpbmdfR2V0Q2xpcHNfUmVzcG9u",
            "c2USbQoSR2V0RW5vdWdoRGlza1NwYWNlEiouQ0dhbWVSZWNvcmRpbmdfR2V0",
            "RW5vdWdoRGlza1NwYWNlX1JlcXVlc3QaKy5DR2FtZVJlY29yZGluZ19HZXRF",
            "bm91Z2hEaXNrU3BhY2VfUmVzcG9uc2USfAoXR2V0UGxhdGZvcm1DYXBhYmls",
            "aXRpZXMSLy5DR2FtZVJlY29yZGluZ19HZXRQbGF0Zm9ybUNhcGFiaWxpdGll",
            "c19SZXF1ZXN0GjAuQ0dhbWVSZWNvcmRpbmdfR2V0UGxhdGZvcm1DYXBhYmls",
            "aXRpZXNfUmVzcG9uc2USXgoNR2V0VGh1bWJuYWlscxIlLkNHYW1lUmVjb3Jk",
            "aW5nX0dldFRodW1ibmFpbHNfUmVxdWVzdBomLkNHYW1lUmVjb3JkaW5nX0dl",
            "dFRodW1ibmFpbHNfUmVzcG9uc2USbQoSR2V0VGltZWxpbmVzRm9yQXBwEiou",
            "Q0dhbWVSZWNvcmRpbmdfR2V0VGltZWxpbmVzRm9yQXBwX1JlcXVlc3QaKy5D",
            "R2FtZVJlY29yZGluZ19HZXRUaW1lbGluZXNGb3JBcHBfUmVzcG9uc2UScAoT",
            "R2V0VGltZWxpbmVzRm9yQ2xpcBIrLkNHYW1lUmVjb3JkaW5nX0dldFRpbWVs",
            "aW5lc0ZvckNsaXBfUmVxdWVzdBosLkNHYW1lUmVjb3JkaW5nX0dldFRpbWVs",
            "aW5lc0ZvckNsaXBfUmVzcG9uc2USeQoWR2V0VG90YWxEaXNrU3BhY2VVc2Fn",
            "ZRIuLkNHYW1lUmVjb3JkaW5nX0dldFRvdGFsRGlza1NwYWNlVXNhZ2VfUmVx",
            "dWVzdBovLkNHYW1lUmVjb3JkaW5nX0dldFRvdGFsRGlza1NwYWNlVXNhZ2Vf",
            "UmVzcG9uc2USlAEKH01hbnVhbGx5RGVsZXRlUmVjb3JkaW5nc0ZvckFwcHMS",
            "Ny5DR2FtZVJlY29yZGluZ19NYW51YWxseURlbGV0ZVJlY29yZGluZ3NGb3JB",
            "cHBzX1JlcXVlc3QaOC5DR2FtZVJlY29yZGluZ19NYW51YWxseURlbGV0ZVJl",
            "Y29yZGluZ3NGb3JBcHBzX1Jlc3BvbnNlEkoKEU5vdGlmeUNsaXBDcmVhdGVk",
            "EiguQ0dhbWVSZWNvcmRpbmdfQ2xpcENyZWF0ZWRfTm90aWZpY2F0aW9uGgsu",
            "Tm9SZXNwb25zZRJKChFOb3RpZnlDbGlwRGVsZXRlZBIoLkNHYW1lUmVjb3Jk",
            "aW5nX0NsaXBEZWxldGVkX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USUAoU",
            "Tm90aWZ5RXhwb3J0UHJvZ3Jlc3MSKy5DR2FtZVJlY29yZGluZ19FeHBvcnRQ",
            "cm9ncmVzc19Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlEkwKEk5vdGlmeUxv",
            "d0Rpc2tTcGFjZRIpLkNHYW1lUmVjb3JkaW5nX0xvd0Rpc2tTcGFjZV9Ob3Rp",
            "ZmljYXRpb24aCy5Ob1Jlc3BvbnNlEmYKH05vdGlmeVBvc3RHYW1lSGlnaGxp",
            "Z2h0c0NoYW5nZWQSNi5DR2FtZVJlY29yZGluZ19Qb3N0R2FtZUhpZ2hsaWdo",
            "dHNDaGFuZ2VkX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USYgodTm90aWZ5",
            "UmVjb3JkaW5nU2Vzc2lvbkNoYW5nZWQSNC5DR2FtZVJlY29yZGluZ19SZWNv",
            "cmRpbmdTZXNzaW9uQ2hhbmdlZF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNl",
            "ElIKFU5vdGlmeVRpbWVsaW5lQ2hhbmdlZBIsLkNHYW1lUmVjb3JkaW5nX1Rp",
            "bWVsaW5lQ2hhbmdlZF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlElwKGk5v",
            "dGlmeVRpbWVsaW5lRW50cnlDaGFuZ2VkEjEuQ0dhbWVSZWNvcmRpbmdfVGlt",
            "ZWxpbmVFbnRyeUNoYW5nZWRfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJQ",
            "ChROb3RpZnlVcGxvYWRQcm9ncmVzcxIrLkNHYW1lUmVjb3JkaW5nX1VwbG9h",
            "ZFByb2dyZXNzX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USTwoIU2F2ZUNs",
            "aXASIC5DR2FtZVJlY29yZGluZ19TYXZlQ2xpcF9SZXF1ZXN0GiEuQ0dhbWVS",
            "ZWNvcmRpbmdfU2F2ZUNsaXBfUmVzcG9uc2USYQoOU3RhcnRSZWNvcmRpbmcS",
            "Ji5DR2FtZVJlY29yZGluZ19TdGFydFJlY29yZGluZ19SZXF1ZXN0GicuQ0dh",
            "bWVSZWNvcmRpbmdfU3RhcnRSZWNvcmRpbmdfUmVzcG9uc2USXgoNU3RvcFJl",
            "Y29yZGluZxIlLkNHYW1lUmVjb3JkaW5nX1N0b3BSZWNvcmRpbmdfUmVxdWVz",
            "dBomLkNHYW1lUmVjb3JkaW5nX1N0b3BSZWNvcmRpbmdfUmVzcG9uc2USjgEK",
            "HVN3aXRjaEJhY2tncm91bmRSZWNvcmRpbmdHYW1lEjUuQ0dhbWVSZWNvcmRp",
            "bmdfU3dpdGNoQmFja2dyb3VuZFJlY29yZGluZ0dhbWVfUmVxdWVzdBo2LkNH",
            "YW1lUmVjb3JkaW5nX1N3aXRjaEJhY2tncm91bmRSZWNvcmRpbmdHYW1lX1Jl",
            "c3BvbnNlEmoKEVVwbG9hZENsaXBUb1N0ZWFtEikuQ0dhbWVSZWNvcmRpbmdf",
            "VXBsb2FkQ2xpcFRvU3RlYW1fUmVxdWVzdBoqLkNHYW1lUmVjb3JkaW5nX1Vw",
            "bG9hZENsaXBUb1N0ZWFtX1Jlc3BvbnNlEnMKFFVzZXJBZGRUaW1lbGluZUVu",
            "dHJ5EiwuQ0dhbWVSZWNvcmRpbmdfVXNlckFkZFRpbWVsaW5lRW50cnlfUmVx",
            "dWVzdBotLkNHYW1lUmVjb3JkaW5nX1VzZXJBZGRUaW1lbGluZUVudHJ5X1Jl",
            "c3BvbnNlEnwKF1VzZXJSZW1vdmVUaW1lbGluZUVudHJ5Ei8uQ0dhbWVSZWNv",
            "cmRpbmdfVXNlclJlbW92ZVRpbWVsaW5lRW50cnlfUmVxdWVzdBowLkNHYW1l",
            "UmVjb3JkaW5nX1VzZXJSZW1vdmVUaW1lbGluZUVudHJ5X1Jlc3BvbnNlEnwK",
            "F1VzZXJVcGRhdGVUaW1lbGluZUVudHJ5Ei8uQ0dhbWVSZWNvcmRpbmdfVXNl",
            "clVwZGF0ZVRpbWVsaW5lRW50cnlfUmVxdWVzdBowLkNHYW1lUmVjb3JkaW5n",
            "X1VzZXJVcGRhdGVUaW1lbGluZUVudHJ5X1Jlc3BvbnNlEkwKB1ppcENsaXAS",
            "Hy5DR2FtZVJlY29yZGluZ19aaXBDbGlwX1JlcXVlc3QaIC5DR2FtZVJlY29y",
            "ZGluZ19aaXBDbGlwX1Jlc3BvbnNlQiCqAh1PcGVuU3RlYW13b3Jrcy5Qcm90",
            "b2J1Zi5XZWJVSQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.WebUI.CommonBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CleanupBackgroundRecordings_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CleanupBackgroundRecordings_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CleanupBackgroundRecordings_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CleanupBackgroundRecordings_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipCreated_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipCreated_Notification.Parser, new[]{ "Summary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipDeleted_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipDeleted_Notification.Parser, new[]{ "ClipId", "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary.Parser, new[]{ "ClipId", "GameId", "DurationMs", "DateRecorded", "StartTimelineId", "StartOffsetMs", "PublishedFileId", "FileSize", "Name", "DateClipped", "Temporary", "OriginalDevice", "OriginalGamingDeviceType", "DateDownloaded", "ThumbnailUrl", "ThumbnailWidth", "ThumbnailHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteClip_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Request.Parser, new[]{ "ClipId", "ExportMp4Path", "Settings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings.Parser, new[]{ "BitrateKbps", "Width", "Height", "FramesPerSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportProgress_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportProgress_Notification.Parser, new[]{ "Progress", "ClipId", "Eresult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response.Parser, new[]{ "Apps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App.Parser, new[]{ "GameId", "MostRecentStartTime", "RecordingType", "VideoDurationSeconds", "TimelineDurationSeconds", "IsActive", "FileSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAndTrimPostGameHighlights_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAndTrimPostGameHighlights_Request.Parser, new[]{ "GameId", "CreatedAfter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAndTrimPostGameHighlights_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAndTrimPostGameHighlights_Response.Parser, new[]{ "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAvailableDiskSpace_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAvailableDiskSpace_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAvailableDiskSpace_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetAvailableDiskSpace_Response.Parser, new[]{ "Size" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetClips_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetClips_Request.Parser, new[]{ "GameId", "CreatedAfter", "IncludeTemporary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetClips_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetClips_Response.Parser, new[]{ "Clip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetEnoughDiskSpace_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetEnoughDiskSpace_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetEnoughDiskSpace_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetEnoughDiskSpace_Response.Parser, new[]{ "EnoughSpace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetPlatformCapabilities_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetPlatformCapabilities_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetPlatformCapabilities_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetPlatformCapabilities_Response.Parser, new[]{ "PerProcessAudioCapture" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetRecordingSize_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetRecordingSize_Request.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetRecordingSize_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetRecordingSize_Response.Parser, new[]{ "FileSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Request.Parser, new[]{ "RecordingId", "ClipId", "StartOffsetUs", "MajorAxis", "TimePrecision", "TimelineId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response.Parser, new[]{ "Thumbnails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail.Parser, new[]{ "ImageData", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForApp_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForApp_Request.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForApp_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForApp_Response.Parser, new[]{ "Timelines" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTimelinesForClip_Response.Parser, new[]{ "GameId", "Timelines", "FirstTimelineStartOffsetMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTotalDiskSpaceUsage_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTotalDiskSpaceUsage_Request.Parser, new[]{ "FolderPath", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTotalDiskSpaceUsage_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetTotalDiskSpaceUsage_Response.Parser, new[]{ "Size" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_LowDiskSpace_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_LowDiskSpace_Notification.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ManuallyDeleteRecordingsForApps_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ManuallyDeleteRecordingsForApps_Request.Parser, new[]{ "GameIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ManuallyDeleteRecordingsForApps_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ManuallyDeleteRecordingsForApps_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_PostGameHighlightsChanged_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_PostGameHighlightsChanged_Notification.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_RecordingSessionChanged_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_RecordingSessionChanged_Notification.Parser, new[]{ "NotificationType", "TimelineId", "GameId", "SessionId", "StartOffset", "DurationMs", "RecordingType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request.Parser, new[]{ "GameId", "Start", "End", "Name", "SrcClipId", "Temporary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position.Parser, new[]{ "TimelineId", "OffsetMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Response.Parser, new[]{ "Summary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StartRecording_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StartRecording_Request.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StartRecording_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StartRecording_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StopRecording_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StopRecording_Request.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StopRecording_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_StopRecording_Response.Parser, new[]{ "Summary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SwitchBackgroundRecordingGame_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SwitchBackgroundRecordingGame_Request.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SwitchBackgroundRecordingGame_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SwitchBackgroundRecordingGame_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_TimelineChanged_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_TimelineChanged_Notification.Parser, new[]{ "NotificationType", "TimelineId", "GameId", "StartTime", "DurationMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_TimelineEntryChanged_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_TimelineEntryChanged_Notification.Parser, new[]{ "Entry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UploadClipToSteam_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UploadClipToSteam_Request.Parser, new[]{ "ClipId", "Title", "Desc", "Visibility" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UploadClipToSteam_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UploadClipToSteam_Response.Parser, new[]{ "Summary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UploadProgress_Notification), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UploadProgress_Notification.Parser, new[]{ "Progress", "ClipId", "Eresult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserAddTimelineEntry_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserAddTimelineEntry_Request.Parser, new[]{ "GameId", "Entry", "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserAddTimelineEntry_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserAddTimelineEntry_Response.Parser, new[]{ "EntryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserRemoveTimelineEntry_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserRemoveTimelineEntry_Request.Parser, new[]{ "GameId", "TimelineId", "EntryId", "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserRemoveTimelineEntry_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserRemoveTimelineEntry_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserUpdateTimelineEntry_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserUpdateTimelineEntry_Request.Parser, new[]{ "GameId", "Entry", "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserUpdateTimelineEntry_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_UserUpdateTimelineEntry_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ZipClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ZipClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ZipClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ZipClip_Response.Parser, new[]{ "ZipPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent), global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent.Parser, new[]{ "GameId", "RtCreated", "PossibleClip", "TimelineId", "EntryId", "TimelineOffsetMs", "DurationMs", "MarkerIcon", "MarkerTitle", "UserMarker" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata), global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata.Parser, new[]{ "TimelineId", "GameId", "DateRecorded", "DurationMs", "Recordings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording), global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording.Parser, new[]{ "RecordingId", "StartOffsetMs", "DurationMs", "RecordingType", "DeleteOnCleanup", "VideoManagerClipId", "VideoManagerVideoId", "CdnManifestUrl", "FileSize", "RecordingZeroTimelineOffsetMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry), global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry.Parser, new[]{ "TimelineId", "EntryId", "Time", "Type", "GameMode", "RangeId", "RangeTitle", "RangeDuration", "RangePossibleClip", "TimestampTitle", "MarkerIcon", "MarkerTitle", "MarkerDescription", "MarkerPriority", "ScreenshotHandle", "AchievementName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_CleanupBackgroundRecordings_Request : pb::IMessage<CGameRecording_CleanupBackgroundRecordings_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_CleanupBackgroundRecordings_Request> _parser = new pb::MessageParser<CGameRecording_CleanupBackgroundRecordings_Request>(() => new CGameRecording_CleanupBackgroundRecordings_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_CleanupBackgroundRecordings_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CleanupBackgroundRecordings_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CleanupBackgroundRecordings_Request(CGameRecording_CleanupBackgroundRecordings_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CleanupBackgroundRecordings_Request Clone() {
      return new CGameRecording_CleanupBackgroundRecordings_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_CleanupBackgroundRecordings_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_CleanupBackgroundRecordings_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_CleanupBackgroundRecordings_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_CleanupBackgroundRecordings_Response : pb::IMessage<CGameRecording_CleanupBackgroundRecordings_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_CleanupBackgroundRecordings_Response> _parser = new pb::MessageParser<CGameRecording_CleanupBackgroundRecordings_Response>(() => new CGameRecording_CleanupBackgroundRecordings_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_CleanupBackgroundRecordings_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CleanupBackgroundRecordings_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CleanupBackgroundRecordings_Response(CGameRecording_CleanupBackgroundRecordings_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CleanupBackgroundRecordings_Response Clone() {
      return new CGameRecording_CleanupBackgroundRecordings_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_CleanupBackgroundRecordings_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_CleanupBackgroundRecordings_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_CleanupBackgroundRecordings_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ClipCreated_Notification : pb::IMessage<CGameRecording_ClipCreated_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ClipCreated_Notification> _parser = new pb::MessageParser<CGameRecording_ClipCreated_Notification>(() => new CGameRecording_ClipCreated_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ClipCreated_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipCreated_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipCreated_Notification(CGameRecording_ClipCreated_Notification other) : this() {
      summary_ = other.summary_ != null ? other.summary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipCreated_Notification Clone() {
      return new CGameRecording_ClipCreated_Notification(this);
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ClipCreated_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ClipCreated_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Summary, other.Summary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (summary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ClipCreated_Notification other) {
      if (other == null) {
        return;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
        }
        Summary.MergeFrom(other.Summary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ClipDeleted_Notification : pb::IMessage<CGameRecording_ClipDeleted_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ClipDeleted_Notification> _parser = new pb::MessageParser<CGameRecording_ClipDeleted_Notification>(() => new CGameRecording_ClipDeleted_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ClipDeleted_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipDeleted_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipDeleted_Notification(CGameRecording_ClipDeleted_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipDeleted_Notification Clone() {
      return new CGameRecording_ClipDeleted_Notification(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ClipDeleted_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ClipDeleted_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ClipDeleted_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 16: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 16: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ClipSummary : pb::IMessage<CGameRecording_ClipSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ClipSummary> _parser = new pb::MessageParser<CGameRecording_ClipSummary>(() => new CGameRecording_ClipSummary());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ClipSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipSummary(CGameRecording_ClipSummary other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      gameId_ = other.gameId_;
      durationMs_ = other.durationMs_;
      dateRecorded_ = other.dateRecorded_;
      startTimelineId_ = other.startTimelineId_;
      startOffsetMs_ = other.startOffsetMs_;
      publishedFileId_ = other.publishedFileId_;
      fileSize_ = other.fileSize_;
      name_ = other.name_;
      dateClipped_ = other.dateClipped_;
      temporary_ = other.temporary_;
      originalDevice_ = other.originalDevice_;
      originalGamingDeviceType_ = other.originalGamingDeviceType_;
      dateDownloaded_ = other.dateDownloaded_;
      thumbnailUrl_ = other.thumbnailUrl_;
      thumbnailWidth_ = other.thumbnailWidth_;
      thumbnailHeight_ = other.thumbnailHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ClipSummary Clone() {
      return new CGameRecording_ClipSummary(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 3;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 2) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "date_recorded" field.</summary>
    public const int DateRecordedFieldNumber = 4;
    private readonly static uint DateRecordedDefaultValue = 0;

    private uint dateRecorded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DateRecorded {
      get { if ((_hasBits0 & 4) != 0) { return dateRecorded_; } else { return DateRecordedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dateRecorded_ = value;
      }
    }
    /// <summary>Gets whether the "date_recorded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDateRecorded {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "date_recorded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDateRecorded() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "start_timeline_id" field.</summary>
    public const int StartTimelineIdFieldNumber = 5;
    private readonly static string StartTimelineIdDefaultValue = "";

    private string startTimelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartTimelineId {
      get { return startTimelineId_ ?? StartTimelineIdDefaultValue; }
      set {
        startTimelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTimelineId {
      get { return startTimelineId_ != null; }
    }
    /// <summary>Clears the value of the "start_timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTimelineId() {
      startTimelineId_ = null;
    }

    /// <summary>Field number for the "start_offset_ms" field.</summary>
    public const int StartOffsetMsFieldNumber = 6;
    private readonly static ulong StartOffsetMsDefaultValue = 0UL;

    private ulong startOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong StartOffsetMs {
      get { if ((_hasBits0 & 8) != 0) { return startOffsetMs_; } else { return StartOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        startOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffsetMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "start_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffsetMs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "published_file_id" field.</summary>
    public const int PublishedFileIdFieldNumber = 7;
    private readonly static ulong PublishedFileIdDefaultValue = 0UL;

    private ulong publishedFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PublishedFileId {
      get { if ((_hasBits0 & 16) != 0) { return publishedFileId_; } else { return PublishedFileIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        publishedFileId_ = value;
      }
    }
    /// <summary>Gets whether the "published_file_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPublishedFileId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "published_file_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPublishedFileId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 8;
    private readonly static ulong FileSizeDefaultValue = 0UL;

    private ulong fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FileSize {
      get { if ((_hasBits0 & 32) != 0) { return fileSize_; } else { return FileSizeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        fileSize_ = value;
      }
    }
    /// <summary>Gets whether the "file_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileSize {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "file_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileSize() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 9;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "date_clipped" field.</summary>
    public const int DateClippedFieldNumber = 10;
    private readonly static uint DateClippedDefaultValue = 0;

    private uint dateClipped_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DateClipped {
      get { if ((_hasBits0 & 64) != 0) { return dateClipped_; } else { return DateClippedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        dateClipped_ = value;
      }
    }
    /// <summary>Gets whether the "date_clipped" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDateClipped {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "date_clipped" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDateClipped() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "temporary" field.</summary>
    public const int TemporaryFieldNumber = 11;
    private readonly static bool TemporaryDefaultValue = false;

    private bool temporary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Temporary {
      get { if ((_hasBits0 & 128) != 0) { return temporary_; } else { return TemporaryDefaultValue; } }
      set {
        _hasBits0 |= 128;
        temporary_ = value;
      }
    }
    /// <summary>Gets whether the "temporary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTemporary {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "temporary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTemporary() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "original_device" field.</summary>
    public const int OriginalDeviceFieldNumber = 12;
    private readonly static string OriginalDeviceDefaultValue = "";

    private string originalDevice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OriginalDevice {
      get { return originalDevice_ ?? OriginalDeviceDefaultValue; }
      set {
        originalDevice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "original_device" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOriginalDevice {
      get { return originalDevice_ != null; }
    }
    /// <summary>Clears the value of the "original_device" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOriginalDevice() {
      originalDevice_ = null;
    }

    /// <summary>Field number for the "original_gaming_device_type" field.</summary>
    public const int OriginalGamingDeviceTypeFieldNumber = 13;
    private readonly static uint OriginalGamingDeviceTypeDefaultValue = 0;

    private uint originalGamingDeviceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OriginalGamingDeviceType {
      get { if ((_hasBits0 & 256) != 0) { return originalGamingDeviceType_; } else { return OriginalGamingDeviceTypeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        originalGamingDeviceType_ = value;
      }
    }
    /// <summary>Gets whether the "original_gaming_device_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOriginalGamingDeviceType {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "original_gaming_device_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOriginalGamingDeviceType() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "date_downloaded" field.</summary>
    public const int DateDownloadedFieldNumber = 14;
    private readonly static uint DateDownloadedDefaultValue = 0;

    private uint dateDownloaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DateDownloaded {
      get { if ((_hasBits0 & 512) != 0) { return dateDownloaded_; } else { return DateDownloadedDefaultValue; } }
      set {
        _hasBits0 |= 512;
        dateDownloaded_ = value;
      }
    }
    /// <summary>Gets whether the "date_downloaded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDateDownloaded {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "date_downloaded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDateDownloaded() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "thumbnail_url" field.</summary>
    public const int ThumbnailUrlFieldNumber = 15;
    private readonly static string ThumbnailUrlDefaultValue = "";

    private string thumbnailUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThumbnailUrl {
      get { return thumbnailUrl_ ?? ThumbnailUrlDefaultValue; }
      set {
        thumbnailUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "thumbnail_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThumbnailUrl {
      get { return thumbnailUrl_ != null; }
    }
    /// <summary>Clears the value of the "thumbnail_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThumbnailUrl() {
      thumbnailUrl_ = null;
    }

    /// <summary>Field number for the "thumbnail_width" field.</summary>
    public const int ThumbnailWidthFieldNumber = 16;
    private readonly static uint ThumbnailWidthDefaultValue = 0;

    private uint thumbnailWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ThumbnailWidth {
      get { if ((_hasBits0 & 1024) != 0) { return thumbnailWidth_; } else { return ThumbnailWidthDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        thumbnailWidth_ = value;
      }
    }
    /// <summary>Gets whether the "thumbnail_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThumbnailWidth {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "thumbnail_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThumbnailWidth() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "thumbnail_height" field.</summary>
    public const int ThumbnailHeightFieldNumber = 17;
    private readonly static uint ThumbnailHeightDefaultValue = 0;

    private uint thumbnailHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ThumbnailHeight {
      get { if ((_hasBits0 & 2048) != 0) { return thumbnailHeight_; } else { return ThumbnailHeightDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        thumbnailHeight_ = value;
      }
    }
    /// <summary>Gets whether the "thumbnail_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThumbnailHeight {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "thumbnail_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThumbnailHeight() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ClipSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ClipSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      if (GameId != other.GameId) return false;
      if (DurationMs != other.DurationMs) return false;
      if (DateRecorded != other.DateRecorded) return false;
      if (StartTimelineId != other.StartTimelineId) return false;
      if (StartOffsetMs != other.StartOffsetMs) return false;
      if (PublishedFileId != other.PublishedFileId) return false;
      if (FileSize != other.FileSize) return false;
      if (Name != other.Name) return false;
      if (DateClipped != other.DateClipped) return false;
      if (Temporary != other.Temporary) return false;
      if (OriginalDevice != other.OriginalDevice) return false;
      if (OriginalGamingDeviceType != other.OriginalGamingDeviceType) return false;
      if (DateDownloaded != other.DateDownloaded) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (ThumbnailWidth != other.ThumbnailWidth) return false;
      if (ThumbnailHeight != other.ThumbnailHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasDateRecorded) hash ^= DateRecorded.GetHashCode();
      if (HasStartTimelineId) hash ^= StartTimelineId.GetHashCode();
      if (HasStartOffsetMs) hash ^= StartOffsetMs.GetHashCode();
      if (HasPublishedFileId) hash ^= PublishedFileId.GetHashCode();
      if (HasFileSize) hash ^= FileSize.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDateClipped) hash ^= DateClipped.GetHashCode();
      if (HasTemporary) hash ^= Temporary.GetHashCode();
      if (HasOriginalDevice) hash ^= OriginalDevice.GetHashCode();
      if (HasOriginalGamingDeviceType) hash ^= OriginalGamingDeviceType.GetHashCode();
      if (HasDateDownloaded) hash ^= DateDownloaded.GetHashCode();
      if (HasThumbnailUrl) hash ^= ThumbnailUrl.GetHashCode();
      if (HasThumbnailWidth) hash ^= ThumbnailWidth.GetHashCode();
      if (HasThumbnailHeight) hash ^= ThumbnailHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GameId);
      }
      if (HasDurationMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(DurationMs);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateRecorded);
      }
      if (HasStartTimelineId) {
        output.WriteRawTag(42);
        output.WriteString(StartTimelineId);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(StartOffsetMs);
      }
      if (HasPublishedFileId) {
        output.WriteRawTag(56);
        output.WriteUInt64(PublishedFileId);
      }
      if (HasFileSize) {
        output.WriteRawTag(64);
        output.WriteUInt64(FileSize);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (HasDateClipped) {
        output.WriteRawTag(80);
        output.WriteUInt32(DateClipped);
      }
      if (HasTemporary) {
        output.WriteRawTag(88);
        output.WriteBool(Temporary);
      }
      if (HasOriginalDevice) {
        output.WriteRawTag(98);
        output.WriteString(OriginalDevice);
      }
      if (HasOriginalGamingDeviceType) {
        output.WriteRawTag(104);
        output.WriteUInt32(OriginalGamingDeviceType);
      }
      if (HasDateDownloaded) {
        output.WriteRawTag(112);
        output.WriteUInt32(DateDownloaded);
      }
      if (HasThumbnailUrl) {
        output.WriteRawTag(122);
        output.WriteString(ThumbnailUrl);
      }
      if (HasThumbnailWidth) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(ThumbnailWidth);
      }
      if (HasThumbnailHeight) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ThumbnailHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GameId);
      }
      if (HasDurationMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(DurationMs);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateRecorded);
      }
      if (HasStartTimelineId) {
        output.WriteRawTag(42);
        output.WriteString(StartTimelineId);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(StartOffsetMs);
      }
      if (HasPublishedFileId) {
        output.WriteRawTag(56);
        output.WriteUInt64(PublishedFileId);
      }
      if (HasFileSize) {
        output.WriteRawTag(64);
        output.WriteUInt64(FileSize);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (HasDateClipped) {
        output.WriteRawTag(80);
        output.WriteUInt32(DateClipped);
      }
      if (HasTemporary) {
        output.WriteRawTag(88);
        output.WriteBool(Temporary);
      }
      if (HasOriginalDevice) {
        output.WriteRawTag(98);
        output.WriteString(OriginalDevice);
      }
      if (HasOriginalGamingDeviceType) {
        output.WriteRawTag(104);
        output.WriteUInt32(OriginalGamingDeviceType);
      }
      if (HasDateDownloaded) {
        output.WriteRawTag(112);
        output.WriteUInt32(DateDownloaded);
      }
      if (HasThumbnailUrl) {
        output.WriteRawTag(122);
        output.WriteString(ThumbnailUrl);
      }
      if (HasThumbnailWidth) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(ThumbnailWidth);
      }
      if (HasThumbnailHeight) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ThumbnailHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (HasDateRecorded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateRecorded);
      }
      if (HasStartTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTimelineId);
      }
      if (HasStartOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartOffsetMs);
      }
      if (HasPublishedFileId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PublishedFileId);
      }
      if (HasFileSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileSize);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDateClipped) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateClipped);
      }
      if (HasTemporary) {
        size += 1 + 1;
      }
      if (HasOriginalDevice) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalDevice);
      }
      if (HasOriginalGamingDeviceType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OriginalGamingDeviceType);
      }
      if (HasDateDownloaded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateDownloaded);
      }
      if (HasThumbnailUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbnailUrl);
      }
      if (HasThumbnailWidth) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ThumbnailWidth);
      }
      if (HasThumbnailHeight) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ThumbnailHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ClipSummary other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasDateRecorded) {
        DateRecorded = other.DateRecorded;
      }
      if (other.HasStartTimelineId) {
        StartTimelineId = other.StartTimelineId;
      }
      if (other.HasStartOffsetMs) {
        StartOffsetMs = other.StartOffsetMs;
      }
      if (other.HasPublishedFileId) {
        PublishedFileId = other.PublishedFileId;
      }
      if (other.HasFileSize) {
        FileSize = other.FileSize;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDateClipped) {
        DateClipped = other.DateClipped;
      }
      if (other.HasTemporary) {
        Temporary = other.Temporary;
      }
      if (other.HasOriginalDevice) {
        OriginalDevice = other.OriginalDevice;
      }
      if (other.HasOriginalGamingDeviceType) {
        OriginalGamingDeviceType = other.OriginalGamingDeviceType;
      }
      if (other.HasDateDownloaded) {
        DateDownloaded = other.DateDownloaded;
      }
      if (other.HasThumbnailUrl) {
        ThumbnailUrl = other.ThumbnailUrl;
      }
      if (other.HasThumbnailWidth) {
        ThumbnailWidth = other.ThumbnailWidth;
      }
      if (other.HasThumbnailHeight) {
        ThumbnailHeight = other.ThumbnailHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 16: {
            GameId = input.ReadUInt64();
            break;
          }
          case 24: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 32: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 42: {
            StartTimelineId = input.ReadString();
            break;
          }
          case 48: {
            StartOffsetMs = input.ReadUInt64();
            break;
          }
          case 56: {
            PublishedFileId = input.ReadUInt64();
            break;
          }
          case 64: {
            FileSize = input.ReadUInt64();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 80: {
            DateClipped = input.ReadUInt32();
            break;
          }
          case 88: {
            Temporary = input.ReadBool();
            break;
          }
          case 98: {
            OriginalDevice = input.ReadString();
            break;
          }
          case 104: {
            OriginalGamingDeviceType = input.ReadUInt32();
            break;
          }
          case 112: {
            DateDownloaded = input.ReadUInt32();
            break;
          }
          case 122: {
            ThumbnailUrl = input.ReadString();
            break;
          }
          case 128: {
            ThumbnailWidth = input.ReadUInt32();
            break;
          }
          case 136: {
            ThumbnailHeight = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 16: {
            GameId = input.ReadUInt64();
            break;
          }
          case 24: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 32: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 42: {
            StartTimelineId = input.ReadString();
            break;
          }
          case 48: {
            StartOffsetMs = input.ReadUInt64();
            break;
          }
          case 56: {
            PublishedFileId = input.ReadUInt64();
            break;
          }
          case 64: {
            FileSize = input.ReadUInt64();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 80: {
            DateClipped = input.ReadUInt32();
            break;
          }
          case 88: {
            Temporary = input.ReadBool();
            break;
          }
          case 98: {
            OriginalDevice = input.ReadString();
            break;
          }
          case 104: {
            OriginalGamingDeviceType = input.ReadUInt32();
            break;
          }
          case 112: {
            DateDownloaded = input.ReadUInt32();
            break;
          }
          case 122: {
            ThumbnailUrl = input.ReadString();
            break;
          }
          case 128: {
            ThumbnailWidth = input.ReadUInt32();
            break;
          }
          case 136: {
            ThumbnailHeight = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_DeleteClip_Request : pb::IMessage<CGameRecording_DeleteClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_DeleteClip_Request> _parser = new pb::MessageParser<CGameRecording_DeleteClip_Request>(() => new CGameRecording_DeleteClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_DeleteClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteClip_Request(CGameRecording_DeleteClip_Request other) : this() {
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteClip_Request Clone() {
      return new CGameRecording_DeleteClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_DeleteClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_DeleteClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_DeleteClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_DeleteClip_Response : pb::IMessage<CGameRecording_DeleteClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_DeleteClip_Response> _parser = new pb::MessageParser<CGameRecording_DeleteClip_Response>(() => new CGameRecording_DeleteClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_DeleteClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteClip_Response(CGameRecording_DeleteClip_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteClip_Response Clone() {
      return new CGameRecording_DeleteClip_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_DeleteClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_DeleteClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_DeleteClip_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ExportClip_Request : pb::IMessage<CGameRecording_ExportClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ExportClip_Request> _parser = new pb::MessageParser<CGameRecording_ExportClip_Request>(() => new CGameRecording_ExportClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ExportClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Request(CGameRecording_ExportClip_Request other) : this() {
      clipId_ = other.clipId_;
      exportMp4Path_ = other.exportMp4Path_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Request Clone() {
      return new CGameRecording_ExportClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "export_mp4_path" field.</summary>
    public const int ExportMp4PathFieldNumber = 2;
    private readonly static string ExportMp4PathDefaultValue = "";

    private string exportMp4Path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExportMp4Path {
      get { return exportMp4Path_ ?? ExportMp4PathDefaultValue; }
      set {
        exportMp4Path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "export_mp4_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExportMp4Path {
      get { return exportMp4Path_ != null; }
    }
    /// <summary>Clears the value of the "export_mp4_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExportMp4Path() {
      exportMp4Path_ = null;
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings settings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ExportClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ExportClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      if (ExportMp4Path != other.ExportMp4Path) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasExportMp4Path) hash ^= ExportMp4Path.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasExportMp4Path) {
        output.WriteRawTag(18);
        output.WriteString(ExportMp4Path);
      }
      if (settings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasExportMp4Path) {
        output.WriteRawTag(18);
        output.WriteString(ExportMp4Path);
      }
      if (settings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (HasExportMp4Path) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExportMp4Path);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ExportClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasExportMp4Path) {
        ExportMp4Path = other.ExportMp4Path;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings();
        }
        Settings.MergeFrom(other.Settings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 18: {
            ExportMp4Path = input.ReadString();
            break;
          }
          case 26: {
            if (settings_ == null) {
              Settings = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 18: {
            ExportMp4Path = input.ReadString();
            break;
          }
          case 26: {
            if (settings_ == null) {
              Settings = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ExportClip_Settings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ExportClip_Response : pb::IMessage<CGameRecording_ExportClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ExportClip_Response> _parser = new pb::MessageParser<CGameRecording_ExportClip_Response>(() => new CGameRecording_ExportClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ExportClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Response(CGameRecording_ExportClip_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Response Clone() {
      return new CGameRecording_ExportClip_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ExportClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ExportClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ExportClip_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ExportClip_Settings : pb::IMessage<CGameRecording_ExportClip_Settings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ExportClip_Settings> _parser = new pb::MessageParser<CGameRecording_ExportClip_Settings>(() => new CGameRecording_ExportClip_Settings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ExportClip_Settings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Settings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Settings(CGameRecording_ExportClip_Settings other) : this() {
      _hasBits0 = other._hasBits0;
      bitrateKbps_ = other.bitrateKbps_;
      width_ = other.width_;
      height_ = other.height_;
      framesPerSecond_ = other.framesPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportClip_Settings Clone() {
      return new CGameRecording_ExportClip_Settings(this);
    }

    /// <summary>Field number for the "bitrate_kbps" field.</summary>
    public const int BitrateKbpsFieldNumber = 1;
    private readonly static int BitrateKbpsDefaultValue = 0;

    private int bitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BitrateKbps {
      get { if ((_hasBits0 & 1) != 0) { return bitrateKbps_; } else { return BitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrateKbps {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrateKbps() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "frames_per_second" field.</summary>
    public const int FramesPerSecondFieldNumber = 4;
    private readonly static int FramesPerSecondDefaultValue = 0;

    private int framesPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FramesPerSecond {
      get { if ((_hasBits0 & 8) != 0) { return framesPerSecond_; } else { return FramesPerSecondDefaultValue; } }
      set {
        _hasBits0 |= 8;
        framesPerSecond_ = value;
      }
    }
    /// <summary>Gets whether the "frames_per_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFramesPerSecond {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "frames_per_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFramesPerSecond() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ExportClip_Settings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ExportClip_Settings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BitrateKbps != other.BitrateKbps) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (FramesPerSecond != other.FramesPerSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBitrateKbps) hash ^= BitrateKbps.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasFramesPerSecond) hash ^= FramesPerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBitrateKbps) {
        output.WriteRawTag(8);
        output.WriteInt32(BitrateKbps);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (HasFramesPerSecond) {
        output.WriteRawTag(32);
        output.WriteInt32(FramesPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBitrateKbps) {
        output.WriteRawTag(8);
        output.WriteInt32(BitrateKbps);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (HasFramesPerSecond) {
        output.WriteRawTag(32);
        output.WriteInt32(FramesPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitrateKbps);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (HasFramesPerSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FramesPerSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ExportClip_Settings other) {
      if (other == null) {
        return;
      }
      if (other.HasBitrateKbps) {
        BitrateKbps = other.BitrateKbps;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasFramesPerSecond) {
        FramesPerSecond = other.FramesPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BitrateKbps = input.ReadInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 32: {
            FramesPerSecond = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BitrateKbps = input.ReadInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 32: {
            FramesPerSecond = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ExportProgress_Notification : pb::IMessage<CGameRecording_ExportProgress_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ExportProgress_Notification> _parser = new pb::MessageParser<CGameRecording_ExportProgress_Notification>(() => new CGameRecording_ExportProgress_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ExportProgress_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportProgress_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportProgress_Notification(CGameRecording_ExportProgress_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      progress_ = other.progress_;
      clipId_ = other.clipId_;
      eresult_ = other.eresult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ExportProgress_Notification Clone() {
      return new CGameRecording_ExportProgress_Notification(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 1;
    private readonly static float ProgressDefaultValue = 0F;

    private float progress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Progress {
      get { if ((_hasBits0 & 1) != 0) { return progress_; } else { return ProgressDefaultValue; } }
      set {
        _hasBits0 |= 1;
        progress_ = value;
      }
    }
    /// <summary>Gets whether the "progress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProgress {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "progress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProgress() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 2;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "eresult" field.</summary>
    public const int EresultFieldNumber = 3;
    private readonly static int EresultDefaultValue = 0;

    private int eresult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eresult {
      get { if ((_hasBits0 & 2) != 0) { return eresult_; } else { return EresultDefaultValue; } }
      set {
        _hasBits0 |= 2;
        eresult_ = value;
      }
    }
    /// <summary>Gets whether the "eresult" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEresult {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "eresult" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEresult() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ExportProgress_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ExportProgress_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      if (ClipId != other.ClipId) return false;
      if (Eresult != other.Eresult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProgress) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasEresult) hash ^= Eresult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProgress) {
        output.WriteRawTag(13);
        output.WriteFloat(Progress);
      }
      if (HasClipId) {
        output.WriteRawTag(18);
        output.WriteString(ClipId);
      }
      if (HasEresult) {
        output.WriteRawTag(24);
        output.WriteInt32(Eresult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProgress) {
        output.WriteRawTag(13);
        output.WriteFloat(Progress);
      }
      if (HasClipId) {
        output.WriteRawTag(18);
        output.WriteString(ClipId);
      }
      if (HasEresult) {
        output.WriteRawTag(24);
        output.WriteInt32(Eresult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProgress) {
        size += 1 + 4;
      }
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (HasEresult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ExportProgress_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasProgress) {
        Progress = other.Progress;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Progress = input.ReadFloat();
            break;
          }
          case 18: {
            ClipId = input.ReadString();
            break;
          }
          case 24: {
            Eresult = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Progress = input.ReadFloat();
            break;
          }
          case 18: {
            ClipId = input.ReadString();
            break;
          }
          case 24: {
            Eresult = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetActiveTimelineApps_Request : pb::IMessage<CGameRecording_GetActiveTimelineApps_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetActiveTimelineApps_Request> _parser = new pb::MessageParser<CGameRecording_GetActiveTimelineApps_Request>(() => new CGameRecording_GetActiveTimelineApps_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetActiveTimelineApps_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Request(CGameRecording_GetActiveTimelineApps_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Request Clone() {
      return new CGameRecording_GetActiveTimelineApps_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetActiveTimelineApps_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetActiveTimelineApps_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetActiveTimelineApps_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetActiveTimelineApps_Response : pb::IMessage<CGameRecording_GetActiveTimelineApps_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetActiveTimelineApps_Response> _parser = new pb::MessageParser<CGameRecording_GetActiveTimelineApps_Response>(() => new CGameRecording_GetActiveTimelineApps_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetActiveTimelineApps_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Response(CGameRecording_GetActiveTimelineApps_Response other) : this() {
      apps_ = other.apps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Response Clone() {
      return new CGameRecording_GetActiveTimelineApps_Response(this);
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int AppsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App> apps_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetActiveTimelineApps_Response_App> Apps {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetActiveTimelineApps_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetActiveTimelineApps_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!apps_.Equals(other.apps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= apps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      apps_.WriteTo(output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      apps_.WriteTo(ref output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetActiveTimelineApps_Response other) {
      if (other == null) {
        return;
      }
      apps_.Add(other.apps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            apps_.AddEntriesFrom(ref input, _repeated_apps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetActiveTimelineApps_Response_App : pb::IMessage<CGameRecording_GetActiveTimelineApps_Response_App>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetActiveTimelineApps_Response_App> _parser = new pb::MessageParser<CGameRecording_GetActiveTimelineApps_Response_App>(() => new CGameRecording_GetActiveTimelineApps_Response_App());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetActiveTimelineApps_Response_App> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Response_App() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Response_App(CGameRecording_GetActiveTimelineApps_Response_App other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      mostRecentStartTime_ = other.mostRecentStartTime_;
      recordingType_ = other.recordingType_;
      videoDurationSeconds_ = other.videoDurationSeconds_;
      timelineDurationSeconds_ = other.timelineDurationSeconds_;
      isActive_ = other.isActive_;
      fileSize_ = other.fileSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetActiveTimelineApps_Response_App Clone() {
      return new CGameRecording_GetActiveTimelineApps_Response_App(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "most_recent_start_time" field.</summary>
    public const int MostRecentStartTimeFieldNumber = 2;
    private readonly static uint MostRecentStartTimeDefaultValue = 0;

    private uint mostRecentStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MostRecentStartTime {
      get { if ((_hasBits0 & 2) != 0) { return mostRecentStartTime_; } else { return MostRecentStartTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mostRecentStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "most_recent_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMostRecentStartTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "most_recent_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMostRecentStartTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "recording_type" field.</summary>
    public const int RecordingTypeFieldNumber = 3;
    private readonly static int RecordingTypeDefaultValue = 0;

    private int recordingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecordingType {
      get { if ((_hasBits0 & 4) != 0) { return recordingType_; } else { return RecordingTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        recordingType_ = value;
      }
    }
    /// <summary>Gets whether the "recording_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "recording_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "video_duration_seconds" field.</summary>
    public const int VideoDurationSecondsFieldNumber = 4;
    private readonly static double VideoDurationSecondsDefaultValue = 0D;

    private double videoDurationSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double VideoDurationSeconds {
      get { if ((_hasBits0 & 8) != 0) { return videoDurationSeconds_; } else { return VideoDurationSecondsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        videoDurationSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "video_duration_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoDurationSeconds {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "video_duration_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoDurationSeconds() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "timeline_duration_seconds" field.</summary>
    public const int TimelineDurationSecondsFieldNumber = 5;
    private readonly static double TimelineDurationSecondsDefaultValue = 0D;

    private double timelineDurationSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimelineDurationSeconds {
      get { if ((_hasBits0 & 16) != 0) { return timelineDurationSeconds_; } else { return TimelineDurationSecondsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        timelineDurationSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "timeline_duration_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineDurationSeconds {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "timeline_duration_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineDurationSeconds() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 6;
    private readonly static bool IsActiveDefaultValue = false;

    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { if ((_hasBits0 & 32) != 0) { return isActive_; } else { return IsActiveDefaultValue; } }
      set {
        _hasBits0 |= 32;
        isActive_ = value;
      }
    }
    /// <summary>Gets whether the "is_active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsActive {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "is_active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsActive() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 7;
    private readonly static ulong FileSizeDefaultValue = 0UL;

    private ulong fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FileSize {
      get { if ((_hasBits0 & 64) != 0) { return fileSize_; } else { return FileSizeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        fileSize_ = value;
      }
    }
    /// <summary>Gets whether the "file_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileSize {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "file_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileSize() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetActiveTimelineApps_Response_App);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetActiveTimelineApps_Response_App other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (MostRecentStartTime != other.MostRecentStartTime) return false;
      if (RecordingType != other.RecordingType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VideoDurationSeconds, other.VideoDurationSeconds)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimelineDurationSeconds, other.TimelineDurationSeconds)) return false;
      if (IsActive != other.IsActive) return false;
      if (FileSize != other.FileSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasMostRecentStartTime) hash ^= MostRecentStartTime.GetHashCode();
      if (HasRecordingType) hash ^= RecordingType.GetHashCode();
      if (HasVideoDurationSeconds) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VideoDurationSeconds);
      if (HasTimelineDurationSeconds) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimelineDurationSeconds);
      if (HasIsActive) hash ^= IsActive.GetHashCode();
      if (HasFileSize) hash ^= FileSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasMostRecentStartTime) {
        output.WriteRawTag(16);
        output.WriteUInt32(MostRecentStartTime);
      }
      if (HasRecordingType) {
        output.WriteRawTag(24);
        output.WriteInt32(RecordingType);
      }
      if (HasVideoDurationSeconds) {
        output.WriteRawTag(33);
        output.WriteDouble(VideoDurationSeconds);
      }
      if (HasTimelineDurationSeconds) {
        output.WriteRawTag(41);
        output.WriteDouble(TimelineDurationSeconds);
      }
      if (HasIsActive) {
        output.WriteRawTag(48);
        output.WriteBool(IsActive);
      }
      if (HasFileSize) {
        output.WriteRawTag(56);
        output.WriteUInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasMostRecentStartTime) {
        output.WriteRawTag(16);
        output.WriteUInt32(MostRecentStartTime);
      }
      if (HasRecordingType) {
        output.WriteRawTag(24);
        output.WriteInt32(RecordingType);
      }
      if (HasVideoDurationSeconds) {
        output.WriteRawTag(33);
        output.WriteDouble(VideoDurationSeconds);
      }
      if (HasTimelineDurationSeconds) {
        output.WriteRawTag(41);
        output.WriteDouble(TimelineDurationSeconds);
      }
      if (HasIsActive) {
        output.WriteRawTag(48);
        output.WriteBool(IsActive);
      }
      if (HasFileSize) {
        output.WriteRawTag(56);
        output.WriteUInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasMostRecentStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MostRecentStartTime);
      }
      if (HasRecordingType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordingType);
      }
      if (HasVideoDurationSeconds) {
        size += 1 + 8;
      }
      if (HasTimelineDurationSeconds) {
        size += 1 + 8;
      }
      if (HasIsActive) {
        size += 1 + 1;
      }
      if (HasFileSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetActiveTimelineApps_Response_App other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasMostRecentStartTime) {
        MostRecentStartTime = other.MostRecentStartTime;
      }
      if (other.HasRecordingType) {
        RecordingType = other.RecordingType;
      }
      if (other.HasVideoDurationSeconds) {
        VideoDurationSeconds = other.VideoDurationSeconds;
      }
      if (other.HasTimelineDurationSeconds) {
        TimelineDurationSeconds = other.TimelineDurationSeconds;
      }
      if (other.HasIsActive) {
        IsActive = other.IsActive;
      }
      if (other.HasFileSize) {
        FileSize = other.FileSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            MostRecentStartTime = input.ReadUInt32();
            break;
          }
          case 24: {
            RecordingType = input.ReadInt32();
            break;
          }
          case 33: {
            VideoDurationSeconds = input.ReadDouble();
            break;
          }
          case 41: {
            TimelineDurationSeconds = input.ReadDouble();
            break;
          }
          case 48: {
            IsActive = input.ReadBool();
            break;
          }
          case 56: {
            FileSize = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            MostRecentStartTime = input.ReadUInt32();
            break;
          }
          case 24: {
            RecordingType = input.ReadInt32();
            break;
          }
          case 33: {
            VideoDurationSeconds = input.ReadDouble();
            break;
          }
          case 41: {
            TimelineDurationSeconds = input.ReadDouble();
            break;
          }
          case 48: {
            IsActive = input.ReadBool();
            break;
          }
          case 56: {
            FileSize = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetAndTrimPostGameHighlights_Request : pb::IMessage<CGameRecording_GetAndTrimPostGameHighlights_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetAndTrimPostGameHighlights_Request> _parser = new pb::MessageParser<CGameRecording_GetAndTrimPostGameHighlights_Request>(() => new CGameRecording_GetAndTrimPostGameHighlights_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetAndTrimPostGameHighlights_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAndTrimPostGameHighlights_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAndTrimPostGameHighlights_Request(CGameRecording_GetAndTrimPostGameHighlights_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      createdAfter_ = other.createdAfter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAndTrimPostGameHighlights_Request Clone() {
      return new CGameRecording_GetAndTrimPostGameHighlights_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "created_after" field.</summary>
    public const int CreatedAfterFieldNumber = 2;
    private readonly static uint CreatedAfterDefaultValue = 0;

    private uint createdAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatedAfter {
      get { if ((_hasBits0 & 2) != 0) { return createdAfter_; } else { return CreatedAfterDefaultValue; } }
      set {
        _hasBits0 |= 2;
        createdAfter_ = value;
      }
    }
    /// <summary>Gets whether the "created_after" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatedAfter {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "created_after" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatedAfter() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetAndTrimPostGameHighlights_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetAndTrimPostGameHighlights_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (CreatedAfter != other.CreatedAfter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasCreatedAfter) hash ^= CreatedAfter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasCreatedAfter) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatedAfter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasCreatedAfter) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatedAfter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasCreatedAfter) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatedAfter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetAndTrimPostGameHighlights_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasCreatedAfter) {
        CreatedAfter = other.CreatedAfter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            CreatedAfter = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            CreatedAfter = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetAndTrimPostGameHighlights_Response : pb::IMessage<CGameRecording_GetAndTrimPostGameHighlights_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetAndTrimPostGameHighlights_Response> _parser = new pb::MessageParser<CGameRecording_GetAndTrimPostGameHighlights_Response>(() => new CGameRecording_GetAndTrimPostGameHighlights_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetAndTrimPostGameHighlights_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAndTrimPostGameHighlights_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAndTrimPostGameHighlights_Response(CGameRecording_GetAndTrimPostGameHighlights_Response other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAndTrimPostGameHighlights_Response Clone() {
      return new CGameRecording_GetAndTrimPostGameHighlights_Response(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent> events_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineEvent> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetAndTrimPostGameHighlights_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetAndTrimPostGameHighlights_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      events_.WriteTo(ref output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetAndTrimPostGameHighlights_Response other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetAvailableDiskSpace_Request : pb::IMessage<CGameRecording_GetAvailableDiskSpace_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetAvailableDiskSpace_Request> _parser = new pb::MessageParser<CGameRecording_GetAvailableDiskSpace_Request>(() => new CGameRecording_GetAvailableDiskSpace_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetAvailableDiskSpace_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAvailableDiskSpace_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAvailableDiskSpace_Request(CGameRecording_GetAvailableDiskSpace_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAvailableDiskSpace_Request Clone() {
      return new CGameRecording_GetAvailableDiskSpace_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetAvailableDiskSpace_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetAvailableDiskSpace_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetAvailableDiskSpace_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetAvailableDiskSpace_Response : pb::IMessage<CGameRecording_GetAvailableDiskSpace_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetAvailableDiskSpace_Response> _parser = new pb::MessageParser<CGameRecording_GetAvailableDiskSpace_Response>(() => new CGameRecording_GetAvailableDiskSpace_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetAvailableDiskSpace_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAvailableDiskSpace_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAvailableDiskSpace_Response(CGameRecording_GetAvailableDiskSpace_Response other) : this() {
      _hasBits0 = other._hasBits0;
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetAvailableDiskSpace_Response Clone() {
      return new CGameRecording_GetAvailableDiskSpace_Response(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private readonly static double SizeDefaultValue = 0D;

    private double size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Size {
      get { if ((_hasBits0 & 1) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSize() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetAvailableDiskSpace_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetAvailableDiskSpace_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Size, other.Size)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Size);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSize) {
        output.WriteRawTag(9);
        output.WriteDouble(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSize) {
        output.WriteRawTag(9);
        output.WriteDouble(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSize) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetAvailableDiskSpace_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Size = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Size = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetClips_Request : pb::IMessage<CGameRecording_GetClips_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetClips_Request> _parser = new pb::MessageParser<CGameRecording_GetClips_Request>(() => new CGameRecording_GetClips_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetClips_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetClips_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetClips_Request(CGameRecording_GetClips_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      createdAfter_ = other.createdAfter_;
      includeTemporary_ = other.includeTemporary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetClips_Request Clone() {
      return new CGameRecording_GetClips_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "created_after" field.</summary>
    public const int CreatedAfterFieldNumber = 2;
    private readonly static uint CreatedAfterDefaultValue = 0;

    private uint createdAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatedAfter {
      get { if ((_hasBits0 & 2) != 0) { return createdAfter_; } else { return CreatedAfterDefaultValue; } }
      set {
        _hasBits0 |= 2;
        createdAfter_ = value;
      }
    }
    /// <summary>Gets whether the "created_after" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatedAfter {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "created_after" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatedAfter() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "include_temporary" field.</summary>
    public const int IncludeTemporaryFieldNumber = 3;
    private readonly static bool IncludeTemporaryDefaultValue = false;

    private bool includeTemporary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeTemporary {
      get { if ((_hasBits0 & 4) != 0) { return includeTemporary_; } else { return IncludeTemporaryDefaultValue; } }
      set {
        _hasBits0 |= 4;
        includeTemporary_ = value;
      }
    }
    /// <summary>Gets whether the "include_temporary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeTemporary {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "include_temporary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeTemporary() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetClips_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetClips_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (CreatedAfter != other.CreatedAfter) return false;
      if (IncludeTemporary != other.IncludeTemporary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasCreatedAfter) hash ^= CreatedAfter.GetHashCode();
      if (HasIncludeTemporary) hash ^= IncludeTemporary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasCreatedAfter) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatedAfter);
      }
      if (HasIncludeTemporary) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeTemporary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasCreatedAfter) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatedAfter);
      }
      if (HasIncludeTemporary) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeTemporary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasCreatedAfter) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatedAfter);
      }
      if (HasIncludeTemporary) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetClips_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasCreatedAfter) {
        CreatedAfter = other.CreatedAfter;
      }
      if (other.HasIncludeTemporary) {
        IncludeTemporary = other.IncludeTemporary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            CreatedAfter = input.ReadUInt32();
            break;
          }
          case 24: {
            IncludeTemporary = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            CreatedAfter = input.ReadUInt32();
            break;
          }
          case 24: {
            IncludeTemporary = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetClips_Response : pb::IMessage<CGameRecording_GetClips_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetClips_Response> _parser = new pb::MessageParser<CGameRecording_GetClips_Response>(() => new CGameRecording_GetClips_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetClips_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetClips_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetClips_Response(CGameRecording_GetClips_Response other) : this() {
      clip_ = other.clip_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetClips_Response Clone() {
      return new CGameRecording_GetClips_Response(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary> _repeated_clip_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary> clip_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary> Clip {
      get { return clip_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetClips_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetClips_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clip_.Equals(other.clip_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clip_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      clip_.WriteTo(output, _repeated_clip_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      clip_.WriteTo(ref output, _repeated_clip_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += clip_.CalculateSize(_repeated_clip_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetClips_Response other) {
      if (other == null) {
        return;
      }
      clip_.Add(other.clip_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clip_.AddEntriesFrom(input, _repeated_clip_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            clip_.AddEntriesFrom(ref input, _repeated_clip_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetEnoughDiskSpace_Request : pb::IMessage<CGameRecording_GetEnoughDiskSpace_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetEnoughDiskSpace_Request> _parser = new pb::MessageParser<CGameRecording_GetEnoughDiskSpace_Request>(() => new CGameRecording_GetEnoughDiskSpace_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetEnoughDiskSpace_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetEnoughDiskSpace_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetEnoughDiskSpace_Request(CGameRecording_GetEnoughDiskSpace_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetEnoughDiskSpace_Request Clone() {
      return new CGameRecording_GetEnoughDiskSpace_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetEnoughDiskSpace_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetEnoughDiskSpace_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetEnoughDiskSpace_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetEnoughDiskSpace_Response : pb::IMessage<CGameRecording_GetEnoughDiskSpace_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetEnoughDiskSpace_Response> _parser = new pb::MessageParser<CGameRecording_GetEnoughDiskSpace_Response>(() => new CGameRecording_GetEnoughDiskSpace_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetEnoughDiskSpace_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetEnoughDiskSpace_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetEnoughDiskSpace_Response(CGameRecording_GetEnoughDiskSpace_Response other) : this() {
      _hasBits0 = other._hasBits0;
      enoughSpace_ = other.enoughSpace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetEnoughDiskSpace_Response Clone() {
      return new CGameRecording_GetEnoughDiskSpace_Response(this);
    }

    /// <summary>Field number for the "enough_space" field.</summary>
    public const int EnoughSpaceFieldNumber = 1;
    private readonly static bool EnoughSpaceDefaultValue = false;

    private bool enoughSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnoughSpace {
      get { if ((_hasBits0 & 1) != 0) { return enoughSpace_; } else { return EnoughSpaceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enoughSpace_ = value;
      }
    }
    /// <summary>Gets whether the "enough_space" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnoughSpace {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enough_space" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnoughSpace() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetEnoughDiskSpace_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetEnoughDiskSpace_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnoughSpace != other.EnoughSpace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnoughSpace) hash ^= EnoughSpace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnoughSpace) {
        output.WriteRawTag(8);
        output.WriteBool(EnoughSpace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnoughSpace) {
        output.WriteRawTag(8);
        output.WriteBool(EnoughSpace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnoughSpace) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetEnoughDiskSpace_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasEnoughSpace) {
        EnoughSpace = other.EnoughSpace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnoughSpace = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnoughSpace = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetPlatformCapabilities_Request : pb::IMessage<CGameRecording_GetPlatformCapabilities_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetPlatformCapabilities_Request> _parser = new pb::MessageParser<CGameRecording_GetPlatformCapabilities_Request>(() => new CGameRecording_GetPlatformCapabilities_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetPlatformCapabilities_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetPlatformCapabilities_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetPlatformCapabilities_Request(CGameRecording_GetPlatformCapabilities_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetPlatformCapabilities_Request Clone() {
      return new CGameRecording_GetPlatformCapabilities_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetPlatformCapabilities_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetPlatformCapabilities_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetPlatformCapabilities_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetPlatformCapabilities_Response : pb::IMessage<CGameRecording_GetPlatformCapabilities_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetPlatformCapabilities_Response> _parser = new pb::MessageParser<CGameRecording_GetPlatformCapabilities_Response>(() => new CGameRecording_GetPlatformCapabilities_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetPlatformCapabilities_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetPlatformCapabilities_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetPlatformCapabilities_Response(CGameRecording_GetPlatformCapabilities_Response other) : this() {
      _hasBits0 = other._hasBits0;
      perProcessAudioCapture_ = other.perProcessAudioCapture_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetPlatformCapabilities_Response Clone() {
      return new CGameRecording_GetPlatformCapabilities_Response(this);
    }

    /// <summary>Field number for the "per_process_audio_capture" field.</summary>
    public const int PerProcessAudioCaptureFieldNumber = 1;
    private readonly static bool PerProcessAudioCaptureDefaultValue = false;

    private bool perProcessAudioCapture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PerProcessAudioCapture {
      get { if ((_hasBits0 & 1) != 0) { return perProcessAudioCapture_; } else { return PerProcessAudioCaptureDefaultValue; } }
      set {
        _hasBits0 |= 1;
        perProcessAudioCapture_ = value;
      }
    }
    /// <summary>Gets whether the "per_process_audio_capture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPerProcessAudioCapture {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "per_process_audio_capture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPerProcessAudioCapture() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetPlatformCapabilities_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetPlatformCapabilities_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerProcessAudioCapture != other.PerProcessAudioCapture) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPerProcessAudioCapture) hash ^= PerProcessAudioCapture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPerProcessAudioCapture) {
        output.WriteRawTag(8);
        output.WriteBool(PerProcessAudioCapture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPerProcessAudioCapture) {
        output.WriteRawTag(8);
        output.WriteBool(PerProcessAudioCapture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPerProcessAudioCapture) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetPlatformCapabilities_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasPerProcessAudioCapture) {
        PerProcessAudioCapture = other.PerProcessAudioCapture;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PerProcessAudioCapture = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PerProcessAudioCapture = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetRecordingSize_Request : pb::IMessage<CGameRecording_GetRecordingSize_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetRecordingSize_Request> _parser = new pb::MessageParser<CGameRecording_GetRecordingSize_Request>(() => new CGameRecording_GetRecordingSize_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetRecordingSize_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetRecordingSize_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetRecordingSize_Request(CGameRecording_GetRecordingSize_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetRecordingSize_Request Clone() {
      return new CGameRecording_GetRecordingSize_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetRecordingSize_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetRecordingSize_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetRecordingSize_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetRecordingSize_Response : pb::IMessage<CGameRecording_GetRecordingSize_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetRecordingSize_Response> _parser = new pb::MessageParser<CGameRecording_GetRecordingSize_Response>(() => new CGameRecording_GetRecordingSize_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetRecordingSize_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetRecordingSize_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetRecordingSize_Response(CGameRecording_GetRecordingSize_Response other) : this() {
      _hasBits0 = other._hasBits0;
      fileSize_ = other.fileSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetRecordingSize_Response Clone() {
      return new CGameRecording_GetRecordingSize_Response(this);
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 1;
    private readonly static ulong FileSizeDefaultValue = 0UL;

    private ulong fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FileSize {
      get { if ((_hasBits0 & 1) != 0) { return fileSize_; } else { return FileSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileSize_ = value;
      }
    }
    /// <summary>Gets whether the "file_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "file_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileSize() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetRecordingSize_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetRecordingSize_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileSize != other.FileSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFileSize) hash ^= FileSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFileSize) {
        output.WriteRawTag(8);
        output.WriteUInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFileSize) {
        output.WriteRawTag(8);
        output.WriteUInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFileSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetRecordingSize_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasFileSize) {
        FileSize = other.FileSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FileSize = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FileSize = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetThumbnails_Request : pb::IMessage<CGameRecording_GetThumbnails_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetThumbnails_Request> _parser = new pb::MessageParser<CGameRecording_GetThumbnails_Request>(() => new CGameRecording_GetThumbnails_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetThumbnails_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Request(CGameRecording_GetThumbnails_Request other) : this() {
      _hasBits0 = other._hasBits0;
      recordingId_ = other.recordingId_;
      clipId_ = other.clipId_;
      startOffsetUs_ = other.startOffsetUs_.Clone();
      majorAxis_ = other.majorAxis_;
      timePrecision_ = other.timePrecision_;
      timelineId_ = other.timelineId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Request Clone() {
      return new CGameRecording_GetThumbnails_Request(this);
    }

    /// <summary>Field number for the "recording_id" field.</summary>
    public const int RecordingIdFieldNumber = 1;
    private readonly static string RecordingIdDefaultValue = "";

    private string recordingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RecordingId {
      get { return recordingId_ ?? RecordingIdDefaultValue; }
      set {
        recordingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recording_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingId {
      get { return recordingId_ != null; }
    }
    /// <summary>Clears the value of the "recording_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingId() {
      recordingId_ = null;
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 3;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "start_offset_us" field.</summary>
    public const int StartOffsetUsFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_startOffsetUs_codec
        = pb::FieldCodec.ForInt64(32);
    private readonly pbc::RepeatedField<long> startOffsetUs_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> StartOffsetUs {
      get { return startOffsetUs_; }
    }

    /// <summary>Field number for the "major_axis" field.</summary>
    public const int MajorAxisFieldNumber = 5;
    private readonly static uint MajorAxisDefaultValue = 512;

    private uint majorAxis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MajorAxis {
      get { if ((_hasBits0 & 1) != 0) { return majorAxis_; } else { return MajorAxisDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorAxis_ = value;
      }
    }
    /// <summary>Gets whether the "major_axis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMajorAxis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "major_axis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMajorAxis() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time_precision" field.</summary>
    public const int TimePrecisionFieldNumber = 6;
    private readonly static int TimePrecisionDefaultValue = 0;

    private int timePrecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimePrecision {
      get { if ((_hasBits0 & 2) != 0) { return timePrecision_; } else { return TimePrecisionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timePrecision_ = value;
      }
    }
    /// <summary>Gets whether the "time_precision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimePrecision {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time_precision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimePrecision() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 7;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetThumbnails_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetThumbnails_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingId != other.RecordingId) return false;
      if (ClipId != other.ClipId) return false;
      if(!startOffsetUs_.Equals(other.startOffsetUs_)) return false;
      if (MajorAxis != other.MajorAxis) return false;
      if (TimePrecision != other.TimePrecision) return false;
      if (TimelineId != other.TimelineId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingId) hash ^= RecordingId.GetHashCode();
      if (HasClipId) hash ^= ClipId.GetHashCode();
      hash ^= startOffsetUs_.GetHashCode();
      if (HasMajorAxis) hash ^= MajorAxis.GetHashCode();
      if (HasTimePrecision) hash ^= TimePrecision.GetHashCode();
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingId) {
        output.WriteRawTag(10);
        output.WriteString(RecordingId);
      }
      if (HasClipId) {
        output.WriteRawTag(26);
        output.WriteString(ClipId);
      }
      startOffsetUs_.WriteTo(output, _repeated_startOffsetUs_codec);
      if (HasMajorAxis) {
        output.WriteRawTag(40);
        output.WriteUInt32(MajorAxis);
      }
      if (HasTimePrecision) {
        output.WriteRawTag(48);
        output.WriteInt32(TimePrecision);
      }
      if (HasTimelineId) {
        output.WriteRawTag(58);
        output.WriteString(TimelineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingId) {
        output.WriteRawTag(10);
        output.WriteString(RecordingId);
      }
      if (HasClipId) {
        output.WriteRawTag(26);
        output.WriteString(ClipId);
      }
      startOffsetUs_.WriteTo(ref output, _repeated_startOffsetUs_codec);
      if (HasMajorAxis) {
        output.WriteRawTag(40);
        output.WriteUInt32(MajorAxis);
      }
      if (HasTimePrecision) {
        output.WriteRawTag(48);
        output.WriteInt32(TimePrecision);
      }
      if (HasTimelineId) {
        output.WriteRawTag(58);
        output.WriteString(TimelineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecordingId);
      }
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      size += startOffsetUs_.CalculateSize(_repeated_startOffsetUs_codec);
      if (HasMajorAxis) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MajorAxis);
      }
      if (HasTimePrecision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimePrecision);
      }
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetThumbnails_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingId) {
        RecordingId = other.RecordingId;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      startOffsetUs_.Add(other.startOffsetUs_);
      if (other.HasMajorAxis) {
        MajorAxis = other.MajorAxis;
      }
      if (other.HasTimePrecision) {
        TimePrecision = other.TimePrecision;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RecordingId = input.ReadString();
            break;
          }
          case 26: {
            ClipId = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            startOffsetUs_.AddEntriesFrom(input, _repeated_startOffsetUs_codec);
            break;
          }
          case 40: {
            MajorAxis = input.ReadUInt32();
            break;
          }
          case 48: {
            TimePrecision = input.ReadInt32();
            break;
          }
          case 58: {
            TimelineId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RecordingId = input.ReadString();
            break;
          }
          case 26: {
            ClipId = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            startOffsetUs_.AddEntriesFrom(ref input, _repeated_startOffsetUs_codec);
            break;
          }
          case 40: {
            MajorAxis = input.ReadUInt32();
            break;
          }
          case 48: {
            TimePrecision = input.ReadInt32();
            break;
          }
          case 58: {
            TimelineId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetThumbnails_Response : pb::IMessage<CGameRecording_GetThumbnails_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetThumbnails_Response> _parser = new pb::MessageParser<CGameRecording_GetThumbnails_Response>(() => new CGameRecording_GetThumbnails_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetThumbnails_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Response(CGameRecording_GetThumbnails_Response other) : this() {
      thumbnails_ = other.thumbnails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Response Clone() {
      return new CGameRecording_GetThumbnails_Response(this);
    }

    /// <summary>Field number for the "thumbnails" field.</summary>
    public const int ThumbnailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail> _repeated_thumbnails_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail> thumbnails_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetThumbnails_Response_Thumbnail> Thumbnails {
      get { return thumbnails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetThumbnails_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetThumbnails_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!thumbnails_.Equals(other.thumbnails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= thumbnails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      thumbnails_.WriteTo(output, _repeated_thumbnails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      thumbnails_.WriteTo(ref output, _repeated_thumbnails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += thumbnails_.CalculateSize(_repeated_thumbnails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetThumbnails_Response other) {
      if (other == null) {
        return;
      }
      thumbnails_.Add(other.thumbnails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            thumbnails_.AddEntriesFrom(input, _repeated_thumbnails_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            thumbnails_.AddEntriesFrom(ref input, _repeated_thumbnails_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetThumbnails_Response_Thumbnail : pb::IMessage<CGameRecording_GetThumbnails_Response_Thumbnail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetThumbnails_Response_Thumbnail> _parser = new pb::MessageParser<CGameRecording_GetThumbnails_Response_Thumbnail>(() => new CGameRecording_GetThumbnails_Response_Thumbnail());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetThumbnails_Response_Thumbnail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Response_Thumbnail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Response_Thumbnail(CGameRecording_GetThumbnails_Response_Thumbnail other) : this() {
      _hasBits0 = other._hasBits0;
      imageData_ = other.imageData_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetThumbnails_Response_Thumbnail Clone() {
      return new CGameRecording_GetThumbnails_Response_Thumbnail(this);
    }

    /// <summary>Field number for the "image_data" field.</summary>
    public const int ImageDataFieldNumber = 1;
    private readonly static pb::ByteString ImageDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString imageData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ImageData {
      get { return imageData_ ?? ImageDataDefaultValue; }
      set {
        imageData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageData {
      get { return imageData_ != null; }
    }
    /// <summary>Clears the value of the "image_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageData() {
      imageData_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetThumbnails_Response_Thumbnail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetThumbnails_Response_Thumbnail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageData != other.ImageData) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImageData) hash ^= ImageData.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasImageData) {
        output.WriteRawTag(10);
        output.WriteBytes(ImageData);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasImageData) {
        output.WriteRawTag(10);
        output.WriteBytes(ImageData);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasImageData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ImageData);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetThumbnails_Response_Thumbnail other) {
      if (other == null) {
        return;
      }
      if (other.HasImageData) {
        ImageData = other.ImageData;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageData = input.ReadBytes();
            break;
          }
          case 16: {
            Width = input.ReadUInt32();
            break;
          }
          case 24: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ImageData = input.ReadBytes();
            break;
          }
          case 16: {
            Width = input.ReadUInt32();
            break;
          }
          case 24: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetTimelinesForApp_Request : pb::IMessage<CGameRecording_GetTimelinesForApp_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetTimelinesForApp_Request> _parser = new pb::MessageParser<CGameRecording_GetTimelinesForApp_Request>(() => new CGameRecording_GetTimelinesForApp_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetTimelinesForApp_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForApp_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForApp_Request(CGameRecording_GetTimelinesForApp_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForApp_Request Clone() {
      return new CGameRecording_GetTimelinesForApp_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetTimelinesForApp_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetTimelinesForApp_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetTimelinesForApp_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetTimelinesForApp_Response : pb::IMessage<CGameRecording_GetTimelinesForApp_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetTimelinesForApp_Response> _parser = new pb::MessageParser<CGameRecording_GetTimelinesForApp_Response>(() => new CGameRecording_GetTimelinesForApp_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetTimelinesForApp_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForApp_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForApp_Response(CGameRecording_GetTimelinesForApp_Response other) : this() {
      timelines_ = other.timelines_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForApp_Response Clone() {
      return new CGameRecording_GetTimelinesForApp_Response(this);
    }

    /// <summary>Field number for the "timelines" field.</summary>
    public const int TimelinesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata> _repeated_timelines_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata> timelines_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata> Timelines {
      get { return timelines_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetTimelinesForApp_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetTimelinesForApp_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!timelines_.Equals(other.timelines_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= timelines_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      timelines_.WriteTo(output, _repeated_timelines_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      timelines_.WriteTo(ref output, _repeated_timelines_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += timelines_.CalculateSize(_repeated_timelines_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetTimelinesForApp_Response other) {
      if (other == null) {
        return;
      }
      timelines_.Add(other.timelines_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            timelines_.AddEntriesFrom(input, _repeated_timelines_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            timelines_.AddEntriesFrom(ref input, _repeated_timelines_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetTimelinesForClip_Request : pb::IMessage<CGameRecording_GetTimelinesForClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetTimelinesForClip_Request> _parser = new pb::MessageParser<CGameRecording_GetTimelinesForClip_Request>(() => new CGameRecording_GetTimelinesForClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetTimelinesForClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForClip_Request(CGameRecording_GetTimelinesForClip_Request other) : this() {
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForClip_Request Clone() {
      return new CGameRecording_GetTimelinesForClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetTimelinesForClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetTimelinesForClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetTimelinesForClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetTimelinesForClip_Response : pb::IMessage<CGameRecording_GetTimelinesForClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetTimelinesForClip_Response> _parser = new pb::MessageParser<CGameRecording_GetTimelinesForClip_Response>(() => new CGameRecording_GetTimelinesForClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetTimelinesForClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForClip_Response(CGameRecording_GetTimelinesForClip_Response other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      timelines_ = other.timelines_.Clone();
      firstTimelineStartOffsetMs_ = other.firstTimelineStartOffsetMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTimelinesForClip_Response Clone() {
      return new CGameRecording_GetTimelinesForClip_Response(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timelines" field.</summary>
    public const int TimelinesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata> _repeated_timelines_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata> timelines_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata> Timelines {
      get { return timelines_; }
    }

    /// <summary>Field number for the "first_timeline_start_offset_ms" field.</summary>
    public const int FirstTimelineStartOffsetMsFieldNumber = 3;
    private readonly static ulong FirstTimelineStartOffsetMsDefaultValue = 0UL;

    private ulong firstTimelineStartOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FirstTimelineStartOffsetMs {
      get { if ((_hasBits0 & 2) != 0) { return firstTimelineStartOffsetMs_; } else { return FirstTimelineStartOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        firstTimelineStartOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "first_timeline_start_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirstTimelineStartOffsetMs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "first_timeline_start_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirstTimelineStartOffsetMs() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetTimelinesForClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetTimelinesForClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if(!timelines_.Equals(other.timelines_)) return false;
      if (FirstTimelineStartOffsetMs != other.FirstTimelineStartOffsetMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      hash ^= timelines_.GetHashCode();
      if (HasFirstTimelineStartOffsetMs) hash ^= FirstTimelineStartOffsetMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      timelines_.WriteTo(output, _repeated_timelines_codec);
      if (HasFirstTimelineStartOffsetMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(FirstTimelineStartOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      timelines_.WriteTo(ref output, _repeated_timelines_codec);
      if (HasFirstTimelineStartOffsetMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(FirstTimelineStartOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      size += timelines_.CalculateSize(_repeated_timelines_codec);
      if (HasFirstTimelineStartOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FirstTimelineStartOffsetMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetTimelinesForClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      timelines_.Add(other.timelines_);
      if (other.HasFirstTimelineStartOffsetMs) {
        FirstTimelineStartOffsetMs = other.FirstTimelineStartOffsetMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            timelines_.AddEntriesFrom(input, _repeated_timelines_codec);
            break;
          }
          case 24: {
            FirstTimelineStartOffsetMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            timelines_.AddEntriesFrom(ref input, _repeated_timelines_codec);
            break;
          }
          case 24: {
            FirstTimelineStartOffsetMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetTotalDiskSpaceUsage_Request : pb::IMessage<CGameRecording_GetTotalDiskSpaceUsage_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetTotalDiskSpaceUsage_Request> _parser = new pb::MessageParser<CGameRecording_GetTotalDiskSpaceUsage_Request>(() => new CGameRecording_GetTotalDiskSpaceUsage_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetTotalDiskSpaceUsage_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTotalDiskSpaceUsage_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTotalDiskSpaceUsage_Request(CGameRecording_GetTotalDiskSpaceUsage_Request other) : this() {
      _hasBits0 = other._hasBits0;
      folderPath_ = other.folderPath_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTotalDiskSpaceUsage_Request Clone() {
      return new CGameRecording_GetTotalDiskSpaceUsage_Request(this);
    }

    /// <summary>Field number for the "folder_path" field.</summary>
    public const int FolderPathFieldNumber = 1;
    private readonly static string FolderPathDefaultValue = "";

    private string folderPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FolderPath {
      get { return folderPath_ ?? FolderPathDefaultValue; }
      set {
        folderPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "folder_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFolderPath {
      get { return folderPath_ != null; }
    }
    /// <summary>Clears the value of the "folder_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFolderPath() {
      folderPath_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetTotalDiskSpaceUsage_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetTotalDiskSpaceUsage_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderPath != other.FolderPath) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFolderPath) hash ^= FolderPath.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFolderPath) {
        output.WriteRawTag(10);
        output.WriteString(FolderPath);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFolderPath) {
        output.WriteRawTag(10);
        output.WriteString(FolderPath);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFolderPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderPath);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetTotalDiskSpaceUsage_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasFolderPath) {
        FolderPath = other.FolderPath;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderPath = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FolderPath = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetTotalDiskSpaceUsage_Response : pb::IMessage<CGameRecording_GetTotalDiskSpaceUsage_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetTotalDiskSpaceUsage_Response> _parser = new pb::MessageParser<CGameRecording_GetTotalDiskSpaceUsage_Response>(() => new CGameRecording_GetTotalDiskSpaceUsage_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetTotalDiskSpaceUsage_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTotalDiskSpaceUsage_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTotalDiskSpaceUsage_Response(CGameRecording_GetTotalDiskSpaceUsage_Response other) : this() {
      _hasBits0 = other._hasBits0;
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetTotalDiskSpaceUsage_Response Clone() {
      return new CGameRecording_GetTotalDiskSpaceUsage_Response(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private readonly static ulong SizeDefaultValue = 0UL;

    private ulong size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Size {
      get { if ((_hasBits0 & 1) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSize() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetTotalDiskSpaceUsage_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetTotalDiskSpaceUsage_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSize) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSize) {
        output.WriteRawTag(8);
        output.WriteUInt64(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSize) {
        output.WriteRawTag(8);
        output.WriteUInt64(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetTotalDiskSpaceUsage_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Size = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Size = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_LowDiskSpace_Notification : pb::IMessage<CGameRecording_LowDiskSpace_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_LowDiskSpace_Notification> _parser = new pb::MessageParser<CGameRecording_LowDiskSpace_Notification>(() => new CGameRecording_LowDiskSpace_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_LowDiskSpace_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_LowDiskSpace_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_LowDiskSpace_Notification(CGameRecording_LowDiskSpace_Notification other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_LowDiskSpace_Notification Clone() {
      return new CGameRecording_LowDiskSpace_Notification(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_LowDiskSpace_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_LowDiskSpace_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_LowDiskSpace_Notification other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ManuallyDeleteRecordingsForApps_Request : pb::IMessage<CGameRecording_ManuallyDeleteRecordingsForApps_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ManuallyDeleteRecordingsForApps_Request> _parser = new pb::MessageParser<CGameRecording_ManuallyDeleteRecordingsForApps_Request>(() => new CGameRecording_ManuallyDeleteRecordingsForApps_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ManuallyDeleteRecordingsForApps_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ManuallyDeleteRecordingsForApps_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ManuallyDeleteRecordingsForApps_Request(CGameRecording_ManuallyDeleteRecordingsForApps_Request other) : this() {
      gameIds_ = other.gameIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ManuallyDeleteRecordingsForApps_Request Clone() {
      return new CGameRecording_ManuallyDeleteRecordingsForApps_Request(this);
    }

    /// <summary>Field number for the "game_ids" field.</summary>
    public const int GameIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_gameIds_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> gameIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> GameIds {
      get { return gameIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ManuallyDeleteRecordingsForApps_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ManuallyDeleteRecordingsForApps_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameIds_.Equals(other.gameIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameIds_.WriteTo(output, _repeated_gameIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameIds_.WriteTo(ref output, _repeated_gameIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameIds_.CalculateSize(_repeated_gameIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ManuallyDeleteRecordingsForApps_Request other) {
      if (other == null) {
        return;
      }
      gameIds_.Add(other.gameIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gameIds_.AddEntriesFrom(input, _repeated_gameIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            gameIds_.AddEntriesFrom(ref input, _repeated_gameIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ManuallyDeleteRecordingsForApps_Response : pb::IMessage<CGameRecording_ManuallyDeleteRecordingsForApps_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ManuallyDeleteRecordingsForApps_Response> _parser = new pb::MessageParser<CGameRecording_ManuallyDeleteRecordingsForApps_Response>(() => new CGameRecording_ManuallyDeleteRecordingsForApps_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ManuallyDeleteRecordingsForApps_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ManuallyDeleteRecordingsForApps_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ManuallyDeleteRecordingsForApps_Response(CGameRecording_ManuallyDeleteRecordingsForApps_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ManuallyDeleteRecordingsForApps_Response Clone() {
      return new CGameRecording_ManuallyDeleteRecordingsForApps_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ManuallyDeleteRecordingsForApps_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ManuallyDeleteRecordingsForApps_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ManuallyDeleteRecordingsForApps_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_PostGameHighlightsChanged_Notification : pb::IMessage<CGameRecording_PostGameHighlightsChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_PostGameHighlightsChanged_Notification> _parser = new pb::MessageParser<CGameRecording_PostGameHighlightsChanged_Notification>(() => new CGameRecording_PostGameHighlightsChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_PostGameHighlightsChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_PostGameHighlightsChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_PostGameHighlightsChanged_Notification(CGameRecording_PostGameHighlightsChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_PostGameHighlightsChanged_Notification Clone() {
      return new CGameRecording_PostGameHighlightsChanged_Notification(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_PostGameHighlightsChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_PostGameHighlightsChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_PostGameHighlightsChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_RecordingSessionChanged_Notification : pb::IMessage<CGameRecording_RecordingSessionChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_RecordingSessionChanged_Notification> _parser = new pb::MessageParser<CGameRecording_RecordingSessionChanged_Notification>(() => new CGameRecording_RecordingSessionChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_RecordingSessionChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_RecordingSessionChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_RecordingSessionChanged_Notification(CGameRecording_RecordingSessionChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      notificationType_ = other.notificationType_;
      timelineId_ = other.timelineId_;
      gameId_ = other.gameId_;
      sessionId_ = other.sessionId_;
      startOffset_ = other.startOffset_;
      durationMs_ = other.durationMs_;
      recordingType_ = other.recordingType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_RecordingSessionChanged_Notification Clone() {
      return new CGameRecording_RecordingSessionChanged_Notification(this);
    }

    /// <summary>Field number for the "notification_type" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private readonly static int NotificationTypeDefaultValue = 0;

    private int notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NotificationType {
      get { if ((_hasBits0 & 1) != 0) { return notificationType_; } else { return NotificationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        notificationType_ = value;
      }
    }
    /// <summary>Gets whether the "notification_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "notification_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 2;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 4;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 2) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 5;
    private readonly static string SessionIdDefaultValue = "";

    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_ ?? SessionIdDefaultValue; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionId {
      get { return sessionId_ != null; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionId() {
      sessionId_ = null;
    }

    /// <summary>Field number for the "start_offset" field.</summary>
    public const int StartOffsetFieldNumber = 6;
    private readonly static ulong StartOffsetDefaultValue = 0UL;

    private ulong startOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong StartOffset {
      get { if ((_hasBits0 & 4) != 0) { return startOffset_; } else { return StartOffsetDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startOffset_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffset {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffset() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 7;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 8) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "recording_type" field.</summary>
    public const int RecordingTypeFieldNumber = 8;
    private readonly static int RecordingTypeDefaultValue = 0;

    private int recordingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecordingType {
      get { if ((_hasBits0 & 16) != 0) { return recordingType_; } else { return RecordingTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        recordingType_ = value;
      }
    }
    /// <summary>Gets whether the "recording_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "recording_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingType() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_RecordingSessionChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_RecordingSessionChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationType != other.NotificationType) return false;
      if (TimelineId != other.TimelineId) return false;
      if (GameId != other.GameId) return false;
      if (SessionId != other.SessionId) return false;
      if (StartOffset != other.StartOffset) return false;
      if (DurationMs != other.DurationMs) return false;
      if (RecordingType != other.RecordingType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationType) hash ^= NotificationType.GetHashCode();
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (HasStartOffset) hash ^= StartOffset.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasRecordingType) hash ^= RecordingType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteInt32(NotificationType);
      }
      if (HasTimelineId) {
        output.WriteRawTag(18);
        output.WriteString(TimelineId);
      }
      if (HasGameId) {
        output.WriteRawTag(32);
        output.WriteUInt64(GameId);
      }
      if (HasSessionId) {
        output.WriteRawTag(42);
        output.WriteString(SessionId);
      }
      if (HasStartOffset) {
        output.WriteRawTag(48);
        output.WriteUInt64(StartOffset);
      }
      if (HasDurationMs) {
        output.WriteRawTag(56);
        output.WriteUInt64(DurationMs);
      }
      if (HasRecordingType) {
        output.WriteRawTag(64);
        output.WriteInt32(RecordingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteInt32(NotificationType);
      }
      if (HasTimelineId) {
        output.WriteRawTag(18);
        output.WriteString(TimelineId);
      }
      if (HasGameId) {
        output.WriteRawTag(32);
        output.WriteUInt64(GameId);
      }
      if (HasSessionId) {
        output.WriteRawTag(42);
        output.WriteString(SessionId);
      }
      if (HasStartOffset) {
        output.WriteRawTag(48);
        output.WriteUInt64(StartOffset);
      }
      if (HasDurationMs) {
        output.WriteRawTag(56);
        output.WriteUInt64(DurationMs);
      }
      if (HasRecordingType) {
        output.WriteRawTag(64);
        output.WriteInt32(RecordingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NotificationType);
      }
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (HasStartOffset) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartOffset);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (HasRecordingType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordingType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_RecordingSessionChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationType) {
        NotificationType = other.NotificationType;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      if (other.HasStartOffset) {
        StartOffset = other.StartOffset;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasRecordingType) {
        RecordingType = other.RecordingType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotificationType = input.ReadInt32();
            break;
          }
          case 18: {
            TimelineId = input.ReadString();
            break;
          }
          case 32: {
            GameId = input.ReadUInt64();
            break;
          }
          case 42: {
            SessionId = input.ReadString();
            break;
          }
          case 48: {
            StartOffset = input.ReadUInt64();
            break;
          }
          case 56: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 64: {
            RecordingType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NotificationType = input.ReadInt32();
            break;
          }
          case 18: {
            TimelineId = input.ReadString();
            break;
          }
          case 32: {
            GameId = input.ReadUInt64();
            break;
          }
          case 42: {
            SessionId = input.ReadString();
            break;
          }
          case 48: {
            StartOffset = input.ReadUInt64();
            break;
          }
          case 56: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 64: {
            RecordingType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_SaveClip_Request : pb::IMessage<CGameRecording_SaveClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_SaveClip_Request> _parser = new pb::MessageParser<CGameRecording_SaveClip_Request>(() => new CGameRecording_SaveClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_SaveClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Request(CGameRecording_SaveClip_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      name_ = other.name_;
      srcClipId_ = other.srcClipId_;
      temporary_ = other.temporary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Request Clone() {
      return new CGameRecording_SaveClip_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "src_clip_id" field.</summary>
    public const int SrcClipIdFieldNumber = 5;
    private readonly static string SrcClipIdDefaultValue = "";

    private string srcClipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcClipId {
      get { return srcClipId_ ?? SrcClipIdDefaultValue; }
      set {
        srcClipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "src_clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrcClipId {
      get { return srcClipId_ != null; }
    }
    /// <summary>Clears the value of the "src_clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrcClipId() {
      srcClipId_ = null;
    }

    /// <summary>Field number for the "temporary" field.</summary>
    public const int TemporaryFieldNumber = 6;
    private readonly static bool TemporaryDefaultValue = false;

    private bool temporary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Temporary {
      get { if ((_hasBits0 & 2) != 0) { return temporary_; } else { return TemporaryDefaultValue; } }
      set {
        _hasBits0 |= 2;
        temporary_ = value;
      }
    }
    /// <summary>Gets whether the "temporary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTemporary {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "temporary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTemporary() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_SaveClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_SaveClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      if (Name != other.Name) return false;
      if (SrcClipId != other.SrcClipId) return false;
      if (Temporary != other.Temporary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasSrcClipId) hash ^= SrcClipId.GetHashCode();
      if (HasTemporary) hash ^= Temporary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (start_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HasSrcClipId) {
        output.WriteRawTag(42);
        output.WriteString(SrcClipId);
      }
      if (HasTemporary) {
        output.WriteRawTag(48);
        output.WriteBool(Temporary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (start_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HasSrcClipId) {
        output.WriteRawTag(42);
        output.WriteString(SrcClipId);
      }
      if (HasTemporary) {
        output.WriteRawTag(48);
        output.WriteBool(Temporary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasSrcClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcClipId);
      }
      if (HasTemporary) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_SaveClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position();
        }
        End.MergeFrom(other.End);
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasSrcClipId) {
        SrcClipId = other.SrcClipId;
      }
      if (other.HasTemporary) {
        Temporary = other.Temporary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (start_ == null) {
              Start = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position();
            }
            input.ReadMessage(Start);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position();
            }
            input.ReadMessage(End);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            SrcClipId = input.ReadString();
            break;
          }
          case 48: {
            Temporary = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (start_ == null) {
              Start = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position();
            }
            input.ReadMessage(Start);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_SaveClip_Request_Position();
            }
            input.ReadMessage(End);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            SrcClipId = input.ReadString();
            break;
          }
          case 48: {
            Temporary = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_SaveClip_Request_Position : pb::IMessage<CGameRecording_SaveClip_Request_Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_SaveClip_Request_Position> _parser = new pb::MessageParser<CGameRecording_SaveClip_Request_Position>(() => new CGameRecording_SaveClip_Request_Position());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_SaveClip_Request_Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Request_Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Request_Position(CGameRecording_SaveClip_Request_Position other) : this() {
      _hasBits0 = other._hasBits0;
      timelineId_ = other.timelineId_;
      offsetMs_ = other.offsetMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Request_Position Clone() {
      return new CGameRecording_SaveClip_Request_Position(this);
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 1;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "offset_ms" field.</summary>
    public const int OffsetMsFieldNumber = 2;
    private readonly static ulong OffsetMsDefaultValue = 0UL;

    private ulong offsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OffsetMs {
      get { if ((_hasBits0 & 1) != 0) { return offsetMs_; } else { return OffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        offsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOffsetMs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOffsetMs() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_SaveClip_Request_Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_SaveClip_Request_Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimelineId != other.TimelineId) return false;
      if (OffsetMs != other.OffsetMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasOffsetMs) hash ^= OffsetMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimelineId) {
        output.WriteRawTag(10);
        output.WriteString(TimelineId);
      }
      if (HasOffsetMs) {
        output.WriteRawTag(16);
        output.WriteUInt64(OffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimelineId) {
        output.WriteRawTag(10);
        output.WriteString(TimelineId);
      }
      if (HasOffsetMs) {
        output.WriteRawTag(16);
        output.WriteUInt64(OffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OffsetMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_SaveClip_Request_Position other) {
      if (other == null) {
        return;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasOffsetMs) {
        OffsetMs = other.OffsetMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TimelineId = input.ReadString();
            break;
          }
          case 16: {
            OffsetMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TimelineId = input.ReadString();
            break;
          }
          case 16: {
            OffsetMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_SaveClip_Response : pb::IMessage<CGameRecording_SaveClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_SaveClip_Response> _parser = new pb::MessageParser<CGameRecording_SaveClip_Response>(() => new CGameRecording_SaveClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_SaveClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Response(CGameRecording_SaveClip_Response other) : this() {
      summary_ = other.summary_ != null ? other.summary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SaveClip_Response Clone() {
      return new CGameRecording_SaveClip_Response(this);
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_SaveClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_SaveClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Summary, other.Summary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (summary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_SaveClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
        }
        Summary.MergeFrom(other.Summary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_StartRecording_Request : pb::IMessage<CGameRecording_StartRecording_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_StartRecording_Request> _parser = new pb::MessageParser<CGameRecording_StartRecording_Request>(() => new CGameRecording_StartRecording_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_StartRecording_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StartRecording_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StartRecording_Request(CGameRecording_StartRecording_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StartRecording_Request Clone() {
      return new CGameRecording_StartRecording_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_StartRecording_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_StartRecording_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_StartRecording_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_StartRecording_Response : pb::IMessage<CGameRecording_StartRecording_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_StartRecording_Response> _parser = new pb::MessageParser<CGameRecording_StartRecording_Response>(() => new CGameRecording_StartRecording_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_StartRecording_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StartRecording_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StartRecording_Response(CGameRecording_StartRecording_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StartRecording_Response Clone() {
      return new CGameRecording_StartRecording_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_StartRecording_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_StartRecording_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_StartRecording_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_StopRecording_Request : pb::IMessage<CGameRecording_StopRecording_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_StopRecording_Request> _parser = new pb::MessageParser<CGameRecording_StopRecording_Request>(() => new CGameRecording_StopRecording_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_StopRecording_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StopRecording_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StopRecording_Request(CGameRecording_StopRecording_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StopRecording_Request Clone() {
      return new CGameRecording_StopRecording_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_StopRecording_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_StopRecording_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_StopRecording_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_StopRecording_Response : pb::IMessage<CGameRecording_StopRecording_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_StopRecording_Response> _parser = new pb::MessageParser<CGameRecording_StopRecording_Response>(() => new CGameRecording_StopRecording_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_StopRecording_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StopRecording_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StopRecording_Response(CGameRecording_StopRecording_Response other) : this() {
      summary_ = other.summary_ != null ? other.summary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_StopRecording_Response Clone() {
      return new CGameRecording_StopRecording_Response(this);
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_StopRecording_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_StopRecording_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Summary, other.Summary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (summary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_StopRecording_Response other) {
      if (other == null) {
        return;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
        }
        Summary.MergeFrom(other.Summary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_SwitchBackgroundRecordingGame_Request : pb::IMessage<CGameRecording_SwitchBackgroundRecordingGame_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_SwitchBackgroundRecordingGame_Request> _parser = new pb::MessageParser<CGameRecording_SwitchBackgroundRecordingGame_Request>(() => new CGameRecording_SwitchBackgroundRecordingGame_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_SwitchBackgroundRecordingGame_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SwitchBackgroundRecordingGame_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SwitchBackgroundRecordingGame_Request(CGameRecording_SwitchBackgroundRecordingGame_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SwitchBackgroundRecordingGame_Request Clone() {
      return new CGameRecording_SwitchBackgroundRecordingGame_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_SwitchBackgroundRecordingGame_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_SwitchBackgroundRecordingGame_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_SwitchBackgroundRecordingGame_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_SwitchBackgroundRecordingGame_Response : pb::IMessage<CGameRecording_SwitchBackgroundRecordingGame_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_SwitchBackgroundRecordingGame_Response> _parser = new pb::MessageParser<CGameRecording_SwitchBackgroundRecordingGame_Response>(() => new CGameRecording_SwitchBackgroundRecordingGame_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_SwitchBackgroundRecordingGame_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SwitchBackgroundRecordingGame_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SwitchBackgroundRecordingGame_Response(CGameRecording_SwitchBackgroundRecordingGame_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_SwitchBackgroundRecordingGame_Response Clone() {
      return new CGameRecording_SwitchBackgroundRecordingGame_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_SwitchBackgroundRecordingGame_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_SwitchBackgroundRecordingGame_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_SwitchBackgroundRecordingGame_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_TimelineChanged_Notification : pb::IMessage<CGameRecording_TimelineChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_TimelineChanged_Notification> _parser = new pb::MessageParser<CGameRecording_TimelineChanged_Notification>(() => new CGameRecording_TimelineChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_TimelineChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_TimelineChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_TimelineChanged_Notification(CGameRecording_TimelineChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      notificationType_ = other.notificationType_;
      timelineId_ = other.timelineId_;
      gameId_ = other.gameId_;
      startTime_ = other.startTime_;
      durationMs_ = other.durationMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_TimelineChanged_Notification Clone() {
      return new CGameRecording_TimelineChanged_Notification(this);
    }

    /// <summary>Field number for the "notification_type" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private readonly static int NotificationTypeDefaultValue = 0;

    private int notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NotificationType {
      get { if ((_hasBits0 & 1) != 0) { return notificationType_; } else { return NotificationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        notificationType_ = value;
      }
    }
    /// <summary>Gets whether the "notification_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "notification_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 2;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 3;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 2) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private readonly static uint StartTimeDefaultValue = 0;

    private uint startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartTime {
      get { if ((_hasBits0 & 4) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 5;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 8) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_TimelineChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_TimelineChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationType != other.NotificationType) return false;
      if (TimelineId != other.TimelineId) return false;
      if (GameId != other.GameId) return false;
      if (StartTime != other.StartTime) return false;
      if (DurationMs != other.DurationMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationType) hash ^= NotificationType.GetHashCode();
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteInt32(NotificationType);
      }
      if (HasTimelineId) {
        output.WriteRawTag(18);
        output.WriteString(TimelineId);
      }
      if (HasGameId) {
        output.WriteRawTag(24);
        output.WriteUInt64(GameId);
      }
      if (HasStartTime) {
        output.WriteRawTag(32);
        output.WriteUInt32(StartTime);
      }
      if (HasDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteInt32(NotificationType);
      }
      if (HasTimelineId) {
        output.WriteRawTag(18);
        output.WriteString(TimelineId);
      }
      if (HasGameId) {
        output.WriteRawTag(24);
        output.WriteUInt64(GameId);
      }
      if (HasStartTime) {
        output.WriteRawTag(32);
        output.WriteUInt32(StartTime);
      }
      if (HasDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NotificationType);
      }
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartTime);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_TimelineChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationType) {
        NotificationType = other.NotificationType;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotificationType = input.ReadInt32();
            break;
          }
          case 18: {
            TimelineId = input.ReadString();
            break;
          }
          case 24: {
            GameId = input.ReadUInt64();
            break;
          }
          case 32: {
            StartTime = input.ReadUInt32();
            break;
          }
          case 40: {
            DurationMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NotificationType = input.ReadInt32();
            break;
          }
          case 18: {
            TimelineId = input.ReadString();
            break;
          }
          case 24: {
            GameId = input.ReadUInt64();
            break;
          }
          case 32: {
            StartTime = input.ReadUInt32();
            break;
          }
          case 40: {
            DurationMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_TimelineEntryChanged_Notification : pb::IMessage<CGameRecording_TimelineEntryChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_TimelineEntryChanged_Notification> _parser = new pb::MessageParser<CGameRecording_TimelineEntryChanged_Notification>(() => new CGameRecording_TimelineEntryChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_TimelineEntryChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_TimelineEntryChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_TimelineEntryChanged_Notification(CGameRecording_TimelineEntryChanged_Notification other) : this() {
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_TimelineEntryChanged_Notification Clone() {
      return new CGameRecording_TimelineEntryChanged_Notification(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_TimelineEntryChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_TimelineEntryChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entry, other.Entry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_TimelineEntryChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entry_ == null) {
              Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entry_ == null) {
              Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UploadClipToSteam_Request : pb::IMessage<CGameRecording_UploadClipToSteam_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UploadClipToSteam_Request> _parser = new pb::MessageParser<CGameRecording_UploadClipToSteam_Request>(() => new CGameRecording_UploadClipToSteam_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UploadClipToSteam_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadClipToSteam_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadClipToSteam_Request(CGameRecording_UploadClipToSteam_Request other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      title_ = other.title_;
      desc_ = other.desc_;
      visibility_ = other.visibility_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadClipToSteam_Request Clone() {
      return new CGameRecording_UploadClipToSteam_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private readonly static string DescDefaultValue = "";

    private string desc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_ ?? DescDefaultValue; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "desc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesc {
      get { return desc_ != null; }
    }
    /// <summary>Clears the value of the "desc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesc() {
      desc_ = null;
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 4;
    private readonly static int VisibilityDefaultValue = 0;

    private int visibility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Visibility {
      get { if ((_hasBits0 & 1) != 0) { return visibility_; } else { return VisibilityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        visibility_ = value;
      }
    }
    /// <summary>Gets whether the "visibility" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisibility {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visibility" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisibility() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UploadClipToSteam_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UploadClipToSteam_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      if (Title != other.Title) return false;
      if (Desc != other.Desc) return false;
      if (Visibility != other.Visibility) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasDesc) hash ^= Desc.GetHashCode();
      if (HasVisibility) hash ^= Visibility.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasDesc) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (HasVisibility) {
        output.WriteRawTag(32);
        output.WriteInt32(Visibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasDesc) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (HasVisibility) {
        output.WriteRawTag(32);
        output.WriteInt32(Visibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasDesc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (HasVisibility) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Visibility);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UploadClipToSteam_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasDesc) {
        Desc = other.Desc;
      }
      if (other.HasVisibility) {
        Visibility = other.Visibility;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            Visibility = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            Visibility = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UploadClipToSteam_Response : pb::IMessage<CGameRecording_UploadClipToSteam_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UploadClipToSteam_Response> _parser = new pb::MessageParser<CGameRecording_UploadClipToSteam_Response>(() => new CGameRecording_UploadClipToSteam_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UploadClipToSteam_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadClipToSteam_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadClipToSteam_Response(CGameRecording_UploadClipToSteam_Response other) : this() {
      summary_ = other.summary_ != null ? other.summary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadClipToSteam_Response Clone() {
      return new CGameRecording_UploadClipToSteam_Response(this);
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UploadClipToSteam_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UploadClipToSteam_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Summary, other.Summary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (summary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UploadClipToSteam_Response other) {
      if (other == null) {
        return;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
        }
        Summary.MergeFrom(other.Summary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.WebUI.CGameRecording_ClipSummary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UploadProgress_Notification : pb::IMessage<CGameRecording_UploadProgress_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UploadProgress_Notification> _parser = new pb::MessageParser<CGameRecording_UploadProgress_Notification>(() => new CGameRecording_UploadProgress_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UploadProgress_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadProgress_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadProgress_Notification(CGameRecording_UploadProgress_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      progress_ = other.progress_;
      clipId_ = other.clipId_;
      eresult_ = other.eresult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UploadProgress_Notification Clone() {
      return new CGameRecording_UploadProgress_Notification(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 1;
    private readonly static float ProgressDefaultValue = 0F;

    private float progress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Progress {
      get { if ((_hasBits0 & 1) != 0) { return progress_; } else { return ProgressDefaultValue; } }
      set {
        _hasBits0 |= 1;
        progress_ = value;
      }
    }
    /// <summary>Gets whether the "progress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProgress {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "progress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProgress() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 2;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    /// <summary>Field number for the "eresult" field.</summary>
    public const int EresultFieldNumber = 3;
    private readonly static int EresultDefaultValue = 0;

    private int eresult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eresult {
      get { if ((_hasBits0 & 2) != 0) { return eresult_; } else { return EresultDefaultValue; } }
      set {
        _hasBits0 |= 2;
        eresult_ = value;
      }
    }
    /// <summary>Gets whether the "eresult" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEresult {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "eresult" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEresult() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UploadProgress_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UploadProgress_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      if (ClipId != other.ClipId) return false;
      if (Eresult != other.Eresult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProgress) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasEresult) hash ^= Eresult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProgress) {
        output.WriteRawTag(13);
        output.WriteFloat(Progress);
      }
      if (HasClipId) {
        output.WriteRawTag(18);
        output.WriteString(ClipId);
      }
      if (HasEresult) {
        output.WriteRawTag(24);
        output.WriteInt32(Eresult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProgress) {
        output.WriteRawTag(13);
        output.WriteFloat(Progress);
      }
      if (HasClipId) {
        output.WriteRawTag(18);
        output.WriteString(ClipId);
      }
      if (HasEresult) {
        output.WriteRawTag(24);
        output.WriteInt32(Eresult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProgress) {
        size += 1 + 4;
      }
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (HasEresult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UploadProgress_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasProgress) {
        Progress = other.Progress;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Progress = input.ReadFloat();
            break;
          }
          case 18: {
            ClipId = input.ReadString();
            break;
          }
          case 24: {
            Eresult = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Progress = input.ReadFloat();
            break;
          }
          case 18: {
            ClipId = input.ReadString();
            break;
          }
          case 24: {
            Eresult = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UserAddTimelineEntry_Request : pb::IMessage<CGameRecording_UserAddTimelineEntry_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UserAddTimelineEntry_Request> _parser = new pb::MessageParser<CGameRecording_UserAddTimelineEntry_Request>(() => new CGameRecording_UserAddTimelineEntry_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UserAddTimelineEntry_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserAddTimelineEntry_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserAddTimelineEntry_Request(CGameRecording_UserAddTimelineEntry_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserAddTimelineEntry_Request Clone() {
      return new CGameRecording_UserAddTimelineEntry_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 3;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UserAddTimelineEntry_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UserAddTimelineEntry_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (!object.Equals(Entry, other.Entry)) return false;
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (entry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entry);
      }
      if (HasClipId) {
        output.WriteRawTag(26);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (entry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entry);
      }
      if (HasClipId) {
        output.WriteRawTag(26);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UserAddTimelineEntry_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (entry_ == null) {
              Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
          case 26: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (entry_ == null) {
              Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
          case 26: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UserAddTimelineEntry_Response : pb::IMessage<CGameRecording_UserAddTimelineEntry_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UserAddTimelineEntry_Response> _parser = new pb::MessageParser<CGameRecording_UserAddTimelineEntry_Response>(() => new CGameRecording_UserAddTimelineEntry_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UserAddTimelineEntry_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserAddTimelineEntry_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserAddTimelineEntry_Response(CGameRecording_UserAddTimelineEntry_Response other) : this() {
      _hasBits0 = other._hasBits0;
      entryId_ = other.entryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserAddTimelineEntry_Response Clone() {
      return new CGameRecording_UserAddTimelineEntry_Response(this);
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 1;
    private readonly static ulong EntryIdDefaultValue = 0UL;

    private ulong entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EntryId {
      get { if ((_hasBits0 & 1) != 0) { return entryId_; } else { return EntryIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        entryId_ = value;
      }
    }
    /// <summary>Gets whether the "entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEntryId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntryId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UserAddTimelineEntry_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UserAddTimelineEntry_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntryId != other.EntryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntryId) hash ^= EntryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEntryId) {
        output.WriteRawTag(8);
        output.WriteUInt64(EntryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEntryId) {
        output.WriteRawTag(8);
        output.WriteUInt64(EntryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UserAddTimelineEntry_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasEntryId) {
        EntryId = other.EntryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EntryId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EntryId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UserRemoveTimelineEntry_Request : pb::IMessage<CGameRecording_UserRemoveTimelineEntry_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UserRemoveTimelineEntry_Request> _parser = new pb::MessageParser<CGameRecording_UserRemoveTimelineEntry_Request>(() => new CGameRecording_UserRemoveTimelineEntry_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UserRemoveTimelineEntry_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserRemoveTimelineEntry_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserRemoveTimelineEntry_Request(CGameRecording_UserRemoveTimelineEntry_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      timelineId_ = other.timelineId_;
      entryId_ = other.entryId_;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserRemoveTimelineEntry_Request Clone() {
      return new CGameRecording_UserRemoveTimelineEntry_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 2;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 3;
    private readonly static ulong EntryIdDefaultValue = 0UL;

    private ulong entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EntryId {
      get { if ((_hasBits0 & 2) != 0) { return entryId_; } else { return EntryIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        entryId_ = value;
      }
    }
    /// <summary>Gets whether the "entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEntryId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntryId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 4;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UserRemoveTimelineEntry_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UserRemoveTimelineEntry_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (TimelineId != other.TimelineId) return false;
      if (EntryId != other.EntryId) return false;
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasEntryId) hash ^= EntryId.GetHashCode();
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasTimelineId) {
        output.WriteRawTag(18);
        output.WriteString(TimelineId);
      }
      if (HasEntryId) {
        output.WriteRawTag(24);
        output.WriteUInt64(EntryId);
      }
      if (HasClipId) {
        output.WriteRawTag(34);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasTimelineId) {
        output.WriteRawTag(18);
        output.WriteString(TimelineId);
      }
      if (HasEntryId) {
        output.WriteRawTag(24);
        output.WriteUInt64(EntryId);
      }
      if (HasClipId) {
        output.WriteRawTag(34);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntryId);
      }
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UserRemoveTimelineEntry_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasEntryId) {
        EntryId = other.EntryId;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            TimelineId = input.ReadString();
            break;
          }
          case 24: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 34: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            TimelineId = input.ReadString();
            break;
          }
          case 24: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 34: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UserRemoveTimelineEntry_Response : pb::IMessage<CGameRecording_UserRemoveTimelineEntry_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UserRemoveTimelineEntry_Response> _parser = new pb::MessageParser<CGameRecording_UserRemoveTimelineEntry_Response>(() => new CGameRecording_UserRemoveTimelineEntry_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UserRemoveTimelineEntry_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserRemoveTimelineEntry_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserRemoveTimelineEntry_Response(CGameRecording_UserRemoveTimelineEntry_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserRemoveTimelineEntry_Response Clone() {
      return new CGameRecording_UserRemoveTimelineEntry_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UserRemoveTimelineEntry_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UserRemoveTimelineEntry_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UserRemoveTimelineEntry_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UserUpdateTimelineEntry_Request : pb::IMessage<CGameRecording_UserUpdateTimelineEntry_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UserUpdateTimelineEntry_Request> _parser = new pb::MessageParser<CGameRecording_UserUpdateTimelineEntry_Request>(() => new CGameRecording_UserUpdateTimelineEntry_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UserUpdateTimelineEntry_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserUpdateTimelineEntry_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserUpdateTimelineEntry_Request(CGameRecording_UserUpdateTimelineEntry_Request other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserUpdateTimelineEntry_Request Clone() {
      return new CGameRecording_UserUpdateTimelineEntry_Request(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 3;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UserUpdateTimelineEntry_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UserUpdateTimelineEntry_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (!object.Equals(Entry, other.Entry)) return false;
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (entry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entry);
      }
      if (HasClipId) {
        output.WriteRawTag(26);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (entry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entry);
      }
      if (HasClipId) {
        output.WriteRawTag(26);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UserUpdateTimelineEntry_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (entry_ == null) {
              Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
          case 26: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (entry_ == null) {
              Entry = new global::OpenSteamworks.Protobuf.WebUI.CTimelineEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
          case 26: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_UserUpdateTimelineEntry_Response : pb::IMessage<CGameRecording_UserUpdateTimelineEntry_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_UserUpdateTimelineEntry_Response> _parser = new pb::MessageParser<CGameRecording_UserUpdateTimelineEntry_Response>(() => new CGameRecording_UserUpdateTimelineEntry_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_UserUpdateTimelineEntry_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserUpdateTimelineEntry_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserUpdateTimelineEntry_Response(CGameRecording_UserUpdateTimelineEntry_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_UserUpdateTimelineEntry_Response Clone() {
      return new CGameRecording_UserUpdateTimelineEntry_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_UserUpdateTimelineEntry_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_UserUpdateTimelineEntry_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_UserUpdateTimelineEntry_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ZipClip_Request : pb::IMessage<CGameRecording_ZipClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ZipClip_Request> _parser = new pb::MessageParser<CGameRecording_ZipClip_Request>(() => new CGameRecording_ZipClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ZipClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ZipClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ZipClip_Request(CGameRecording_ZipClip_Request other) : this() {
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ZipClip_Request Clone() {
      return new CGameRecording_ZipClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static string ClipIdDefaultValue = "";

    private string clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClipId {
      get { return clipId_ ?? ClipIdDefaultValue; }
      set {
        clipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return clipId_ != null; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      clipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ZipClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ZipClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(10);
        output.WriteString(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ZipClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_ZipClip_Response : pb::IMessage<CGameRecording_ZipClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_ZipClip_Response> _parser = new pb::MessageParser<CGameRecording_ZipClip_Response>(() => new CGameRecording_ZipClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_ZipClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ZipClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ZipClip_Response(CGameRecording_ZipClip_Response other) : this() {
      zipPath_ = other.zipPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_ZipClip_Response Clone() {
      return new CGameRecording_ZipClip_Response(this);
    }

    /// <summary>Field number for the "zip_path" field.</summary>
    public const int ZipPathFieldNumber = 1;
    private readonly static string ZipPathDefaultValue = "";

    private string zipPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ZipPath {
      get { return zipPath_ ?? ZipPathDefaultValue; }
      set {
        zipPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "zip_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZipPath {
      get { return zipPath_ != null; }
    }
    /// <summary>Clears the value of the "zip_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZipPath() {
      zipPath_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_ZipClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_ZipClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZipPath != other.ZipPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasZipPath) hash ^= ZipPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasZipPath) {
        output.WriteRawTag(10);
        output.WriteString(ZipPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasZipPath) {
        output.WriteRawTag(10);
        output.WriteString(ZipPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasZipPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_ZipClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasZipPath) {
        ZipPath = other.ZipPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ZipPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ZipPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecordingTimelineEvent : pb::IMessage<CGameRecordingTimelineEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecordingTimelineEvent> _parser = new pb::MessageParser<CGameRecordingTimelineEvent>(() => new CGameRecordingTimelineEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecordingTimelineEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineEvent(CGameRecordingTimelineEvent other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      rtCreated_ = other.rtCreated_;
      possibleClip_ = other.possibleClip_;
      timelineId_ = other.timelineId_;
      entryId_ = other.entryId_;
      timelineOffsetMs_ = other.timelineOffsetMs_;
      durationMs_ = other.durationMs_;
      markerIcon_ = other.markerIcon_;
      markerTitle_ = other.markerTitle_;
      userMarker_ = other.userMarker_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineEvent Clone() {
      return new CGameRecordingTimelineEvent(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rt_created" field.</summary>
    public const int RtCreatedFieldNumber = 2;
    private readonly static uint RtCreatedDefaultValue = 0;

    private uint rtCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtCreated {
      get { if ((_hasBits0 & 2) != 0) { return rtCreated_; } else { return RtCreatedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rtCreated_ = value;
      }
    }
    /// <summary>Gets whether the "rt_created" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtCreated {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rt_created" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtCreated() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "possible_clip" field.</summary>
    public const int PossibleClipFieldNumber = 3;
    private readonly static int PossibleClipDefaultValue = 0;

    private int possibleClip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PossibleClip {
      get { if ((_hasBits0 & 4) != 0) { return possibleClip_; } else { return PossibleClipDefaultValue; } }
      set {
        _hasBits0 |= 4;
        possibleClip_ = value;
      }
    }
    /// <summary>Gets whether the "possible_clip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPossibleClip {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "possible_clip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPossibleClip() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 4;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 5;
    private readonly static ulong EntryIdDefaultValue = 0UL;

    private ulong entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EntryId {
      get { if ((_hasBits0 & 8) != 0) { return entryId_; } else { return EntryIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        entryId_ = value;
      }
    }
    /// <summary>Gets whether the "entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEntryId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntryId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "timeline_offset_ms" field.</summary>
    public const int TimelineOffsetMsFieldNumber = 6;
    private readonly static ulong TimelineOffsetMsDefaultValue = 0UL;

    private ulong timelineOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TimelineOffsetMs {
      get { if ((_hasBits0 & 16) != 0) { return timelineOffsetMs_; } else { return TimelineOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        timelineOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "timeline_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineOffsetMs {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "timeline_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineOffsetMs() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 7;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 32) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "marker_icon" field.</summary>
    public const int MarkerIconFieldNumber = 8;
    private readonly static string MarkerIconDefaultValue = "";

    private string markerIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkerIcon {
      get { return markerIcon_ ?? MarkerIconDefaultValue; }
      set {
        markerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marker_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkerIcon {
      get { return markerIcon_ != null; }
    }
    /// <summary>Clears the value of the "marker_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkerIcon() {
      markerIcon_ = null;
    }

    /// <summary>Field number for the "marker_title" field.</summary>
    public const int MarkerTitleFieldNumber = 9;
    private readonly static string MarkerTitleDefaultValue = "";

    private string markerTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkerTitle {
      get { return markerTitle_ ?? MarkerTitleDefaultValue; }
      set {
        markerTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marker_title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkerTitle {
      get { return markerTitle_ != null; }
    }
    /// <summary>Clears the value of the "marker_title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkerTitle() {
      markerTitle_ = null;
    }

    /// <summary>Field number for the "user_marker" field.</summary>
    public const int UserMarkerFieldNumber = 10;
    private readonly static bool UserMarkerDefaultValue = false;

    private bool userMarker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UserMarker {
      get { if ((_hasBits0 & 64) != 0) { return userMarker_; } else { return UserMarkerDefaultValue; } }
      set {
        _hasBits0 |= 64;
        userMarker_ = value;
      }
    }
    /// <summary>Gets whether the "user_marker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserMarker {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "user_marker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserMarker() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecordingTimelineEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecordingTimelineEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (RtCreated != other.RtCreated) return false;
      if (PossibleClip != other.PossibleClip) return false;
      if (TimelineId != other.TimelineId) return false;
      if (EntryId != other.EntryId) return false;
      if (TimelineOffsetMs != other.TimelineOffsetMs) return false;
      if (DurationMs != other.DurationMs) return false;
      if (MarkerIcon != other.MarkerIcon) return false;
      if (MarkerTitle != other.MarkerTitle) return false;
      if (UserMarker != other.UserMarker) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasRtCreated) hash ^= RtCreated.GetHashCode();
      if (HasPossibleClip) hash ^= PossibleClip.GetHashCode();
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasEntryId) hash ^= EntryId.GetHashCode();
      if (HasTimelineOffsetMs) hash ^= TimelineOffsetMs.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasMarkerIcon) hash ^= MarkerIcon.GetHashCode();
      if (HasMarkerTitle) hash ^= MarkerTitle.GetHashCode();
      if (HasUserMarker) hash ^= UserMarker.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasRtCreated) {
        output.WriteRawTag(16);
        output.WriteUInt32(RtCreated);
      }
      if (HasPossibleClip) {
        output.WriteRawTag(24);
        output.WriteInt32(PossibleClip);
      }
      if (HasTimelineId) {
        output.WriteRawTag(34);
        output.WriteString(TimelineId);
      }
      if (HasEntryId) {
        output.WriteRawTag(40);
        output.WriteUInt64(EntryId);
      }
      if (HasTimelineOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(TimelineOffsetMs);
      }
      if (HasDurationMs) {
        output.WriteRawTag(56);
        output.WriteUInt64(DurationMs);
      }
      if (HasMarkerIcon) {
        output.WriteRawTag(66);
        output.WriteString(MarkerIcon);
      }
      if (HasMarkerTitle) {
        output.WriteRawTag(74);
        output.WriteString(MarkerTitle);
      }
      if (HasUserMarker) {
        output.WriteRawTag(80);
        output.WriteBool(UserMarker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (HasRtCreated) {
        output.WriteRawTag(16);
        output.WriteUInt32(RtCreated);
      }
      if (HasPossibleClip) {
        output.WriteRawTag(24);
        output.WriteInt32(PossibleClip);
      }
      if (HasTimelineId) {
        output.WriteRawTag(34);
        output.WriteString(TimelineId);
      }
      if (HasEntryId) {
        output.WriteRawTag(40);
        output.WriteUInt64(EntryId);
      }
      if (HasTimelineOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(TimelineOffsetMs);
      }
      if (HasDurationMs) {
        output.WriteRawTag(56);
        output.WriteUInt64(DurationMs);
      }
      if (HasMarkerIcon) {
        output.WriteRawTag(66);
        output.WriteString(MarkerIcon);
      }
      if (HasMarkerTitle) {
        output.WriteRawTag(74);
        output.WriteString(MarkerTitle);
      }
      if (HasUserMarker) {
        output.WriteRawTag(80);
        output.WriteBool(UserMarker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasRtCreated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtCreated);
      }
      if (HasPossibleClip) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PossibleClip);
      }
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntryId);
      }
      if (HasTimelineOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimelineOffsetMs);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (HasMarkerIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarkerIcon);
      }
      if (HasMarkerTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarkerTitle);
      }
      if (HasUserMarker) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecordingTimelineEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasRtCreated) {
        RtCreated = other.RtCreated;
      }
      if (other.HasPossibleClip) {
        PossibleClip = other.PossibleClip;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasEntryId) {
        EntryId = other.EntryId;
      }
      if (other.HasTimelineOffsetMs) {
        TimelineOffsetMs = other.TimelineOffsetMs;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasMarkerIcon) {
        MarkerIcon = other.MarkerIcon;
      }
      if (other.HasMarkerTitle) {
        MarkerTitle = other.MarkerTitle;
      }
      if (other.HasUserMarker) {
        UserMarker = other.UserMarker;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            RtCreated = input.ReadUInt32();
            break;
          }
          case 24: {
            PossibleClip = input.ReadInt32();
            break;
          }
          case 34: {
            TimelineId = input.ReadString();
            break;
          }
          case 40: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 48: {
            TimelineOffsetMs = input.ReadUInt64();
            break;
          }
          case 56: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 66: {
            MarkerIcon = input.ReadString();
            break;
          }
          case 74: {
            MarkerTitle = input.ReadString();
            break;
          }
          case 80: {
            UserMarker = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            RtCreated = input.ReadUInt32();
            break;
          }
          case 24: {
            PossibleClip = input.ReadInt32();
            break;
          }
          case 34: {
            TimelineId = input.ReadString();
            break;
          }
          case 40: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 48: {
            TimelineOffsetMs = input.ReadUInt64();
            break;
          }
          case 56: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 66: {
            MarkerIcon = input.ReadString();
            break;
          }
          case 74: {
            MarkerTitle = input.ReadString();
            break;
          }
          case 80: {
            UserMarker = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecordingTimelineMetadata : pb::IMessage<CGameRecordingTimelineMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecordingTimelineMetadata> _parser = new pb::MessageParser<CGameRecordingTimelineMetadata>(() => new CGameRecordingTimelineMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecordingTimelineMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineMetadata(CGameRecordingTimelineMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      timelineId_ = other.timelineId_;
      gameId_ = other.gameId_;
      dateRecorded_ = other.dateRecorded_;
      durationMs_ = other.durationMs_;
      recordings_ = other.recordings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineMetadata Clone() {
      return new CGameRecordingTimelineMetadata(this);
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 1;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "date_recorded" field.</summary>
    public const int DateRecordedFieldNumber = 3;
    private readonly static uint DateRecordedDefaultValue = 0;

    private uint dateRecorded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DateRecorded {
      get { if ((_hasBits0 & 2) != 0) { return dateRecorded_; } else { return DateRecordedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dateRecorded_ = value;
      }
    }
    /// <summary>Gets whether the "date_recorded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDateRecorded {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "date_recorded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDateRecorded() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 4;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 4) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "recordings" field.</summary>
    public const int RecordingsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording> _repeated_recordings_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording> recordings_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRecordingTimelineMetadata_Recording> Recordings {
      get { return recordings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecordingTimelineMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecordingTimelineMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimelineId != other.TimelineId) return false;
      if (GameId != other.GameId) return false;
      if (DateRecorded != other.DateRecorded) return false;
      if (DurationMs != other.DurationMs) return false;
      if(!recordings_.Equals(other.recordings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasDateRecorded) hash ^= DateRecorded.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      hash ^= recordings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimelineId) {
        output.WriteRawTag(10);
        output.WriteString(TimelineId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GameId);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(24);
        output.WriteUInt32(DateRecorded);
      }
      if (HasDurationMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(DurationMs);
      }
      recordings_.WriteTo(output, _repeated_recordings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimelineId) {
        output.WriteRawTag(10);
        output.WriteString(TimelineId);
      }
      if (HasGameId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GameId);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(24);
        output.WriteUInt32(DateRecorded);
      }
      if (HasDurationMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(DurationMs);
      }
      recordings_.WriteTo(ref output, _repeated_recordings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (HasDateRecorded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateRecorded);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      size += recordings_.CalculateSize(_repeated_recordings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecordingTimelineMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasDateRecorded) {
        DateRecorded = other.DateRecorded;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      recordings_.Add(other.recordings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TimelineId = input.ReadString();
            break;
          }
          case 16: {
            GameId = input.ReadUInt64();
            break;
          }
          case 24: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 32: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 42: {
            recordings_.AddEntriesFrom(input, _repeated_recordings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TimelineId = input.ReadString();
            break;
          }
          case 16: {
            GameId = input.ReadUInt64();
            break;
          }
          case 24: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 32: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 42: {
            recordings_.AddEntriesFrom(ref input, _repeated_recordings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecordingTimelineMetadata_Recording : pb::IMessage<CGameRecordingTimelineMetadata_Recording>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecordingTimelineMetadata_Recording> _parser = new pb::MessageParser<CGameRecordingTimelineMetadata_Recording>(() => new CGameRecordingTimelineMetadata_Recording());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecordingTimelineMetadata_Recording> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineMetadata_Recording() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineMetadata_Recording(CGameRecordingTimelineMetadata_Recording other) : this() {
      _hasBits0 = other._hasBits0;
      recordingId_ = other.recordingId_;
      startOffsetMs_ = other.startOffsetMs_;
      durationMs_ = other.durationMs_;
      recordingType_ = other.recordingType_;
      deleteOnCleanup_ = other.deleteOnCleanup_;
      videoManagerClipId_ = other.videoManagerClipId_;
      videoManagerVideoId_ = other.videoManagerVideoId_;
      cdnManifestUrl_ = other.cdnManifestUrl_;
      fileSize_ = other.fileSize_;
      recordingZeroTimelineOffsetMs_ = other.recordingZeroTimelineOffsetMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingTimelineMetadata_Recording Clone() {
      return new CGameRecordingTimelineMetadata_Recording(this);
    }

    /// <summary>Field number for the "recording_id" field.</summary>
    public const int RecordingIdFieldNumber = 1;
    private readonly static string RecordingIdDefaultValue = "";

    private string recordingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RecordingId {
      get { return recordingId_ ?? RecordingIdDefaultValue; }
      set {
        recordingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recording_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingId {
      get { return recordingId_ != null; }
    }
    /// <summary>Clears the value of the "recording_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingId() {
      recordingId_ = null;
    }

    /// <summary>Field number for the "start_offset_ms" field.</summary>
    public const int StartOffsetMsFieldNumber = 2;
    private readonly static ulong StartOffsetMsDefaultValue = 0UL;

    private ulong startOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong StartOffsetMs {
      get { if ((_hasBits0 & 1) != 0) { return startOffsetMs_; } else { return StartOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffsetMs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffsetMs() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 3;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 2) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "recording_type" field.</summary>
    public const int RecordingTypeFieldNumber = 4;
    private readonly static int RecordingTypeDefaultValue = 0;

    private int recordingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecordingType {
      get { if ((_hasBits0 & 4) != 0) { return recordingType_; } else { return RecordingTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        recordingType_ = value;
      }
    }
    /// <summary>Gets whether the "recording_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "recording_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "delete_on_cleanup" field.</summary>
    public const int DeleteOnCleanupFieldNumber = 5;
    private readonly static bool DeleteOnCleanupDefaultValue = false;

    private bool deleteOnCleanup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeleteOnCleanup {
      get { if ((_hasBits0 & 8) != 0) { return deleteOnCleanup_; } else { return DeleteOnCleanupDefaultValue; } }
      set {
        _hasBits0 |= 8;
        deleteOnCleanup_ = value;
      }
    }
    /// <summary>Gets whether the "delete_on_cleanup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeleteOnCleanup {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "delete_on_cleanup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeleteOnCleanup() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "video_manager_clip_id" field.</summary>
    public const int VideoManagerClipIdFieldNumber = 6;
    private readonly static ulong VideoManagerClipIdDefaultValue = 0UL;

    private ulong videoManagerClipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VideoManagerClipId {
      get { if ((_hasBits0 & 16) != 0) { return videoManagerClipId_; } else { return VideoManagerClipIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        videoManagerClipId_ = value;
      }
    }
    /// <summary>Gets whether the "video_manager_clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoManagerClipId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "video_manager_clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoManagerClipId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "video_manager_video_id" field.</summary>
    public const int VideoManagerVideoIdFieldNumber = 7;
    private readonly static ulong VideoManagerVideoIdDefaultValue = 0UL;

    private ulong videoManagerVideoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VideoManagerVideoId {
      get { if ((_hasBits0 & 32) != 0) { return videoManagerVideoId_; } else { return VideoManagerVideoIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        videoManagerVideoId_ = value;
      }
    }
    /// <summary>Gets whether the "video_manager_video_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoManagerVideoId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "video_manager_video_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoManagerVideoId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "cdn_manifest_url" field.</summary>
    public const int CdnManifestUrlFieldNumber = 8;
    private readonly static string CdnManifestUrlDefaultValue = "";

    private string cdnManifestUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CdnManifestUrl {
      get { return cdnManifestUrl_ ?? CdnManifestUrlDefaultValue; }
      set {
        cdnManifestUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cdn_manifest_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCdnManifestUrl {
      get { return cdnManifestUrl_ != null; }
    }
    /// <summary>Clears the value of the "cdn_manifest_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCdnManifestUrl() {
      cdnManifestUrl_ = null;
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 9;
    private readonly static ulong FileSizeDefaultValue = 0UL;

    private ulong fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FileSize {
      get { if ((_hasBits0 & 64) != 0) { return fileSize_; } else { return FileSizeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        fileSize_ = value;
      }
    }
    /// <summary>Gets whether the "file_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileSize {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "file_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileSize() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "recording_zero_timeline_offset_ms" field.</summary>
    public const int RecordingZeroTimelineOffsetMsFieldNumber = 10;
    private readonly static ulong RecordingZeroTimelineOffsetMsDefaultValue = 0UL;

    private ulong recordingZeroTimelineOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RecordingZeroTimelineOffsetMs {
      get { if ((_hasBits0 & 128) != 0) { return recordingZeroTimelineOffsetMs_; } else { return RecordingZeroTimelineOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        recordingZeroTimelineOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "recording_zero_timeline_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingZeroTimelineOffsetMs {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "recording_zero_timeline_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingZeroTimelineOffsetMs() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecordingTimelineMetadata_Recording);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecordingTimelineMetadata_Recording other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingId != other.RecordingId) return false;
      if (StartOffsetMs != other.StartOffsetMs) return false;
      if (DurationMs != other.DurationMs) return false;
      if (RecordingType != other.RecordingType) return false;
      if (DeleteOnCleanup != other.DeleteOnCleanup) return false;
      if (VideoManagerClipId != other.VideoManagerClipId) return false;
      if (VideoManagerVideoId != other.VideoManagerVideoId) return false;
      if (CdnManifestUrl != other.CdnManifestUrl) return false;
      if (FileSize != other.FileSize) return false;
      if (RecordingZeroTimelineOffsetMs != other.RecordingZeroTimelineOffsetMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingId) hash ^= RecordingId.GetHashCode();
      if (HasStartOffsetMs) hash ^= StartOffsetMs.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasRecordingType) hash ^= RecordingType.GetHashCode();
      if (HasDeleteOnCleanup) hash ^= DeleteOnCleanup.GetHashCode();
      if (HasVideoManagerClipId) hash ^= VideoManagerClipId.GetHashCode();
      if (HasVideoManagerVideoId) hash ^= VideoManagerVideoId.GetHashCode();
      if (HasCdnManifestUrl) hash ^= CdnManifestUrl.GetHashCode();
      if (HasFileSize) hash ^= FileSize.GetHashCode();
      if (HasRecordingZeroTimelineOffsetMs) hash ^= RecordingZeroTimelineOffsetMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingId) {
        output.WriteRawTag(10);
        output.WriteString(RecordingId);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(16);
        output.WriteUInt64(StartOffsetMs);
      }
      if (HasDurationMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(DurationMs);
      }
      if (HasRecordingType) {
        output.WriteRawTag(32);
        output.WriteInt32(RecordingType);
      }
      if (HasDeleteOnCleanup) {
        output.WriteRawTag(40);
        output.WriteBool(DeleteOnCleanup);
      }
      if (HasVideoManagerClipId) {
        output.WriteRawTag(48);
        output.WriteUInt64(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        output.WriteRawTag(56);
        output.WriteUInt64(VideoManagerVideoId);
      }
      if (HasCdnManifestUrl) {
        output.WriteRawTag(66);
        output.WriteString(CdnManifestUrl);
      }
      if (HasFileSize) {
        output.WriteRawTag(72);
        output.WriteUInt64(FileSize);
      }
      if (HasRecordingZeroTimelineOffsetMs) {
        output.WriteRawTag(80);
        output.WriteUInt64(RecordingZeroTimelineOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingId) {
        output.WriteRawTag(10);
        output.WriteString(RecordingId);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(16);
        output.WriteUInt64(StartOffsetMs);
      }
      if (HasDurationMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(DurationMs);
      }
      if (HasRecordingType) {
        output.WriteRawTag(32);
        output.WriteInt32(RecordingType);
      }
      if (HasDeleteOnCleanup) {
        output.WriteRawTag(40);
        output.WriteBool(DeleteOnCleanup);
      }
      if (HasVideoManagerClipId) {
        output.WriteRawTag(48);
        output.WriteUInt64(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        output.WriteRawTag(56);
        output.WriteUInt64(VideoManagerVideoId);
      }
      if (HasCdnManifestUrl) {
        output.WriteRawTag(66);
        output.WriteString(CdnManifestUrl);
      }
      if (HasFileSize) {
        output.WriteRawTag(72);
        output.WriteUInt64(FileSize);
      }
      if (HasRecordingZeroTimelineOffsetMs) {
        output.WriteRawTag(80);
        output.WriteUInt64(RecordingZeroTimelineOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecordingId);
      }
      if (HasStartOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartOffsetMs);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (HasRecordingType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecordingType);
      }
      if (HasDeleteOnCleanup) {
        size += 1 + 1;
      }
      if (HasVideoManagerClipId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VideoManagerVideoId);
      }
      if (HasCdnManifestUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdnManifestUrl);
      }
      if (HasFileSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileSize);
      }
      if (HasRecordingZeroTimelineOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RecordingZeroTimelineOffsetMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecordingTimelineMetadata_Recording other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingId) {
        RecordingId = other.RecordingId;
      }
      if (other.HasStartOffsetMs) {
        StartOffsetMs = other.StartOffsetMs;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasRecordingType) {
        RecordingType = other.RecordingType;
      }
      if (other.HasDeleteOnCleanup) {
        DeleteOnCleanup = other.DeleteOnCleanup;
      }
      if (other.HasVideoManagerClipId) {
        VideoManagerClipId = other.VideoManagerClipId;
      }
      if (other.HasVideoManagerVideoId) {
        VideoManagerVideoId = other.VideoManagerVideoId;
      }
      if (other.HasCdnManifestUrl) {
        CdnManifestUrl = other.CdnManifestUrl;
      }
      if (other.HasFileSize) {
        FileSize = other.FileSize;
      }
      if (other.HasRecordingZeroTimelineOffsetMs) {
        RecordingZeroTimelineOffsetMs = other.RecordingZeroTimelineOffsetMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RecordingId = input.ReadString();
            break;
          }
          case 16: {
            StartOffsetMs = input.ReadUInt64();
            break;
          }
          case 24: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 32: {
            RecordingType = input.ReadInt32();
            break;
          }
          case 40: {
            DeleteOnCleanup = input.ReadBool();
            break;
          }
          case 48: {
            VideoManagerClipId = input.ReadUInt64();
            break;
          }
          case 56: {
            VideoManagerVideoId = input.ReadUInt64();
            break;
          }
          case 66: {
            CdnManifestUrl = input.ReadString();
            break;
          }
          case 72: {
            FileSize = input.ReadUInt64();
            break;
          }
          case 80: {
            RecordingZeroTimelineOffsetMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RecordingId = input.ReadString();
            break;
          }
          case 16: {
            StartOffsetMs = input.ReadUInt64();
            break;
          }
          case 24: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 32: {
            RecordingType = input.ReadInt32();
            break;
          }
          case 40: {
            DeleteOnCleanup = input.ReadBool();
            break;
          }
          case 48: {
            VideoManagerClipId = input.ReadUInt64();
            break;
          }
          case 56: {
            VideoManagerVideoId = input.ReadUInt64();
            break;
          }
          case 66: {
            CdnManifestUrl = input.ReadString();
            break;
          }
          case 72: {
            FileSize = input.ReadUInt64();
            break;
          }
          case 80: {
            RecordingZeroTimelineOffsetMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CTimelineEntry : pb::IMessage<CTimelineEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CTimelineEntry> _parser = new pb::MessageParser<CTimelineEntry>(() => new CTimelineEntry());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CTimelineEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTimelineEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTimelineEntry(CTimelineEntry other) : this() {
      _hasBits0 = other._hasBits0;
      timelineId_ = other.timelineId_;
      entryId_ = other.entryId_;
      time_ = other.time_;
      type_ = other.type_;
      gameMode_ = other.gameMode_;
      rangeId_ = other.rangeId_;
      rangeTitle_ = other.rangeTitle_;
      rangeDuration_ = other.rangeDuration_;
      rangePossibleClip_ = other.rangePossibleClip_;
      timestampTitle_ = other.timestampTitle_;
      markerIcon_ = other.markerIcon_;
      markerTitle_ = other.markerTitle_;
      markerDescription_ = other.markerDescription_;
      markerPriority_ = other.markerPriority_;
      screenshotHandle_ = other.screenshotHandle_;
      achievementName_ = other.achievementName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTimelineEntry Clone() {
      return new CTimelineEntry(this);
    }

    /// <summary>Field number for the "timeline_id" field.</summary>
    public const int TimelineIdFieldNumber = 1;
    private readonly static string TimelineIdDefaultValue = "";

    private string timelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimelineId {
      get { return timelineId_ ?? TimelineIdDefaultValue; }
      set {
        timelineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimelineId {
      get { return timelineId_ != null; }
    }
    /// <summary>Clears the value of the "timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimelineId() {
      timelineId_ = null;
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 2;
    private readonly static ulong EntryIdDefaultValue = 0UL;

    private ulong entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EntryId {
      get { if ((_hasBits0 & 1) != 0) { return entryId_; } else { return EntryIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        entryId_ = value;
      }
    }
    /// <summary>Gets whether the "entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEntryId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntryId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private readonly static ulong TimeDefaultValue = 0UL;

    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Time {
      get { if ((_hasBits0 & 2) != 0) { return time_; } else { return TimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 5;
    private readonly static int GameModeDefaultValue = 0;

    private int gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameMode {
      get { if ((_hasBits0 & 8) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "range_id" field.</summary>
    public const int RangeIdFieldNumber = 6;
    private readonly static string RangeIdDefaultValue = "";

    private string rangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RangeId {
      get { return rangeId_ ?? RangeIdDefaultValue; }
      set {
        rangeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "range_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRangeId {
      get { return rangeId_ != null; }
    }
    /// <summary>Clears the value of the "range_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRangeId() {
      rangeId_ = null;
    }

    /// <summary>Field number for the "range_title" field.</summary>
    public const int RangeTitleFieldNumber = 7;
    private readonly static string RangeTitleDefaultValue = "";

    private string rangeTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RangeTitle {
      get { return rangeTitle_ ?? RangeTitleDefaultValue; }
      set {
        rangeTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "range_title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRangeTitle {
      get { return rangeTitle_ != null; }
    }
    /// <summary>Clears the value of the "range_title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRangeTitle() {
      rangeTitle_ = null;
    }

    /// <summary>Field number for the "range_duration" field.</summary>
    public const int RangeDurationFieldNumber = 8;
    private readonly static ulong RangeDurationDefaultValue = 0UL;

    private ulong rangeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RangeDuration {
      get { if ((_hasBits0 & 16) != 0) { return rangeDuration_; } else { return RangeDurationDefaultValue; } }
      set {
        _hasBits0 |= 16;
        rangeDuration_ = value;
      }
    }
    /// <summary>Gets whether the "range_duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRangeDuration {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "range_duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRangeDuration() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "range_possible_clip" field.</summary>
    public const int RangePossibleClipFieldNumber = 9;
    private readonly static int RangePossibleClipDefaultValue = 0;

    private int rangePossibleClip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RangePossibleClip {
      get { if ((_hasBits0 & 32) != 0) { return rangePossibleClip_; } else { return RangePossibleClipDefaultValue; } }
      set {
        _hasBits0 |= 32;
        rangePossibleClip_ = value;
      }
    }
    /// <summary>Gets whether the "range_possible_clip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRangePossibleClip {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "range_possible_clip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRangePossibleClip() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "timestamp_title" field.</summary>
    public const int TimestampTitleFieldNumber = 10;
    private readonly static string TimestampTitleDefaultValue = "";

    private string timestampTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimestampTitle {
      get { return timestampTitle_ ?? TimestampTitleDefaultValue; }
      set {
        timestampTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timestamp_title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestampTitle {
      get { return timestampTitle_ != null; }
    }
    /// <summary>Clears the value of the "timestamp_title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestampTitle() {
      timestampTitle_ = null;
    }

    /// <summary>Field number for the "marker_icon" field.</summary>
    public const int MarkerIconFieldNumber = 11;
    private readonly static string MarkerIconDefaultValue = "";

    private string markerIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkerIcon {
      get { return markerIcon_ ?? MarkerIconDefaultValue; }
      set {
        markerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marker_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkerIcon {
      get { return markerIcon_ != null; }
    }
    /// <summary>Clears the value of the "marker_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkerIcon() {
      markerIcon_ = null;
    }

    /// <summary>Field number for the "marker_title" field.</summary>
    public const int MarkerTitleFieldNumber = 12;
    private readonly static string MarkerTitleDefaultValue = "";

    private string markerTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkerTitle {
      get { return markerTitle_ ?? MarkerTitleDefaultValue; }
      set {
        markerTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marker_title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkerTitle {
      get { return markerTitle_ != null; }
    }
    /// <summary>Clears the value of the "marker_title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkerTitle() {
      markerTitle_ = null;
    }

    /// <summary>Field number for the "marker_description" field.</summary>
    public const int MarkerDescriptionFieldNumber = 13;
    private readonly static string MarkerDescriptionDefaultValue = "";

    private string markerDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MarkerDescription {
      get { return markerDescription_ ?? MarkerDescriptionDefaultValue; }
      set {
        markerDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marker_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkerDescription {
      get { return markerDescription_ != null; }
    }
    /// <summary>Clears the value of the "marker_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkerDescription() {
      markerDescription_ = null;
    }

    /// <summary>Field number for the "marker_priority" field.</summary>
    public const int MarkerPriorityFieldNumber = 14;
    private readonly static int MarkerPriorityDefaultValue = 0;

    private int markerPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MarkerPriority {
      get { if ((_hasBits0 & 64) != 0) { return markerPriority_; } else { return MarkerPriorityDefaultValue; } }
      set {
        _hasBits0 |= 64;
        markerPriority_ = value;
      }
    }
    /// <summary>Gets whether the "marker_priority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkerPriority {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "marker_priority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkerPriority() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "screenshot_handle" field.</summary>
    public const int ScreenshotHandleFieldNumber = 15;
    private readonly static uint ScreenshotHandleDefaultValue = 0;

    private uint screenshotHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScreenshotHandle {
      get { if ((_hasBits0 & 128) != 0) { return screenshotHandle_; } else { return ScreenshotHandleDefaultValue; } }
      set {
        _hasBits0 |= 128;
        screenshotHandle_ = value;
      }
    }
    /// <summary>Gets whether the "screenshot_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScreenshotHandle {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "screenshot_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScreenshotHandle() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "achievement_name" field.</summary>
    public const int AchievementNameFieldNumber = 16;
    private readonly static string AchievementNameDefaultValue = "";

    private string achievementName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AchievementName {
      get { return achievementName_ ?? AchievementNameDefaultValue; }
      set {
        achievementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "achievement_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAchievementName {
      get { return achievementName_ != null; }
    }
    /// <summary>Clears the value of the "achievement_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAchievementName() {
      achievementName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CTimelineEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CTimelineEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimelineId != other.TimelineId) return false;
      if (EntryId != other.EntryId) return false;
      if (Time != other.Time) return false;
      if (Type != other.Type) return false;
      if (GameMode != other.GameMode) return false;
      if (RangeId != other.RangeId) return false;
      if (RangeTitle != other.RangeTitle) return false;
      if (RangeDuration != other.RangeDuration) return false;
      if (RangePossibleClip != other.RangePossibleClip) return false;
      if (TimestampTitle != other.TimestampTitle) return false;
      if (MarkerIcon != other.MarkerIcon) return false;
      if (MarkerTitle != other.MarkerTitle) return false;
      if (MarkerDescription != other.MarkerDescription) return false;
      if (MarkerPriority != other.MarkerPriority) return false;
      if (ScreenshotHandle != other.ScreenshotHandle) return false;
      if (AchievementName != other.AchievementName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimelineId) hash ^= TimelineId.GetHashCode();
      if (HasEntryId) hash ^= EntryId.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasRangeId) hash ^= RangeId.GetHashCode();
      if (HasRangeTitle) hash ^= RangeTitle.GetHashCode();
      if (HasRangeDuration) hash ^= RangeDuration.GetHashCode();
      if (HasRangePossibleClip) hash ^= RangePossibleClip.GetHashCode();
      if (HasTimestampTitle) hash ^= TimestampTitle.GetHashCode();
      if (HasMarkerIcon) hash ^= MarkerIcon.GetHashCode();
      if (HasMarkerTitle) hash ^= MarkerTitle.GetHashCode();
      if (HasMarkerDescription) hash ^= MarkerDescription.GetHashCode();
      if (HasMarkerPriority) hash ^= MarkerPriority.GetHashCode();
      if (HasScreenshotHandle) hash ^= ScreenshotHandle.GetHashCode();
      if (HasAchievementName) hash ^= AchievementName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimelineId) {
        output.WriteRawTag(10);
        output.WriteString(TimelineId);
      }
      if (HasEntryId) {
        output.WriteRawTag(16);
        output.WriteUInt64(EntryId);
      }
      if (HasTime) {
        output.WriteRawTag(24);
        output.WriteUInt64(Time);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasGameMode) {
        output.WriteRawTag(40);
        output.WriteInt32(GameMode);
      }
      if (HasRangeId) {
        output.WriteRawTag(50);
        output.WriteString(RangeId);
      }
      if (HasRangeTitle) {
        output.WriteRawTag(58);
        output.WriteString(RangeTitle);
      }
      if (HasRangeDuration) {
        output.WriteRawTag(64);
        output.WriteUInt64(RangeDuration);
      }
      if (HasRangePossibleClip) {
        output.WriteRawTag(72);
        output.WriteInt32(RangePossibleClip);
      }
      if (HasTimestampTitle) {
        output.WriteRawTag(82);
        output.WriteString(TimestampTitle);
      }
      if (HasMarkerIcon) {
        output.WriteRawTag(90);
        output.WriteString(MarkerIcon);
      }
      if (HasMarkerTitle) {
        output.WriteRawTag(98);
        output.WriteString(MarkerTitle);
      }
      if (HasMarkerDescription) {
        output.WriteRawTag(106);
        output.WriteString(MarkerDescription);
      }
      if (HasMarkerPriority) {
        output.WriteRawTag(112);
        output.WriteInt32(MarkerPriority);
      }
      if (HasScreenshotHandle) {
        output.WriteRawTag(120);
        output.WriteUInt32(ScreenshotHandle);
      }
      if (HasAchievementName) {
        output.WriteRawTag(130, 1);
        output.WriteString(AchievementName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimelineId) {
        output.WriteRawTag(10);
        output.WriteString(TimelineId);
      }
      if (HasEntryId) {
        output.WriteRawTag(16);
        output.WriteUInt64(EntryId);
      }
      if (HasTime) {
        output.WriteRawTag(24);
        output.WriteUInt64(Time);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasGameMode) {
        output.WriteRawTag(40);
        output.WriteInt32(GameMode);
      }
      if (HasRangeId) {
        output.WriteRawTag(50);
        output.WriteString(RangeId);
      }
      if (HasRangeTitle) {
        output.WriteRawTag(58);
        output.WriteString(RangeTitle);
      }
      if (HasRangeDuration) {
        output.WriteRawTag(64);
        output.WriteUInt64(RangeDuration);
      }
      if (HasRangePossibleClip) {
        output.WriteRawTag(72);
        output.WriteInt32(RangePossibleClip);
      }
      if (HasTimestampTitle) {
        output.WriteRawTag(82);
        output.WriteString(TimestampTitle);
      }
      if (HasMarkerIcon) {
        output.WriteRawTag(90);
        output.WriteString(MarkerIcon);
      }
      if (HasMarkerTitle) {
        output.WriteRawTag(98);
        output.WriteString(MarkerTitle);
      }
      if (HasMarkerDescription) {
        output.WriteRawTag(106);
        output.WriteString(MarkerDescription);
      }
      if (HasMarkerPriority) {
        output.WriteRawTag(112);
        output.WriteInt32(MarkerPriority);
      }
      if (HasScreenshotHandle) {
        output.WriteRawTag(120);
        output.WriteUInt32(ScreenshotHandle);
      }
      if (HasAchievementName) {
        output.WriteRawTag(130, 1);
        output.WriteString(AchievementName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTimelineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineId);
      }
      if (HasEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntryId);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameMode);
      }
      if (HasRangeId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RangeId);
      }
      if (HasRangeTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RangeTitle);
      }
      if (HasRangeDuration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RangeDuration);
      }
      if (HasRangePossibleClip) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RangePossibleClip);
      }
      if (HasTimestampTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimestampTitle);
      }
      if (HasMarkerIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarkerIcon);
      }
      if (HasMarkerTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarkerTitle);
      }
      if (HasMarkerDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarkerDescription);
      }
      if (HasMarkerPriority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarkerPriority);
      }
      if (HasScreenshotHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScreenshotHandle);
      }
      if (HasAchievementName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AchievementName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CTimelineEntry other) {
      if (other == null) {
        return;
      }
      if (other.HasTimelineId) {
        TimelineId = other.TimelineId;
      }
      if (other.HasEntryId) {
        EntryId = other.EntryId;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasRangeId) {
        RangeId = other.RangeId;
      }
      if (other.HasRangeTitle) {
        RangeTitle = other.RangeTitle;
      }
      if (other.HasRangeDuration) {
        RangeDuration = other.RangeDuration;
      }
      if (other.HasRangePossibleClip) {
        RangePossibleClip = other.RangePossibleClip;
      }
      if (other.HasTimestampTitle) {
        TimestampTitle = other.TimestampTitle;
      }
      if (other.HasMarkerIcon) {
        MarkerIcon = other.MarkerIcon;
      }
      if (other.HasMarkerTitle) {
        MarkerTitle = other.MarkerTitle;
      }
      if (other.HasMarkerDescription) {
        MarkerDescription = other.MarkerDescription;
      }
      if (other.HasMarkerPriority) {
        MarkerPriority = other.MarkerPriority;
      }
      if (other.HasScreenshotHandle) {
        ScreenshotHandle = other.ScreenshotHandle;
      }
      if (other.HasAchievementName) {
        AchievementName = other.AchievementName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TimelineId = input.ReadString();
            break;
          }
          case 16: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 24: {
            Time = input.ReadUInt64();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            GameMode = input.ReadInt32();
            break;
          }
          case 50: {
            RangeId = input.ReadString();
            break;
          }
          case 58: {
            RangeTitle = input.ReadString();
            break;
          }
          case 64: {
            RangeDuration = input.ReadUInt64();
            break;
          }
          case 72: {
            RangePossibleClip = input.ReadInt32();
            break;
          }
          case 82: {
            TimestampTitle = input.ReadString();
            break;
          }
          case 90: {
            MarkerIcon = input.ReadString();
            break;
          }
          case 98: {
            MarkerTitle = input.ReadString();
            break;
          }
          case 106: {
            MarkerDescription = input.ReadString();
            break;
          }
          case 112: {
            MarkerPriority = input.ReadInt32();
            break;
          }
          case 120: {
            ScreenshotHandle = input.ReadUInt32();
            break;
          }
          case 130: {
            AchievementName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TimelineId = input.ReadString();
            break;
          }
          case 16: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 24: {
            Time = input.ReadUInt64();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            GameMode = input.ReadInt32();
            break;
          }
          case 50: {
            RangeId = input.ReadString();
            break;
          }
          case 58: {
            RangeTitle = input.ReadString();
            break;
          }
          case 64: {
            RangeDuration = input.ReadUInt64();
            break;
          }
          case 72: {
            RangePossibleClip = input.ReadInt32();
            break;
          }
          case 82: {
            TimestampTitle = input.ReadString();
            break;
          }
          case 90: {
            MarkerIcon = input.ReadString();
            break;
          }
          case 98: {
            MarkerTitle = input.ReadString();
            break;
          }
          case 106: {
            MarkerDescription = input.ReadString();
            break;
          }
          case 112: {
            MarkerPriority = input.ReadInt32();
            break;
          }
          case 120: {
            ScreenshotHandle = input.ReadUInt32();
            break;
          }
          case 130: {
            AchievementName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
