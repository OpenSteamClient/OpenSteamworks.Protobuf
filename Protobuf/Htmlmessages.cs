// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: htmlmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from htmlmessages.proto</summary>
  public static partial class HtmlmessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for htmlmessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HtmlmessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJodG1sbWVzc2FnZXMucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlw",
            "dG9yLnByb3RvIl4KCUNNc2dLZXlVcBIWCg5icm93c2VyX2hhbmRsZRgBIAEo",
            "DRIPCgdrZXlDb2RlGAIgASgNEhEKCW1vZGlmaWVycxgDIAEoDRIVCg1uYXRp",
            "dmVLZXlDb2RlGAQgASgNIncKC0NNc2dLZXlEb3duEhYKDmJyb3dzZXJfaGFu",
            "ZGxlGAEgASgNEg8KB2tleUNvZGUYAiABKA0SEQoJbW9kaWZpZXJzGAMgASgN",
            "EhUKDWlzX3N5c3RlbV9rZXkYBCABKAgSFQoNbmF0aXZlS2V5Q29kZRgFIAEo",
            "DSJxCgtDTXNnS2V5Q2hhchIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIPCgd1",
            "bmljaGFyGAIgASgNEhEKCW1vZGlmaWVycxgDIAEoDRIPCgdrZXlDb2RlGAQg",
            "ASgNEhUKDW5hdGl2ZUtleUNvZGUYBSABKA0iUAoNQ01zZ01vdXNlRG93bhIW",
            "Cg5icm93c2VyX2hhbmRsZRgBIAEoDRIUCgxtb3VzZV9idXR0b24YAiABKA0S",
            "EQoJbW9kaWZpZXJzGAMgASgNInoKC0NNc2dNb3VzZVVwEhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNEhQKDG1vdXNlX2J1dHRvbhgCIAEoDRIRCgltb2RpZmll",
            "cnMYAyABKA0SFAoMaXNfb2ZmX3BhbmVsGAQgASgIEgkKAXgYBSABKAUSCQoB",
            "eRgGIAEoBSJUChFDTXNnTW91c2VEYmxDbGljaxIWCg5icm93c2VyX2hhbmRs",
            "ZRgBIAEoDRIUCgxtb3VzZV9idXR0b24YAiABKA0SEQoJbW9kaWZpZXJzGAMg",
            "ASgNIlsKDkNNc2dNb3VzZVdoZWVsEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgN",
            "Eg4KBmRlbHRheBgCIAEoBRIOCgZkZWx0YXkYAyABKAUSEQoJbW9kaWZpZXJz",
            "GAQgASgNIlAKDUNNc2dNb3VzZU1vdmUSFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SCQoBeBgCIAEoBRIJCgF5GAMgASgFEhEKCW1vZGlmaWVycxgEIAEoDSIo",
            "Cg5DTXNnTW91c2VMZWF2ZRIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSLdAwoR",
            "Q01zZ0Jyb3dzZXJDcmVhdGUSEgoKcmVxdWVzdF9pZBgBIAEoDRIRCgl1c2Vy",
            "YWdlbnQYAyABKAkSEAoIdXNlcl9jc3MYBSABKAkSGAoQbmF0aXZlX2Ryb3Bk",
            "b3ducxgGIAEoCBITCgtkcGlfc2NhbGluZxgHIAEoAhIXCglvZmZzY3JlZW4Y",
            "CCABKAg6BHRydWUSGAoNaW5pdGlhbF93aWR0aBgJIAEoDToBMBIZCg5pbml0",
            "aWFsX2hlaWdodBgKIAEoDToBMBITCgt3aW5kb3dfaWNvbhgLIAEoCRIZCgpi",
            "b3JkZXJsZXNzGAwgASgIOgVmYWxzZRIVCg12cm92ZXJsYXlfa2V5GA0gASgJ",
            "EhcKDGJyb3dzZXJfdHlwZRgOIAEoDToBMBIgCgtpbml0aWFsX3RvcBgPIAEo",
            "BToLLTIxNDc0ODM2NDgSIQoMaW5pdGlhbF9sZWZ0GBAgASgFOgstMjE0NzQ4",
            "MzY0OBIoChlvbmx5X2FsbG93X3RydXN0ZWRfcG9wdXBzGBEgASgIOgVmYWxz",
            "ZRITCgtpbml0aWFsX3VybBgSIAEoCRITCgtod25kX3BhcmVudBgTIAEoBhIZ",
            "Cg5jcmVhdGlvbl9mbGFncxgUIAEoDToBMCJHChlDTXNnQnJvd3NlckNyZWF0",
            "ZVJlc3BvbnNlEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEhIKCnJlcXVlc3Rf",
            "aWQYAiABKA0iKwoRQ01zZ0Jyb3dzZXJSZW1vdmUSFgoOYnJvd3Nlcl9oYW5k",
            "bGUYASABKA0imAIKHkNNc2dTZXRMb2NhbEZpbGVSZXF1ZXN0TWFwcGluZxIW",
            "Cg5icm93c2VyX2hhbmRsZRgBIAEoDRITCgtyZXF1ZXN0X3VybBgCIAEoCRIa",
            "ChJkZWZhdWx0X2xvY2FsX3BhdGgYAyABKAkSPwoGcm91dGVzGAQgAygLMi8u",
            "Q01zZ1NldExvY2FsRmlsZVJlcXVlc3RNYXBwaW5nLkFkZGl0aW9uYWxSb3V0",
            "ZRpsCg9BZGRpdGlvbmFsUm91dGUSFAoMcmVsYXRpdmVfdXJsGAEgASgJEhIK",
            "CmxvY2FsX3BhdGgYAiABKAkSGgoSYWxsb3dlZF9leHRlbnNpb25zGAMgASgJ",
            "EhMKC3VybF9yZXdyaXRlGAQgASgIIrkBChdDTXNnQnJvd3NlckVycm9yU3Ry",
            "aW5ncxIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRINCgV0aXRsZRgCIAEoCRIO",
            "CgZoZWFkZXIYAyABKAkSEgoKY2FjaGVfbWlzcxgEIAEoCRIPCgdiYWRfdXJs",
            "GAUgASgJEhoKEmNvbm5lY3Rpb25fcHJvYmxlbRgGIAEoCRIVCg1wcm94eV9w",
            "cm9ibGVtGAcgASgJEg8KB3Vua25vd24YCCABKAkiOgoSQ01zZ0Jyb3dzZXJT",
            "ZXROYW1lEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgwKBG5hbWUYAiABKAki",
            "SAoPQ01zZ0Jyb3dzZXJTaXplEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEg0K",
            "BXdpZHRoGAIgASgBEg4KBmhlaWdodBgDIAEoASJOChVDTXNnQnJvd3NlclNl",
            "dE1pblNpemUSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDQoFd2lkdGgYAiAB",
            "KAESDgoGaGVpZ2h0GAMgASgBImUKE0NNc2dCcm93c2VyUG9zaXRpb24SFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0SCQoBeBgCIAEoARIJCgF5GAMgASgBEg8K",
            "B3hfbG9jYWwYBCABKAESDwoHeV9sb2NhbBgFIAEoASKlAQoSQ01zZ0Jyb3dz",
            "ZXJSZXNpemVkEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgkKAXgYAiABKAES",
            "CQoBeRgDIAEoARINCgV3aWR0aBgEIAEoARIOCgZoZWlnaHQYBSABKAESFgoO",
            "ZHBpX2hvcml6b250YWwYBiABKAESFAoMZHBpX3ZlcnRpY2FsGAcgASgBEhQK",
            "DGRpc3BsYXlfbmFtZRgIIAEoCSJrCgtDTXNnUG9zdFVSTBIWCg5icm93c2Vy",
            "X2hhbmRsZRgBIAEoDRILCgN1cmwYAiABKAkSDAoEcG9zdBgDIAEoCRISCgpw",
            "YWdlc2VyaWFsGAQgASgNEhUKDXJlcGxhY2VfZW50cnkYBSABKAgiQwoNQ01z",
            "Z0FkZEhlYWRlchIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRILCgNrZXkYAiAB",
            "KAkSDQoFdmFsdWUYAyABKAkiJgoMQ01zZ1N0b3BMb2FkEhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNIiQKCkNNc2dSZWxvYWQSFgoOYnJvd3Nlcl9oYW5kbGUY",
            "ASABKA0iJwoNQ01zZ0dvRm9yd2FyZBIWCg5icm93c2VyX2hhbmRsZRgBIAEo",
            "DSIkCgpDTXNnR29CYWNrEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIjcKDUNN",
            "c2dXYXNIaWRkZW4SFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDgoGaGlkZGVu",
            "GAIgASgIIkIKF0NNc2dTZXRXaW5kb3dWaXNpYmlsaXR5EhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNEg8KB3Zpc2libGUYAiABKAgiKgoQQ01zZ0NsZWFySGlz",
            "dG9yeRIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSIyChhDTXNnQ2xlYXJBbGxC",
            "cm93c2luZ0RhdGESFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0iIgoIQ01zZ0Nv",
            "cHkSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0iIwoJQ01zZ1Bhc3RlEhYKDmJy",
            "b3dzZXJfaGFuZGxlGAEgASgNIj8KFUNNc2dFeGVjdXRlSmF2YVNjcmlwdBIW",
            "Cg5icm93c2VyX2hhbmRsZRgBIAEoDRIOCgZzY3JpcHQYAiABKAkiNQoMQ01z",
            "Z1NldEZvY3VzEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEg0KBWZvY3VzGAIg",
            "ASgIIjUKG0NNc2dIb3Jpem9udGFsU2Nyb2xsQmFyU2l6ZRIWCg5icm93c2Vy",
            "X2hhbmRsZRgBIAEoDSKTAQojQ01zZ0hvcml6b250YWxTY3JvbGxCYXJTaXpl",
            "UmVzcG9uc2USFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SEgoKc2Nyb2xsX21h",
            "eBgGIAEoDRIOCgZzY3JvbGwYByABKA0SDAoEem9vbRgIIAEoAhIPCgd2aXNp",
            "YmxlGAkgASgIEhEKCXBhZ2Vfc2l6ZRgKIAEoDSIzChlDTXNnVmVydGljYWxT",
            "Y3JvbGxCYXJTaXplEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIpEBCiFDTXNn",
            "VmVydGljYWxTY3JvbGxCYXJTaXplUmVzcG9uc2USFgoOYnJvd3Nlcl9oYW5k",
            "bGUYASABKA0SEgoKc2Nyb2xsX21heBgGIAEoDRIOCgZzY3JvbGwYByABKA0S",
            "DAoEem9vbRgIIAEoAhIPCgd2aXNpYmxlGAkgASgIEhEKCXBhZ2Vfc2l6ZRgK",
            "IAEoDSJYCghDTXNnRmluZBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIMCgRm",
            "aW5kGAIgASgJEg4KBmluZmluZBgDIAEoCBIWCgdyZXZlcnNlGAQgASgIOgVm",
            "YWxzZSImCgxDTXNnU3RvcEZpbmQSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0i",
            "QQoXQ01zZ1NldEhvcml6b250YWxTY3JvbGwSFgoOYnJvd3Nlcl9oYW5kbGUY",
            "ASABKA0SDgoGc2Nyb2xsGAIgASgNIj8KFUNNc2dTZXRWZXJ0aWNhbFNjcm9s",
            "bBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIOCgZzY3JvbGwYAiABKA0iOAoQ",
            "Q01zZ1NldFpvb21MZXZlbBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIMCgR6",
            "b29tGAIgASgBIigKDkNNc2dWaWV3U291cmNlEhYKDmJyb3dzZXJfaGFuZGxl",
            "GAEgASgNIlgKEENNc2dCcm93c2VyUmVhZHkSFgoOYnJvd3Nlcl9oYW5kbGUY",
            "ASABKA0SFgoOdnJfb3ZlcmxheV9rZXkYAiABKAkSFAoMaHduZF9icm93c2Vy",
            "GAMgASgGIocBCg5DTXNnVVJMQ2hhbmdlZBIWCg5icm93c2VyX2hhbmRsZRgB",
            "IAEoDRILCgN1cmwYAiABKAkSEAoIcG9zdERhdGEYAyABKAkSEwoLYklzUmVk",
            "aXJlY3QYBCABKAgSEQoJcGFnZXRpdGxlGAUgASgJEhYKDmJOZXdOYXZpZ2F0",
            "aW9uGAYgASgIIhwKDUNIaXN0b3J5RW50cnkSCwoDdXJsGAEgASgJIlwKEkNN",
            "c2dIaXN0b3J5Q2hhbmdlZBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRINCgVp",
            "bmRleBgCIAEoDRIfCgdlbnRyaWVzGAMgAygLMg4uQ0hpc3RvcnlFbnRyeSJj",
            "Cg1DTXNnTG9hZEVycm9yEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEhIKCmVy",
            "cm9yX2NvZGUYAiABKAUSCwoDdXJsGAMgASgJEhkKEWVycm9yX2Rlc2NyaXB0",
            "aW9uGAQgASgJIikKC0NIVE1MSGVhZGVyEgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCSK8AQoVQ0hUTUxQYWdlU2VjdXJpdHlJbmZvEhgKCWJJc1NlY3Vy",
            "ZRgBIAEoCDoFZmFsc2USHAoNYkhhc0NlcnRFcnJvchgCIAEoCDoFZmFsc2US",
            "EgoKaXNzdWVyTmFtZRgDIAEoCRIQCghjZXJ0TmFtZRgEIAEoCRIVCgpjZXJ0",
            "RXhwaXJ5GAUgASgFOgEwEhQKCW5DZXJ0Qml0cxgGIAEoBToBMBIYCgliSXNF",
            "VkNlcnQYByABKAg6BWZhbHNlIk0KE0NNc2dGaW5pc2hlZFJlcXVlc3QSFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0SCwoDdXJsGAIgASgJEhEKCXBhZ2VUaXRs",
            "ZRgDIAEoCSJqChFDTXNnTG9hZGVkUmVxdWVzdBIWCg5icm93c2VyX2hhbmRs",
            "ZRgBIAEoDRILCgN1cmwYAiABKAkSEQoJcGFnZVRpdGxlGAMgASgJEh0KB2hl",
            "YWRlcnMYBSADKAsyDC5DSFRNTEhlYWRlciI9ChVDTXNnRmF2SWNvblVSTENo",
            "YW5nZWQSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDAoEdXJscxgCIAMoCSJm",
            "ChBDTXNnUGFnZVNlY3VyaXR5EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgsK",
            "A3VybBgCIAEoCRItCg1zZWN1cml0eV9pbmZvGAMgASgLMhYuQ0hUTUxQYWdl",
            "U2VjdXJpdHlJbmZvIm4KEENNc2dTdGFydFJlcXVlc3QSFgoOYnJvd3Nlcl9o",
            "YW5kbGUYASABKA0SCwoDdXJsGAIgASgJEg4KBnRhcmdldBgDIAEoCRIQCghw",
            "b3N0RGF0YRgEIAEoCRITCgtiSXNSZWRpcmVjdBgFIAEoCCJCChhDTXNnU3Rh",
            "cnRSZXF1ZXN0UmVzcG9uc2USFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDgoG",
            "YkFsbG93GAIgASgIIicKDUNNc2dTaG93UG9wdXASFgoOYnJvd3Nlcl9oYW5k",
            "bGUYASABKA0iJwoNQ01zZ0hpZGVQb3B1cBIWCg5icm93c2VyX2hhbmRsZRgB",
            "IAEoDSJZCg1DTXNnU2l6ZVBvcHVwEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgN",
            "EgkKAXgYAiABKAUSCQoBeRgDIAEoBRIMCgR3aWRlGAQgASgNEgwKBHRhbGwY",
            "BSABKA0iSgoOQ01zZ09wZW5OZXdUYWISFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SCwoDdXJsGAIgASgJEhMKC2JGb3JlZ3JvdW5kGAMgASgIIuwBChNDTXNn",
            "UG9wdXBIVE1MV2luZG93EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgsKA3Vy",
            "bBgCIAEoCRIWCgF4GAMgASgFOgstMjE0NzQ4MzY0OBIWCgF5GAQgASgFOgst",
            "MjE0NzQ4MzY0OBIMCgR3aWRlGAUgASgNEgwKBHRhbGwYBiABKA0SEwoLcG9w",
            "dXBfaW5kZXgYByABKA0SFwoPdHJ1c3RlZF9jcmVhdG9yGAggASgIEgwKBG5h",
            "bWUYCSABKAkSDAoEaHduZBgKIAEoBBIaChJwYXJlbnRfcG9wdXBfaW5kZXgY",
            "CyABKA0iRQobQ01zZ1BvcHVwSFRNTFdpbmRvd1Jlc3BvbnNlEhYKDmJyb3dz",
            "ZXJfaGFuZGxlGAEgASgNEg4KBmJBbGxvdxgCIAEoCCI5ChBDTXNnU2V0SFRN",
            "TFRpdGxlEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEg0KBXRpdGxlGAIgASgJ",
            "IjoKE0NNc2dMb2FkaW5nUmVzb3VyY2USFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SCwoDdXJsGAIgASgJIjYKDkNNc2dTdGF0dXNUZXh0EhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNEgwKBHRleHQYAiABKAkijAEKDUNNc2dTZXRDdXJzb3IS",
            "FgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDgoGY3Vyc29yGAIgASgNEhMKC2N1",
            "c3RvbV9kYXRhGAMgASgMEgwKBHdpZGUYBCABKA0SDAoEdGFsbBgFIAEoDRIQ",
            "Cgh4aG90c3BvdBgGIAEoDRIQCgh5aG90c3BvdBgHIAEoDSKbAgoSQ01zZ0Zp",
            "bGVMb2FkRGlhbG9nEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEh0KFW93bmlu",
            "Z19icm93c2VyX2hhbmRsZRgCIAEoDRINCgV0aXRsZRgDIAEoCRITCgtpbml0",
            "aWFsRmlsZRgEIAEoCRIUCgxhY2NlcHRfdHlwZXMYBSADKAkSDwoHaXNfc2F2",
            "ZRgGIAEoCBIYChBjaG9vc2VfZGlyZWN0b3J5GAcgASgIEisKB2ZpbHRlcnMY",
            "CCADKAsyGi5DTXNnRmlsZUxvYWREaWFsb2cuRmlsdGVyGjwKBkZpbHRlchIM",
            "CgRuYW1lGAEgASgJEhAKCHBhdHRlcm5zGAIgAygJEhIKCmlzX2RlZmF1bHQY",
            "AyABKAgidAoaQ01zZ0ZpbGVMb2FkRGlhbG9nUmVzcG9uc2USFgoOYnJvd3Nl",
            "cl9oYW5kbGUYASABKA0SHQoVb3duaW5nX2Jyb3dzZXJfaGFuZGxlGAIgASgN",
            "EhAKCGJzdWNjZXNzGAMgASgIEg0KBWZpbGVzGAQgAygJIjcKD0NNc2dTaG93",
            "VG9vbFRpcBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIMCgR0ZXh0GAIgASgJ",
            "IjkKEUNNc2dVcGRhdGVUb29sVGlwEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgN",
            "EgwKBHRleHQYAiABKAkiKQoPQ01zZ0hpZGVUb29sVGlwEhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNIlEKEUNNc2dTZWFyY2hSZXN1bHRzEhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNEhMKC2FjdGl2ZU1hdGNoGAIgASgFEg8KB3Jlc3VsdHMY",
            "AyABKAUiIwoJQ01zZ0Nsb3NlEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIooB",
            "ChlDTXNnU2V0U2hhcmVkUGFpbnRCdWZmZXJzEhYKDmJyb3dzZXJfaGFuZGxl",
            "GAEgASgNEgwKBHdpZGUYAiABKA0SDAoEdGFsbBgDIAEoDRISCgpzb3VyY2Vf",
            "cGlkGAQgASgEEhUKDXNvdXJjZV9oYW5kbGUYBSABKAQSDgoGaGFuZGxlGAYg",
            "ASgEIjMKGUNNc2dBY2tTaGFyZWRQYWludEJ1ZmZlcnMSFgoOYnJvd3Nlcl9o",
            "YW5kbGUYASABKA0iuwEKDkNNc2dOZWVkc1BhaW50EhYKDmJyb3dzZXJfaGFu",
            "ZGxlGAEgASgNEg8KB3Njcm9sbHgYCiABKA0SDwoHc2Nyb2xseRgLIAEoDRIR",
            "CglwYWdlc2NhbGUYDCABKAISEgoKcGFnZXNlcmlhbBgPIAEoDRIUCgxhdmdf",
            "ZnJhbWVfbXMYFCABKA0SGwoTc3RkZGV2X3N1bV9mcmFtZV9tcxgVIAEoAhIV",
            "Cg1sb25nX2ZyYW1lX21zGBYgASgNIq8BChNDTXNnQ29tYm9OZWVkc1BhaW50",
            "EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgwKBHJnYmEYAiABKAQSGAoNY29t",
            "Ym9ib3hfd2lkZRgDIAEoDToBMBIYCg1jb21ib2JveF90YWxsGAQgASgNOgEw",
            "Eh8KFHNoYXJlZF9tZW1vcnlfaGFuZGxlGAUgASgEOgEwEh0KEnNoYXJlZF9t",
            "ZW1vcnlfc2l6ZRgHIAEoBDoBMCKzAQobQ01zZ05lZWRzU2hhcmVkVGV4dHVy",
            "ZVBhaW50EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEhQKDHNoYXJlX2hhbmRs",
            "ZRgCIAEoDRINCgV3aWR0aBgDIAEoDRIOCgZoZWlnaHQYBCABKA0SDwoHc2Ny",
            "b2xseBgFIAEoDRIPCgdzY3JvbGx5GAYgASgNEhEKCXBhZ2VzY2FsZRgHIAEo",
            "AhISCgpwYWdlc2VyaWFsGAggASgNIp0BChtDTXNnR2FtZU92ZXJsYXlUZXh0",
            "dXJlUGFpbnQSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDQoFd2lkdGgYAyAB",
            "KA0SDgoGaGVpZ2h0GAQgASgNEg8KB3Njcm9sbHgYBSABKA0SDwoHc2Nyb2xs",
            "eRgGIAEoDRIRCglwYWdlc2NhbGUYByABKAISEgoKcGFnZXNlcmlhbBgIIAEo",
            "DSIlCgtDTXNnR2V0Wm9vbRIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSI7ChND",
            "TXNnR2V0Wm9vbVJlc3BvbnNlEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgwK",
            "BHpvb20YAiABKAIiQgoSQ01zZ0xpbmtBdFBvc2l0aW9uEhYKDmJyb3dzZXJf",
            "aGFuZGxlGAEgASgNEgkKAXgYAiABKA0SCQoBeRgDIAEoDSJ6ChpDTXNnTGlu",
            "a0F0UG9zaXRpb25SZXNwb25zZRIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIJ",
            "CgF4GAIgASgNEgkKAXkYAyABKA0SCwoDdXJsGAQgASgJEhEKCWJsaXZlbGlu",
            "axgFIAEoCBIOCgZiaW5wdXQYBiABKAgiSwobQ01zZ1pvb21Ub0VsZW1lbnRB",
            "dFBvc2l0aW9uEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgkKAXgYAiABKA0S",
            "CQoBeRgDIAEoDSJeCiNDTXNnWm9vbVRvRWxlbWVudEF0UG9zaXRpb25SZXNw",
            "b25zZRIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRINCgVzY2FsZRgCIAEoAhIQ",
            "CghkdXJhdGlvbhgDIAEoAiJTChRDTXNnU2NhbGVQYWdlVG9WYWx1ZRIWCg5i",
            "cm93c2VyX2hhbmRsZRgBIAEoDRINCgVzY2FsZRgCIAEoAhIJCgF4GAMgASgC",
            "EgkKAXkYBCABKAIiVwobQ01zZ0ZvcmNlUG9wdXBzVG9EaXJlY3RIV05EEhYK",
            "DmJyb3dzZXJfaGFuZGxlGAEgASgNEiAKGGZvcmNlX2RpcmVjdF9od25kX3Bv",
            "cHVwcxgCIAEoCCJEChxDTXNnU2NhbGVQYWdlVG9WYWx1ZVJlc3BvbnNlEhYK",
            "DmJyb3dzZXJfaGFuZGxlGAEgASgNEgwKBHpvb20YAiABKAIiagoSQ01zZ1Nh",
            "dmVQYWdlVG9KUEVHEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgsKA3VybBgC",
            "IAEoCRIQCghmaWxlbmFtZRgDIAEoCRINCgV3aWR0aBgEIAEoDRIOCgZoZWln",
            "aHQYBSABKA0iUwoaQ01zZ1NhdmVQYWdlVG9KUEVHUmVzcG9uc2USFgoOYnJv",
            "d3Nlcl9oYW5kbGUYASABKA0SCwoDdXJsGAIgASgJEhAKCGZpbGVuYW1lGAMg",
            "ASgJIjYKC0NNc2dKU0FsZXJ0EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEg8K",
            "B21lc3NhZ2UYAiABKAkiOAoNQ01zZ0pTQ29uZmlybRIWCg5icm93c2VyX2hh",
            "bmRsZRgBIAEoDRIPCgdtZXNzYWdlGAIgASgJIj4KFENNc2dKU0RpYWxvZ1Jl",
            "c3BvbnNlEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEg4KBnJlc3VsdBgCIAEo",
            "CCJWChdDTXNnQ2FuR29CYWNrQW5kRm9yd2FyZBIWCg5icm93c2VyX2hhbmRs",
            "ZRgBIAEoDRIPCgdiZ29iYWNrGAIgASgIEhIKCmJnb2ZvcndhcmQYAyABKAgi",
            "SQoQQ01zZ09wZW5TdGVhbVVSTBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIL",
            "CgN1cmwYAiABKAkSEAoIcmVmZXJyZXIYAyABKAkijAEKDUNNc2dTZXRDb29r",
            "aWUSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJEgwKBHBhdGgYAyABKAkS",
            "DAoEaG9zdBgEIAEoCRIPCgdleHBpcmVzGAUgASgNEg4KBnNlY3VyZRgGIAEo",
            "CBIQCghodHRwb25seRgHIAEoCBIQCghzYW1lc2l0ZRgIIAEoBSJKChZDTXNn",
            "U2V0VGFyZ2V0RnJhbWVSYXRlEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEhgK",
            "EG5UYXJnZXRGcmFtZVJhdGUYAiABKA0iKgoQQ01zZ1BhdXNlUmVwYWludBIW",
            "Cg5icm93c2VyX2hhbmRsZRgBIAEoDSIpCg9DTXNnRnVsbFJlcGFpbnQSFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0iLwoVQ01zZ1JlcXVlc3RGdWxsU2NyZWVu",
            "EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIiwKEkNNc2dFeGl0RnVsbFNjcmVl",
            "bhIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSI0ChpDTXNnVG9nZ2xlRmluZElu",
            "UGFnZURpYWxvZxIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSIwChZDTXNnU2V0",
            "UElEU2h1dHRpbmdEb3duEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIjkKH0NN",
            "c2dEaXNhYmxlQmFja2dyb3VuZFRocm90dGxpbmcSFgoOYnJvd3Nlcl9oYW5k",
            "bGUYASABKA0iMAoWQ01zZ0Fja1BJRFNodXR0aW5nRG93bhIWCg5icm93c2Vy",
            "X2hhbmRsZRgBIAEoDSI7ChRDTXNnR2V0Q29va2llc0ZvclVSTBIWCg5icm93",
            "c2VyX2hhbmRsZRgBIAEoDRILCgN1cmwYAiABKAkiRAoHQ0Nvb2tpZRIMCgRu",
            "YW1lGAEgASgJEg0KBXZhbHVlGAIgASgJEg4KBmRvbWFpbhgDIAEoCRIMCgRw",
            "YXRoGAQgASgJIl4KHENNc2dHZXRDb29raWVzRm9yVVJMUmVzcG9uc2USFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0SCwoDdXJsGAIgASgJEhkKB2Nvb2tpZXMY",
            "AyADKAsyCC5DQ29va2llIsABChBDTXNnTm9kZUhhc0ZvY3VzEhYKDmJyb3dz",
            "ZXJfaGFuZGxlGAEgASgNEg4KBmJJbnB1dBgCIAEoCBIMCgRuYW1lGAMgASgJ",
            "EhYKDmVsZW1lbnR0YWduYW1lGAQgASgJEhgKEHNlYXJjaGJ1dHRvbnRleHQY",
            "BSABKAkSGgoSYkhhc011bHRpcGxlSW5wdXRzGAYgASgIEhIKCmlucHV0X3R5",
            "cGUYByABKAkSFAoMYklzTWFpbkZyYW1lGAggASgIIjIKGENNc2dab29tVG9G",
            "b2N1c2VkRWxlbWVudBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSItChNDTXNn",
            "Rm9jdXNlZE5vZGVUZXh0EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIkQKG0NN",
            "c2dGb2N1c2VkTm9kZVRleHRSZXNwb25zZRIWCg5icm93c2VyX2hhbmRsZRgB",
            "IAEoDRINCgV2YWx1ZRgCIAEoCSIfCgtDTXNnQnVpbGRJRBIQCghidWlsZF9p",
            "ZBgBIAEoBCIqChBDTXNnT3BlbkRldlRvb2xzEhYKDmJyb3dzZXJfaGFuZGxl",
            "GAEgASgNIisKEUNNc2dDbG9zZURldlRvb2xzEhYKDmJyb3dzZXJfaGFuZGxl",
            "GAEgASgNIjsKDkNNc2dVbmxvY2tIMjY0EhYKDmJyb3dzZXJfaGFuZGxlGAEg",
            "ASgNEhEKCXVubG9jY29kZRgCIAEoCSKXAgocQ01zZ1NjcmVlbkluZm9ybWF0",
            "aW9uQ2hhbmdlZBIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIWCg5vdmVycmlk",
            "ZV93aWR0aBgCIAEoDRIXCg9vdmVycmlkZV9oZWlnaHQYAyABKA0SFAoMbW9u",
            "aXRvcl9sZWZ0GAQgASgNEhMKC21vbml0b3JfdG9wGAUgASgNEhUKDW1vbml0",
            "b3JfcmlnaHQYBiABKA0SFgoObW9uaXRvcl9ib3R0b20YByABKA0SEwoLdXNh",
            "YmxlX2xlZnQYCCABKA0SEgoKdXNhYmxlX3RvcBgJIAEoDRIUCgx1c2FibGVf",
            "cmlnaHQYCiABKA0SFQoNdXNhYmxlX2JvdHRvbRgLIAEoDSItChNDTXNnQ2xl",
            "YXJBbGxDb29raWVzEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIjwKDUNNc2dT",
            "Y3JlZW5EUEkSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SEwoLZHBpX3NjYWxp",
            "bmcYAiABKAIiKgoQQ01zZ0Fja1NjcmVlbkRQSRIWCg5icm93c2VyX2hhbmRs",
            "ZRgBIAEoDSIpChZDTXNnQXV0aGVkU3RlYW1Eb21haW5zEg8KB2RvbWFpbnMY",
            "ASADKAkiJQoTQ01zZ1N0ZWFtQXV0aE5lZWRlZBIOCgZmaWxsZXIYASABKAgi",
            "KgoXQ01zZ1N0ZWFtQXV0aENvb2tpZXNTZXQSDwoHc3VjY2VzcxgBIAEoCCKI",
            "AQoUQ01zZ0pTUmVnaXN0ZXJNZXRob2QSFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SDAoEbmFtZRgCIAEoCRJKCgttZXRob2RfdHlwZRgDIAEoDjIWLkVKU1Jl",
            "Z2lzdGVyTWV0aG9kVHlwZTodRUpTUmVnaXN0ZXJNZXRob2RUeXBlX0ludmFs",
            "aWQi5AIKC0NNc2dKU1ZhbHVlEhIKCmJvb2xfdmFsdWUYASABKAgSEQoJaW50",
            "X3ZhbHVlGAIgASgFEhIKCnVpbnRfdmFsdWUYAyABKA0SFAoMZG91YmxlX3Zh",
            "bHVlGAQgASgBEhQKDHN0cmluZ192YWx1ZRgFIAEoCRIXCg9mdW5jdGlvbl9o",
            "YW5kbGUYBiABKAQSEwoLYnl0ZXNfdmFsdWUYDCABKAwSEAoIaXNfYXJyYXkY",
            "CCABKAgSIgoMYXJyYXlfdmFsdWVzGAkgAygLMgwuQ01zZ0pTVmFsdWUSEQoJ",
            "aXNfb2JqZWN0GAogASgIEjgKEW9iamVjdF9wcm9wZXJ0aWVzGAsgAygLMh0u",
            "Q01zZ0pTVmFsdWUuSlNPYmplY3RQcm9wZXJ0eRo9ChBKU09iamVjdFByb3Bl",
            "cnR5EgwKBG5hbWUYASABKAkSGwoFdmFsdWUYAiABKAsyDC5DTXNnSlNWYWx1",
            "ZSJ4ChBDTXNnSlNNZXRob2RDYWxsEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgN",
            "Eh0KFW93bmluZ19icm93c2VyX2hhbmRsZRgCIAEoDRIMCgRuYW1lGAMgASgJ",
            "Eh8KCWFyZ3VtZW50cxgEIAMoCzIMLkNNc2dKU1ZhbHVlIogBChVDTXNnSlNF",
            "eGVjdXRlQ2FsbGJhY2sSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SHQoVb3du",
            "aW5nX2Jyb3dzZXJfaGFuZGxlGAIgASgNEhcKD2Z1bmN0aW9uX2hhbmRsZRgD",
            "IAEoBBIfCglhcmd1bWVudHMYBCADKAsyDC5DTXNnSlNWYWx1ZSKcAQoUQ01z",
            "Z0pTRXhlY3V0ZVByb21pc2USFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SHQoV",
            "b3duaW5nX2Jyb3dzZXJfaGFuZGxlGAIgASgNEhYKDnByb21pc2VfaGFuZGxl",
            "GAMgASgEEhUKDXJlamVjdF9yZWFzb24YBCABKAkSHgoIYXJndW1lbnQYBSAB",
            "KAsyDC5DTXNnSlNWYWx1ZSJnChVDTXNnSlNSZWxlYXNlQ2FsbGJhY2sSFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0SHQoVb3duaW5nX2Jyb3dzZXJfaGFuZGxl",
            "GAIgASgNEhcKD2Z1bmN0aW9uX2hhbmRsZRgDIAEoBCJgChRDTXNnSlNSYWlz",
            "ZUV4Y2VwdGlvbhIWCg5icm93c2VyX2hhbmRsZRgBIAEoDRIdChVvd25pbmdf",
            "YnJvd3Nlcl9oYW5kbGUYAiABKA0SEQoJZXhjZXB0aW9uGAMgASgJIlsKFENN",
            "c2dMb2FkTG9jYWxpemF0aW9uEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEhkK",
            "EWxvY2FsaXphdGlvbl9wYXRoGAIgASgJEhAKCGxhbmd1YWdlGAMgASgJIjIK",
            "GENNc2dOb3RpZnlVc2VyQWN0aXZhdGlvbhIWCg5icm93c2VyX2hhbmRsZRgB",
            "IAEoDSIvCh5DTXNnU2V0TmV0RmFrZUxvY2FsU3lzdGVtU3RhdGUSDQoFc3Rh",
            "dGUYASABKA0iSgocQ01zZ1NldEdhbWVPdmVybGF5VGFyZ2V0UElEcxIWCg5i",
            "cm93c2VyX2hhbmRsZRgBIAEoDRISCgp0YXJnZXRfcGlkGAIgAygNImQKHkNN",
            "c2dHYW1lT3ZlcmxheVRhcmdldFRleHR1cmVJRBIWCg5icm93c2VyX2hhbmRs",
            "ZRgBIAEoDRISCgp0YXJnZXRfcGlkGAIgASgNEhYKDnRleHR1cmVfaGFuZGxl",
            "GAMgASgNIssBChtDTXNnRHJhZ2dhYmxlUmVnaW9uc0NoYW5nZWQSFgoOYnJv",
            "d3Nlcl9oYW5kbGUYASABKA0SOgoFcmVjdHMYAiADKAsyKy5DTXNnRHJhZ2dh",
            "YmxlUmVnaW9uc0NoYW5nZWQuRHJhZ2dhYmxlUmVjdHMaWAoORHJhZ2dhYmxl",
            "UmVjdHMSCQoBeBgBIAEoBRIJCgF5GAIgASgFEg0KBXdpZHRoGAMgASgFEg4K",
            "BmhlaWdodBgEIAEoBRIRCglkcmFnZ2FibGUYBSABKAgiTgoVQ01zZ1Jlc2l6",
            "ZUdyaXBDaGFuZ2VkEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEg0KBXdpZHRo",
            "GAIgASgFEg4KBmhlaWdodBgDIAEoBSKyAQoVQ01zZ1NldFdpbmRvd1Bvc2l0",
            "aW9uEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgkKAXgYAiABKAESCQoBeRgD",
            "IAEoARINCgV3aWR0aBgEIAEoARIOCgZoZWlnaHQYBSABKAESEQoJbWluX3dp",
            "ZHRoGAYgASgBEhIKCm1pbl9oZWlnaHQYByABKAESEQoJbWF4X3dpZHRoGAgg",
            "ASgBEhIKCm1heF9oZWlnaHQYCSABKAEiKAoOQ01zZ1Nob3dXaW5kb3cSFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0iKAoOQ01zZ0hpZGVXaW5kb3cSFgoOYnJv",
            "d3Nlcl9oYW5kbGUYASABKA0iMAoWQ01zZ0JyaW5nV2luZG93VG9Gcm9udBIW",
            "Cg5icm93c2VyX2hhbmRsZRgBIAEoDSIxChdDTXNnU2V0Rm9yZWdyb3VuZFdp",
            "bmRvdxIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSIzChlDTXNnTWF4aW1pemVS",
            "ZXN0b3JlV2luZG93EhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIiwKEkNNc2dN",
            "aW5pbWl6ZVdpbmRvdxIWCg5icm93c2VyX2hhbmRsZRgBIAEoDSLkAgoaQ01z",
            "Z1Nob3dCcm93c2VyQ29udGV4dE1lbnUSFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SQwoPY3VzdG9tX2NvbW1hbmRzGAIgAygLMiouQ01zZ1Nob3dCcm93c2Vy",
            "Q29udGV4dE1lbnUuQ29udGV4dENvbW1hbmQSEgoKdHlwZV9mbGFncxgDIAEo",
            "DRIQCghwYWdlX3VybBgEIAEoCRIPCgdjb29yZF94GAUgASgFEg8KB2Nvb3Jk",
            "X3kYBiABKAUSDgoGbGludXJsGAcgASgJEhkKEXVuZmlsdGVyZWRfbGludXJs",
            "GAggASgJEhYKDnNlbGVjdGlvbl90ZXh0GAkgASgJEhcKD21pc3NwZWxsZWRf",
            "d29yZBgKIAEoCRIYChBlZGl0X3N0YXRlX2ZsYWdzGAsgASgNGisKDkNvbnRl",
            "eHRDb21tYW5kEgoKAmlkGAEgASgFEg0KBWxhYmVsGAIgASgJIkoKHENNc2dI",
            "YW5kbGVDb250ZXh0TWVudUNvbW1hbmQSFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SEgoKY29tbWFuZF9pZBgCIAEoBSKkAQoQQ01zZ1RvdWNoR2VzdHVyZRIW",
            "Cg5icm93c2VyX2hhbmRsZRgBIAEoDRIKCgJpZBgCIAEoBRIPCgdnZXN0dXJl",
            "GAMgASgNEgkKAXgYBCABKAESCQoBeRgFIAEoARINCgV3aWR0aBgGIAEoARIO",
            "CgZoZWlnaHQYByABKAESEQoJdGFwX2NvdW50GAggASgNEhMKC3BpbmNoX3Nj",
            "YWxlGAkgASgBIkgKHENNc2dTZXRUb3VjaEdlc3R1cmVzVG9DYW5jZWwSFgoO",
            "YnJvd3Nlcl9oYW5kbGUYASABKA0SEAoIZ2VzdHVyZXMYAiADKA0iPQoVQ01z",
            "Z0ltZVNldENvbXBvc2l0aW9uEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNEgwK",
            "BHRleHQYAiABKAkiOQoRQ01zZ0ltZUNvbW1pdFRleHQSFgoOYnJvd3Nlcl9o",
            "YW5kbGUYASABKA0SDAoEdGV4dBgCIAEoCSIyChhDTXNnSW1lQ2FuY2VsQ29t",
            "cG9zaXRpb24SFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0iTgoeQ01zZ0ltZUNv",
            "bXBvc2l0aW9uUmFuZ2VDaGFuZ2VkEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgN",
            "EgkKAXgYAiABKA0SCQoBeRgDIAEoDSJCChJDTXNnSW5zcGVjdEVsZW1lbnQS",
            "FgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SCQoBeBgCIAEoDRIJCgF5GAMgASgN",
            "IjgKDUNNc2dEaXNhYmxlRjUSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDwoH",
            "ZGlzYWJsZRgCIAEoCCI4ChFDTXNnU3RhcnREb3dubG9hZBIWCg5icm93c2Vy",
            "X2hhbmRsZRgBIAEoDRILCgN1cmwYAiABKAkiTAoaQ01zZ1NldFdpbmRvd1N0",
            "YWNraW5nT3JkZXISFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SFgoOZXN0YWNr",
            "aW5nb3JkZXIYAiABKA0iegopQ01zZ0Jyb3dzZXJWaWV3UG9zdE1lc3NhZ2VU",
            "b1BhcmVudFJlcXVlc3QSFgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDwoHbWVz",
            "c2FnZRgCIAEoCRIMCgRhcmdzGAMgASgJEhYKDnJlcXVlc3RpbmdfdXJsGAQg",
            "ASgJIjkKEkNNc2dCbG9ja2VkUmVxdWVzdBIWCg5icm93c2VyX2hhbmRsZRgB",
            "IAEoDRILCgN1cmwYAiABKAkiQgoXQ01zZ0Jyb3dzZXJGb2N1c0NoYW5nZWQS",
            "FgoOYnJvd3Nlcl9oYW5kbGUYASABKA0SDwoHZm9jdXNlZBgCIAEoCCJAChhD",
            "TXNnU2V0UHJvdG9jb2xCbG9ja0xpc3QSFgoOYnJvd3Nlcl9oYW5kbGUYASAB",
            "KA0SDAoEbGlzdBgCIAEoCSJKCh5DTXNnU2V0Rm9yY2VEZXZpY2VTY2FsZUZh",
            "Y3RvcnMSEQoJZHBpX3NjYWxlGAEgASgBEhUKDWJyb3dzZXJfc2NhbGUYAiAB",
            "KAEiIAoNQ01zZ1NldFVJTW9kZRIPCgd1aV9tb2RlGAEgASgFIi8KFENNc2dT",
            "ZXRTdGVhbUJldGFOYW1lEhcKD3N0ZWFtX2JldGFfbmFtZRgBIAEoCSIqChBD",
            "TXNnUG9wdXBDcmVhdGVkEhYKDmJyb3dzZXJfaGFuZGxlGAEgASgNIkYKG0NN",
            "c2dTZXRWUktleWJvYXJkVmlzaWJpbGl0eRIWCg5icm93c2VyX2hhbmRsZRgB",
            "IAEoDRIPCgd2aXNpYmxlGAIgASgIIhYKFENNc2dSZXN0YXJ0SlNDb250ZXh0",
            "KqUBChVFSlNSZWdpc3Rlck1ldGhvZFR5cGUSIQodRUpTUmVnaXN0ZXJNZXRo",
            "b2RUeXBlX0ludmFsaWQQABIiCh5FSlNSZWdpc3Rlck1ldGhvZFR5cGVfRnVu",
            "Y3Rpb24QARIiCh5FSlNSZWdpc3Rlck1ldGhvZFR5cGVfQ2FsbGJhY2sQAhIh",
            "Ch1FSlNSZWdpc3Rlck1ldGhvZFR5cGVfUHJvbWlzZRADQh9IAYABAKoCF09w",
            "ZW5TdGVhbXdvcmtzLlByb3RvYnVm"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenSteamworks.Protobuf.EJSRegisterMethodType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgKeyUp), global::OpenSteamworks.Protobuf.CMsgKeyUp.Parser, new[]{ "BrowserHandle", "KeyCode", "Modifiers", "NativeKeyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgKeyDown), global::OpenSteamworks.Protobuf.CMsgKeyDown.Parser, new[]{ "BrowserHandle", "KeyCode", "Modifiers", "IsSystemKey", "NativeKeyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgKeyChar), global::OpenSteamworks.Protobuf.CMsgKeyChar.Parser, new[]{ "BrowserHandle", "Unichar", "Modifiers", "KeyCode", "NativeKeyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMouseDown), global::OpenSteamworks.Protobuf.CMsgMouseDown.Parser, new[]{ "BrowserHandle", "MouseButton", "Modifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMouseUp), global::OpenSteamworks.Protobuf.CMsgMouseUp.Parser, new[]{ "BrowserHandle", "MouseButton", "Modifiers", "IsOffPanel", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMouseDblClick), global::OpenSteamworks.Protobuf.CMsgMouseDblClick.Parser, new[]{ "BrowserHandle", "MouseButton", "Modifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMouseWheel), global::OpenSteamworks.Protobuf.CMsgMouseWheel.Parser, new[]{ "BrowserHandle", "Deltax", "Deltay", "Modifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMouseMove), global::OpenSteamworks.Protobuf.CMsgMouseMove.Parser, new[]{ "BrowserHandle", "X", "Y", "Modifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMouseLeave), global::OpenSteamworks.Protobuf.CMsgMouseLeave.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserCreate), global::OpenSteamworks.Protobuf.CMsgBrowserCreate.Parser, new[]{ "RequestId", "Useragent", "UserCss", "NativeDropdowns", "DpiScaling", "Offscreen", "InitialWidth", "InitialHeight", "WindowIcon", "Borderless", "VroverlayKey", "BrowserType", "InitialTop", "InitialLeft", "OnlyAllowTrustedPopups", "InitialUrl", "HwndParent", "CreationFlags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserCreateResponse), global::OpenSteamworks.Protobuf.CMsgBrowserCreateResponse.Parser, new[]{ "BrowserHandle", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserRemove), global::OpenSteamworks.Protobuf.CMsgBrowserRemove.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping), global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Parser, new[]{ "BrowserHandle", "RequestUrl", "DefaultLocalPath", "Routes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute), global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute.Parser, new[]{ "RelativeUrl", "LocalPath", "AllowedExtensions", "UrlRewrite" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserErrorStrings), global::OpenSteamworks.Protobuf.CMsgBrowserErrorStrings.Parser, new[]{ "BrowserHandle", "Title", "Header", "CacheMiss", "BadUrl", "ConnectionProblem", "ProxyProblem", "Unknown" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserSetName), global::OpenSteamworks.Protobuf.CMsgBrowserSetName.Parser, new[]{ "BrowserHandle", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserSize), global::OpenSteamworks.Protobuf.CMsgBrowserSize.Parser, new[]{ "BrowserHandle", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserSetMinSize), global::OpenSteamworks.Protobuf.CMsgBrowserSetMinSize.Parser, new[]{ "BrowserHandle", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserPosition), global::OpenSteamworks.Protobuf.CMsgBrowserPosition.Parser, new[]{ "BrowserHandle", "X", "Y", "XLocal", "YLocal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserResized), global::OpenSteamworks.Protobuf.CMsgBrowserResized.Parser, new[]{ "BrowserHandle", "X", "Y", "Width", "Height", "DpiHorizontal", "DpiVertical", "DisplayName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPostURL), global::OpenSteamworks.Protobuf.CMsgPostURL.Parser, new[]{ "BrowserHandle", "Url", "Post", "Pageserial", "ReplaceEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgAddHeader), global::OpenSteamworks.Protobuf.CMsgAddHeader.Parser, new[]{ "BrowserHandle", "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgStopLoad), global::OpenSteamworks.Protobuf.CMsgStopLoad.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgReload), global::OpenSteamworks.Protobuf.CMsgReload.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGoForward), global::OpenSteamworks.Protobuf.CMsgGoForward.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGoBack), global::OpenSteamworks.Protobuf.CMsgGoBack.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgWasHidden), global::OpenSteamworks.Protobuf.CMsgWasHidden.Parser, new[]{ "BrowserHandle", "Hidden" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetWindowVisibility), global::OpenSteamworks.Protobuf.CMsgSetWindowVisibility.Parser, new[]{ "BrowserHandle", "Visible" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgClearHistory), global::OpenSteamworks.Protobuf.CMsgClearHistory.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgClearAllBrowsingData), global::OpenSteamworks.Protobuf.CMsgClearAllBrowsingData.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgCopy), global::OpenSteamworks.Protobuf.CMsgCopy.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPaste), global::OpenSteamworks.Protobuf.CMsgPaste.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgExecuteJavaScript), global::OpenSteamworks.Protobuf.CMsgExecuteJavaScript.Parser, new[]{ "BrowserHandle", "Script" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetFocus), global::OpenSteamworks.Protobuf.CMsgSetFocus.Parser, new[]{ "BrowserHandle", "Focus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHorizontalScrollBarSize), global::OpenSteamworks.Protobuf.CMsgHorizontalScrollBarSize.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHorizontalScrollBarSizeResponse), global::OpenSteamworks.Protobuf.CMsgHorizontalScrollBarSizeResponse.Parser, new[]{ "BrowserHandle", "ScrollMax", "Scroll", "Zoom", "Visible", "PageSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgVerticalScrollBarSize), global::OpenSteamworks.Protobuf.CMsgVerticalScrollBarSize.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgVerticalScrollBarSizeResponse), global::OpenSteamworks.Protobuf.CMsgVerticalScrollBarSizeResponse.Parser, new[]{ "BrowserHandle", "ScrollMax", "Scroll", "Zoom", "Visible", "PageSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFind), global::OpenSteamworks.Protobuf.CMsgFind.Parser, new[]{ "BrowserHandle", "Find", "Infind", "Reverse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgStopFind), global::OpenSteamworks.Protobuf.CMsgStopFind.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetHorizontalScroll), global::OpenSteamworks.Protobuf.CMsgSetHorizontalScroll.Parser, new[]{ "BrowserHandle", "Scroll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetVerticalScroll), global::OpenSteamworks.Protobuf.CMsgSetVerticalScroll.Parser, new[]{ "BrowserHandle", "Scroll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetZoomLevel), global::OpenSteamworks.Protobuf.CMsgSetZoomLevel.Parser, new[]{ "BrowserHandle", "Zoom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgViewSource), global::OpenSteamworks.Protobuf.CMsgViewSource.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserReady), global::OpenSteamworks.Protobuf.CMsgBrowserReady.Parser, new[]{ "BrowserHandle", "VrOverlayKey", "HwndBrowser" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgURLChanged), global::OpenSteamworks.Protobuf.CMsgURLChanged.Parser, new[]{ "BrowserHandle", "Url", "PostData", "BIsRedirect", "Pagetitle", "BNewNavigation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CHistoryEntry), global::OpenSteamworks.Protobuf.CHistoryEntry.Parser, new[]{ "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHistoryChanged), global::OpenSteamworks.Protobuf.CMsgHistoryChanged.Parser, new[]{ "BrowserHandle", "Index", "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgLoadError), global::OpenSteamworks.Protobuf.CMsgLoadError.Parser, new[]{ "BrowserHandle", "ErrorCode", "Url", "ErrorDescription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CHTMLHeader), global::OpenSteamworks.Protobuf.CHTMLHeader.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo), global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo.Parser, new[]{ "BIsSecure", "BHasCertError", "IssuerName", "CertName", "CertExpiry", "NCertBits", "BIsEVCert" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFinishedRequest), global::OpenSteamworks.Protobuf.CMsgFinishedRequest.Parser, new[]{ "BrowserHandle", "Url", "PageTitle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgLoadedRequest), global::OpenSteamworks.Protobuf.CMsgLoadedRequest.Parser, new[]{ "BrowserHandle", "Url", "PageTitle", "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFavIconURLChanged), global::OpenSteamworks.Protobuf.CMsgFavIconURLChanged.Parser, new[]{ "BrowserHandle", "Urls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPageSecurity), global::OpenSteamworks.Protobuf.CMsgPageSecurity.Parser, new[]{ "BrowserHandle", "Url", "SecurityInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgStartRequest), global::OpenSteamworks.Protobuf.CMsgStartRequest.Parser, new[]{ "BrowserHandle", "Url", "Target", "PostData", "BIsRedirect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgStartRequestResponse), global::OpenSteamworks.Protobuf.CMsgStartRequestResponse.Parser, new[]{ "BrowserHandle", "BAllow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgShowPopup), global::OpenSteamworks.Protobuf.CMsgShowPopup.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHidePopup), global::OpenSteamworks.Protobuf.CMsgHidePopup.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSizePopup), global::OpenSteamworks.Protobuf.CMsgSizePopup.Parser, new[]{ "BrowserHandle", "X", "Y", "Wide", "Tall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgOpenNewTab), global::OpenSteamworks.Protobuf.CMsgOpenNewTab.Parser, new[]{ "BrowserHandle", "Url", "BForeground" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPopupHTMLWindow), global::OpenSteamworks.Protobuf.CMsgPopupHTMLWindow.Parser, new[]{ "BrowserHandle", "Url", "X", "Y", "Wide", "Tall", "PopupIndex", "TrustedCreator", "Name", "Hwnd", "ParentPopupIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPopupHTMLWindowResponse), global::OpenSteamworks.Protobuf.CMsgPopupHTMLWindowResponse.Parser, new[]{ "BrowserHandle", "BAllow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetHTMLTitle), global::OpenSteamworks.Protobuf.CMsgSetHTMLTitle.Parser, new[]{ "BrowserHandle", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgLoadingResource), global::OpenSteamworks.Protobuf.CMsgLoadingResource.Parser, new[]{ "BrowserHandle", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgStatusText), global::OpenSteamworks.Protobuf.CMsgStatusText.Parser, new[]{ "BrowserHandle", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetCursor), global::OpenSteamworks.Protobuf.CMsgSetCursor.Parser, new[]{ "BrowserHandle", "Cursor", "CustomData", "Wide", "Tall", "Xhotspot", "Yhotspot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFileLoadDialog), global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "Title", "InitialFile", "AcceptTypes", "IsSave", "ChooseDirectory", "Filters" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter), global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter.Parser, new[]{ "Name", "Patterns", "IsDefault" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFileLoadDialogResponse), global::OpenSteamworks.Protobuf.CMsgFileLoadDialogResponse.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "Bsuccess", "Files" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgShowToolTip), global::OpenSteamworks.Protobuf.CMsgShowToolTip.Parser, new[]{ "BrowserHandle", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgUpdateToolTip), global::OpenSteamworks.Protobuf.CMsgUpdateToolTip.Parser, new[]{ "BrowserHandle", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHideToolTip), global::OpenSteamworks.Protobuf.CMsgHideToolTip.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSearchResults), global::OpenSteamworks.Protobuf.CMsgSearchResults.Parser, new[]{ "BrowserHandle", "ActiveMatch", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgClose), global::OpenSteamworks.Protobuf.CMsgClose.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetSharedPaintBuffers), global::OpenSteamworks.Protobuf.CMsgSetSharedPaintBuffers.Parser, new[]{ "BrowserHandle", "Wide", "Tall", "SourcePid", "SourceHandle", "Handle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgAckSharedPaintBuffers), global::OpenSteamworks.Protobuf.CMsgAckSharedPaintBuffers.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgNeedsPaint), global::OpenSteamworks.Protobuf.CMsgNeedsPaint.Parser, new[]{ "BrowserHandle", "Scrollx", "Scrolly", "Pagescale", "Pageserial", "AvgFrameMs", "StddevSumFrameMs", "LongFrameMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgComboNeedsPaint), global::OpenSteamworks.Protobuf.CMsgComboNeedsPaint.Parser, new[]{ "BrowserHandle", "Rgba", "ComboboxWide", "ComboboxTall", "SharedMemoryHandle", "SharedMemorySize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgNeedsSharedTexturePaint), global::OpenSteamworks.Protobuf.CMsgNeedsSharedTexturePaint.Parser, new[]{ "BrowserHandle", "ShareHandle", "Width", "Height", "Scrollx", "Scrolly", "Pagescale", "Pageserial" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGameOverlayTexturePaint), global::OpenSteamworks.Protobuf.CMsgGameOverlayTexturePaint.Parser, new[]{ "BrowserHandle", "Width", "Height", "Scrollx", "Scrolly", "Pagescale", "Pageserial" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGetZoom), global::OpenSteamworks.Protobuf.CMsgGetZoom.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGetZoomResponse), global::OpenSteamworks.Protobuf.CMsgGetZoomResponse.Parser, new[]{ "BrowserHandle", "Zoom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgLinkAtPosition), global::OpenSteamworks.Protobuf.CMsgLinkAtPosition.Parser, new[]{ "BrowserHandle", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgLinkAtPositionResponse), global::OpenSteamworks.Protobuf.CMsgLinkAtPositionResponse.Parser, new[]{ "BrowserHandle", "X", "Y", "Url", "Blivelink", "Binput" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgZoomToElementAtPosition), global::OpenSteamworks.Protobuf.CMsgZoomToElementAtPosition.Parser, new[]{ "BrowserHandle", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgZoomToElementAtPositionResponse), global::OpenSteamworks.Protobuf.CMsgZoomToElementAtPositionResponse.Parser, new[]{ "BrowserHandle", "Scale", "Duration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgScalePageToValue), global::OpenSteamworks.Protobuf.CMsgScalePageToValue.Parser, new[]{ "BrowserHandle", "Scale", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgForcePopupsToDirectHWND), global::OpenSteamworks.Protobuf.CMsgForcePopupsToDirectHWND.Parser, new[]{ "BrowserHandle", "ForceDirectHwndPopups" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgScalePageToValueResponse), global::OpenSteamworks.Protobuf.CMsgScalePageToValueResponse.Parser, new[]{ "BrowserHandle", "Zoom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSavePageToJPEG), global::OpenSteamworks.Protobuf.CMsgSavePageToJPEG.Parser, new[]{ "BrowserHandle", "Url", "Filename", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSavePageToJPEGResponse), global::OpenSteamworks.Protobuf.CMsgSavePageToJPEGResponse.Parser, new[]{ "BrowserHandle", "Url", "Filename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSAlert), global::OpenSteamworks.Protobuf.CMsgJSAlert.Parser, new[]{ "BrowserHandle", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSConfirm), global::OpenSteamworks.Protobuf.CMsgJSConfirm.Parser, new[]{ "BrowserHandle", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSDialogResponse), global::OpenSteamworks.Protobuf.CMsgJSDialogResponse.Parser, new[]{ "BrowserHandle", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgCanGoBackAndForward), global::OpenSteamworks.Protobuf.CMsgCanGoBackAndForward.Parser, new[]{ "BrowserHandle", "Bgoback", "Bgoforward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgOpenSteamURL), global::OpenSteamworks.Protobuf.CMsgOpenSteamURL.Parser, new[]{ "BrowserHandle", "Url", "Referrer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetCookie), global::OpenSteamworks.Protobuf.CMsgSetCookie.Parser, new[]{ "Key", "Value", "Path", "Host", "Expires", "Secure", "Httponly", "Samesite" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetTargetFrameRate), global::OpenSteamworks.Protobuf.CMsgSetTargetFrameRate.Parser, new[]{ "BrowserHandle", "NTargetFrameRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPauseRepaint), global::OpenSteamworks.Protobuf.CMsgPauseRepaint.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFullRepaint), global::OpenSteamworks.Protobuf.CMsgFullRepaint.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRequestFullScreen), global::OpenSteamworks.Protobuf.CMsgRequestFullScreen.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgExitFullScreen), global::OpenSteamworks.Protobuf.CMsgExitFullScreen.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgToggleFindInPageDialog), global::OpenSteamworks.Protobuf.CMsgToggleFindInPageDialog.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetPIDShuttingDown), global::OpenSteamworks.Protobuf.CMsgSetPIDShuttingDown.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgDisableBackgroundThrottling), global::OpenSteamworks.Protobuf.CMsgDisableBackgroundThrottling.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgAckPIDShuttingDown), global::OpenSteamworks.Protobuf.CMsgAckPIDShuttingDown.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGetCookiesForURL), global::OpenSteamworks.Protobuf.CMsgGetCookiesForURL.Parser, new[]{ "BrowserHandle", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CCookie), global::OpenSteamworks.Protobuf.CCookie.Parser, new[]{ "Name", "Value", "Domain", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGetCookiesForURLResponse), global::OpenSteamworks.Protobuf.CMsgGetCookiesForURLResponse.Parser, new[]{ "BrowserHandle", "Url", "Cookies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgNodeHasFocus), global::OpenSteamworks.Protobuf.CMsgNodeHasFocus.Parser, new[]{ "BrowserHandle", "BInput", "Name", "Elementtagname", "Searchbuttontext", "BHasMultipleInputs", "InputType", "BIsMainFrame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgZoomToFocusedElement), global::OpenSteamworks.Protobuf.CMsgZoomToFocusedElement.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFocusedNodeText), global::OpenSteamworks.Protobuf.CMsgFocusedNodeText.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgFocusedNodeTextResponse), global::OpenSteamworks.Protobuf.CMsgFocusedNodeTextResponse.Parser, new[]{ "BrowserHandle", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBuildID), global::OpenSteamworks.Protobuf.CMsgBuildID.Parser, new[]{ "BuildId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgOpenDevTools), global::OpenSteamworks.Protobuf.CMsgOpenDevTools.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgCloseDevTools), global::OpenSteamworks.Protobuf.CMsgCloseDevTools.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgUnlockH264), global::OpenSteamworks.Protobuf.CMsgUnlockH264.Parser, new[]{ "BrowserHandle", "Unloccode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgScreenInformationChanged), global::OpenSteamworks.Protobuf.CMsgScreenInformationChanged.Parser, new[]{ "BrowserHandle", "OverrideWidth", "OverrideHeight", "MonitorLeft", "MonitorTop", "MonitorRight", "MonitorBottom", "UsableLeft", "UsableTop", "UsableRight", "UsableBottom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgClearAllCookies), global::OpenSteamworks.Protobuf.CMsgClearAllCookies.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgScreenDPI), global::OpenSteamworks.Protobuf.CMsgScreenDPI.Parser, new[]{ "BrowserHandle", "DpiScaling" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgAckScreenDPI), global::OpenSteamworks.Protobuf.CMsgAckScreenDPI.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgAuthedSteamDomains), global::OpenSteamworks.Protobuf.CMsgAuthedSteamDomains.Parser, new[]{ "Domains" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSteamAuthNeeded), global::OpenSteamworks.Protobuf.CMsgSteamAuthNeeded.Parser, new[]{ "Filler" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSteamAuthCookiesSet), global::OpenSteamworks.Protobuf.CMsgSteamAuthCookiesSet.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSRegisterMethod), global::OpenSteamworks.Protobuf.CMsgJSRegisterMethod.Parser, new[]{ "BrowserHandle", "Name", "MethodType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSValue), global::OpenSteamworks.Protobuf.CMsgJSValue.Parser, new[]{ "BoolValue", "IntValue", "UintValue", "DoubleValue", "StringValue", "FunctionHandle", "BytesValue", "IsArray", "ArrayValues", "IsObject", "ObjectProperties" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty), global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty.Parser, new[]{ "Name", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSMethodCall), global::OpenSteamworks.Protobuf.CMsgJSMethodCall.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "Name", "Arguments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSExecuteCallback), global::OpenSteamworks.Protobuf.CMsgJSExecuteCallback.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "FunctionHandle", "Arguments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSExecutePromise), global::OpenSteamworks.Protobuf.CMsgJSExecutePromise.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "PromiseHandle", "RejectReason", "Argument" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSReleaseCallback), global::OpenSteamworks.Protobuf.CMsgJSReleaseCallback.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "FunctionHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgJSRaiseException), global::OpenSteamworks.Protobuf.CMsgJSRaiseException.Parser, new[]{ "BrowserHandle", "OwningBrowserHandle", "Exception" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgLoadLocalization), global::OpenSteamworks.Protobuf.CMsgLoadLocalization.Parser, new[]{ "BrowserHandle", "LocalizationPath", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgNotifyUserActivation), global::OpenSteamworks.Protobuf.CMsgNotifyUserActivation.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetNetFakeLocalSystemState), global::OpenSteamworks.Protobuf.CMsgSetNetFakeLocalSystemState.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetGameOverlayTargetPIDs), global::OpenSteamworks.Protobuf.CMsgSetGameOverlayTargetPIDs.Parser, new[]{ "BrowserHandle", "TargetPid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgGameOverlayTargetTextureID), global::OpenSteamworks.Protobuf.CMsgGameOverlayTargetTextureID.Parser, new[]{ "BrowserHandle", "TargetPid", "TextureHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged), global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Parser, new[]{ "BrowserHandle", "Rects" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects), global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects.Parser, new[]{ "X", "Y", "Width", "Height", "Draggable" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgResizeGripChanged), global::OpenSteamworks.Protobuf.CMsgResizeGripChanged.Parser, new[]{ "BrowserHandle", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetWindowPosition), global::OpenSteamworks.Protobuf.CMsgSetWindowPosition.Parser, new[]{ "BrowserHandle", "X", "Y", "Width", "Height", "MinWidth", "MinHeight", "MaxWidth", "MaxHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgShowWindow), global::OpenSteamworks.Protobuf.CMsgShowWindow.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHideWindow), global::OpenSteamworks.Protobuf.CMsgHideWindow.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBringWindowToFront), global::OpenSteamworks.Protobuf.CMsgBringWindowToFront.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetForegroundWindow), global::OpenSteamworks.Protobuf.CMsgSetForegroundWindow.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMaximizeRestoreWindow), global::OpenSteamworks.Protobuf.CMsgMaximizeRestoreWindow.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgMinimizeWindow), global::OpenSteamworks.Protobuf.CMsgMinimizeWindow.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu), global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Parser, new[]{ "BrowserHandle", "CustomCommands", "TypeFlags", "PageUrl", "CoordX", "CoordY", "Linurl", "UnfilteredLinurl", "SelectionText", "MisspelledWord", "EditStateFlags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand), global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand.Parser, new[]{ "Id", "Label" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgHandleContextMenuCommand), global::OpenSteamworks.Protobuf.CMsgHandleContextMenuCommand.Parser, new[]{ "BrowserHandle", "CommandId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgTouchGesture), global::OpenSteamworks.Protobuf.CMsgTouchGesture.Parser, new[]{ "BrowserHandle", "Id", "Gesture", "X", "Y", "Width", "Height", "TapCount", "PinchScale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetTouchGesturesToCancel), global::OpenSteamworks.Protobuf.CMsgSetTouchGesturesToCancel.Parser, new[]{ "BrowserHandle", "Gestures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgImeSetComposition), global::OpenSteamworks.Protobuf.CMsgImeSetComposition.Parser, new[]{ "BrowserHandle", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgImeCommitText), global::OpenSteamworks.Protobuf.CMsgImeCommitText.Parser, new[]{ "BrowserHandle", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgImeCancelComposition), global::OpenSteamworks.Protobuf.CMsgImeCancelComposition.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgImeCompositionRangeChanged), global::OpenSteamworks.Protobuf.CMsgImeCompositionRangeChanged.Parser, new[]{ "BrowserHandle", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgInspectElement), global::OpenSteamworks.Protobuf.CMsgInspectElement.Parser, new[]{ "BrowserHandle", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgDisableF5), global::OpenSteamworks.Protobuf.CMsgDisableF5.Parser, new[]{ "BrowserHandle", "Disable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgStartDownload), global::OpenSteamworks.Protobuf.CMsgStartDownload.Parser, new[]{ "BrowserHandle", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetWindowStackingOrder), global::OpenSteamworks.Protobuf.CMsgSetWindowStackingOrder.Parser, new[]{ "BrowserHandle", "Estackingorder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserViewPostMessageToParentRequest), global::OpenSteamworks.Protobuf.CMsgBrowserViewPostMessageToParentRequest.Parser, new[]{ "BrowserHandle", "Message", "Args", "RequestingUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBlockedRequest), global::OpenSteamworks.Protobuf.CMsgBlockedRequest.Parser, new[]{ "BrowserHandle", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgBrowserFocusChanged), global::OpenSteamworks.Protobuf.CMsgBrowserFocusChanged.Parser, new[]{ "BrowserHandle", "Focused" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetProtocolBlockList), global::OpenSteamworks.Protobuf.CMsgSetProtocolBlockList.Parser, new[]{ "BrowserHandle", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetForceDeviceScaleFactors), global::OpenSteamworks.Protobuf.CMsgSetForceDeviceScaleFactors.Parser, new[]{ "DpiScale", "BrowserScale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetUIMode), global::OpenSteamworks.Protobuf.CMsgSetUIMode.Parser, new[]{ "UiMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetSteamBetaName), global::OpenSteamworks.Protobuf.CMsgSetSteamBetaName.Parser, new[]{ "SteamBetaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgPopupCreated), global::OpenSteamworks.Protobuf.CMsgPopupCreated.Parser, new[]{ "BrowserHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSetVRKeyboardVisibility), global::OpenSteamworks.Protobuf.CMsgSetVRKeyboardVisibility.Parser, new[]{ "BrowserHandle", "Visible" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRestartJSContext), global::OpenSteamworks.Protobuf.CMsgRestartJSContext.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EJSRegisterMethodType {
    [pbr::OriginalName("EJSRegisterMethodType_Invalid")] Invalid = 0,
    [pbr::OriginalName("EJSRegisterMethodType_Function")] Function = 1,
    [pbr::OriginalName("EJSRegisterMethodType_Callback")] Callback = 2,
    [pbr::OriginalName("EJSRegisterMethodType_Promise")] Promise = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgKeyUp : pb::IMessage<CMsgKeyUp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgKeyUp> _parser = new pb::MessageParser<CMsgKeyUp>(() => new CMsgKeyUp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgKeyUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyUp(CMsgKeyUp other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      keyCode_ = other.keyCode_;
      modifiers_ = other.modifiers_;
      nativeKeyCode_ = other.nativeKeyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyUp Clone() {
      return new CMsgKeyUp(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "keyCode" field.</summary>
    public const int KeyCodeFieldNumber = 2;
    private readonly static uint KeyCodeDefaultValue = 0;

    private uint keyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeyCode {
      get { if ((_hasBits0 & 2) != 0) { return keyCode_; } else { return KeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        keyCode_ = value;
      }
    }
    /// <summary>Gets whether the "keyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "keyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 3;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 4) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nativeKeyCode" field.</summary>
    public const int NativeKeyCodeFieldNumber = 4;
    private readonly static uint NativeKeyCodeDefaultValue = 0;

    private uint nativeKeyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NativeKeyCode {
      get { if ((_hasBits0 & 8) != 0) { return nativeKeyCode_; } else { return NativeKeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nativeKeyCode_ = value;
      }
    }
    /// <summary>Gets whether the "nativeKeyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNativeKeyCode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "nativeKeyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNativeKeyCode() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgKeyUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgKeyUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (KeyCode != other.KeyCode) return false;
      if (Modifiers != other.Modifiers) return false;
      if (NativeKeyCode != other.NativeKeyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasKeyCode) hash ^= KeyCode.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (HasNativeKeyCode) hash ^= NativeKeyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasKeyCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(KeyCode);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasNativeKeyCode) {
        output.WriteRawTag(32);
        output.WriteUInt32(NativeKeyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasKeyCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(KeyCode);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasNativeKeyCode) {
        output.WriteRawTag(32);
        output.WriteUInt32(NativeKeyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyCode);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (HasNativeKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NativeKeyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgKeyUp other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasKeyCode) {
        KeyCode = other.KeyCode;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      if (other.HasNativeKeyCode) {
        NativeKeyCode = other.NativeKeyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            NativeKeyCode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            NativeKeyCode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgKeyDown : pb::IMessage<CMsgKeyDown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgKeyDown> _parser = new pb::MessageParser<CMsgKeyDown>(() => new CMsgKeyDown());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgKeyDown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyDown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyDown(CMsgKeyDown other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      keyCode_ = other.keyCode_;
      modifiers_ = other.modifiers_;
      isSystemKey_ = other.isSystemKey_;
      nativeKeyCode_ = other.nativeKeyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyDown Clone() {
      return new CMsgKeyDown(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "keyCode" field.</summary>
    public const int KeyCodeFieldNumber = 2;
    private readonly static uint KeyCodeDefaultValue = 0;

    private uint keyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeyCode {
      get { if ((_hasBits0 & 2) != 0) { return keyCode_; } else { return KeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        keyCode_ = value;
      }
    }
    /// <summary>Gets whether the "keyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "keyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 3;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 4) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_system_key" field.</summary>
    public const int IsSystemKeyFieldNumber = 4;
    private readonly static bool IsSystemKeyDefaultValue = false;

    private bool isSystemKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSystemKey {
      get { if ((_hasBits0 & 8) != 0) { return isSystemKey_; } else { return IsSystemKeyDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isSystemKey_ = value;
      }
    }
    /// <summary>Gets whether the "is_system_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSystemKey {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_system_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSystemKey() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "nativeKeyCode" field.</summary>
    public const int NativeKeyCodeFieldNumber = 5;
    private readonly static uint NativeKeyCodeDefaultValue = 0;

    private uint nativeKeyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NativeKeyCode {
      get { if ((_hasBits0 & 16) != 0) { return nativeKeyCode_; } else { return NativeKeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        nativeKeyCode_ = value;
      }
    }
    /// <summary>Gets whether the "nativeKeyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNativeKeyCode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "nativeKeyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNativeKeyCode() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgKeyDown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgKeyDown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (KeyCode != other.KeyCode) return false;
      if (Modifiers != other.Modifiers) return false;
      if (IsSystemKey != other.IsSystemKey) return false;
      if (NativeKeyCode != other.NativeKeyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasKeyCode) hash ^= KeyCode.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (HasIsSystemKey) hash ^= IsSystemKey.GetHashCode();
      if (HasNativeKeyCode) hash ^= NativeKeyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasKeyCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(KeyCode);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasIsSystemKey) {
        output.WriteRawTag(32);
        output.WriteBool(IsSystemKey);
      }
      if (HasNativeKeyCode) {
        output.WriteRawTag(40);
        output.WriteUInt32(NativeKeyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasKeyCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(KeyCode);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasIsSystemKey) {
        output.WriteRawTag(32);
        output.WriteBool(IsSystemKey);
      }
      if (HasNativeKeyCode) {
        output.WriteRawTag(40);
        output.WriteUInt32(NativeKeyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyCode);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (HasIsSystemKey) {
        size += 1 + 1;
      }
      if (HasNativeKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NativeKeyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgKeyDown other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasKeyCode) {
        KeyCode = other.KeyCode;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      if (other.HasIsSystemKey) {
        IsSystemKey = other.IsSystemKey;
      }
      if (other.HasNativeKeyCode) {
        NativeKeyCode = other.NativeKeyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            IsSystemKey = input.ReadBool();
            break;
          }
          case 40: {
            NativeKeyCode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            IsSystemKey = input.ReadBool();
            break;
          }
          case 40: {
            NativeKeyCode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgKeyChar : pb::IMessage<CMsgKeyChar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgKeyChar> _parser = new pb::MessageParser<CMsgKeyChar>(() => new CMsgKeyChar());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgKeyChar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyChar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyChar(CMsgKeyChar other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      unichar_ = other.unichar_;
      modifiers_ = other.modifiers_;
      keyCode_ = other.keyCode_;
      nativeKeyCode_ = other.nativeKeyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgKeyChar Clone() {
      return new CMsgKeyChar(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unichar" field.</summary>
    public const int UnicharFieldNumber = 2;
    private readonly static uint UnicharDefaultValue = 0;

    private uint unichar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Unichar {
      get { if ((_hasBits0 & 2) != 0) { return unichar_; } else { return UnicharDefaultValue; } }
      set {
        _hasBits0 |= 2;
        unichar_ = value;
      }
    }
    /// <summary>Gets whether the "unichar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnichar {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "unichar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnichar() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 3;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 4) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "keyCode" field.</summary>
    public const int KeyCodeFieldNumber = 4;
    private readonly static uint KeyCodeDefaultValue = 0;

    private uint keyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeyCode {
      get { if ((_hasBits0 & 8) != 0) { return keyCode_; } else { return KeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        keyCode_ = value;
      }
    }
    /// <summary>Gets whether the "keyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyCode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "keyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyCode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "nativeKeyCode" field.</summary>
    public const int NativeKeyCodeFieldNumber = 5;
    private readonly static uint NativeKeyCodeDefaultValue = 0;

    private uint nativeKeyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NativeKeyCode {
      get { if ((_hasBits0 & 16) != 0) { return nativeKeyCode_; } else { return NativeKeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        nativeKeyCode_ = value;
      }
    }
    /// <summary>Gets whether the "nativeKeyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNativeKeyCode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "nativeKeyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNativeKeyCode() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgKeyChar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgKeyChar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Unichar != other.Unichar) return false;
      if (Modifiers != other.Modifiers) return false;
      if (KeyCode != other.KeyCode) return false;
      if (NativeKeyCode != other.NativeKeyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUnichar) hash ^= Unichar.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (HasKeyCode) hash ^= KeyCode.GetHashCode();
      if (HasNativeKeyCode) hash ^= NativeKeyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUnichar) {
        output.WriteRawTag(16);
        output.WriteUInt32(Unichar);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasKeyCode) {
        output.WriteRawTag(32);
        output.WriteUInt32(KeyCode);
      }
      if (HasNativeKeyCode) {
        output.WriteRawTag(40);
        output.WriteUInt32(NativeKeyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUnichar) {
        output.WriteRawTag(16);
        output.WriteUInt32(Unichar);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasKeyCode) {
        output.WriteRawTag(32);
        output.WriteUInt32(KeyCode);
      }
      if (HasNativeKeyCode) {
        output.WriteRawTag(40);
        output.WriteUInt32(NativeKeyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUnichar) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Unichar);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (HasKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyCode);
      }
      if (HasNativeKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NativeKeyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgKeyChar other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUnichar) {
        Unichar = other.Unichar;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      if (other.HasKeyCode) {
        KeyCode = other.KeyCode;
      }
      if (other.HasNativeKeyCode) {
        NativeKeyCode = other.NativeKeyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Unichar = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 40: {
            NativeKeyCode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Unichar = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 40: {
            NativeKeyCode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMouseDown : pb::IMessage<CMsgMouseDown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMouseDown> _parser = new pb::MessageParser<CMsgMouseDown>(() => new CMsgMouseDown());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMouseDown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseDown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseDown(CMsgMouseDown other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      mouseButton_ = other.mouseButton_;
      modifiers_ = other.modifiers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseDown Clone() {
      return new CMsgMouseDown(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mouse_button" field.</summary>
    public const int MouseButtonFieldNumber = 2;
    private readonly static uint MouseButtonDefaultValue = 0;

    private uint mouseButton_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MouseButton {
      get { if ((_hasBits0 & 2) != 0) { return mouseButton_; } else { return MouseButtonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mouseButton_ = value;
      }
    }
    /// <summary>Gets whether the "mouse_button" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseButton {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mouse_button" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseButton() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 3;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 4) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMouseDown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMouseDown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (MouseButton != other.MouseButton) return false;
      if (Modifiers != other.Modifiers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasMouseButton) hash ^= MouseButton.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMouseButton) {
        output.WriteRawTag(16);
        output.WriteUInt32(MouseButton);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMouseButton) {
        output.WriteRawTag(16);
        output.WriteUInt32(MouseButton);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasMouseButton) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MouseButton);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMouseDown other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasMouseButton) {
        MouseButton = other.MouseButton;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseButton = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseButton = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMouseUp : pb::IMessage<CMsgMouseUp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMouseUp> _parser = new pb::MessageParser<CMsgMouseUp>(() => new CMsgMouseUp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMouseUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseUp(CMsgMouseUp other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      mouseButton_ = other.mouseButton_;
      modifiers_ = other.modifiers_;
      isOffPanel_ = other.isOffPanel_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseUp Clone() {
      return new CMsgMouseUp(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mouse_button" field.</summary>
    public const int MouseButtonFieldNumber = 2;
    private readonly static uint MouseButtonDefaultValue = 0;

    private uint mouseButton_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MouseButton {
      get { if ((_hasBits0 & 2) != 0) { return mouseButton_; } else { return MouseButtonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mouseButton_ = value;
      }
    }
    /// <summary>Gets whether the "mouse_button" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseButton {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mouse_button" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseButton() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 3;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 4) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_off_panel" field.</summary>
    public const int IsOffPanelFieldNumber = 4;
    private readonly static bool IsOffPanelDefaultValue = false;

    private bool isOffPanel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOffPanel {
      get { if ((_hasBits0 & 8) != 0) { return isOffPanel_; } else { return IsOffPanelDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isOffPanel_ = value;
      }
    }
    /// <summary>Gets whether the "is_off_panel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsOffPanel {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_off_panel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsOffPanel() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 5;
    private readonly static int XDefaultValue = 0;

    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 16) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 16;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 6;
    private readonly static int YDefaultValue = 0;

    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { if ((_hasBits0 & 32) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 32;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMouseUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMouseUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (MouseButton != other.MouseButton) return false;
      if (Modifiers != other.Modifiers) return false;
      if (IsOffPanel != other.IsOffPanel) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasMouseButton) hash ^= MouseButton.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (HasIsOffPanel) hash ^= IsOffPanel.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMouseButton) {
        output.WriteRawTag(16);
        output.WriteUInt32(MouseButton);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasIsOffPanel) {
        output.WriteRawTag(32);
        output.WriteBool(IsOffPanel);
      }
      if (HasX) {
        output.WriteRawTag(40);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(48);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMouseButton) {
        output.WriteRawTag(16);
        output.WriteUInt32(MouseButton);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (HasIsOffPanel) {
        output.WriteRawTag(32);
        output.WriteBool(IsOffPanel);
      }
      if (HasX) {
        output.WriteRawTag(40);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(48);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasMouseButton) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MouseButton);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (HasIsOffPanel) {
        size += 1 + 1;
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMouseUp other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasMouseButton) {
        MouseButton = other.MouseButton;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      if (other.HasIsOffPanel) {
        IsOffPanel = other.IsOffPanel;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseButton = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            IsOffPanel = input.ReadBool();
            break;
          }
          case 40: {
            X = input.ReadInt32();
            break;
          }
          case 48: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseButton = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
          case 32: {
            IsOffPanel = input.ReadBool();
            break;
          }
          case 40: {
            X = input.ReadInt32();
            break;
          }
          case 48: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMouseDblClick : pb::IMessage<CMsgMouseDblClick>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMouseDblClick> _parser = new pb::MessageParser<CMsgMouseDblClick>(() => new CMsgMouseDblClick());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMouseDblClick> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseDblClick() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseDblClick(CMsgMouseDblClick other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      mouseButton_ = other.mouseButton_;
      modifiers_ = other.modifiers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseDblClick Clone() {
      return new CMsgMouseDblClick(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mouse_button" field.</summary>
    public const int MouseButtonFieldNumber = 2;
    private readonly static uint MouseButtonDefaultValue = 0;

    private uint mouseButton_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MouseButton {
      get { if ((_hasBits0 & 2) != 0) { return mouseButton_; } else { return MouseButtonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mouseButton_ = value;
      }
    }
    /// <summary>Gets whether the "mouse_button" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseButton {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mouse_button" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseButton() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 3;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 4) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMouseDblClick);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMouseDblClick other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (MouseButton != other.MouseButton) return false;
      if (Modifiers != other.Modifiers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasMouseButton) hash ^= MouseButton.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMouseButton) {
        output.WriteRawTag(16);
        output.WriteUInt32(MouseButton);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMouseButton) {
        output.WriteRawTag(16);
        output.WriteUInt32(MouseButton);
      }
      if (HasModifiers) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasMouseButton) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MouseButton);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMouseDblClick other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasMouseButton) {
        MouseButton = other.MouseButton;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseButton = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            MouseButton = input.ReadUInt32();
            break;
          }
          case 24: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMouseWheel : pb::IMessage<CMsgMouseWheel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMouseWheel> _parser = new pb::MessageParser<CMsgMouseWheel>(() => new CMsgMouseWheel());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMouseWheel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseWheel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseWheel(CMsgMouseWheel other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      deltax_ = other.deltax_;
      deltay_ = other.deltay_;
      modifiers_ = other.modifiers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseWheel Clone() {
      return new CMsgMouseWheel(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deltax" field.</summary>
    public const int DeltaxFieldNumber = 2;
    private readonly static int DeltaxDefaultValue = 0;

    private int deltax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Deltax {
      get { if ((_hasBits0 & 2) != 0) { return deltax_; } else { return DeltaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deltax_ = value;
      }
    }
    /// <summary>Gets whether the "deltax" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeltax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deltax" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeltax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "deltay" field.</summary>
    public const int DeltayFieldNumber = 3;
    private readonly static int DeltayDefaultValue = 0;

    private int deltay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Deltay {
      get { if ((_hasBits0 & 4) != 0) { return deltay_; } else { return DeltayDefaultValue; } }
      set {
        _hasBits0 |= 4;
        deltay_ = value;
      }
    }
    /// <summary>Gets whether the "deltay" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeltay {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "deltay" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeltay() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 4;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 8) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 8;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMouseWheel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMouseWheel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Deltax != other.Deltax) return false;
      if (Deltay != other.Deltay) return false;
      if (Modifiers != other.Modifiers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasDeltax) hash ^= Deltax.GetHashCode();
      if (HasDeltay) hash ^= Deltay.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasDeltax) {
        output.WriteRawTag(16);
        output.WriteInt32(Deltax);
      }
      if (HasDeltay) {
        output.WriteRawTag(24);
        output.WriteInt32(Deltay);
      }
      if (HasModifiers) {
        output.WriteRawTag(32);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasDeltax) {
        output.WriteRawTag(16);
        output.WriteInt32(Deltax);
      }
      if (HasDeltay) {
        output.WriteRawTag(24);
        output.WriteInt32(Deltay);
      }
      if (HasModifiers) {
        output.WriteRawTag(32);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasDeltax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deltax);
      }
      if (HasDeltay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deltay);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMouseWheel other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasDeltax) {
        Deltax = other.Deltax;
      }
      if (other.HasDeltay) {
        Deltay = other.Deltay;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Deltax = input.ReadInt32();
            break;
          }
          case 24: {
            Deltay = input.ReadInt32();
            break;
          }
          case 32: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Deltax = input.ReadInt32();
            break;
          }
          case 24: {
            Deltay = input.ReadInt32();
            break;
          }
          case 32: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMouseMove : pb::IMessage<CMsgMouseMove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMouseMove> _parser = new pb::MessageParser<CMsgMouseMove>(() => new CMsgMouseMove());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMouseMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseMove(CMsgMouseMove other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      modifiers_ = other.modifiers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseMove Clone() {
      return new CMsgMouseMove(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static int XDefaultValue = 0;

    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static int YDefaultValue = 0;

    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 4;
    private readonly static uint ModifiersDefaultValue = 0;

    private uint modifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modifiers {
      get { if ((_hasBits0 & 8) != 0) { return modifiers_; } else { return ModifiersDefaultValue; } }
      set {
        _hasBits0 |= 8;
        modifiers_ = value;
      }
    }
    /// <summary>Gets whether the "modifiers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModifiers {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "modifiers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModifiers() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMouseMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMouseMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Modifiers != other.Modifiers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasModifiers) hash ^= Modifiers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (HasModifiers) {
        output.WriteRawTag(32);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (HasModifiers) {
        output.WriteRawTag(32);
        output.WriteUInt32(Modifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (HasModifiers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modifiers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMouseMove other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasModifiers) {
        Modifiers = other.Modifiers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Modifiers = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMouseLeave : pb::IMessage<CMsgMouseLeave>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMouseLeave> _parser = new pb::MessageParser<CMsgMouseLeave>(() => new CMsgMouseLeave());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMouseLeave> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseLeave() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseLeave(CMsgMouseLeave other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMouseLeave Clone() {
      return new CMsgMouseLeave(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMouseLeave);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMouseLeave other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMouseLeave other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserCreate : pb::IMessage<CMsgBrowserCreate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserCreate> _parser = new pb::MessageParser<CMsgBrowserCreate>(() => new CMsgBrowserCreate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserCreate(CMsgBrowserCreate other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      useragent_ = other.useragent_;
      userCss_ = other.userCss_;
      nativeDropdowns_ = other.nativeDropdowns_;
      dpiScaling_ = other.dpiScaling_;
      offscreen_ = other.offscreen_;
      initialWidth_ = other.initialWidth_;
      initialHeight_ = other.initialHeight_;
      windowIcon_ = other.windowIcon_;
      borderless_ = other.borderless_;
      vroverlayKey_ = other.vroverlayKey_;
      browserType_ = other.browserType_;
      initialTop_ = other.initialTop_;
      initialLeft_ = other.initialLeft_;
      onlyAllowTrustedPopups_ = other.onlyAllowTrustedPopups_;
      initialUrl_ = other.initialUrl_;
      hwndParent_ = other.hwndParent_;
      creationFlags_ = other.creationFlags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserCreate Clone() {
      return new CMsgBrowserCreate(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "useragent" field.</summary>
    public const int UseragentFieldNumber = 3;
    private readonly static string UseragentDefaultValue = "";

    private string useragent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Useragent {
      get { return useragent_ ?? UseragentDefaultValue; }
      set {
        useragent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "useragent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseragent {
      get { return useragent_ != null; }
    }
    /// <summary>Clears the value of the "useragent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseragent() {
      useragent_ = null;
    }

    /// <summary>Field number for the "user_css" field.</summary>
    public const int UserCssFieldNumber = 5;
    private readonly static string UserCssDefaultValue = "";

    private string userCss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserCss {
      get { return userCss_ ?? UserCssDefaultValue; }
      set {
        userCss_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_css" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserCss {
      get { return userCss_ != null; }
    }
    /// <summary>Clears the value of the "user_css" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserCss() {
      userCss_ = null;
    }

    /// <summary>Field number for the "native_dropdowns" field.</summary>
    public const int NativeDropdownsFieldNumber = 6;
    private readonly static bool NativeDropdownsDefaultValue = false;

    private bool nativeDropdowns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NativeDropdowns {
      get { if ((_hasBits0 & 2) != 0) { return nativeDropdowns_; } else { return NativeDropdownsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        nativeDropdowns_ = value;
      }
    }
    /// <summary>Gets whether the "native_dropdowns" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNativeDropdowns {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "native_dropdowns" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNativeDropdowns() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dpi_scaling" field.</summary>
    public const int DpiScalingFieldNumber = 7;
    private readonly static float DpiScalingDefaultValue = 0F;

    private float dpiScaling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DpiScaling {
      get { if ((_hasBits0 & 4) != 0) { return dpiScaling_; } else { return DpiScalingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dpiScaling_ = value;
      }
    }
    /// <summary>Gets whether the "dpi_scaling" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDpiScaling {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "dpi_scaling" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDpiScaling() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "offscreen" field.</summary>
    public const int OffscreenFieldNumber = 8;
    private readonly static bool OffscreenDefaultValue = true;

    private bool offscreen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Offscreen {
      get { if ((_hasBits0 & 8) != 0) { return offscreen_; } else { return OffscreenDefaultValue; } }
      set {
        _hasBits0 |= 8;
        offscreen_ = value;
      }
    }
    /// <summary>Gets whether the "offscreen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOffscreen {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "offscreen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOffscreen() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "initial_width" field.</summary>
    public const int InitialWidthFieldNumber = 9;
    private readonly static uint InitialWidthDefaultValue = 0;

    private uint initialWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InitialWidth {
      get { if ((_hasBits0 & 16) != 0) { return initialWidth_; } else { return InitialWidthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        initialWidth_ = value;
      }
    }
    /// <summary>Gets whether the "initial_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialWidth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "initial_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialWidth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "initial_height" field.</summary>
    public const int InitialHeightFieldNumber = 10;
    private readonly static uint InitialHeightDefaultValue = 0;

    private uint initialHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InitialHeight {
      get { if ((_hasBits0 & 32) != 0) { return initialHeight_; } else { return InitialHeightDefaultValue; } }
      set {
        _hasBits0 |= 32;
        initialHeight_ = value;
      }
    }
    /// <summary>Gets whether the "initial_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialHeight {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "initial_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialHeight() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "window_icon" field.</summary>
    public const int WindowIconFieldNumber = 11;
    private readonly static string WindowIconDefaultValue = "";

    private string windowIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WindowIcon {
      get { return windowIcon_ ?? WindowIconDefaultValue; }
      set {
        windowIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "window_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWindowIcon {
      get { return windowIcon_ != null; }
    }
    /// <summary>Clears the value of the "window_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWindowIcon() {
      windowIcon_ = null;
    }

    /// <summary>Field number for the "borderless" field.</summary>
    public const int BorderlessFieldNumber = 12;
    private readonly static bool BorderlessDefaultValue = false;

    private bool borderless_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Borderless {
      get { if ((_hasBits0 & 64) != 0) { return borderless_; } else { return BorderlessDefaultValue; } }
      set {
        _hasBits0 |= 64;
        borderless_ = value;
      }
    }
    /// <summary>Gets whether the "borderless" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderless {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "borderless" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderless() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "vroverlay_key" field.</summary>
    public const int VroverlayKeyFieldNumber = 13;
    private readonly static string VroverlayKeyDefaultValue = "";

    private string vroverlayKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VroverlayKey {
      get { return vroverlayKey_ ?? VroverlayKeyDefaultValue; }
      set {
        vroverlayKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vroverlay_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVroverlayKey {
      get { return vroverlayKey_ != null; }
    }
    /// <summary>Clears the value of the "vroverlay_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVroverlayKey() {
      vroverlayKey_ = null;
    }

    /// <summary>Field number for the "browser_type" field.</summary>
    public const int BrowserTypeFieldNumber = 14;
    private readonly static uint BrowserTypeDefaultValue = 0;

    private uint browserType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserType {
      get { if ((_hasBits0 & 128) != 0) { return browserType_; } else { return BrowserTypeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        browserType_ = value;
      }
    }
    /// <summary>Gets whether the "browser_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserType {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "browser_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserType() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "initial_top" field.</summary>
    public const int InitialTopFieldNumber = 15;
    private readonly static int InitialTopDefaultValue = -2147483648;

    private int initialTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InitialTop {
      get { if ((_hasBits0 & 256) != 0) { return initialTop_; } else { return InitialTopDefaultValue; } }
      set {
        _hasBits0 |= 256;
        initialTop_ = value;
      }
    }
    /// <summary>Gets whether the "initial_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialTop {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "initial_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialTop() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "initial_left" field.</summary>
    public const int InitialLeftFieldNumber = 16;
    private readonly static int InitialLeftDefaultValue = -2147483648;

    private int initialLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InitialLeft {
      get { if ((_hasBits0 & 512) != 0) { return initialLeft_; } else { return InitialLeftDefaultValue; } }
      set {
        _hasBits0 |= 512;
        initialLeft_ = value;
      }
    }
    /// <summary>Gets whether the "initial_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialLeft {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "initial_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialLeft() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "only_allow_trusted_popups" field.</summary>
    public const int OnlyAllowTrustedPopupsFieldNumber = 17;
    private readonly static bool OnlyAllowTrustedPopupsDefaultValue = false;

    private bool onlyAllowTrustedPopups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnlyAllowTrustedPopups {
      get { if ((_hasBits0 & 1024) != 0) { return onlyAllowTrustedPopups_; } else { return OnlyAllowTrustedPopupsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        onlyAllowTrustedPopups_ = value;
      }
    }
    /// <summary>Gets whether the "only_allow_trusted_popups" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnlyAllowTrustedPopups {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "only_allow_trusted_popups" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnlyAllowTrustedPopups() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "initial_url" field.</summary>
    public const int InitialUrlFieldNumber = 18;
    private readonly static string InitialUrlDefaultValue = "";

    private string initialUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InitialUrl {
      get { return initialUrl_ ?? InitialUrlDefaultValue; }
      set {
        initialUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initial_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialUrl {
      get { return initialUrl_ != null; }
    }
    /// <summary>Clears the value of the "initial_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialUrl() {
      initialUrl_ = null;
    }

    /// <summary>Field number for the "hwnd_parent" field.</summary>
    public const int HwndParentFieldNumber = 19;
    private readonly static ulong HwndParentDefaultValue = 0UL;

    private ulong hwndParent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong HwndParent {
      get { if ((_hasBits0 & 2048) != 0) { return hwndParent_; } else { return HwndParentDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        hwndParent_ = value;
      }
    }
    /// <summary>Gets whether the "hwnd_parent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHwndParent {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "hwnd_parent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHwndParent() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "creation_flags" field.</summary>
    public const int CreationFlagsFieldNumber = 20;
    private readonly static uint CreationFlagsDefaultValue = 0;

    private uint creationFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreationFlags {
      get { if ((_hasBits0 & 4096) != 0) { return creationFlags_; } else { return CreationFlagsDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        creationFlags_ = value;
      }
    }
    /// <summary>Gets whether the "creation_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreationFlags {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "creation_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreationFlags() {
      _hasBits0 &= ~4096;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Useragent != other.Useragent) return false;
      if (UserCss != other.UserCss) return false;
      if (NativeDropdowns != other.NativeDropdowns) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DpiScaling, other.DpiScaling)) return false;
      if (Offscreen != other.Offscreen) return false;
      if (InitialWidth != other.InitialWidth) return false;
      if (InitialHeight != other.InitialHeight) return false;
      if (WindowIcon != other.WindowIcon) return false;
      if (Borderless != other.Borderless) return false;
      if (VroverlayKey != other.VroverlayKey) return false;
      if (BrowserType != other.BrowserType) return false;
      if (InitialTop != other.InitialTop) return false;
      if (InitialLeft != other.InitialLeft) return false;
      if (OnlyAllowTrustedPopups != other.OnlyAllowTrustedPopups) return false;
      if (InitialUrl != other.InitialUrl) return false;
      if (HwndParent != other.HwndParent) return false;
      if (CreationFlags != other.CreationFlags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasUseragent) hash ^= Useragent.GetHashCode();
      if (HasUserCss) hash ^= UserCss.GetHashCode();
      if (HasNativeDropdowns) hash ^= NativeDropdowns.GetHashCode();
      if (HasDpiScaling) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DpiScaling);
      if (HasOffscreen) hash ^= Offscreen.GetHashCode();
      if (HasInitialWidth) hash ^= InitialWidth.GetHashCode();
      if (HasInitialHeight) hash ^= InitialHeight.GetHashCode();
      if (HasWindowIcon) hash ^= WindowIcon.GetHashCode();
      if (HasBorderless) hash ^= Borderless.GetHashCode();
      if (HasVroverlayKey) hash ^= VroverlayKey.GetHashCode();
      if (HasBrowserType) hash ^= BrowserType.GetHashCode();
      if (HasInitialTop) hash ^= InitialTop.GetHashCode();
      if (HasInitialLeft) hash ^= InitialLeft.GetHashCode();
      if (HasOnlyAllowTrustedPopups) hash ^= OnlyAllowTrustedPopups.GetHashCode();
      if (HasInitialUrl) hash ^= InitialUrl.GetHashCode();
      if (HasHwndParent) hash ^= HwndParent.GetHashCode();
      if (HasCreationFlags) hash ^= CreationFlags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasUseragent) {
        output.WriteRawTag(26);
        output.WriteString(Useragent);
      }
      if (HasUserCss) {
        output.WriteRawTag(42);
        output.WriteString(UserCss);
      }
      if (HasNativeDropdowns) {
        output.WriteRawTag(48);
        output.WriteBool(NativeDropdowns);
      }
      if (HasDpiScaling) {
        output.WriteRawTag(61);
        output.WriteFloat(DpiScaling);
      }
      if (HasOffscreen) {
        output.WriteRawTag(64);
        output.WriteBool(Offscreen);
      }
      if (HasInitialWidth) {
        output.WriteRawTag(72);
        output.WriteUInt32(InitialWidth);
      }
      if (HasInitialHeight) {
        output.WriteRawTag(80);
        output.WriteUInt32(InitialHeight);
      }
      if (HasWindowIcon) {
        output.WriteRawTag(90);
        output.WriteString(WindowIcon);
      }
      if (HasBorderless) {
        output.WriteRawTag(96);
        output.WriteBool(Borderless);
      }
      if (HasVroverlayKey) {
        output.WriteRawTag(106);
        output.WriteString(VroverlayKey);
      }
      if (HasBrowserType) {
        output.WriteRawTag(112);
        output.WriteUInt32(BrowserType);
      }
      if (HasInitialTop) {
        output.WriteRawTag(120);
        output.WriteInt32(InitialTop);
      }
      if (HasInitialLeft) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(InitialLeft);
      }
      if (HasOnlyAllowTrustedPopups) {
        output.WriteRawTag(136, 1);
        output.WriteBool(OnlyAllowTrustedPopups);
      }
      if (HasInitialUrl) {
        output.WriteRawTag(146, 1);
        output.WriteString(InitialUrl);
      }
      if (HasHwndParent) {
        output.WriteRawTag(153, 1);
        output.WriteFixed64(HwndParent);
      }
      if (HasCreationFlags) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CreationFlags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasUseragent) {
        output.WriteRawTag(26);
        output.WriteString(Useragent);
      }
      if (HasUserCss) {
        output.WriteRawTag(42);
        output.WriteString(UserCss);
      }
      if (HasNativeDropdowns) {
        output.WriteRawTag(48);
        output.WriteBool(NativeDropdowns);
      }
      if (HasDpiScaling) {
        output.WriteRawTag(61);
        output.WriteFloat(DpiScaling);
      }
      if (HasOffscreen) {
        output.WriteRawTag(64);
        output.WriteBool(Offscreen);
      }
      if (HasInitialWidth) {
        output.WriteRawTag(72);
        output.WriteUInt32(InitialWidth);
      }
      if (HasInitialHeight) {
        output.WriteRawTag(80);
        output.WriteUInt32(InitialHeight);
      }
      if (HasWindowIcon) {
        output.WriteRawTag(90);
        output.WriteString(WindowIcon);
      }
      if (HasBorderless) {
        output.WriteRawTag(96);
        output.WriteBool(Borderless);
      }
      if (HasVroverlayKey) {
        output.WriteRawTag(106);
        output.WriteString(VroverlayKey);
      }
      if (HasBrowserType) {
        output.WriteRawTag(112);
        output.WriteUInt32(BrowserType);
      }
      if (HasInitialTop) {
        output.WriteRawTag(120);
        output.WriteInt32(InitialTop);
      }
      if (HasInitialLeft) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(InitialLeft);
      }
      if (HasOnlyAllowTrustedPopups) {
        output.WriteRawTag(136, 1);
        output.WriteBool(OnlyAllowTrustedPopups);
      }
      if (HasInitialUrl) {
        output.WriteRawTag(146, 1);
        output.WriteString(InitialUrl);
      }
      if (HasHwndParent) {
        output.WriteRawTag(153, 1);
        output.WriteFixed64(HwndParent);
      }
      if (HasCreationFlags) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CreationFlags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasUseragent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Useragent);
      }
      if (HasUserCss) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserCss);
      }
      if (HasNativeDropdowns) {
        size += 1 + 1;
      }
      if (HasDpiScaling) {
        size += 1 + 4;
      }
      if (HasOffscreen) {
        size += 1 + 1;
      }
      if (HasInitialWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialWidth);
      }
      if (HasInitialHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialHeight);
      }
      if (HasWindowIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WindowIcon);
      }
      if (HasBorderless) {
        size += 1 + 1;
      }
      if (HasVroverlayKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VroverlayKey);
      }
      if (HasBrowserType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserType);
      }
      if (HasInitialTop) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialTop);
      }
      if (HasInitialLeft) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InitialLeft);
      }
      if (HasOnlyAllowTrustedPopups) {
        size += 2 + 1;
      }
      if (HasInitialUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InitialUrl);
      }
      if (HasHwndParent) {
        size += 2 + 8;
      }
      if (HasCreationFlags) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CreationFlags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserCreate other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasUseragent) {
        Useragent = other.Useragent;
      }
      if (other.HasUserCss) {
        UserCss = other.UserCss;
      }
      if (other.HasNativeDropdowns) {
        NativeDropdowns = other.NativeDropdowns;
      }
      if (other.HasDpiScaling) {
        DpiScaling = other.DpiScaling;
      }
      if (other.HasOffscreen) {
        Offscreen = other.Offscreen;
      }
      if (other.HasInitialWidth) {
        InitialWidth = other.InitialWidth;
      }
      if (other.HasInitialHeight) {
        InitialHeight = other.InitialHeight;
      }
      if (other.HasWindowIcon) {
        WindowIcon = other.WindowIcon;
      }
      if (other.HasBorderless) {
        Borderless = other.Borderless;
      }
      if (other.HasVroverlayKey) {
        VroverlayKey = other.VroverlayKey;
      }
      if (other.HasBrowserType) {
        BrowserType = other.BrowserType;
      }
      if (other.HasInitialTop) {
        InitialTop = other.InitialTop;
      }
      if (other.HasInitialLeft) {
        InitialLeft = other.InitialLeft;
      }
      if (other.HasOnlyAllowTrustedPopups) {
        OnlyAllowTrustedPopups = other.OnlyAllowTrustedPopups;
      }
      if (other.HasInitialUrl) {
        InitialUrl = other.InitialUrl;
      }
      if (other.HasHwndParent) {
        HwndParent = other.HwndParent;
      }
      if (other.HasCreationFlags) {
        CreationFlags = other.CreationFlags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 26: {
            Useragent = input.ReadString();
            break;
          }
          case 42: {
            UserCss = input.ReadString();
            break;
          }
          case 48: {
            NativeDropdowns = input.ReadBool();
            break;
          }
          case 61: {
            DpiScaling = input.ReadFloat();
            break;
          }
          case 64: {
            Offscreen = input.ReadBool();
            break;
          }
          case 72: {
            InitialWidth = input.ReadUInt32();
            break;
          }
          case 80: {
            InitialHeight = input.ReadUInt32();
            break;
          }
          case 90: {
            WindowIcon = input.ReadString();
            break;
          }
          case 96: {
            Borderless = input.ReadBool();
            break;
          }
          case 106: {
            VroverlayKey = input.ReadString();
            break;
          }
          case 112: {
            BrowserType = input.ReadUInt32();
            break;
          }
          case 120: {
            InitialTop = input.ReadInt32();
            break;
          }
          case 128: {
            InitialLeft = input.ReadInt32();
            break;
          }
          case 136: {
            OnlyAllowTrustedPopups = input.ReadBool();
            break;
          }
          case 146: {
            InitialUrl = input.ReadString();
            break;
          }
          case 153: {
            HwndParent = input.ReadFixed64();
            break;
          }
          case 160: {
            CreationFlags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 26: {
            Useragent = input.ReadString();
            break;
          }
          case 42: {
            UserCss = input.ReadString();
            break;
          }
          case 48: {
            NativeDropdowns = input.ReadBool();
            break;
          }
          case 61: {
            DpiScaling = input.ReadFloat();
            break;
          }
          case 64: {
            Offscreen = input.ReadBool();
            break;
          }
          case 72: {
            InitialWidth = input.ReadUInt32();
            break;
          }
          case 80: {
            InitialHeight = input.ReadUInt32();
            break;
          }
          case 90: {
            WindowIcon = input.ReadString();
            break;
          }
          case 96: {
            Borderless = input.ReadBool();
            break;
          }
          case 106: {
            VroverlayKey = input.ReadString();
            break;
          }
          case 112: {
            BrowserType = input.ReadUInt32();
            break;
          }
          case 120: {
            InitialTop = input.ReadInt32();
            break;
          }
          case 128: {
            InitialLeft = input.ReadInt32();
            break;
          }
          case 136: {
            OnlyAllowTrustedPopups = input.ReadBool();
            break;
          }
          case 146: {
            InitialUrl = input.ReadString();
            break;
          }
          case 153: {
            HwndParent = input.ReadFixed64();
            break;
          }
          case 160: {
            CreationFlags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserCreateResponse : pb::IMessage<CMsgBrowserCreateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserCreateResponse> _parser = new pb::MessageParser<CMsgBrowserCreateResponse>(() => new CMsgBrowserCreateResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserCreateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserCreateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserCreateResponse(CMsgBrowserCreateResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserCreateResponse Clone() {
      return new CMsgBrowserCreateResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 2) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserCreateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserCreateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasRequestId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasRequestId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserCreateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserRemove : pb::IMessage<CMsgBrowserRemove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserRemove> _parser = new pb::MessageParser<CMsgBrowserRemove>(() => new CMsgBrowserRemove());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserRemove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserRemove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserRemove(CMsgBrowserRemove other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserRemove Clone() {
      return new CMsgBrowserRemove(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserRemove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserRemove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserRemove other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetLocalFileRequestMapping : pb::IMessage<CMsgSetLocalFileRequestMapping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetLocalFileRequestMapping> _parser = new pb::MessageParser<CMsgSetLocalFileRequestMapping>(() => new CMsgSetLocalFileRequestMapping());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetLocalFileRequestMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetLocalFileRequestMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetLocalFileRequestMapping(CMsgSetLocalFileRequestMapping other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      requestUrl_ = other.requestUrl_;
      defaultLocalPath_ = other.defaultLocalPath_;
      routes_ = other.routes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetLocalFileRequestMapping Clone() {
      return new CMsgSetLocalFileRequestMapping(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "request_url" field.</summary>
    public const int RequestUrlFieldNumber = 2;
    private readonly static string RequestUrlDefaultValue = "";

    private string requestUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestUrl {
      get { return requestUrl_ ?? RequestUrlDefaultValue; }
      set {
        requestUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestUrl {
      get { return requestUrl_ != null; }
    }
    /// <summary>Clears the value of the "request_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestUrl() {
      requestUrl_ = null;
    }

    /// <summary>Field number for the "default_local_path" field.</summary>
    public const int DefaultLocalPathFieldNumber = 3;
    private readonly static string DefaultLocalPathDefaultValue = "";

    private string defaultLocalPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultLocalPath {
      get { return defaultLocalPath_ ?? DefaultLocalPathDefaultValue; }
      set {
        defaultLocalPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "default_local_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultLocalPath {
      get { return defaultLocalPath_ != null; }
    }
    /// <summary>Clears the value of the "default_local_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultLocalPath() {
      defaultLocalPath_ = null;
    }

    /// <summary>Field number for the "routes" field.</summary>
    public const int RoutesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute> _repeated_routes_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute> routes_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Types.AdditionalRoute> Routes {
      get { return routes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetLocalFileRequestMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetLocalFileRequestMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (RequestUrl != other.RequestUrl) return false;
      if (DefaultLocalPath != other.DefaultLocalPath) return false;
      if(!routes_.Equals(other.routes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasRequestUrl) hash ^= RequestUrl.GetHashCode();
      if (HasDefaultLocalPath) hash ^= DefaultLocalPath.GetHashCode();
      hash ^= routes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasRequestUrl) {
        output.WriteRawTag(18);
        output.WriteString(RequestUrl);
      }
      if (HasDefaultLocalPath) {
        output.WriteRawTag(26);
        output.WriteString(DefaultLocalPath);
      }
      routes_.WriteTo(output, _repeated_routes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasRequestUrl) {
        output.WriteRawTag(18);
        output.WriteString(RequestUrl);
      }
      if (HasDefaultLocalPath) {
        output.WriteRawTag(26);
        output.WriteString(DefaultLocalPath);
      }
      routes_.WriteTo(ref output, _repeated_routes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasRequestUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestUrl);
      }
      if (HasDefaultLocalPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultLocalPath);
      }
      size += routes_.CalculateSize(_repeated_routes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetLocalFileRequestMapping other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasRequestUrl) {
        RequestUrl = other.RequestUrl;
      }
      if (other.HasDefaultLocalPath) {
        DefaultLocalPath = other.DefaultLocalPath;
      }
      routes_.Add(other.routes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            RequestUrl = input.ReadString();
            break;
          }
          case 26: {
            DefaultLocalPath = input.ReadString();
            break;
          }
          case 34: {
            routes_.AddEntriesFrom(input, _repeated_routes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            RequestUrl = input.ReadString();
            break;
          }
          case 26: {
            DefaultLocalPath = input.ReadString();
            break;
          }
          case 34: {
            routes_.AddEntriesFrom(ref input, _repeated_routes_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgSetLocalFileRequestMapping message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AdditionalRoute : pb::IMessage<AdditionalRoute>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AdditionalRoute> _parser = new pb::MessageParser<AdditionalRoute>(() => new AdditionalRoute());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AdditionalRoute> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgSetLocalFileRequestMapping.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AdditionalRoute() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AdditionalRoute(AdditionalRoute other) : this() {
          _hasBits0 = other._hasBits0;
          relativeUrl_ = other.relativeUrl_;
          localPath_ = other.localPath_;
          allowedExtensions_ = other.allowedExtensions_;
          urlRewrite_ = other.urlRewrite_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AdditionalRoute Clone() {
          return new AdditionalRoute(this);
        }

        /// <summary>Field number for the "relative_url" field.</summary>
        public const int RelativeUrlFieldNumber = 1;
        private readonly static string RelativeUrlDefaultValue = "";

        private string relativeUrl_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RelativeUrl {
          get { return relativeUrl_ ?? RelativeUrlDefaultValue; }
          set {
            relativeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "relative_url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRelativeUrl {
          get { return relativeUrl_ != null; }
        }
        /// <summary>Clears the value of the "relative_url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRelativeUrl() {
          relativeUrl_ = null;
        }

        /// <summary>Field number for the "local_path" field.</summary>
        public const int LocalPathFieldNumber = 2;
        private readonly static string LocalPathDefaultValue = "";

        private string localPath_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocalPath {
          get { return localPath_ ?? LocalPathDefaultValue; }
          set {
            localPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "local_path" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLocalPath {
          get { return localPath_ != null; }
        }
        /// <summary>Clears the value of the "local_path" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLocalPath() {
          localPath_ = null;
        }

        /// <summary>Field number for the "allowed_extensions" field.</summary>
        public const int AllowedExtensionsFieldNumber = 3;
        private readonly static string AllowedExtensionsDefaultValue = "";

        private string allowedExtensions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AllowedExtensions {
          get { return allowedExtensions_ ?? AllowedExtensionsDefaultValue; }
          set {
            allowedExtensions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "allowed_extensions" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAllowedExtensions {
          get { return allowedExtensions_ != null; }
        }
        /// <summary>Clears the value of the "allowed_extensions" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAllowedExtensions() {
          allowedExtensions_ = null;
        }

        /// <summary>Field number for the "url_rewrite" field.</summary>
        public const int UrlRewriteFieldNumber = 4;
        private readonly static bool UrlRewriteDefaultValue = false;

        private bool urlRewrite_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UrlRewrite {
          get { if ((_hasBits0 & 1) != 0) { return urlRewrite_; } else { return UrlRewriteDefaultValue; } }
          set {
            _hasBits0 |= 1;
            urlRewrite_ = value;
          }
        }
        /// <summary>Gets whether the "url_rewrite" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUrlRewrite {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "url_rewrite" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUrlRewrite() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AdditionalRoute);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AdditionalRoute other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RelativeUrl != other.RelativeUrl) return false;
          if (LocalPath != other.LocalPath) return false;
          if (AllowedExtensions != other.AllowedExtensions) return false;
          if (UrlRewrite != other.UrlRewrite) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasRelativeUrl) hash ^= RelativeUrl.GetHashCode();
          if (HasLocalPath) hash ^= LocalPath.GetHashCode();
          if (HasAllowedExtensions) hash ^= AllowedExtensions.GetHashCode();
          if (HasUrlRewrite) hash ^= UrlRewrite.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasRelativeUrl) {
            output.WriteRawTag(10);
            output.WriteString(RelativeUrl);
          }
          if (HasLocalPath) {
            output.WriteRawTag(18);
            output.WriteString(LocalPath);
          }
          if (HasAllowedExtensions) {
            output.WriteRawTag(26);
            output.WriteString(AllowedExtensions);
          }
          if (HasUrlRewrite) {
            output.WriteRawTag(32);
            output.WriteBool(UrlRewrite);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasRelativeUrl) {
            output.WriteRawTag(10);
            output.WriteString(RelativeUrl);
          }
          if (HasLocalPath) {
            output.WriteRawTag(18);
            output.WriteString(LocalPath);
          }
          if (HasAllowedExtensions) {
            output.WriteRawTag(26);
            output.WriteString(AllowedExtensions);
          }
          if (HasUrlRewrite) {
            output.WriteRawTag(32);
            output.WriteBool(UrlRewrite);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasRelativeUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RelativeUrl);
          }
          if (HasLocalPath) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalPath);
          }
          if (HasAllowedExtensions) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AllowedExtensions);
          }
          if (HasUrlRewrite) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AdditionalRoute other) {
          if (other == null) {
            return;
          }
          if (other.HasRelativeUrl) {
            RelativeUrl = other.RelativeUrl;
          }
          if (other.HasLocalPath) {
            LocalPath = other.LocalPath;
          }
          if (other.HasAllowedExtensions) {
            AllowedExtensions = other.AllowedExtensions;
          }
          if (other.HasUrlRewrite) {
            UrlRewrite = other.UrlRewrite;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RelativeUrl = input.ReadString();
                break;
              }
              case 18: {
                LocalPath = input.ReadString();
                break;
              }
              case 26: {
                AllowedExtensions = input.ReadString();
                break;
              }
              case 32: {
                UrlRewrite = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                RelativeUrl = input.ReadString();
                break;
              }
              case 18: {
                LocalPath = input.ReadString();
                break;
              }
              case 26: {
                AllowedExtensions = input.ReadString();
                break;
              }
              case 32: {
                UrlRewrite = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserErrorStrings : pb::IMessage<CMsgBrowserErrorStrings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserErrorStrings> _parser = new pb::MessageParser<CMsgBrowserErrorStrings>(() => new CMsgBrowserErrorStrings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserErrorStrings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserErrorStrings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserErrorStrings(CMsgBrowserErrorStrings other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      title_ = other.title_;
      header_ = other.header_;
      cacheMiss_ = other.cacheMiss_;
      badUrl_ = other.badUrl_;
      connectionProblem_ = other.connectionProblem_;
      proxyProblem_ = other.proxyProblem_;
      unknown_ = other.unknown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserErrorStrings Clone() {
      return new CMsgBrowserErrorStrings(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 3;
    private readonly static string HeaderDefaultValue = "";

    private string header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Header {
      get { return header_ ?? HeaderDefaultValue; }
      set {
        header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "header" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeader {
      get { return header_ != null; }
    }
    /// <summary>Clears the value of the "header" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeader() {
      header_ = null;
    }

    /// <summary>Field number for the "cache_miss" field.</summary>
    public const int CacheMissFieldNumber = 4;
    private readonly static string CacheMissDefaultValue = "";

    private string cacheMiss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CacheMiss {
      get { return cacheMiss_ ?? CacheMissDefaultValue; }
      set {
        cacheMiss_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cache_miss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCacheMiss {
      get { return cacheMiss_ != null; }
    }
    /// <summary>Clears the value of the "cache_miss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCacheMiss() {
      cacheMiss_ = null;
    }

    /// <summary>Field number for the "bad_url" field.</summary>
    public const int BadUrlFieldNumber = 5;
    private readonly static string BadUrlDefaultValue = "";

    private string badUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BadUrl {
      get { return badUrl_ ?? BadUrlDefaultValue; }
      set {
        badUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bad_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBadUrl {
      get { return badUrl_ != null; }
    }
    /// <summary>Clears the value of the "bad_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBadUrl() {
      badUrl_ = null;
    }

    /// <summary>Field number for the "connection_problem" field.</summary>
    public const int ConnectionProblemFieldNumber = 6;
    private readonly static string ConnectionProblemDefaultValue = "";

    private string connectionProblem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConnectionProblem {
      get { return connectionProblem_ ?? ConnectionProblemDefaultValue; }
      set {
        connectionProblem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connection_problem" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectionProblem {
      get { return connectionProblem_ != null; }
    }
    /// <summary>Clears the value of the "connection_problem" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectionProblem() {
      connectionProblem_ = null;
    }

    /// <summary>Field number for the "proxy_problem" field.</summary>
    public const int ProxyProblemFieldNumber = 7;
    private readonly static string ProxyProblemDefaultValue = "";

    private string proxyProblem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProxyProblem {
      get { return proxyProblem_ ?? ProxyProblemDefaultValue; }
      set {
        proxyProblem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "proxy_problem" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProxyProblem {
      get { return proxyProblem_ != null; }
    }
    /// <summary>Clears the value of the "proxy_problem" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProxyProblem() {
      proxyProblem_ = null;
    }

    /// <summary>Field number for the "unknown" field.</summary>
    public const int UnknownFieldNumber = 8;
    private readonly static string UnknownDefaultValue = "";

    private string unknown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Unknown {
      get { return unknown_ ?? UnknownDefaultValue; }
      set {
        unknown_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "unknown" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnknown {
      get { return unknown_ != null; }
    }
    /// <summary>Clears the value of the "unknown" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnknown() {
      unknown_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserErrorStrings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserErrorStrings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Title != other.Title) return false;
      if (Header != other.Header) return false;
      if (CacheMiss != other.CacheMiss) return false;
      if (BadUrl != other.BadUrl) return false;
      if (ConnectionProblem != other.ConnectionProblem) return false;
      if (ProxyProblem != other.ProxyProblem) return false;
      if (Unknown != other.Unknown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasHeader) hash ^= Header.GetHashCode();
      if (HasCacheMiss) hash ^= CacheMiss.GetHashCode();
      if (HasBadUrl) hash ^= BadUrl.GetHashCode();
      if (HasConnectionProblem) hash ^= ConnectionProblem.GetHashCode();
      if (HasProxyProblem) hash ^= ProxyProblem.GetHashCode();
      if (HasUnknown) hash ^= Unknown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasHeader) {
        output.WriteRawTag(26);
        output.WriteString(Header);
      }
      if (HasCacheMiss) {
        output.WriteRawTag(34);
        output.WriteString(CacheMiss);
      }
      if (HasBadUrl) {
        output.WriteRawTag(42);
        output.WriteString(BadUrl);
      }
      if (HasConnectionProblem) {
        output.WriteRawTag(50);
        output.WriteString(ConnectionProblem);
      }
      if (HasProxyProblem) {
        output.WriteRawTag(58);
        output.WriteString(ProxyProblem);
      }
      if (HasUnknown) {
        output.WriteRawTag(66);
        output.WriteString(Unknown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasHeader) {
        output.WriteRawTag(26);
        output.WriteString(Header);
      }
      if (HasCacheMiss) {
        output.WriteRawTag(34);
        output.WriteString(CacheMiss);
      }
      if (HasBadUrl) {
        output.WriteRawTag(42);
        output.WriteString(BadUrl);
      }
      if (HasConnectionProblem) {
        output.WriteRawTag(50);
        output.WriteString(ConnectionProblem);
      }
      if (HasProxyProblem) {
        output.WriteRawTag(58);
        output.WriteString(ProxyProblem);
      }
      if (HasUnknown) {
        output.WriteRawTag(66);
        output.WriteString(Unknown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasHeader) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
      }
      if (HasCacheMiss) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheMiss);
      }
      if (HasBadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BadUrl);
      }
      if (HasConnectionProblem) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionProblem);
      }
      if (HasProxyProblem) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyProblem);
      }
      if (HasUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unknown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserErrorStrings other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasHeader) {
        Header = other.Header;
      }
      if (other.HasCacheMiss) {
        CacheMiss = other.CacheMiss;
      }
      if (other.HasBadUrl) {
        BadUrl = other.BadUrl;
      }
      if (other.HasConnectionProblem) {
        ConnectionProblem = other.ConnectionProblem;
      }
      if (other.HasProxyProblem) {
        ProxyProblem = other.ProxyProblem;
      }
      if (other.HasUnknown) {
        Unknown = other.Unknown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Header = input.ReadString();
            break;
          }
          case 34: {
            CacheMiss = input.ReadString();
            break;
          }
          case 42: {
            BadUrl = input.ReadString();
            break;
          }
          case 50: {
            ConnectionProblem = input.ReadString();
            break;
          }
          case 58: {
            ProxyProblem = input.ReadString();
            break;
          }
          case 66: {
            Unknown = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Header = input.ReadString();
            break;
          }
          case 34: {
            CacheMiss = input.ReadString();
            break;
          }
          case 42: {
            BadUrl = input.ReadString();
            break;
          }
          case 50: {
            ConnectionProblem = input.ReadString();
            break;
          }
          case 58: {
            ProxyProblem = input.ReadString();
            break;
          }
          case 66: {
            Unknown = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserSetName : pb::IMessage<CMsgBrowserSetName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserSetName> _parser = new pb::MessageParser<CMsgBrowserSetName>(() => new CMsgBrowserSetName());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserSetName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSetName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSetName(CMsgBrowserSetName other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSetName Clone() {
      return new CMsgBrowserSetName(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserSetName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserSetName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserSetName other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserSize : pb::IMessage<CMsgBrowserSize>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserSize> _parser = new pb::MessageParser<CMsgBrowserSize>(() => new CMsgBrowserSize());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserSize> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSize() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSize(CMsgBrowserSize other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSize Clone() {
      return new CMsgBrowserSize(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static double WidthDefaultValue = 0D;

    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static double HeightDefaultValue = 0D;

    private double height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserSize);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserSize other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(17);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(25);
        output.WriteDouble(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(17);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(25);
        output.WriteDouble(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasWidth) {
        size += 1 + 8;
      }
      if (HasHeight) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserSize other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            Width = input.ReadDouble();
            break;
          }
          case 25: {
            Height = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            Width = input.ReadDouble();
            break;
          }
          case 25: {
            Height = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserSetMinSize : pb::IMessage<CMsgBrowserSetMinSize>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserSetMinSize> _parser = new pb::MessageParser<CMsgBrowserSetMinSize>(() => new CMsgBrowserSetMinSize());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserSetMinSize> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSetMinSize() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSetMinSize(CMsgBrowserSetMinSize other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserSetMinSize Clone() {
      return new CMsgBrowserSetMinSize(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static double WidthDefaultValue = 0D;

    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static double HeightDefaultValue = 0D;

    private double height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserSetMinSize);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserSetMinSize other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(17);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(25);
        output.WriteDouble(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(17);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(25);
        output.WriteDouble(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasWidth) {
        size += 1 + 8;
      }
      if (HasHeight) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserSetMinSize other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            Width = input.ReadDouble();
            break;
          }
          case 25: {
            Height = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            Width = input.ReadDouble();
            break;
          }
          case 25: {
            Height = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserPosition : pb::IMessage<CMsgBrowserPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserPosition> _parser = new pb::MessageParser<CMsgBrowserPosition>(() => new CMsgBrowserPosition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserPosition(CMsgBrowserPosition other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      xLocal_ = other.xLocal_;
      yLocal_ = other.yLocal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserPosition Clone() {
      return new CMsgBrowserPosition(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static double XDefaultValue = 0D;

    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static double YDefaultValue = 0D;

    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "x_local" field.</summary>
    public const int XLocalFieldNumber = 4;
    private readonly static double XLocalDefaultValue = 0D;

    private double xLocal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XLocal {
      get { if ((_hasBits0 & 8) != 0) { return xLocal_; } else { return XLocalDefaultValue; } }
      set {
        _hasBits0 |= 8;
        xLocal_ = value;
      }
    }
    /// <summary>Gets whether the "x_local" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXLocal {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "x_local" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXLocal() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "y_local" field.</summary>
    public const int YLocalFieldNumber = 5;
    private readonly static double YLocalDefaultValue = 0D;

    private double yLocal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YLocal {
      get { if ((_hasBits0 & 16) != 0) { return yLocal_; } else { return YLocalDefaultValue; } }
      set {
        _hasBits0 |= 16;
        yLocal_ = value;
      }
    }
    /// <summary>Gets whether the "y_local" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYLocal {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "y_local" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYLocal() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XLocal, other.XLocal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YLocal, other.YLocal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (HasXLocal) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XLocal);
      if (HasYLocal) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YLocal);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (HasXLocal) {
        output.WriteRawTag(33);
        output.WriteDouble(XLocal);
      }
      if (HasYLocal) {
        output.WriteRawTag(41);
        output.WriteDouble(YLocal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (HasXLocal) {
        output.WriteRawTag(33);
        output.WriteDouble(XLocal);
      }
      if (HasYLocal) {
        output.WriteRawTag(41);
        output.WriteDouble(YLocal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + 8;
      }
      if (HasY) {
        size += 1 + 8;
      }
      if (HasXLocal) {
        size += 1 + 8;
      }
      if (HasYLocal) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserPosition other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasXLocal) {
        XLocal = other.XLocal;
      }
      if (other.HasYLocal) {
        YLocal = other.YLocal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
          case 33: {
            XLocal = input.ReadDouble();
            break;
          }
          case 41: {
            YLocal = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
          case 33: {
            XLocal = input.ReadDouble();
            break;
          }
          case 41: {
            YLocal = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserResized : pb::IMessage<CMsgBrowserResized>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserResized> _parser = new pb::MessageParser<CMsgBrowserResized>(() => new CMsgBrowserResized());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserResized> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserResized() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserResized(CMsgBrowserResized other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      width_ = other.width_;
      height_ = other.height_;
      dpiHorizontal_ = other.dpiHorizontal_;
      dpiVertical_ = other.dpiVertical_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserResized Clone() {
      return new CMsgBrowserResized(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static double XDefaultValue = 0D;

    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static double YDefaultValue = 0D;

    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private readonly static double WidthDefaultValue = 0D;

    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Width {
      get { if ((_hasBits0 & 8) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private readonly static double HeightDefaultValue = 0D;

    private double height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { if ((_hasBits0 & 16) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 16;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "dpi_horizontal" field.</summary>
    public const int DpiHorizontalFieldNumber = 6;
    private readonly static double DpiHorizontalDefaultValue = 0D;

    private double dpiHorizontal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DpiHorizontal {
      get { if ((_hasBits0 & 32) != 0) { return dpiHorizontal_; } else { return DpiHorizontalDefaultValue; } }
      set {
        _hasBits0 |= 32;
        dpiHorizontal_ = value;
      }
    }
    /// <summary>Gets whether the "dpi_horizontal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDpiHorizontal {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "dpi_horizontal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDpiHorizontal() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "dpi_vertical" field.</summary>
    public const int DpiVerticalFieldNumber = 7;
    private readonly static double DpiVerticalDefaultValue = 0D;

    private double dpiVertical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DpiVertical {
      get { if ((_hasBits0 & 64) != 0) { return dpiVertical_; } else { return DpiVerticalDefaultValue; } }
      set {
        _hasBits0 |= 64;
        dpiVertical_ = value;
      }
    }
    /// <summary>Gets whether the "dpi_vertical" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDpiVertical {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "dpi_vertical" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDpiVertical() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 8;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "display_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "display_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserResized);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserResized other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DpiHorizontal, other.DpiHorizontal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DpiVertical, other.DpiVertical)) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (HasDpiHorizontal) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DpiHorizontal);
      if (HasDpiVertical) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DpiVertical);
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (HasWidth) {
        output.WriteRawTag(33);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(41);
        output.WriteDouble(Height);
      }
      if (HasDpiHorizontal) {
        output.WriteRawTag(49);
        output.WriteDouble(DpiHorizontal);
      }
      if (HasDpiVertical) {
        output.WriteRawTag(57);
        output.WriteDouble(DpiVertical);
      }
      if (HasDisplayName) {
        output.WriteRawTag(66);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (HasWidth) {
        output.WriteRawTag(33);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(41);
        output.WriteDouble(Height);
      }
      if (HasDpiHorizontal) {
        output.WriteRawTag(49);
        output.WriteDouble(DpiHorizontal);
      }
      if (HasDpiVertical) {
        output.WriteRawTag(57);
        output.WriteDouble(DpiVertical);
      }
      if (HasDisplayName) {
        output.WriteRawTag(66);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + 8;
      }
      if (HasY) {
        size += 1 + 8;
      }
      if (HasWidth) {
        size += 1 + 8;
      }
      if (HasHeight) {
        size += 1 + 8;
      }
      if (HasDpiHorizontal) {
        size += 1 + 8;
      }
      if (HasDpiVertical) {
        size += 1 + 8;
      }
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserResized other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasDpiHorizontal) {
        DpiHorizontal = other.DpiHorizontal;
      }
      if (other.HasDpiVertical) {
        DpiVertical = other.DpiVertical;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
          case 33: {
            Width = input.ReadDouble();
            break;
          }
          case 41: {
            Height = input.ReadDouble();
            break;
          }
          case 49: {
            DpiHorizontal = input.ReadDouble();
            break;
          }
          case 57: {
            DpiVertical = input.ReadDouble();
            break;
          }
          case 66: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
          case 33: {
            Width = input.ReadDouble();
            break;
          }
          case 41: {
            Height = input.ReadDouble();
            break;
          }
          case 49: {
            DpiHorizontal = input.ReadDouble();
            break;
          }
          case 57: {
            DpiVertical = input.ReadDouble();
            break;
          }
          case 66: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPostURL : pb::IMessage<CMsgPostURL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPostURL> _parser = new pb::MessageParser<CMsgPostURL>(() => new CMsgPostURL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPostURL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPostURL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPostURL(CMsgPostURL other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      post_ = other.post_;
      pageserial_ = other.pageserial_;
      replaceEntry_ = other.replaceEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPostURL Clone() {
      return new CMsgPostURL(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "post" field.</summary>
    public const int PostFieldNumber = 3;
    private readonly static string PostDefaultValue = "";

    private string post_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Post {
      get { return post_ ?? PostDefaultValue; }
      set {
        post_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "post" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPost {
      get { return post_ != null; }
    }
    /// <summary>Clears the value of the "post" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPost() {
      post_ = null;
    }

    /// <summary>Field number for the "pageserial" field.</summary>
    public const int PageserialFieldNumber = 4;
    private readonly static uint PageserialDefaultValue = 0;

    private uint pageserial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Pageserial {
      get { if ((_hasBits0 & 2) != 0) { return pageserial_; } else { return PageserialDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pageserial_ = value;
      }
    }
    /// <summary>Gets whether the "pageserial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageserial {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pageserial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageserial() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "replace_entry" field.</summary>
    public const int ReplaceEntryFieldNumber = 5;
    private readonly static bool ReplaceEntryDefaultValue = false;

    private bool replaceEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReplaceEntry {
      get { if ((_hasBits0 & 4) != 0) { return replaceEntry_; } else { return ReplaceEntryDefaultValue; } }
      set {
        _hasBits0 |= 4;
        replaceEntry_ = value;
      }
    }
    /// <summary>Gets whether the "replace_entry" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplaceEntry {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "replace_entry" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplaceEntry() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPostURL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPostURL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (Post != other.Post) return false;
      if (Pageserial != other.Pageserial) return false;
      if (ReplaceEntry != other.ReplaceEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasPost) hash ^= Post.GetHashCode();
      if (HasPageserial) hash ^= Pageserial.GetHashCode();
      if (HasReplaceEntry) hash ^= ReplaceEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPost) {
        output.WriteRawTag(26);
        output.WriteString(Post);
      }
      if (HasPageserial) {
        output.WriteRawTag(32);
        output.WriteUInt32(Pageserial);
      }
      if (HasReplaceEntry) {
        output.WriteRawTag(40);
        output.WriteBool(ReplaceEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPost) {
        output.WriteRawTag(26);
        output.WriteString(Post);
      }
      if (HasPageserial) {
        output.WriteRawTag(32);
        output.WriteUInt32(Pageserial);
      }
      if (HasReplaceEntry) {
        output.WriteRawTag(40);
        output.WriteBool(ReplaceEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasPost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Post);
      }
      if (HasPageserial) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pageserial);
      }
      if (HasReplaceEntry) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPostURL other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasPost) {
        Post = other.Post;
      }
      if (other.HasPageserial) {
        Pageserial = other.Pageserial;
      }
      if (other.HasReplaceEntry) {
        ReplaceEntry = other.ReplaceEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Post = input.ReadString();
            break;
          }
          case 32: {
            Pageserial = input.ReadUInt32();
            break;
          }
          case 40: {
            ReplaceEntry = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Post = input.ReadString();
            break;
          }
          case 32: {
            Pageserial = input.ReadUInt32();
            break;
          }
          case 40: {
            ReplaceEntry = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgAddHeader : pb::IMessage<CMsgAddHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgAddHeader> _parser = new pb::MessageParser<CMsgAddHeader>(() => new CMsgAddHeader());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgAddHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAddHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAddHeader(CMsgAddHeader other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAddHeader Clone() {
      return new CMsgAddHeader(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private readonly static string KeyDefaultValue = "";

    private string key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgAddHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgAddHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasKey) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasKey) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgAddHeader other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgStopLoad : pb::IMessage<CMsgStopLoad>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgStopLoad> _parser = new pb::MessageParser<CMsgStopLoad>(() => new CMsgStopLoad());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgStopLoad> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStopLoad() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStopLoad(CMsgStopLoad other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStopLoad Clone() {
      return new CMsgStopLoad(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgStopLoad);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgStopLoad other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgStopLoad other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgReload : pb::IMessage<CMsgReload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgReload> _parser = new pb::MessageParser<CMsgReload>(() => new CMsgReload());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgReload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgReload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgReload(CMsgReload other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgReload Clone() {
      return new CMsgReload(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgReload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgReload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgReload other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGoForward : pb::IMessage<CMsgGoForward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGoForward> _parser = new pb::MessageParser<CMsgGoForward>(() => new CMsgGoForward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGoForward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGoForward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGoForward(CMsgGoForward other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGoForward Clone() {
      return new CMsgGoForward(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGoForward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGoForward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGoForward other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGoBack : pb::IMessage<CMsgGoBack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGoBack> _parser = new pb::MessageParser<CMsgGoBack>(() => new CMsgGoBack());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGoBack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGoBack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGoBack(CMsgGoBack other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGoBack Clone() {
      return new CMsgGoBack(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGoBack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGoBack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGoBack other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgWasHidden : pb::IMessage<CMsgWasHidden>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgWasHidden> _parser = new pb::MessageParser<CMsgWasHidden>(() => new CMsgWasHidden());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgWasHidden> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgWasHidden() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgWasHidden(CMsgWasHidden other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      hidden_ = other.hidden_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgWasHidden Clone() {
      return new CMsgWasHidden(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 2;
    private readonly static bool HiddenDefaultValue = false;

    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hidden {
      get { if ((_hasBits0 & 2) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hidden_ = value;
      }
    }
    /// <summary>Gets whether the "hidden" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHidden {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hidden" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHidden() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgWasHidden);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgWasHidden other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Hidden != other.Hidden) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasHidden) hash ^= Hidden.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasHidden) {
        output.WriteRawTag(16);
        output.WriteBool(Hidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasHidden) {
        output.WriteRawTag(16);
        output.WriteBool(Hidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasHidden) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgWasHidden other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasHidden) {
        Hidden = other.Hidden;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Hidden = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Hidden = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetWindowVisibility : pb::IMessage<CMsgSetWindowVisibility>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetWindowVisibility> _parser = new pb::MessageParser<CMsgSetWindowVisibility>(() => new CMsgSetWindowVisibility());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetWindowVisibility> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowVisibility() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowVisibility(CMsgSetWindowVisibility other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      visible_ = other.visible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowVisibility Clone() {
      return new CMsgSetWindowVisibility(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private readonly static bool VisibleDefaultValue = false;

    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 2) != 0) { return visible_; } else { return VisibleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetWindowVisibility);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetWindowVisibility other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Visible != other.Visible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetWindowVisibility other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgClearHistory : pb::IMessage<CMsgClearHistory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClearHistory> _parser = new pb::MessageParser<CMsgClearHistory>(() => new CMsgClearHistory());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgClearHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearHistory(CMsgClearHistory other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearHistory Clone() {
      return new CMsgClearHistory(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgClearHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgClearHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgClearHistory other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgClearAllBrowsingData : pb::IMessage<CMsgClearAllBrowsingData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClearAllBrowsingData> _parser = new pb::MessageParser<CMsgClearAllBrowsingData>(() => new CMsgClearAllBrowsingData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgClearAllBrowsingData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearAllBrowsingData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearAllBrowsingData(CMsgClearAllBrowsingData other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearAllBrowsingData Clone() {
      return new CMsgClearAllBrowsingData(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgClearAllBrowsingData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgClearAllBrowsingData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgClearAllBrowsingData other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgCopy : pb::IMessage<CMsgCopy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCopy> _parser = new pb::MessageParser<CMsgCopy>(() => new CMsgCopy());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgCopy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCopy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCopy(CMsgCopy other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCopy Clone() {
      return new CMsgCopy(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgCopy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgCopy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgCopy other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPaste : pb::IMessage<CMsgPaste>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPaste> _parser = new pb::MessageParser<CMsgPaste>(() => new CMsgPaste());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPaste> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPaste() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPaste(CMsgPaste other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPaste Clone() {
      return new CMsgPaste(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPaste);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPaste other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPaste other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgExecuteJavaScript : pb::IMessage<CMsgExecuteJavaScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgExecuteJavaScript> _parser = new pb::MessageParser<CMsgExecuteJavaScript>(() => new CMsgExecuteJavaScript());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgExecuteJavaScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgExecuteJavaScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgExecuteJavaScript(CMsgExecuteJavaScript other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      script_ = other.script_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgExecuteJavaScript Clone() {
      return new CMsgExecuteJavaScript(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "script" field.</summary>
    public const int ScriptFieldNumber = 2;
    private readonly static string ScriptDefaultValue = "";

    private string script_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Script {
      get { return script_ ?? ScriptDefaultValue; }
      set {
        script_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "script" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScript {
      get { return script_ != null; }
    }
    /// <summary>Clears the value of the "script" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScript() {
      script_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgExecuteJavaScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgExecuteJavaScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Script != other.Script) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScript) hash ^= Script.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScript) {
        output.WriteRawTag(18);
        output.WriteString(Script);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScript) {
        output.WriteRawTag(18);
        output.WriteString(Script);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScript) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Script);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgExecuteJavaScript other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScript) {
        Script = other.Script;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Script = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Script = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetFocus : pb::IMessage<CMsgSetFocus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetFocus> _parser = new pb::MessageParser<CMsgSetFocus>(() => new CMsgSetFocus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetFocus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetFocus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetFocus(CMsgSetFocus other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      focus_ = other.focus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetFocus Clone() {
      return new CMsgSetFocus(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "focus" field.</summary>
    public const int FocusFieldNumber = 2;
    private readonly static bool FocusDefaultValue = false;

    private bool focus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Focus {
      get { if ((_hasBits0 & 2) != 0) { return focus_; } else { return FocusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        focus_ = value;
      }
    }
    /// <summary>Gets whether the "focus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFocus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "focus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFocus() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetFocus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetFocus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Focus != other.Focus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasFocus) hash ^= Focus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasFocus) {
        output.WriteRawTag(16);
        output.WriteBool(Focus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasFocus) {
        output.WriteRawTag(16);
        output.WriteBool(Focus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasFocus) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetFocus other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasFocus) {
        Focus = other.Focus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Focus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Focus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHorizontalScrollBarSize : pb::IMessage<CMsgHorizontalScrollBarSize>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHorizontalScrollBarSize> _parser = new pb::MessageParser<CMsgHorizontalScrollBarSize>(() => new CMsgHorizontalScrollBarSize());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHorizontalScrollBarSize> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHorizontalScrollBarSize() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHorizontalScrollBarSize(CMsgHorizontalScrollBarSize other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHorizontalScrollBarSize Clone() {
      return new CMsgHorizontalScrollBarSize(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHorizontalScrollBarSize);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHorizontalScrollBarSize other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHorizontalScrollBarSize other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHorizontalScrollBarSizeResponse : pb::IMessage<CMsgHorizontalScrollBarSizeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHorizontalScrollBarSizeResponse> _parser = new pb::MessageParser<CMsgHorizontalScrollBarSizeResponse>(() => new CMsgHorizontalScrollBarSizeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHorizontalScrollBarSizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHorizontalScrollBarSizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHorizontalScrollBarSizeResponse(CMsgHorizontalScrollBarSizeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scrollMax_ = other.scrollMax_;
      scroll_ = other.scroll_;
      zoom_ = other.zoom_;
      visible_ = other.visible_;
      pageSize_ = other.pageSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHorizontalScrollBarSizeResponse Clone() {
      return new CMsgHorizontalScrollBarSizeResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scroll_max" field.</summary>
    public const int ScrollMaxFieldNumber = 6;
    private readonly static uint ScrollMaxDefaultValue = 0;

    private uint scrollMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScrollMax {
      get { if ((_hasBits0 & 2) != 0) { return scrollMax_; } else { return ScrollMaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scrollMax_ = value;
      }
    }
    /// <summary>Gets whether the "scroll_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrollMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scroll_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrollMax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "scroll" field.</summary>
    public const int ScrollFieldNumber = 7;
    private readonly static uint ScrollDefaultValue = 0;

    private uint scroll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scroll {
      get { if ((_hasBits0 & 4) != 0) { return scroll_; } else { return ScrollDefaultValue; } }
      set {
        _hasBits0 |= 4;
        scroll_ = value;
      }
    }
    /// <summary>Gets whether the "scroll" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScroll {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "scroll" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScroll() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 8;
    private readonly static float ZoomDefaultValue = 0F;

    private float zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Zoom {
      get { if ((_hasBits0 & 8) != 0) { return zoom_; } else { return ZoomDefaultValue; } }
      set {
        _hasBits0 |= 8;
        zoom_ = value;
      }
    }
    /// <summary>Gets whether the "zoom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZoom {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "zoom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZoom() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 9;
    private readonly static bool VisibleDefaultValue = false;

    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 16) != 0) { return visible_; } else { return VisibleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 10;
    private readonly static uint PageSizeDefaultValue = 0;

    private uint pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PageSize {
      get { if ((_hasBits0 & 32) != 0) { return pageSize_; } else { return PageSizeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        pageSize_ = value;
      }
    }
    /// <summary>Gets whether the "page_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageSize {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "page_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageSize() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHorizontalScrollBarSizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHorizontalScrollBarSizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (ScrollMax != other.ScrollMax) return false;
      if (Scroll != other.Scroll) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Zoom, other.Zoom)) return false;
      if (Visible != other.Visible) return false;
      if (PageSize != other.PageSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScrollMax) hash ^= ScrollMax.GetHashCode();
      if (HasScroll) hash ^= Scroll.GetHashCode();
      if (HasZoom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Zoom);
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasPageSize) hash ^= PageSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScrollMax) {
        output.WriteRawTag(48);
        output.WriteUInt32(ScrollMax);
      }
      if (HasScroll) {
        output.WriteRawTag(56);
        output.WriteUInt32(Scroll);
      }
      if (HasZoom) {
        output.WriteRawTag(69);
        output.WriteFloat(Zoom);
      }
      if (HasVisible) {
        output.WriteRawTag(72);
        output.WriteBool(Visible);
      }
      if (HasPageSize) {
        output.WriteRawTag(80);
        output.WriteUInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScrollMax) {
        output.WriteRawTag(48);
        output.WriteUInt32(ScrollMax);
      }
      if (HasScroll) {
        output.WriteRawTag(56);
        output.WriteUInt32(Scroll);
      }
      if (HasZoom) {
        output.WriteRawTag(69);
        output.WriteFloat(Zoom);
      }
      if (HasVisible) {
        output.WriteRawTag(72);
        output.WriteBool(Visible);
      }
      if (HasPageSize) {
        output.WriteRawTag(80);
        output.WriteUInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScrollMax) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScrollMax);
      }
      if (HasScroll) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scroll);
      }
      if (HasZoom) {
        size += 1 + 4;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasPageSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHorizontalScrollBarSizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScrollMax) {
        ScrollMax = other.ScrollMax;
      }
      if (other.HasScroll) {
        Scroll = other.Scroll;
      }
      if (other.HasZoom) {
        Zoom = other.Zoom;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasPageSize) {
        PageSize = other.PageSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 48: {
            ScrollMax = input.ReadUInt32();
            break;
          }
          case 56: {
            Scroll = input.ReadUInt32();
            break;
          }
          case 69: {
            Zoom = input.ReadFloat();
            break;
          }
          case 72: {
            Visible = input.ReadBool();
            break;
          }
          case 80: {
            PageSize = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 48: {
            ScrollMax = input.ReadUInt32();
            break;
          }
          case 56: {
            Scroll = input.ReadUInt32();
            break;
          }
          case 69: {
            Zoom = input.ReadFloat();
            break;
          }
          case 72: {
            Visible = input.ReadBool();
            break;
          }
          case 80: {
            PageSize = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVerticalScrollBarSize : pb::IMessage<CMsgVerticalScrollBarSize>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVerticalScrollBarSize> _parser = new pb::MessageParser<CMsgVerticalScrollBarSize>(() => new CMsgVerticalScrollBarSize());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVerticalScrollBarSize> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVerticalScrollBarSize() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVerticalScrollBarSize(CMsgVerticalScrollBarSize other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVerticalScrollBarSize Clone() {
      return new CMsgVerticalScrollBarSize(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVerticalScrollBarSize);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVerticalScrollBarSize other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVerticalScrollBarSize other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVerticalScrollBarSizeResponse : pb::IMessage<CMsgVerticalScrollBarSizeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVerticalScrollBarSizeResponse> _parser = new pb::MessageParser<CMsgVerticalScrollBarSizeResponse>(() => new CMsgVerticalScrollBarSizeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVerticalScrollBarSizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVerticalScrollBarSizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVerticalScrollBarSizeResponse(CMsgVerticalScrollBarSizeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scrollMax_ = other.scrollMax_;
      scroll_ = other.scroll_;
      zoom_ = other.zoom_;
      visible_ = other.visible_;
      pageSize_ = other.pageSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVerticalScrollBarSizeResponse Clone() {
      return new CMsgVerticalScrollBarSizeResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scroll_max" field.</summary>
    public const int ScrollMaxFieldNumber = 6;
    private readonly static uint ScrollMaxDefaultValue = 0;

    private uint scrollMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScrollMax {
      get { if ((_hasBits0 & 2) != 0) { return scrollMax_; } else { return ScrollMaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scrollMax_ = value;
      }
    }
    /// <summary>Gets whether the "scroll_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrollMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scroll_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrollMax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "scroll" field.</summary>
    public const int ScrollFieldNumber = 7;
    private readonly static uint ScrollDefaultValue = 0;

    private uint scroll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scroll {
      get { if ((_hasBits0 & 4) != 0) { return scroll_; } else { return ScrollDefaultValue; } }
      set {
        _hasBits0 |= 4;
        scroll_ = value;
      }
    }
    /// <summary>Gets whether the "scroll" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScroll {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "scroll" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScroll() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 8;
    private readonly static float ZoomDefaultValue = 0F;

    private float zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Zoom {
      get { if ((_hasBits0 & 8) != 0) { return zoom_; } else { return ZoomDefaultValue; } }
      set {
        _hasBits0 |= 8;
        zoom_ = value;
      }
    }
    /// <summary>Gets whether the "zoom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZoom {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "zoom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZoom() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 9;
    private readonly static bool VisibleDefaultValue = false;

    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 16) != 0) { return visible_; } else { return VisibleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 10;
    private readonly static uint PageSizeDefaultValue = 0;

    private uint pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PageSize {
      get { if ((_hasBits0 & 32) != 0) { return pageSize_; } else { return PageSizeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        pageSize_ = value;
      }
    }
    /// <summary>Gets whether the "page_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageSize {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "page_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageSize() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVerticalScrollBarSizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVerticalScrollBarSizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (ScrollMax != other.ScrollMax) return false;
      if (Scroll != other.Scroll) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Zoom, other.Zoom)) return false;
      if (Visible != other.Visible) return false;
      if (PageSize != other.PageSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScrollMax) hash ^= ScrollMax.GetHashCode();
      if (HasScroll) hash ^= Scroll.GetHashCode();
      if (HasZoom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Zoom);
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasPageSize) hash ^= PageSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScrollMax) {
        output.WriteRawTag(48);
        output.WriteUInt32(ScrollMax);
      }
      if (HasScroll) {
        output.WriteRawTag(56);
        output.WriteUInt32(Scroll);
      }
      if (HasZoom) {
        output.WriteRawTag(69);
        output.WriteFloat(Zoom);
      }
      if (HasVisible) {
        output.WriteRawTag(72);
        output.WriteBool(Visible);
      }
      if (HasPageSize) {
        output.WriteRawTag(80);
        output.WriteUInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScrollMax) {
        output.WriteRawTag(48);
        output.WriteUInt32(ScrollMax);
      }
      if (HasScroll) {
        output.WriteRawTag(56);
        output.WriteUInt32(Scroll);
      }
      if (HasZoom) {
        output.WriteRawTag(69);
        output.WriteFloat(Zoom);
      }
      if (HasVisible) {
        output.WriteRawTag(72);
        output.WriteBool(Visible);
      }
      if (HasPageSize) {
        output.WriteRawTag(80);
        output.WriteUInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScrollMax) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScrollMax);
      }
      if (HasScroll) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scroll);
      }
      if (HasZoom) {
        size += 1 + 4;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasPageSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVerticalScrollBarSizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScrollMax) {
        ScrollMax = other.ScrollMax;
      }
      if (other.HasScroll) {
        Scroll = other.Scroll;
      }
      if (other.HasZoom) {
        Zoom = other.Zoom;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasPageSize) {
        PageSize = other.PageSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 48: {
            ScrollMax = input.ReadUInt32();
            break;
          }
          case 56: {
            Scroll = input.ReadUInt32();
            break;
          }
          case 69: {
            Zoom = input.ReadFloat();
            break;
          }
          case 72: {
            Visible = input.ReadBool();
            break;
          }
          case 80: {
            PageSize = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 48: {
            ScrollMax = input.ReadUInt32();
            break;
          }
          case 56: {
            Scroll = input.ReadUInt32();
            break;
          }
          case 69: {
            Zoom = input.ReadFloat();
            break;
          }
          case 72: {
            Visible = input.ReadBool();
            break;
          }
          case 80: {
            PageSize = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFind : pb::IMessage<CMsgFind>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFind> _parser = new pb::MessageParser<CMsgFind>(() => new CMsgFind());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFind> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFind() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFind(CMsgFind other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      find_ = other.find_;
      infind_ = other.infind_;
      reverse_ = other.reverse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFind Clone() {
      return new CMsgFind(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "find" field.</summary>
    public const int FindFieldNumber = 2;
    private readonly static string FindDefaultValue = "";

    private string find_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Find {
      get { return find_ ?? FindDefaultValue; }
      set {
        find_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "find" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFind {
      get { return find_ != null; }
    }
    /// <summary>Clears the value of the "find" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFind() {
      find_ = null;
    }

    /// <summary>Field number for the "infind" field.</summary>
    public const int InfindFieldNumber = 3;
    private readonly static bool InfindDefaultValue = false;

    private bool infind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Infind {
      get { if ((_hasBits0 & 2) != 0) { return infind_; } else { return InfindDefaultValue; } }
      set {
        _hasBits0 |= 2;
        infind_ = value;
      }
    }
    /// <summary>Gets whether the "infind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInfind {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "infind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfind() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 4;
    private readonly static bool ReverseDefaultValue = false;

    private bool reverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reverse {
      get { if ((_hasBits0 & 4) != 0) { return reverse_; } else { return ReverseDefaultValue; } }
      set {
        _hasBits0 |= 4;
        reverse_ = value;
      }
    }
    /// <summary>Gets whether the "reverse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReverse {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "reverse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReverse() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFind);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFind other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Find != other.Find) return false;
      if (Infind != other.Infind) return false;
      if (Reverse != other.Reverse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasFind) hash ^= Find.GetHashCode();
      if (HasInfind) hash ^= Infind.GetHashCode();
      if (HasReverse) hash ^= Reverse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasFind) {
        output.WriteRawTag(18);
        output.WriteString(Find);
      }
      if (HasInfind) {
        output.WriteRawTag(24);
        output.WriteBool(Infind);
      }
      if (HasReverse) {
        output.WriteRawTag(32);
        output.WriteBool(Reverse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasFind) {
        output.WriteRawTag(18);
        output.WriteString(Find);
      }
      if (HasInfind) {
        output.WriteRawTag(24);
        output.WriteBool(Infind);
      }
      if (HasReverse) {
        output.WriteRawTag(32);
        output.WriteBool(Reverse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasFind) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Find);
      }
      if (HasInfind) {
        size += 1 + 1;
      }
      if (HasReverse) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFind other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasFind) {
        Find = other.Find;
      }
      if (other.HasInfind) {
        Infind = other.Infind;
      }
      if (other.HasReverse) {
        Reverse = other.Reverse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Find = input.ReadString();
            break;
          }
          case 24: {
            Infind = input.ReadBool();
            break;
          }
          case 32: {
            Reverse = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Find = input.ReadString();
            break;
          }
          case 24: {
            Infind = input.ReadBool();
            break;
          }
          case 32: {
            Reverse = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgStopFind : pb::IMessage<CMsgStopFind>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgStopFind> _parser = new pb::MessageParser<CMsgStopFind>(() => new CMsgStopFind());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgStopFind> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStopFind() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStopFind(CMsgStopFind other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStopFind Clone() {
      return new CMsgStopFind(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgStopFind);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgStopFind other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgStopFind other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetHorizontalScroll : pb::IMessage<CMsgSetHorizontalScroll>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetHorizontalScroll> _parser = new pb::MessageParser<CMsgSetHorizontalScroll>(() => new CMsgSetHorizontalScroll());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetHorizontalScroll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetHorizontalScroll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetHorizontalScroll(CMsgSetHorizontalScroll other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scroll_ = other.scroll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetHorizontalScroll Clone() {
      return new CMsgSetHorizontalScroll(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scroll" field.</summary>
    public const int ScrollFieldNumber = 2;
    private readonly static uint ScrollDefaultValue = 0;

    private uint scroll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scroll {
      get { if ((_hasBits0 & 2) != 0) { return scroll_; } else { return ScrollDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scroll_ = value;
      }
    }
    /// <summary>Gets whether the "scroll" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScroll {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scroll" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScroll() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetHorizontalScroll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetHorizontalScroll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Scroll != other.Scroll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScroll) hash ^= Scroll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScroll) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scroll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScroll) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scroll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScroll) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scroll);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetHorizontalScroll other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScroll) {
        Scroll = other.Scroll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Scroll = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Scroll = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetVerticalScroll : pb::IMessage<CMsgSetVerticalScroll>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetVerticalScroll> _parser = new pb::MessageParser<CMsgSetVerticalScroll>(() => new CMsgSetVerticalScroll());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetVerticalScroll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetVerticalScroll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetVerticalScroll(CMsgSetVerticalScroll other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scroll_ = other.scroll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetVerticalScroll Clone() {
      return new CMsgSetVerticalScroll(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scroll" field.</summary>
    public const int ScrollFieldNumber = 2;
    private readonly static uint ScrollDefaultValue = 0;

    private uint scroll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scroll {
      get { if ((_hasBits0 & 2) != 0) { return scroll_; } else { return ScrollDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scroll_ = value;
      }
    }
    /// <summary>Gets whether the "scroll" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScroll {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scroll" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScroll() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetVerticalScroll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetVerticalScroll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Scroll != other.Scroll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScroll) hash ^= Scroll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScroll) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scroll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScroll) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scroll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScroll) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scroll);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetVerticalScroll other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScroll) {
        Scroll = other.Scroll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Scroll = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Scroll = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetZoomLevel : pb::IMessage<CMsgSetZoomLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetZoomLevel> _parser = new pb::MessageParser<CMsgSetZoomLevel>(() => new CMsgSetZoomLevel());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetZoomLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetZoomLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetZoomLevel(CMsgSetZoomLevel other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      zoom_ = other.zoom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetZoomLevel Clone() {
      return new CMsgSetZoomLevel(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 2;
    private readonly static double ZoomDefaultValue = 0D;

    private double zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Zoom {
      get { if ((_hasBits0 & 2) != 0) { return zoom_; } else { return ZoomDefaultValue; } }
      set {
        _hasBits0 |= 2;
        zoom_ = value;
      }
    }
    /// <summary>Gets whether the "zoom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZoom {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "zoom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZoom() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetZoomLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetZoomLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Zoom, other.Zoom)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasZoom) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Zoom);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasZoom) {
        output.WriteRawTag(17);
        output.WriteDouble(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasZoom) {
        output.WriteRawTag(17);
        output.WriteDouble(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasZoom) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetZoomLevel other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasZoom) {
        Zoom = other.Zoom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            Zoom = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            Zoom = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgViewSource : pb::IMessage<CMsgViewSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgViewSource> _parser = new pb::MessageParser<CMsgViewSource>(() => new CMsgViewSource());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgViewSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgViewSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgViewSource(CMsgViewSource other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgViewSource Clone() {
      return new CMsgViewSource(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgViewSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgViewSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgViewSource other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserReady : pb::IMessage<CMsgBrowserReady>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserReady> _parser = new pb::MessageParser<CMsgBrowserReady>(() => new CMsgBrowserReady());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserReady> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserReady() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserReady(CMsgBrowserReady other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      vrOverlayKey_ = other.vrOverlayKey_;
      hwndBrowser_ = other.hwndBrowser_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserReady Clone() {
      return new CMsgBrowserReady(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "vr_overlay_key" field.</summary>
    public const int VrOverlayKeyFieldNumber = 2;
    private readonly static string VrOverlayKeyDefaultValue = "";

    private string vrOverlayKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrOverlayKey {
      get { return vrOverlayKey_ ?? VrOverlayKeyDefaultValue; }
      set {
        vrOverlayKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vr_overlay_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVrOverlayKey {
      get { return vrOverlayKey_ != null; }
    }
    /// <summary>Clears the value of the "vr_overlay_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVrOverlayKey() {
      vrOverlayKey_ = null;
    }

    /// <summary>Field number for the "hwnd_browser" field.</summary>
    public const int HwndBrowserFieldNumber = 3;
    private readonly static ulong HwndBrowserDefaultValue = 0UL;

    private ulong hwndBrowser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong HwndBrowser {
      get { if ((_hasBits0 & 2) != 0) { return hwndBrowser_; } else { return HwndBrowserDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hwndBrowser_ = value;
      }
    }
    /// <summary>Gets whether the "hwnd_browser" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHwndBrowser {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hwnd_browser" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHwndBrowser() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserReady);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserReady other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (VrOverlayKey != other.VrOverlayKey) return false;
      if (HwndBrowser != other.HwndBrowser) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasVrOverlayKey) hash ^= VrOverlayKey.GetHashCode();
      if (HasHwndBrowser) hash ^= HwndBrowser.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasVrOverlayKey) {
        output.WriteRawTag(18);
        output.WriteString(VrOverlayKey);
      }
      if (HasHwndBrowser) {
        output.WriteRawTag(25);
        output.WriteFixed64(HwndBrowser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasVrOverlayKey) {
        output.WriteRawTag(18);
        output.WriteString(VrOverlayKey);
      }
      if (HasHwndBrowser) {
        output.WriteRawTag(25);
        output.WriteFixed64(HwndBrowser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasVrOverlayKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrOverlayKey);
      }
      if (HasHwndBrowser) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserReady other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasVrOverlayKey) {
        VrOverlayKey = other.VrOverlayKey;
      }
      if (other.HasHwndBrowser) {
        HwndBrowser = other.HwndBrowser;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            VrOverlayKey = input.ReadString();
            break;
          }
          case 25: {
            HwndBrowser = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            VrOverlayKey = input.ReadString();
            break;
          }
          case 25: {
            HwndBrowser = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgURLChanged : pb::IMessage<CMsgURLChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgURLChanged> _parser = new pb::MessageParser<CMsgURLChanged>(() => new CMsgURLChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgURLChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgURLChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgURLChanged(CMsgURLChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      postData_ = other.postData_;
      bIsRedirect_ = other.bIsRedirect_;
      pagetitle_ = other.pagetitle_;
      bNewNavigation_ = other.bNewNavigation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgURLChanged Clone() {
      return new CMsgURLChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "postData" field.</summary>
    public const int PostDataFieldNumber = 3;
    private readonly static string PostDataDefaultValue = "";

    private string postData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PostData {
      get { return postData_ ?? PostDataDefaultValue; }
      set {
        postData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "postData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPostData {
      get { return postData_ != null; }
    }
    /// <summary>Clears the value of the "postData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPostData() {
      postData_ = null;
    }

    /// <summary>Field number for the "bIsRedirect" field.</summary>
    public const int BIsRedirectFieldNumber = 4;
    private readonly static bool BIsRedirectDefaultValue = false;

    private bool bIsRedirect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsRedirect {
      get { if ((_hasBits0 & 2) != 0) { return bIsRedirect_; } else { return BIsRedirectDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bIsRedirect_ = value;
      }
    }
    /// <summary>Gets whether the "bIsRedirect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBIsRedirect {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bIsRedirect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBIsRedirect() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pagetitle" field.</summary>
    public const int PagetitleFieldNumber = 5;
    private readonly static string PagetitleDefaultValue = "";

    private string pagetitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Pagetitle {
      get { return pagetitle_ ?? PagetitleDefaultValue; }
      set {
        pagetitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pagetitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPagetitle {
      get { return pagetitle_ != null; }
    }
    /// <summary>Clears the value of the "pagetitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPagetitle() {
      pagetitle_ = null;
    }

    /// <summary>Field number for the "bNewNavigation" field.</summary>
    public const int BNewNavigationFieldNumber = 6;
    private readonly static bool BNewNavigationDefaultValue = false;

    private bool bNewNavigation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BNewNavigation {
      get { if ((_hasBits0 & 4) != 0) { return bNewNavigation_; } else { return BNewNavigationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bNewNavigation_ = value;
      }
    }
    /// <summary>Gets whether the "bNewNavigation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBNewNavigation {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bNewNavigation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBNewNavigation() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgURLChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgURLChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (PostData != other.PostData) return false;
      if (BIsRedirect != other.BIsRedirect) return false;
      if (Pagetitle != other.Pagetitle) return false;
      if (BNewNavigation != other.BNewNavigation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasPostData) hash ^= PostData.GetHashCode();
      if (HasBIsRedirect) hash ^= BIsRedirect.GetHashCode();
      if (HasPagetitle) hash ^= Pagetitle.GetHashCode();
      if (HasBNewNavigation) hash ^= BNewNavigation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPostData) {
        output.WriteRawTag(26);
        output.WriteString(PostData);
      }
      if (HasBIsRedirect) {
        output.WriteRawTag(32);
        output.WriteBool(BIsRedirect);
      }
      if (HasPagetitle) {
        output.WriteRawTag(42);
        output.WriteString(Pagetitle);
      }
      if (HasBNewNavigation) {
        output.WriteRawTag(48);
        output.WriteBool(BNewNavigation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPostData) {
        output.WriteRawTag(26);
        output.WriteString(PostData);
      }
      if (HasBIsRedirect) {
        output.WriteRawTag(32);
        output.WriteBool(BIsRedirect);
      }
      if (HasPagetitle) {
        output.WriteRawTag(42);
        output.WriteString(Pagetitle);
      }
      if (HasBNewNavigation) {
        output.WriteRawTag(48);
        output.WriteBool(BNewNavigation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasPostData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostData);
      }
      if (HasBIsRedirect) {
        size += 1 + 1;
      }
      if (HasPagetitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pagetitle);
      }
      if (HasBNewNavigation) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgURLChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasPostData) {
        PostData = other.PostData;
      }
      if (other.HasBIsRedirect) {
        BIsRedirect = other.BIsRedirect;
      }
      if (other.HasPagetitle) {
        Pagetitle = other.Pagetitle;
      }
      if (other.HasBNewNavigation) {
        BNewNavigation = other.BNewNavigation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            PostData = input.ReadString();
            break;
          }
          case 32: {
            BIsRedirect = input.ReadBool();
            break;
          }
          case 42: {
            Pagetitle = input.ReadString();
            break;
          }
          case 48: {
            BNewNavigation = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            PostData = input.ReadString();
            break;
          }
          case 32: {
            BIsRedirect = input.ReadBool();
            break;
          }
          case 42: {
            Pagetitle = input.ReadString();
            break;
          }
          case 48: {
            BNewNavigation = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CHistoryEntry : pb::IMessage<CHistoryEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CHistoryEntry> _parser = new pb::MessageParser<CHistoryEntry>(() => new CHistoryEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CHistoryEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHistoryEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHistoryEntry(CHistoryEntry other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHistoryEntry Clone() {
      return new CHistoryEntry(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CHistoryEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CHistoryEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CHistoryEntry other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHistoryChanged : pb::IMessage<CMsgHistoryChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHistoryChanged> _parser = new pb::MessageParser<CMsgHistoryChanged>(() => new CMsgHistoryChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHistoryChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHistoryChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHistoryChanged(CMsgHistoryChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      index_ = other.index_;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHistoryChanged Clone() {
      return new CMsgHistoryChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private readonly static uint IndexDefaultValue = 0;

    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index {
      get { if ((_hasBits0 & 2) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CHistoryEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CHistoryEntry.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CHistoryEntry> entries_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CHistoryEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CHistoryEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHistoryChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHistoryChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Index != other.Index) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasIndex) hash ^= Index.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHistoryChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgLoadError : pb::IMessage<CMsgLoadError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLoadError> _parser = new pb::MessageParser<CMsgLoadError>(() => new CMsgLoadError());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgLoadError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadError(CMsgLoadError other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      errorCode_ = other.errorCode_;
      url_ = other.url_;
      errorDescription_ = other.errorDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadError Clone() {
      return new CMsgLoadError(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private readonly static int ErrorCodeDefaultValue = 0;

    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { if ((_hasBits0 & 2) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "error_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "error_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "error_description" field.</summary>
    public const int ErrorDescriptionFieldNumber = 4;
    private readonly static string ErrorDescriptionDefaultValue = "";

    private string errorDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorDescription {
      get { return errorDescription_ ?? ErrorDescriptionDefaultValue; }
      set {
        errorDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorDescription {
      get { return errorDescription_ != null; }
    }
    /// <summary>Clears the value of the "error_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorDescription() {
      errorDescription_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgLoadError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgLoadError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (Url != other.Url) return false;
      if (ErrorDescription != other.ErrorDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasErrorDescription) hash ^= ErrorDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasErrorCode) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorCode);
      }
      if (HasUrl) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (HasErrorDescription) {
        output.WriteRawTag(34);
        output.WriteString(ErrorDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasErrorCode) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorCode);
      }
      if (HasUrl) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (HasErrorDescription) {
        output.WriteRawTag(34);
        output.WriteString(ErrorDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasErrorDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgLoadError other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasErrorDescription) {
        ErrorDescription = other.ErrorDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 34: {
            ErrorDescription = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 34: {
            ErrorDescription = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CHTMLHeader : pb::IMessage<CHTMLHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CHTMLHeader> _parser = new pb::MessageParser<CHTMLHeader>(() => new CHTMLHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CHTMLHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHTMLHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHTMLHeader(CHTMLHeader other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHTMLHeader Clone() {
      return new CHTMLHeader(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private readonly static string KeyDefaultValue = "";

    private string key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CHTMLHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CHTMLHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CHTMLHeader other) {
      if (other == null) {
        return;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CHTMLPageSecurityInfo : pb::IMessage<CHTMLPageSecurityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CHTMLPageSecurityInfo> _parser = new pb::MessageParser<CHTMLPageSecurityInfo>(() => new CHTMLPageSecurityInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CHTMLPageSecurityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHTMLPageSecurityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHTMLPageSecurityInfo(CHTMLPageSecurityInfo other) : this() {
      _hasBits0 = other._hasBits0;
      bIsSecure_ = other.bIsSecure_;
      bHasCertError_ = other.bHasCertError_;
      issuerName_ = other.issuerName_;
      certName_ = other.certName_;
      certExpiry_ = other.certExpiry_;
      nCertBits_ = other.nCertBits_;
      bIsEVCert_ = other.bIsEVCert_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHTMLPageSecurityInfo Clone() {
      return new CHTMLPageSecurityInfo(this);
    }

    /// <summary>Field number for the "bIsSecure" field.</summary>
    public const int BIsSecureFieldNumber = 1;
    private readonly static bool BIsSecureDefaultValue = false;

    private bool bIsSecure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsSecure {
      get { if ((_hasBits0 & 1) != 0) { return bIsSecure_; } else { return BIsSecureDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bIsSecure_ = value;
      }
    }
    /// <summary>Gets whether the "bIsSecure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBIsSecure {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bIsSecure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBIsSecure() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bHasCertError" field.</summary>
    public const int BHasCertErrorFieldNumber = 2;
    private readonly static bool BHasCertErrorDefaultValue = false;

    private bool bHasCertError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BHasCertError {
      get { if ((_hasBits0 & 2) != 0) { return bHasCertError_; } else { return BHasCertErrorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bHasCertError_ = value;
      }
    }
    /// <summary>Gets whether the "bHasCertError" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBHasCertError {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bHasCertError" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBHasCertError() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "issuerName" field.</summary>
    public const int IssuerNameFieldNumber = 3;
    private readonly static string IssuerNameDefaultValue = "";

    private string issuerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IssuerName {
      get { return issuerName_ ?? IssuerNameDefaultValue; }
      set {
        issuerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "issuerName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIssuerName {
      get { return issuerName_ != null; }
    }
    /// <summary>Clears the value of the "issuerName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIssuerName() {
      issuerName_ = null;
    }

    /// <summary>Field number for the "certName" field.</summary>
    public const int CertNameFieldNumber = 4;
    private readonly static string CertNameDefaultValue = "";

    private string certName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CertName {
      get { return certName_ ?? CertNameDefaultValue; }
      set {
        certName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "certName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertName {
      get { return certName_ != null; }
    }
    /// <summary>Clears the value of the "certName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertName() {
      certName_ = null;
    }

    /// <summary>Field number for the "certExpiry" field.</summary>
    public const int CertExpiryFieldNumber = 5;
    private readonly static int CertExpiryDefaultValue = 0;

    private int certExpiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CertExpiry {
      get { if ((_hasBits0 & 4) != 0) { return certExpiry_; } else { return CertExpiryDefaultValue; } }
      set {
        _hasBits0 |= 4;
        certExpiry_ = value;
      }
    }
    /// <summary>Gets whether the "certExpiry" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertExpiry {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "certExpiry" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertExpiry() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nCertBits" field.</summary>
    public const int NCertBitsFieldNumber = 6;
    private readonly static int NCertBitsDefaultValue = 0;

    private int nCertBits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NCertBits {
      get { if ((_hasBits0 & 8) != 0) { return nCertBits_; } else { return NCertBitsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nCertBits_ = value;
      }
    }
    /// <summary>Gets whether the "nCertBits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNCertBits {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "nCertBits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNCertBits() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "bIsEVCert" field.</summary>
    public const int BIsEVCertFieldNumber = 7;
    private readonly static bool BIsEVCertDefaultValue = false;

    private bool bIsEVCert_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsEVCert {
      get { if ((_hasBits0 & 16) != 0) { return bIsEVCert_; } else { return BIsEVCertDefaultValue; } }
      set {
        _hasBits0 |= 16;
        bIsEVCert_ = value;
      }
    }
    /// <summary>Gets whether the "bIsEVCert" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBIsEVCert {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "bIsEVCert" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBIsEVCert() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CHTMLPageSecurityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CHTMLPageSecurityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BIsSecure != other.BIsSecure) return false;
      if (BHasCertError != other.BHasCertError) return false;
      if (IssuerName != other.IssuerName) return false;
      if (CertName != other.CertName) return false;
      if (CertExpiry != other.CertExpiry) return false;
      if (NCertBits != other.NCertBits) return false;
      if (BIsEVCert != other.BIsEVCert) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBIsSecure) hash ^= BIsSecure.GetHashCode();
      if (HasBHasCertError) hash ^= BHasCertError.GetHashCode();
      if (HasIssuerName) hash ^= IssuerName.GetHashCode();
      if (HasCertName) hash ^= CertName.GetHashCode();
      if (HasCertExpiry) hash ^= CertExpiry.GetHashCode();
      if (HasNCertBits) hash ^= NCertBits.GetHashCode();
      if (HasBIsEVCert) hash ^= BIsEVCert.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBIsSecure) {
        output.WriteRawTag(8);
        output.WriteBool(BIsSecure);
      }
      if (HasBHasCertError) {
        output.WriteRawTag(16);
        output.WriteBool(BHasCertError);
      }
      if (HasIssuerName) {
        output.WriteRawTag(26);
        output.WriteString(IssuerName);
      }
      if (HasCertName) {
        output.WriteRawTag(34);
        output.WriteString(CertName);
      }
      if (HasCertExpiry) {
        output.WriteRawTag(40);
        output.WriteInt32(CertExpiry);
      }
      if (HasNCertBits) {
        output.WriteRawTag(48);
        output.WriteInt32(NCertBits);
      }
      if (HasBIsEVCert) {
        output.WriteRawTag(56);
        output.WriteBool(BIsEVCert);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBIsSecure) {
        output.WriteRawTag(8);
        output.WriteBool(BIsSecure);
      }
      if (HasBHasCertError) {
        output.WriteRawTag(16);
        output.WriteBool(BHasCertError);
      }
      if (HasIssuerName) {
        output.WriteRawTag(26);
        output.WriteString(IssuerName);
      }
      if (HasCertName) {
        output.WriteRawTag(34);
        output.WriteString(CertName);
      }
      if (HasCertExpiry) {
        output.WriteRawTag(40);
        output.WriteInt32(CertExpiry);
      }
      if (HasNCertBits) {
        output.WriteRawTag(48);
        output.WriteInt32(NCertBits);
      }
      if (HasBIsEVCert) {
        output.WriteRawTag(56);
        output.WriteBool(BIsEVCert);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBIsSecure) {
        size += 1 + 1;
      }
      if (HasBHasCertError) {
        size += 1 + 1;
      }
      if (HasIssuerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IssuerName);
      }
      if (HasCertName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CertName);
      }
      if (HasCertExpiry) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CertExpiry);
      }
      if (HasNCertBits) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCertBits);
      }
      if (HasBIsEVCert) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CHTMLPageSecurityInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasBIsSecure) {
        BIsSecure = other.BIsSecure;
      }
      if (other.HasBHasCertError) {
        BHasCertError = other.BHasCertError;
      }
      if (other.HasIssuerName) {
        IssuerName = other.IssuerName;
      }
      if (other.HasCertName) {
        CertName = other.CertName;
      }
      if (other.HasCertExpiry) {
        CertExpiry = other.CertExpiry;
      }
      if (other.HasNCertBits) {
        NCertBits = other.NCertBits;
      }
      if (other.HasBIsEVCert) {
        BIsEVCert = other.BIsEVCert;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BIsSecure = input.ReadBool();
            break;
          }
          case 16: {
            BHasCertError = input.ReadBool();
            break;
          }
          case 26: {
            IssuerName = input.ReadString();
            break;
          }
          case 34: {
            CertName = input.ReadString();
            break;
          }
          case 40: {
            CertExpiry = input.ReadInt32();
            break;
          }
          case 48: {
            NCertBits = input.ReadInt32();
            break;
          }
          case 56: {
            BIsEVCert = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BIsSecure = input.ReadBool();
            break;
          }
          case 16: {
            BHasCertError = input.ReadBool();
            break;
          }
          case 26: {
            IssuerName = input.ReadString();
            break;
          }
          case 34: {
            CertName = input.ReadString();
            break;
          }
          case 40: {
            CertExpiry = input.ReadInt32();
            break;
          }
          case 48: {
            NCertBits = input.ReadInt32();
            break;
          }
          case 56: {
            BIsEVCert = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFinishedRequest : pb::IMessage<CMsgFinishedRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFinishedRequest> _parser = new pb::MessageParser<CMsgFinishedRequest>(() => new CMsgFinishedRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFinishedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFinishedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFinishedRequest(CMsgFinishedRequest other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      pageTitle_ = other.pageTitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFinishedRequest Clone() {
      return new CMsgFinishedRequest(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "pageTitle" field.</summary>
    public const int PageTitleFieldNumber = 3;
    private readonly static string PageTitleDefaultValue = "";

    private string pageTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageTitle {
      get { return pageTitle_ ?? PageTitleDefaultValue; }
      set {
        pageTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pageTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageTitle {
      get { return pageTitle_ != null; }
    }
    /// <summary>Clears the value of the "pageTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageTitle() {
      pageTitle_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFinishedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFinishedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (PageTitle != other.PageTitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasPageTitle) hash ^= PageTitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPageTitle) {
        output.WriteRawTag(26);
        output.WriteString(PageTitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPageTitle) {
        output.WriteRawTag(26);
        output.WriteString(PageTitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasPageTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageTitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFinishedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasPageTitle) {
        PageTitle = other.PageTitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            PageTitle = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            PageTitle = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgLoadedRequest : pb::IMessage<CMsgLoadedRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLoadedRequest> _parser = new pb::MessageParser<CMsgLoadedRequest>(() => new CMsgLoadedRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgLoadedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadedRequest(CMsgLoadedRequest other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      pageTitle_ = other.pageTitle_;
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadedRequest Clone() {
      return new CMsgLoadedRequest(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "pageTitle" field.</summary>
    public const int PageTitleFieldNumber = 3;
    private readonly static string PageTitleDefaultValue = "";

    private string pageTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageTitle {
      get { return pageTitle_ ?? PageTitleDefaultValue; }
      set {
        pageTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pageTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageTitle {
      get { return pageTitle_ != null; }
    }
    /// <summary>Clears the value of the "pageTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageTitle() {
      pageTitle_ = null;
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CHTMLHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.CHTMLHeader.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CHTMLHeader> headers_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CHTMLHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CHTMLHeader> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgLoadedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgLoadedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (PageTitle != other.PageTitle) return false;
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasPageTitle) hash ^= PageTitle.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPageTitle) {
        output.WriteRawTag(26);
        output.WriteString(PageTitle);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasPageTitle) {
        output.WriteRawTag(26);
        output.WriteString(PageTitle);
      }
      headers_.WriteTo(ref output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasPageTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageTitle);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgLoadedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasPageTitle) {
        PageTitle = other.PageTitle;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            PageTitle = input.ReadString();
            break;
          }
          case 42: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            PageTitle = input.ReadString();
            break;
          }
          case 42: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFavIconURLChanged : pb::IMessage<CMsgFavIconURLChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFavIconURLChanged> _parser = new pb::MessageParser<CMsgFavIconURLChanged>(() => new CMsgFavIconURLChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFavIconURLChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFavIconURLChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFavIconURLChanged(CMsgFavIconURLChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      urls_ = other.urls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFavIconURLChanged Clone() {
      return new CMsgFavIconURLChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "urls" field.</summary>
    public const int UrlsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_urls_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> urls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Urls {
      get { return urls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFavIconURLChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFavIconURLChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if(!urls_.Equals(other.urls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      hash ^= urls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      urls_.WriteTo(output, _repeated_urls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      urls_.WriteTo(ref output, _repeated_urls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      size += urls_.CalculateSize(_repeated_urls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFavIconURLChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      urls_.Add(other.urls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            urls_.AddEntriesFrom(input, _repeated_urls_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            urls_.AddEntriesFrom(ref input, _repeated_urls_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPageSecurity : pb::IMessage<CMsgPageSecurity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPageSecurity> _parser = new pb::MessageParser<CMsgPageSecurity>(() => new CMsgPageSecurity());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPageSecurity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPageSecurity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPageSecurity(CMsgPageSecurity other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      securityInfo_ = other.securityInfo_ != null ? other.securityInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPageSecurity Clone() {
      return new CMsgPageSecurity(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "security_info" field.</summary>
    public const int SecurityInfoFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo securityInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo SecurityInfo {
      get { return securityInfo_; }
      set {
        securityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPageSecurity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPageSecurity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (!object.Equals(SecurityInfo, other.SecurityInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (securityInfo_ != null) hash ^= SecurityInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (securityInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SecurityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (securityInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SecurityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (securityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecurityInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPageSecurity other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.securityInfo_ != null) {
        if (securityInfo_ == null) {
          SecurityInfo = new global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo();
        }
        SecurityInfo.MergeFrom(other.SecurityInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            if (securityInfo_ == null) {
              SecurityInfo = new global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo();
            }
            input.ReadMessage(SecurityInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            if (securityInfo_ == null) {
              SecurityInfo = new global::OpenSteamworks.Protobuf.CHTMLPageSecurityInfo();
            }
            input.ReadMessage(SecurityInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgStartRequest : pb::IMessage<CMsgStartRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgStartRequest> _parser = new pb::MessageParser<CMsgStartRequest>(() => new CMsgStartRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgStartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartRequest(CMsgStartRequest other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      target_ = other.target_;
      postData_ = other.postData_;
      bIsRedirect_ = other.bIsRedirect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartRequest Clone() {
      return new CMsgStartRequest(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private readonly static string TargetDefaultValue = "";

    private string target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_ ?? TargetDefaultValue; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "postData" field.</summary>
    public const int PostDataFieldNumber = 4;
    private readonly static string PostDataDefaultValue = "";

    private string postData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PostData {
      get { return postData_ ?? PostDataDefaultValue; }
      set {
        postData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "postData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPostData {
      get { return postData_ != null; }
    }
    /// <summary>Clears the value of the "postData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPostData() {
      postData_ = null;
    }

    /// <summary>Field number for the "bIsRedirect" field.</summary>
    public const int BIsRedirectFieldNumber = 5;
    private readonly static bool BIsRedirectDefaultValue = false;

    private bool bIsRedirect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsRedirect {
      get { if ((_hasBits0 & 2) != 0) { return bIsRedirect_; } else { return BIsRedirectDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bIsRedirect_ = value;
      }
    }
    /// <summary>Gets whether the "bIsRedirect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBIsRedirect {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bIsRedirect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBIsRedirect() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgStartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgStartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (Target != other.Target) return false;
      if (PostData != other.PostData) return false;
      if (BIsRedirect != other.BIsRedirect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasPostData) hash ^= PostData.GetHashCode();
      if (HasBIsRedirect) hash ^= BIsRedirect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasPostData) {
        output.WriteRawTag(34);
        output.WriteString(PostData);
      }
      if (HasBIsRedirect) {
        output.WriteRawTag(40);
        output.WriteBool(BIsRedirect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (HasPostData) {
        output.WriteRawTag(34);
        output.WriteString(PostData);
      }
      if (HasBIsRedirect) {
        output.WriteRawTag(40);
        output.WriteBool(BIsRedirect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (HasPostData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostData);
      }
      if (HasBIsRedirect) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgStartRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasPostData) {
        PostData = other.PostData;
      }
      if (other.HasBIsRedirect) {
        BIsRedirect = other.BIsRedirect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            PostData = input.ReadString();
            break;
          }
          case 40: {
            BIsRedirect = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            PostData = input.ReadString();
            break;
          }
          case 40: {
            BIsRedirect = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgStartRequestResponse : pb::IMessage<CMsgStartRequestResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgStartRequestResponse> _parser = new pb::MessageParser<CMsgStartRequestResponse>(() => new CMsgStartRequestResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgStartRequestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartRequestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartRequestResponse(CMsgStartRequestResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      bAllow_ = other.bAllow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartRequestResponse Clone() {
      return new CMsgStartRequestResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bAllow" field.</summary>
    public const int BAllowFieldNumber = 2;
    private readonly static bool BAllowDefaultValue = false;

    private bool bAllow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BAllow {
      get { if ((_hasBits0 & 2) != 0) { return bAllow_; } else { return BAllowDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bAllow_ = value;
      }
    }
    /// <summary>Gets whether the "bAllow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBAllow {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bAllow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBAllow() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgStartRequestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgStartRequestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (BAllow != other.BAllow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasBAllow) hash ^= BAllow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBAllow) {
        output.WriteRawTag(16);
        output.WriteBool(BAllow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBAllow) {
        output.WriteRawTag(16);
        output.WriteBool(BAllow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasBAllow) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgStartRequestResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasBAllow) {
        BAllow = other.BAllow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            BAllow = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            BAllow = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgShowPopup : pb::IMessage<CMsgShowPopup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgShowPopup> _parser = new pb::MessageParser<CMsgShowPopup>(() => new CMsgShowPopup());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgShowPopup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowPopup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowPopup(CMsgShowPopup other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowPopup Clone() {
      return new CMsgShowPopup(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgShowPopup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgShowPopup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgShowPopup other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHidePopup : pb::IMessage<CMsgHidePopup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHidePopup> _parser = new pb::MessageParser<CMsgHidePopup>(() => new CMsgHidePopup());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHidePopup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHidePopup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHidePopup(CMsgHidePopup other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHidePopup Clone() {
      return new CMsgHidePopup(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHidePopup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHidePopup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHidePopup other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSizePopup : pb::IMessage<CMsgSizePopup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSizePopup> _parser = new pb::MessageParser<CMsgSizePopup>(() => new CMsgSizePopup());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSizePopup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSizePopup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSizePopup(CMsgSizePopup other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      wide_ = other.wide_;
      tall_ = other.tall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSizePopup Clone() {
      return new CMsgSizePopup(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static int XDefaultValue = 0;

    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static int YDefaultValue = 0;

    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "wide" field.</summary>
    public const int WideFieldNumber = 4;
    private readonly static uint WideDefaultValue = 0;

    private uint wide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Wide {
      get { if ((_hasBits0 & 8) != 0) { return wide_; } else { return WideDefaultValue; } }
      set {
        _hasBits0 |= 8;
        wide_ = value;
      }
    }
    /// <summary>Gets whether the "wide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWide {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "wide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWide() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tall" field.</summary>
    public const int TallFieldNumber = 5;
    private readonly static uint TallDefaultValue = 0;

    private uint tall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tall {
      get { if ((_hasBits0 & 16) != 0) { return tall_; } else { return TallDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tall_ = value;
      }
    }
    /// <summary>Gets whether the "tall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTall {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTall() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSizePopup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSizePopup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Wide != other.Wide) return false;
      if (Tall != other.Tall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasWide) hash ^= Wide.GetHashCode();
      if (HasTall) hash ^= Tall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (HasWide) {
        output.WriteRawTag(32);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(40);
        output.WriteUInt32(Tall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (HasWide) {
        output.WriteRawTag(32);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(40);
        output.WriteUInt32(Tall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (HasWide) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wide);
      }
      if (HasTall) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSizePopup other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasWide) {
        Wide = other.Wide;
      }
      if (other.HasTall) {
        Tall = other.Tall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Wide = input.ReadUInt32();
            break;
          }
          case 40: {
            Tall = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Wide = input.ReadUInt32();
            break;
          }
          case 40: {
            Tall = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgOpenNewTab : pb::IMessage<CMsgOpenNewTab>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgOpenNewTab> _parser = new pb::MessageParser<CMsgOpenNewTab>(() => new CMsgOpenNewTab());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgOpenNewTab> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenNewTab() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenNewTab(CMsgOpenNewTab other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      bForeground_ = other.bForeground_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenNewTab Clone() {
      return new CMsgOpenNewTab(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "bForeground" field.</summary>
    public const int BForegroundFieldNumber = 3;
    private readonly static bool BForegroundDefaultValue = false;

    private bool bForeground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BForeground {
      get { if ((_hasBits0 & 2) != 0) { return bForeground_; } else { return BForegroundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bForeground_ = value;
      }
    }
    /// <summary>Gets whether the "bForeground" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBForeground {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bForeground" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBForeground() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgOpenNewTab);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgOpenNewTab other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (BForeground != other.BForeground) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasBForeground) hash ^= BForeground.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasBForeground) {
        output.WriteRawTag(24);
        output.WriteBool(BForeground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasBForeground) {
        output.WriteRawTag(24);
        output.WriteBool(BForeground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasBForeground) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgOpenNewTab other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasBForeground) {
        BForeground = other.BForeground;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 24: {
            BForeground = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 24: {
            BForeground = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPopupHTMLWindow : pb::IMessage<CMsgPopupHTMLWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPopupHTMLWindow> _parser = new pb::MessageParser<CMsgPopupHTMLWindow>(() => new CMsgPopupHTMLWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPopupHTMLWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupHTMLWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupHTMLWindow(CMsgPopupHTMLWindow other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      x_ = other.x_;
      y_ = other.y_;
      wide_ = other.wide_;
      tall_ = other.tall_;
      popupIndex_ = other.popupIndex_;
      trustedCreator_ = other.trustedCreator_;
      name_ = other.name_;
      hwnd_ = other.hwnd_;
      parentPopupIndex_ = other.parentPopupIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupHTMLWindow Clone() {
      return new CMsgPopupHTMLWindow(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private readonly static int XDefaultValue = -2147483648;

    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private readonly static int YDefaultValue = -2147483648;

    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "wide" field.</summary>
    public const int WideFieldNumber = 5;
    private readonly static uint WideDefaultValue = 0;

    private uint wide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Wide {
      get { if ((_hasBits0 & 8) != 0) { return wide_; } else { return WideDefaultValue; } }
      set {
        _hasBits0 |= 8;
        wide_ = value;
      }
    }
    /// <summary>Gets whether the "wide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWide {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "wide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWide() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tall" field.</summary>
    public const int TallFieldNumber = 6;
    private readonly static uint TallDefaultValue = 0;

    private uint tall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tall {
      get { if ((_hasBits0 & 16) != 0) { return tall_; } else { return TallDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tall_ = value;
      }
    }
    /// <summary>Gets whether the "tall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTall {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTall() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "popup_index" field.</summary>
    public const int PopupIndexFieldNumber = 7;
    private readonly static uint PopupIndexDefaultValue = 0;

    private uint popupIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PopupIndex {
      get { if ((_hasBits0 & 32) != 0) { return popupIndex_; } else { return PopupIndexDefaultValue; } }
      set {
        _hasBits0 |= 32;
        popupIndex_ = value;
      }
    }
    /// <summary>Gets whether the "popup_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPopupIndex {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "popup_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPopupIndex() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "trusted_creator" field.</summary>
    public const int TrustedCreatorFieldNumber = 8;
    private readonly static bool TrustedCreatorDefaultValue = false;

    private bool trustedCreator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrustedCreator {
      get { if ((_hasBits0 & 64) != 0) { return trustedCreator_; } else { return TrustedCreatorDefaultValue; } }
      set {
        _hasBits0 |= 64;
        trustedCreator_ = value;
      }
    }
    /// <summary>Gets whether the "trusted_creator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrustedCreator {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "trusted_creator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrustedCreator() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 9;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "hwnd" field.</summary>
    public const int HwndFieldNumber = 10;
    private readonly static ulong HwndDefaultValue = 0UL;

    private ulong hwnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Hwnd {
      get { if ((_hasBits0 & 128) != 0) { return hwnd_; } else { return HwndDefaultValue; } }
      set {
        _hasBits0 |= 128;
        hwnd_ = value;
      }
    }
    /// <summary>Gets whether the "hwnd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHwnd {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "hwnd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHwnd() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "parent_popup_index" field.</summary>
    public const int ParentPopupIndexFieldNumber = 11;
    private readonly static uint ParentPopupIndexDefaultValue = 0;

    private uint parentPopupIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ParentPopupIndex {
      get { if ((_hasBits0 & 256) != 0) { return parentPopupIndex_; } else { return ParentPopupIndexDefaultValue; } }
      set {
        _hasBits0 |= 256;
        parentPopupIndex_ = value;
      }
    }
    /// <summary>Gets whether the "parent_popup_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasParentPopupIndex {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "parent_popup_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearParentPopupIndex() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPopupHTMLWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPopupHTMLWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Wide != other.Wide) return false;
      if (Tall != other.Tall) return false;
      if (PopupIndex != other.PopupIndex) return false;
      if (TrustedCreator != other.TrustedCreator) return false;
      if (Name != other.Name) return false;
      if (Hwnd != other.Hwnd) return false;
      if (ParentPopupIndex != other.ParentPopupIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasWide) hash ^= Wide.GetHashCode();
      if (HasTall) hash ^= Tall.GetHashCode();
      if (HasPopupIndex) hash ^= PopupIndex.GetHashCode();
      if (HasTrustedCreator) hash ^= TrustedCreator.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasHwnd) hash ^= Hwnd.GetHashCode();
      if (HasParentPopupIndex) hash ^= ParentPopupIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasX) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (HasWide) {
        output.WriteRawTag(40);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(48);
        output.WriteUInt32(Tall);
      }
      if (HasPopupIndex) {
        output.WriteRawTag(56);
        output.WriteUInt32(PopupIndex);
      }
      if (HasTrustedCreator) {
        output.WriteRawTag(64);
        output.WriteBool(TrustedCreator);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (HasHwnd) {
        output.WriteRawTag(80);
        output.WriteUInt64(Hwnd);
      }
      if (HasParentPopupIndex) {
        output.WriteRawTag(88);
        output.WriteUInt32(ParentPopupIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasX) {
        output.WriteRawTag(24);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(32);
        output.WriteInt32(Y);
      }
      if (HasWide) {
        output.WriteRawTag(40);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(48);
        output.WriteUInt32(Tall);
      }
      if (HasPopupIndex) {
        output.WriteRawTag(56);
        output.WriteUInt32(PopupIndex);
      }
      if (HasTrustedCreator) {
        output.WriteRawTag(64);
        output.WriteBool(TrustedCreator);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (HasHwnd) {
        output.WriteRawTag(80);
        output.WriteUInt64(Hwnd);
      }
      if (HasParentPopupIndex) {
        output.WriteRawTag(88);
        output.WriteUInt32(ParentPopupIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (HasWide) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wide);
      }
      if (HasTall) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tall);
      }
      if (HasPopupIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PopupIndex);
      }
      if (HasTrustedCreator) {
        size += 1 + 1;
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasHwnd) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Hwnd);
      }
      if (HasParentPopupIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParentPopupIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPopupHTMLWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasWide) {
        Wide = other.Wide;
      }
      if (other.HasTall) {
        Tall = other.Tall;
      }
      if (other.HasPopupIndex) {
        PopupIndex = other.PopupIndex;
      }
      if (other.HasTrustedCreator) {
        TrustedCreator = other.TrustedCreator;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasHwnd) {
        Hwnd = other.Hwnd;
      }
      if (other.HasParentPopupIndex) {
        ParentPopupIndex = other.ParentPopupIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Wide = input.ReadUInt32();
            break;
          }
          case 48: {
            Tall = input.ReadUInt32();
            break;
          }
          case 56: {
            PopupIndex = input.ReadUInt32();
            break;
          }
          case 64: {
            TrustedCreator = input.ReadBool();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 80: {
            Hwnd = input.ReadUInt64();
            break;
          }
          case 88: {
            ParentPopupIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 24: {
            X = input.ReadInt32();
            break;
          }
          case 32: {
            Y = input.ReadInt32();
            break;
          }
          case 40: {
            Wide = input.ReadUInt32();
            break;
          }
          case 48: {
            Tall = input.ReadUInt32();
            break;
          }
          case 56: {
            PopupIndex = input.ReadUInt32();
            break;
          }
          case 64: {
            TrustedCreator = input.ReadBool();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 80: {
            Hwnd = input.ReadUInt64();
            break;
          }
          case 88: {
            ParentPopupIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPopupHTMLWindowResponse : pb::IMessage<CMsgPopupHTMLWindowResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPopupHTMLWindowResponse> _parser = new pb::MessageParser<CMsgPopupHTMLWindowResponse>(() => new CMsgPopupHTMLWindowResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPopupHTMLWindowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupHTMLWindowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupHTMLWindowResponse(CMsgPopupHTMLWindowResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      bAllow_ = other.bAllow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupHTMLWindowResponse Clone() {
      return new CMsgPopupHTMLWindowResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bAllow" field.</summary>
    public const int BAllowFieldNumber = 2;
    private readonly static bool BAllowDefaultValue = false;

    private bool bAllow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BAllow {
      get { if ((_hasBits0 & 2) != 0) { return bAllow_; } else { return BAllowDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bAllow_ = value;
      }
    }
    /// <summary>Gets whether the "bAllow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBAllow {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bAllow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBAllow() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPopupHTMLWindowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPopupHTMLWindowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (BAllow != other.BAllow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasBAllow) hash ^= BAllow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBAllow) {
        output.WriteRawTag(16);
        output.WriteBool(BAllow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBAllow) {
        output.WriteRawTag(16);
        output.WriteBool(BAllow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasBAllow) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPopupHTMLWindowResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasBAllow) {
        BAllow = other.BAllow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            BAllow = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            BAllow = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetHTMLTitle : pb::IMessage<CMsgSetHTMLTitle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetHTMLTitle> _parser = new pb::MessageParser<CMsgSetHTMLTitle>(() => new CMsgSetHTMLTitle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetHTMLTitle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetHTMLTitle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetHTMLTitle(CMsgSetHTMLTitle other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetHTMLTitle Clone() {
      return new CMsgSetHTMLTitle(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetHTMLTitle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetHTMLTitle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetHTMLTitle other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgLoadingResource : pb::IMessage<CMsgLoadingResource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLoadingResource> _parser = new pb::MessageParser<CMsgLoadingResource>(() => new CMsgLoadingResource());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgLoadingResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadingResource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadingResource(CMsgLoadingResource other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadingResource Clone() {
      return new CMsgLoadingResource(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgLoadingResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgLoadingResource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgLoadingResource other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgStatusText : pb::IMessage<CMsgStatusText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgStatusText> _parser = new pb::MessageParser<CMsgStatusText>(() => new CMsgStatusText());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgStatusText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStatusText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStatusText(CMsgStatusText other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStatusText Clone() {
      return new CMsgStatusText(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgStatusText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgStatusText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgStatusText other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetCursor : pb::IMessage<CMsgSetCursor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetCursor> _parser = new pb::MessageParser<CMsgSetCursor>(() => new CMsgSetCursor());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetCursor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetCursor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetCursor(CMsgSetCursor other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      cursor_ = other.cursor_;
      customData_ = other.customData_;
      wide_ = other.wide_;
      tall_ = other.tall_;
      xhotspot_ = other.xhotspot_;
      yhotspot_ = other.yhotspot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetCursor Clone() {
      return new CMsgSetCursor(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 2;
    private readonly static uint CursorDefaultValue = 0;

    private uint cursor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Cursor {
      get { if ((_hasBits0 & 2) != 0) { return cursor_; } else { return CursorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cursor_ = value;
      }
    }
    /// <summary>Gets whether the "cursor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cursor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "custom_data" field.</summary>
    public const int CustomDataFieldNumber = 3;
    private readonly static pb::ByteString CustomDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString customData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CustomData {
      get { return customData_ ?? CustomDataDefaultValue; }
      set {
        customData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "custom_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCustomData {
      get { return customData_ != null; }
    }
    /// <summary>Clears the value of the "custom_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCustomData() {
      customData_ = null;
    }

    /// <summary>Field number for the "wide" field.</summary>
    public const int WideFieldNumber = 4;
    private readonly static uint WideDefaultValue = 0;

    private uint wide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Wide {
      get { if ((_hasBits0 & 4) != 0) { return wide_; } else { return WideDefaultValue; } }
      set {
        _hasBits0 |= 4;
        wide_ = value;
      }
    }
    /// <summary>Gets whether the "wide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWide {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "wide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWide() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "tall" field.</summary>
    public const int TallFieldNumber = 5;
    private readonly static uint TallDefaultValue = 0;

    private uint tall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tall {
      get { if ((_hasBits0 & 8) != 0) { return tall_; } else { return TallDefaultValue; } }
      set {
        _hasBits0 |= 8;
        tall_ = value;
      }
    }
    /// <summary>Gets whether the "tall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTall {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "tall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTall() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "xhotspot" field.</summary>
    public const int XhotspotFieldNumber = 6;
    private readonly static uint XhotspotDefaultValue = 0;

    private uint xhotspot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Xhotspot {
      get { if ((_hasBits0 & 16) != 0) { return xhotspot_; } else { return XhotspotDefaultValue; } }
      set {
        _hasBits0 |= 16;
        xhotspot_ = value;
      }
    }
    /// <summary>Gets whether the "xhotspot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXhotspot {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "xhotspot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXhotspot() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "yhotspot" field.</summary>
    public const int YhotspotFieldNumber = 7;
    private readonly static uint YhotspotDefaultValue = 0;

    private uint yhotspot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Yhotspot {
      get { if ((_hasBits0 & 32) != 0) { return yhotspot_; } else { return YhotspotDefaultValue; } }
      set {
        _hasBits0 |= 32;
        yhotspot_ = value;
      }
    }
    /// <summary>Gets whether the "yhotspot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYhotspot {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "yhotspot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYhotspot() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetCursor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetCursor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Cursor != other.Cursor) return false;
      if (CustomData != other.CustomData) return false;
      if (Wide != other.Wide) return false;
      if (Tall != other.Tall) return false;
      if (Xhotspot != other.Xhotspot) return false;
      if (Yhotspot != other.Yhotspot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasCursor) hash ^= Cursor.GetHashCode();
      if (HasCustomData) hash ^= CustomData.GetHashCode();
      if (HasWide) hash ^= Wide.GetHashCode();
      if (HasTall) hash ^= Tall.GetHashCode();
      if (HasXhotspot) hash ^= Xhotspot.GetHashCode();
      if (HasYhotspot) hash ^= Yhotspot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasCursor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Cursor);
      }
      if (HasCustomData) {
        output.WriteRawTag(26);
        output.WriteBytes(CustomData);
      }
      if (HasWide) {
        output.WriteRawTag(32);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(40);
        output.WriteUInt32(Tall);
      }
      if (HasXhotspot) {
        output.WriteRawTag(48);
        output.WriteUInt32(Xhotspot);
      }
      if (HasYhotspot) {
        output.WriteRawTag(56);
        output.WriteUInt32(Yhotspot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasCursor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Cursor);
      }
      if (HasCustomData) {
        output.WriteRawTag(26);
        output.WriteBytes(CustomData);
      }
      if (HasWide) {
        output.WriteRawTag(32);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(40);
        output.WriteUInt32(Tall);
      }
      if (HasXhotspot) {
        output.WriteRawTag(48);
        output.WriteUInt32(Xhotspot);
      }
      if (HasYhotspot) {
        output.WriteRawTag(56);
        output.WriteUInt32(Yhotspot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasCursor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cursor);
      }
      if (HasCustomData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CustomData);
      }
      if (HasWide) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wide);
      }
      if (HasTall) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tall);
      }
      if (HasXhotspot) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Xhotspot);
      }
      if (HasYhotspot) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Yhotspot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetCursor other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasCursor) {
        Cursor = other.Cursor;
      }
      if (other.HasCustomData) {
        CustomData = other.CustomData;
      }
      if (other.HasWide) {
        Wide = other.Wide;
      }
      if (other.HasTall) {
        Tall = other.Tall;
      }
      if (other.HasXhotspot) {
        Xhotspot = other.Xhotspot;
      }
      if (other.HasYhotspot) {
        Yhotspot = other.Yhotspot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Cursor = input.ReadUInt32();
            break;
          }
          case 26: {
            CustomData = input.ReadBytes();
            break;
          }
          case 32: {
            Wide = input.ReadUInt32();
            break;
          }
          case 40: {
            Tall = input.ReadUInt32();
            break;
          }
          case 48: {
            Xhotspot = input.ReadUInt32();
            break;
          }
          case 56: {
            Yhotspot = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Cursor = input.ReadUInt32();
            break;
          }
          case 26: {
            CustomData = input.ReadBytes();
            break;
          }
          case 32: {
            Wide = input.ReadUInt32();
            break;
          }
          case 40: {
            Tall = input.ReadUInt32();
            break;
          }
          case 48: {
            Xhotspot = input.ReadUInt32();
            break;
          }
          case 56: {
            Yhotspot = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFileLoadDialog : pb::IMessage<CMsgFileLoadDialog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFileLoadDialog> _parser = new pb::MessageParser<CMsgFileLoadDialog>(() => new CMsgFileLoadDialog());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFileLoadDialog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFileLoadDialog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFileLoadDialog(CMsgFileLoadDialog other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      title_ = other.title_;
      initialFile_ = other.initialFile_;
      acceptTypes_ = other.acceptTypes_.Clone();
      isSave_ = other.isSave_;
      chooseDirectory_ = other.chooseDirectory_;
      filters_ = other.filters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFileLoadDialog Clone() {
      return new CMsgFileLoadDialog(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "initialFile" field.</summary>
    public const int InitialFileFieldNumber = 4;
    private readonly static string InitialFileDefaultValue = "";

    private string initialFile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InitialFile {
      get { return initialFile_ ?? InitialFileDefaultValue; }
      set {
        initialFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initialFile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialFile {
      get { return initialFile_ != null; }
    }
    /// <summary>Clears the value of the "initialFile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialFile() {
      initialFile_ = null;
    }

    /// <summary>Field number for the "accept_types" field.</summary>
    public const int AcceptTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_acceptTypes_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> acceptTypes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AcceptTypes {
      get { return acceptTypes_; }
    }

    /// <summary>Field number for the "is_save" field.</summary>
    public const int IsSaveFieldNumber = 6;
    private readonly static bool IsSaveDefaultValue = false;

    private bool isSave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSave {
      get { if ((_hasBits0 & 4) != 0) { return isSave_; } else { return IsSaveDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isSave_ = value;
      }
    }
    /// <summary>Gets whether the "is_save" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSave {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_save" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSave() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "choose_directory" field.</summary>
    public const int ChooseDirectoryFieldNumber = 7;
    private readonly static bool ChooseDirectoryDefaultValue = false;

    private bool chooseDirectory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChooseDirectory {
      get { if ((_hasBits0 & 8) != 0) { return chooseDirectory_; } else { return ChooseDirectoryDefaultValue; } }
      set {
        _hasBits0 |= 8;
        chooseDirectory_ = value;
      }
    }
    /// <summary>Gets whether the "choose_directory" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChooseDirectory {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "choose_directory" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChooseDirectory() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(66, global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter> filters_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Types.Filter> Filters {
      get { return filters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFileLoadDialog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFileLoadDialog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (Title != other.Title) return false;
      if (InitialFile != other.InitialFile) return false;
      if(!acceptTypes_.Equals(other.acceptTypes_)) return false;
      if (IsSave != other.IsSave) return false;
      if (ChooseDirectory != other.ChooseDirectory) return false;
      if(!filters_.Equals(other.filters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasInitialFile) hash ^= InitialFile.GetHashCode();
      hash ^= acceptTypes_.GetHashCode();
      if (HasIsSave) hash ^= IsSave.GetHashCode();
      if (HasChooseDirectory) hash ^= ChooseDirectory.GetHashCode();
      hash ^= filters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasInitialFile) {
        output.WriteRawTag(34);
        output.WriteString(InitialFile);
      }
      acceptTypes_.WriteTo(output, _repeated_acceptTypes_codec);
      if (HasIsSave) {
        output.WriteRawTag(48);
        output.WriteBool(IsSave);
      }
      if (HasChooseDirectory) {
        output.WriteRawTag(56);
        output.WriteBool(ChooseDirectory);
      }
      filters_.WriteTo(output, _repeated_filters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasInitialFile) {
        output.WriteRawTag(34);
        output.WriteString(InitialFile);
      }
      acceptTypes_.WriteTo(ref output, _repeated_acceptTypes_codec);
      if (HasIsSave) {
        output.WriteRawTag(48);
        output.WriteBool(IsSave);
      }
      if (HasChooseDirectory) {
        output.WriteRawTag(56);
        output.WriteBool(ChooseDirectory);
      }
      filters_.WriteTo(ref output, _repeated_filters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasInitialFile) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitialFile);
      }
      size += acceptTypes_.CalculateSize(_repeated_acceptTypes_codec);
      if (HasIsSave) {
        size += 1 + 1;
      }
      if (HasChooseDirectory) {
        size += 1 + 1;
      }
      size += filters_.CalculateSize(_repeated_filters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFileLoadDialog other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasInitialFile) {
        InitialFile = other.InitialFile;
      }
      acceptTypes_.Add(other.acceptTypes_);
      if (other.HasIsSave) {
        IsSave = other.IsSave;
      }
      if (other.HasChooseDirectory) {
        ChooseDirectory = other.ChooseDirectory;
      }
      filters_.Add(other.filters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            InitialFile = input.ReadString();
            break;
          }
          case 42: {
            acceptTypes_.AddEntriesFrom(input, _repeated_acceptTypes_codec);
            break;
          }
          case 48: {
            IsSave = input.ReadBool();
            break;
          }
          case 56: {
            ChooseDirectory = input.ReadBool();
            break;
          }
          case 66: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            InitialFile = input.ReadString();
            break;
          }
          case 42: {
            acceptTypes_.AddEntriesFrom(ref input, _repeated_acceptTypes_codec);
            break;
          }
          case 48: {
            IsSave = input.ReadBool();
            break;
          }
          case 56: {
            ChooseDirectory = input.ReadBool();
            break;
          }
          case 66: {
            filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgFileLoadDialog message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Filter : pb::IMessage<Filter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Filter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgFileLoadDialog.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter(Filter other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          patterns_ = other.patterns_.Clone();
          isDefault_ = other.isDefault_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter Clone() {
          return new Filter(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "patterns" field.</summary>
        public const int PatternsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_patterns_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> patterns_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Patterns {
          get { return patterns_; }
        }

        /// <summary>Field number for the "is_default" field.</summary>
        public const int IsDefaultFieldNumber = 3;
        private readonly static bool IsDefaultDefaultValue = false;

        private bool isDefault_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsDefault {
          get { if ((_hasBits0 & 1) != 0) { return isDefault_; } else { return IsDefaultDefaultValue; } }
          set {
            _hasBits0 |= 1;
            isDefault_ = value;
          }
        }
        /// <summary>Gets whether the "is_default" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIsDefault {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "is_default" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIsDefault() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Filter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Filter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if(!patterns_.Equals(other.patterns_)) return false;
          if (IsDefault != other.IsDefault) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          hash ^= patterns_.GetHashCode();
          if (HasIsDefault) hash ^= IsDefault.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          patterns_.WriteTo(output, _repeated_patterns_codec);
          if (HasIsDefault) {
            output.WriteRawTag(24);
            output.WriteBool(IsDefault);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          patterns_.WriteTo(ref output, _repeated_patterns_codec);
          if (HasIsDefault) {
            output.WriteRawTag(24);
            output.WriteBool(IsDefault);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += patterns_.CalculateSize(_repeated_patterns_codec);
          if (HasIsDefault) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Filter other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          patterns_.Add(other.patterns_);
          if (other.HasIsDefault) {
            IsDefault = other.IsDefault;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                patterns_.AddEntriesFrom(input, _repeated_patterns_codec);
                break;
              }
              case 24: {
                IsDefault = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                patterns_.AddEntriesFrom(ref input, _repeated_patterns_codec);
                break;
              }
              case 24: {
                IsDefault = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFileLoadDialogResponse : pb::IMessage<CMsgFileLoadDialogResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFileLoadDialogResponse> _parser = new pb::MessageParser<CMsgFileLoadDialogResponse>(() => new CMsgFileLoadDialogResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFileLoadDialogResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFileLoadDialogResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFileLoadDialogResponse(CMsgFileLoadDialogResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      bsuccess_ = other.bsuccess_;
      files_ = other.files_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFileLoadDialogResponse Clone() {
      return new CMsgFileLoadDialogResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bsuccess" field.</summary>
    public const int BsuccessFieldNumber = 3;
    private readonly static bool BsuccessDefaultValue = false;

    private bool bsuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bsuccess {
      get { if ((_hasBits0 & 4) != 0) { return bsuccess_; } else { return BsuccessDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bsuccess_ = value;
      }
    }
    /// <summary>Gets whether the "bsuccess" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBsuccess {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bsuccess" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBsuccess() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "files" field.</summary>
    public const int FilesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_files_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> files_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Files {
      get { return files_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFileLoadDialogResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFileLoadDialogResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (Bsuccess != other.Bsuccess) return false;
      if(!files_.Equals(other.files_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasBsuccess) hash ^= Bsuccess.GetHashCode();
      hash ^= files_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasBsuccess) {
        output.WriteRawTag(24);
        output.WriteBool(Bsuccess);
      }
      files_.WriteTo(output, _repeated_files_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasBsuccess) {
        output.WriteRawTag(24);
        output.WriteBool(Bsuccess);
      }
      files_.WriteTo(ref output, _repeated_files_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasBsuccess) {
        size += 1 + 1;
      }
      size += files_.CalculateSize(_repeated_files_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFileLoadDialogResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasBsuccess) {
        Bsuccess = other.Bsuccess;
      }
      files_.Add(other.files_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            Bsuccess = input.ReadBool();
            break;
          }
          case 34: {
            files_.AddEntriesFrom(input, _repeated_files_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            Bsuccess = input.ReadBool();
            break;
          }
          case 34: {
            files_.AddEntriesFrom(ref input, _repeated_files_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgShowToolTip : pb::IMessage<CMsgShowToolTip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgShowToolTip> _parser = new pb::MessageParser<CMsgShowToolTip>(() => new CMsgShowToolTip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgShowToolTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowToolTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowToolTip(CMsgShowToolTip other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowToolTip Clone() {
      return new CMsgShowToolTip(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgShowToolTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgShowToolTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgShowToolTip other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgUpdateToolTip : pb::IMessage<CMsgUpdateToolTip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgUpdateToolTip> _parser = new pb::MessageParser<CMsgUpdateToolTip>(() => new CMsgUpdateToolTip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgUpdateToolTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgUpdateToolTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgUpdateToolTip(CMsgUpdateToolTip other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgUpdateToolTip Clone() {
      return new CMsgUpdateToolTip(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgUpdateToolTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgUpdateToolTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgUpdateToolTip other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHideToolTip : pb::IMessage<CMsgHideToolTip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHideToolTip> _parser = new pb::MessageParser<CMsgHideToolTip>(() => new CMsgHideToolTip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHideToolTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHideToolTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHideToolTip(CMsgHideToolTip other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHideToolTip Clone() {
      return new CMsgHideToolTip(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHideToolTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHideToolTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHideToolTip other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSearchResults : pb::IMessage<CMsgSearchResults>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSearchResults> _parser = new pb::MessageParser<CMsgSearchResults>(() => new CMsgSearchResults());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSearchResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSearchResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSearchResults(CMsgSearchResults other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      activeMatch_ = other.activeMatch_;
      results_ = other.results_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSearchResults Clone() {
      return new CMsgSearchResults(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "activeMatch" field.</summary>
    public const int ActiveMatchFieldNumber = 2;
    private readonly static int ActiveMatchDefaultValue = 0;

    private int activeMatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActiveMatch {
      get { if ((_hasBits0 & 2) != 0) { return activeMatch_; } else { return ActiveMatchDefaultValue; } }
      set {
        _hasBits0 |= 2;
        activeMatch_ = value;
      }
    }
    /// <summary>Gets whether the "activeMatch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActiveMatch {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "activeMatch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActiveMatch() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private readonly static int ResultsDefaultValue = 0;

    private int results_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Results {
      get { if ((_hasBits0 & 4) != 0) { return results_; } else { return ResultsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        results_ = value;
      }
    }
    /// <summary>Gets whether the "results" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResults {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "results" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResults() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSearchResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSearchResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (ActiveMatch != other.ActiveMatch) return false;
      if (Results != other.Results) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasActiveMatch) hash ^= ActiveMatch.GetHashCode();
      if (HasResults) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasActiveMatch) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveMatch);
      }
      if (HasResults) {
        output.WriteRawTag(24);
        output.WriteInt32(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasActiveMatch) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveMatch);
      }
      if (HasResults) {
        output.WriteRawTag(24);
        output.WriteInt32(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasActiveMatch) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveMatch);
      }
      if (HasResults) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSearchResults other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasActiveMatch) {
        ActiveMatch = other.ActiveMatch;
      }
      if (other.HasResults) {
        Results = other.Results;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ActiveMatch = input.ReadInt32();
            break;
          }
          case 24: {
            Results = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ActiveMatch = input.ReadInt32();
            break;
          }
          case 24: {
            Results = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgClose : pb::IMessage<CMsgClose>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClose> _parser = new pb::MessageParser<CMsgClose>(() => new CMsgClose());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgClose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClose(CMsgClose other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClose Clone() {
      return new CMsgClose(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgClose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgClose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgClose other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetSharedPaintBuffers : pb::IMessage<CMsgSetSharedPaintBuffers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetSharedPaintBuffers> _parser = new pb::MessageParser<CMsgSetSharedPaintBuffers>(() => new CMsgSetSharedPaintBuffers());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetSharedPaintBuffers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetSharedPaintBuffers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetSharedPaintBuffers(CMsgSetSharedPaintBuffers other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      wide_ = other.wide_;
      tall_ = other.tall_;
      sourcePid_ = other.sourcePid_;
      sourceHandle_ = other.sourceHandle_;
      handle_ = other.handle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetSharedPaintBuffers Clone() {
      return new CMsgSetSharedPaintBuffers(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "wide" field.</summary>
    public const int WideFieldNumber = 2;
    private readonly static uint WideDefaultValue = 0;

    private uint wide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Wide {
      get { if ((_hasBits0 & 2) != 0) { return wide_; } else { return WideDefaultValue; } }
      set {
        _hasBits0 |= 2;
        wide_ = value;
      }
    }
    /// <summary>Gets whether the "wide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWide {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "wide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWide() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tall" field.</summary>
    public const int TallFieldNumber = 3;
    private readonly static uint TallDefaultValue = 0;

    private uint tall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tall {
      get { if ((_hasBits0 & 4) != 0) { return tall_; } else { return TallDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tall_ = value;
      }
    }
    /// <summary>Gets whether the "tall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTall {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTall() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "source_pid" field.</summary>
    public const int SourcePidFieldNumber = 4;
    private readonly static ulong SourcePidDefaultValue = 0UL;

    private ulong sourcePid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SourcePid {
      get { if ((_hasBits0 & 8) != 0) { return sourcePid_; } else { return SourcePidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        sourcePid_ = value;
      }
    }
    /// <summary>Gets whether the "source_pid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourcePid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "source_pid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourcePid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "source_handle" field.</summary>
    public const int SourceHandleFieldNumber = 5;
    private readonly static ulong SourceHandleDefaultValue = 0UL;

    private ulong sourceHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SourceHandle {
      get { if ((_hasBits0 & 16) != 0) { return sourceHandle_; } else { return SourceHandleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        sourceHandle_ = value;
      }
    }
    /// <summary>Gets whether the "source_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceHandle {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "source_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceHandle() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 6;
    private readonly static ulong HandleDefaultValue = 0UL;

    private ulong handle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Handle {
      get { if ((_hasBits0 & 32) != 0) { return handle_; } else { return HandleDefaultValue; } }
      set {
        _hasBits0 |= 32;
        handle_ = value;
      }
    }
    /// <summary>Gets whether the "handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandle {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandle() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetSharedPaintBuffers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetSharedPaintBuffers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Wide != other.Wide) return false;
      if (Tall != other.Tall) return false;
      if (SourcePid != other.SourcePid) return false;
      if (SourceHandle != other.SourceHandle) return false;
      if (Handle != other.Handle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasWide) hash ^= Wide.GetHashCode();
      if (HasTall) hash ^= Tall.GetHashCode();
      if (HasSourcePid) hash ^= SourcePid.GetHashCode();
      if (HasSourceHandle) hash ^= SourceHandle.GetHashCode();
      if (HasHandle) hash ^= Handle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWide) {
        output.WriteRawTag(16);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(24);
        output.WriteUInt32(Tall);
      }
      if (HasSourcePid) {
        output.WriteRawTag(32);
        output.WriteUInt64(SourcePid);
      }
      if (HasSourceHandle) {
        output.WriteRawTag(40);
        output.WriteUInt64(SourceHandle);
      }
      if (HasHandle) {
        output.WriteRawTag(48);
        output.WriteUInt64(Handle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWide) {
        output.WriteRawTag(16);
        output.WriteUInt32(Wide);
      }
      if (HasTall) {
        output.WriteRawTag(24);
        output.WriteUInt32(Tall);
      }
      if (HasSourcePid) {
        output.WriteRawTag(32);
        output.WriteUInt64(SourcePid);
      }
      if (HasSourceHandle) {
        output.WriteRawTag(40);
        output.WriteUInt64(SourceHandle);
      }
      if (HasHandle) {
        output.WriteRawTag(48);
        output.WriteUInt64(Handle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasWide) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wide);
      }
      if (HasTall) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tall);
      }
      if (HasSourcePid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SourcePid);
      }
      if (HasSourceHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SourceHandle);
      }
      if (HasHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Handle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetSharedPaintBuffers other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasWide) {
        Wide = other.Wide;
      }
      if (other.HasTall) {
        Tall = other.Tall;
      }
      if (other.HasSourcePid) {
        SourcePid = other.SourcePid;
      }
      if (other.HasSourceHandle) {
        SourceHandle = other.SourceHandle;
      }
      if (other.HasHandle) {
        Handle = other.Handle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Wide = input.ReadUInt32();
            break;
          }
          case 24: {
            Tall = input.ReadUInt32();
            break;
          }
          case 32: {
            SourcePid = input.ReadUInt64();
            break;
          }
          case 40: {
            SourceHandle = input.ReadUInt64();
            break;
          }
          case 48: {
            Handle = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Wide = input.ReadUInt32();
            break;
          }
          case 24: {
            Tall = input.ReadUInt32();
            break;
          }
          case 32: {
            SourcePid = input.ReadUInt64();
            break;
          }
          case 40: {
            SourceHandle = input.ReadUInt64();
            break;
          }
          case 48: {
            Handle = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgAckSharedPaintBuffers : pb::IMessage<CMsgAckSharedPaintBuffers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgAckSharedPaintBuffers> _parser = new pb::MessageParser<CMsgAckSharedPaintBuffers>(() => new CMsgAckSharedPaintBuffers());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgAckSharedPaintBuffers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckSharedPaintBuffers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckSharedPaintBuffers(CMsgAckSharedPaintBuffers other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckSharedPaintBuffers Clone() {
      return new CMsgAckSharedPaintBuffers(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgAckSharedPaintBuffers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgAckSharedPaintBuffers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgAckSharedPaintBuffers other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgNeedsPaint : pb::IMessage<CMsgNeedsPaint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgNeedsPaint> _parser = new pb::MessageParser<CMsgNeedsPaint>(() => new CMsgNeedsPaint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgNeedsPaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNeedsPaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNeedsPaint(CMsgNeedsPaint other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scrollx_ = other.scrollx_;
      scrolly_ = other.scrolly_;
      pagescale_ = other.pagescale_;
      pageserial_ = other.pageserial_;
      avgFrameMs_ = other.avgFrameMs_;
      stddevSumFrameMs_ = other.stddevSumFrameMs_;
      longFrameMs_ = other.longFrameMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNeedsPaint Clone() {
      return new CMsgNeedsPaint(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scrollx" field.</summary>
    public const int ScrollxFieldNumber = 10;
    private readonly static uint ScrollxDefaultValue = 0;

    private uint scrollx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scrollx {
      get { if ((_hasBits0 & 2) != 0) { return scrollx_; } else { return ScrollxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scrollx_ = value;
      }
    }
    /// <summary>Gets whether the "scrollx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrollx {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scrollx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrollx() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "scrolly" field.</summary>
    public const int ScrollyFieldNumber = 11;
    private readonly static uint ScrollyDefaultValue = 0;

    private uint scrolly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scrolly {
      get { if ((_hasBits0 & 4) != 0) { return scrolly_; } else { return ScrollyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        scrolly_ = value;
      }
    }
    /// <summary>Gets whether the "scrolly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrolly {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "scrolly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrolly() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pagescale" field.</summary>
    public const int PagescaleFieldNumber = 12;
    private readonly static float PagescaleDefaultValue = 0F;

    private float pagescale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pagescale {
      get { if ((_hasBits0 & 8) != 0) { return pagescale_; } else { return PagescaleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        pagescale_ = value;
      }
    }
    /// <summary>Gets whether the "pagescale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPagescale {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pagescale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPagescale() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pageserial" field.</summary>
    public const int PageserialFieldNumber = 15;
    private readonly static uint PageserialDefaultValue = 0;

    private uint pageserial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Pageserial {
      get { if ((_hasBits0 & 16) != 0) { return pageserial_; } else { return PageserialDefaultValue; } }
      set {
        _hasBits0 |= 16;
        pageserial_ = value;
      }
    }
    /// <summary>Gets whether the "pageserial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageserial {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "pageserial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageserial() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "avg_frame_ms" field.</summary>
    public const int AvgFrameMsFieldNumber = 20;
    private readonly static uint AvgFrameMsDefaultValue = 0;

    private uint avgFrameMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvgFrameMs {
      get { if ((_hasBits0 & 32) != 0) { return avgFrameMs_; } else { return AvgFrameMsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        avgFrameMs_ = value;
      }
    }
    /// <summary>Gets whether the "avg_frame_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvgFrameMs {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "avg_frame_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvgFrameMs() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "stddev_sum_frame_ms" field.</summary>
    public const int StddevSumFrameMsFieldNumber = 21;
    private readonly static float StddevSumFrameMsDefaultValue = 0F;

    private float stddevSumFrameMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float StddevSumFrameMs {
      get { if ((_hasBits0 & 64) != 0) { return stddevSumFrameMs_; } else { return StddevSumFrameMsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        stddevSumFrameMs_ = value;
      }
    }
    /// <summary>Gets whether the "stddev_sum_frame_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStddevSumFrameMs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "stddev_sum_frame_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStddevSumFrameMs() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "long_frame_ms" field.</summary>
    public const int LongFrameMsFieldNumber = 22;
    private readonly static uint LongFrameMsDefaultValue = 0;

    private uint longFrameMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LongFrameMs {
      get { if ((_hasBits0 & 128) != 0) { return longFrameMs_; } else { return LongFrameMsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        longFrameMs_ = value;
      }
    }
    /// <summary>Gets whether the "long_frame_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLongFrameMs {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "long_frame_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLongFrameMs() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgNeedsPaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgNeedsPaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Scrollx != other.Scrollx) return false;
      if (Scrolly != other.Scrolly) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pagescale, other.Pagescale)) return false;
      if (Pageserial != other.Pageserial) return false;
      if (AvgFrameMs != other.AvgFrameMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StddevSumFrameMs, other.StddevSumFrameMs)) return false;
      if (LongFrameMs != other.LongFrameMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScrollx) hash ^= Scrollx.GetHashCode();
      if (HasScrolly) hash ^= Scrolly.GetHashCode();
      if (HasPagescale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pagescale);
      if (HasPageserial) hash ^= Pageserial.GetHashCode();
      if (HasAvgFrameMs) hash ^= AvgFrameMs.GetHashCode();
      if (HasStddevSumFrameMs) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StddevSumFrameMs);
      if (HasLongFrameMs) hash ^= LongFrameMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScrollx) {
        output.WriteRawTag(80);
        output.WriteUInt32(Scrollx);
      }
      if (HasScrolly) {
        output.WriteRawTag(88);
        output.WriteUInt32(Scrolly);
      }
      if (HasPagescale) {
        output.WriteRawTag(101);
        output.WriteFloat(Pagescale);
      }
      if (HasPageserial) {
        output.WriteRawTag(120);
        output.WriteUInt32(Pageserial);
      }
      if (HasAvgFrameMs) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(AvgFrameMs);
      }
      if (HasStddevSumFrameMs) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(StddevSumFrameMs);
      }
      if (HasLongFrameMs) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(LongFrameMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScrollx) {
        output.WriteRawTag(80);
        output.WriteUInt32(Scrollx);
      }
      if (HasScrolly) {
        output.WriteRawTag(88);
        output.WriteUInt32(Scrolly);
      }
      if (HasPagescale) {
        output.WriteRawTag(101);
        output.WriteFloat(Pagescale);
      }
      if (HasPageserial) {
        output.WriteRawTag(120);
        output.WriteUInt32(Pageserial);
      }
      if (HasAvgFrameMs) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(AvgFrameMs);
      }
      if (HasStddevSumFrameMs) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(StddevSumFrameMs);
      }
      if (HasLongFrameMs) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(LongFrameMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScrollx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scrollx);
      }
      if (HasScrolly) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scrolly);
      }
      if (HasPagescale) {
        size += 1 + 4;
      }
      if (HasPageserial) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pageserial);
      }
      if (HasAvgFrameMs) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AvgFrameMs);
      }
      if (HasStddevSumFrameMs) {
        size += 2 + 4;
      }
      if (HasLongFrameMs) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LongFrameMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgNeedsPaint other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScrollx) {
        Scrollx = other.Scrollx;
      }
      if (other.HasScrolly) {
        Scrolly = other.Scrolly;
      }
      if (other.HasPagescale) {
        Pagescale = other.Pagescale;
      }
      if (other.HasPageserial) {
        Pageserial = other.Pageserial;
      }
      if (other.HasAvgFrameMs) {
        AvgFrameMs = other.AvgFrameMs;
      }
      if (other.HasStddevSumFrameMs) {
        StddevSumFrameMs = other.StddevSumFrameMs;
      }
      if (other.HasLongFrameMs) {
        LongFrameMs = other.LongFrameMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 80: {
            Scrollx = input.ReadUInt32();
            break;
          }
          case 88: {
            Scrolly = input.ReadUInt32();
            break;
          }
          case 101: {
            Pagescale = input.ReadFloat();
            break;
          }
          case 120: {
            Pageserial = input.ReadUInt32();
            break;
          }
          case 160: {
            AvgFrameMs = input.ReadUInt32();
            break;
          }
          case 173: {
            StddevSumFrameMs = input.ReadFloat();
            break;
          }
          case 176: {
            LongFrameMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 80: {
            Scrollx = input.ReadUInt32();
            break;
          }
          case 88: {
            Scrolly = input.ReadUInt32();
            break;
          }
          case 101: {
            Pagescale = input.ReadFloat();
            break;
          }
          case 120: {
            Pageserial = input.ReadUInt32();
            break;
          }
          case 160: {
            AvgFrameMs = input.ReadUInt32();
            break;
          }
          case 173: {
            StddevSumFrameMs = input.ReadFloat();
            break;
          }
          case 176: {
            LongFrameMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgComboNeedsPaint : pb::IMessage<CMsgComboNeedsPaint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgComboNeedsPaint> _parser = new pb::MessageParser<CMsgComboNeedsPaint>(() => new CMsgComboNeedsPaint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgComboNeedsPaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgComboNeedsPaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgComboNeedsPaint(CMsgComboNeedsPaint other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      rgba_ = other.rgba_;
      comboboxWide_ = other.comboboxWide_;
      comboboxTall_ = other.comboboxTall_;
      sharedMemoryHandle_ = other.sharedMemoryHandle_;
      sharedMemorySize_ = other.sharedMemorySize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgComboNeedsPaint Clone() {
      return new CMsgComboNeedsPaint(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rgba" field.</summary>
    public const int RgbaFieldNumber = 2;
    private readonly static ulong RgbaDefaultValue = 0UL;

    private ulong rgba_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Rgba {
      get { if ((_hasBits0 & 2) != 0) { return rgba_; } else { return RgbaDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rgba_ = value;
      }
    }
    /// <summary>Gets whether the "rgba" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRgba {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rgba" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRgba() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "combobox_wide" field.</summary>
    public const int ComboboxWideFieldNumber = 3;
    private readonly static uint ComboboxWideDefaultValue = 0;

    private uint comboboxWide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ComboboxWide {
      get { if ((_hasBits0 & 4) != 0) { return comboboxWide_; } else { return ComboboxWideDefaultValue; } }
      set {
        _hasBits0 |= 4;
        comboboxWide_ = value;
      }
    }
    /// <summary>Gets whether the "combobox_wide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComboboxWide {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "combobox_wide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComboboxWide() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "combobox_tall" field.</summary>
    public const int ComboboxTallFieldNumber = 4;
    private readonly static uint ComboboxTallDefaultValue = 0;

    private uint comboboxTall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ComboboxTall {
      get { if ((_hasBits0 & 8) != 0) { return comboboxTall_; } else { return ComboboxTallDefaultValue; } }
      set {
        _hasBits0 |= 8;
        comboboxTall_ = value;
      }
    }
    /// <summary>Gets whether the "combobox_tall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComboboxTall {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "combobox_tall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComboboxTall() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "shared_memory_handle" field.</summary>
    public const int SharedMemoryHandleFieldNumber = 5;
    private readonly static ulong SharedMemoryHandleDefaultValue = 0UL;

    private ulong sharedMemoryHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SharedMemoryHandle {
      get { if ((_hasBits0 & 16) != 0) { return sharedMemoryHandle_; } else { return SharedMemoryHandleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        sharedMemoryHandle_ = value;
      }
    }
    /// <summary>Gets whether the "shared_memory_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSharedMemoryHandle {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "shared_memory_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSharedMemoryHandle() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "shared_memory_size" field.</summary>
    public const int SharedMemorySizeFieldNumber = 7;
    private readonly static ulong SharedMemorySizeDefaultValue = 0UL;

    private ulong sharedMemorySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SharedMemorySize {
      get { if ((_hasBits0 & 32) != 0) { return sharedMemorySize_; } else { return SharedMemorySizeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sharedMemorySize_ = value;
      }
    }
    /// <summary>Gets whether the "shared_memory_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSharedMemorySize {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "shared_memory_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSharedMemorySize() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgComboNeedsPaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgComboNeedsPaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Rgba != other.Rgba) return false;
      if (ComboboxWide != other.ComboboxWide) return false;
      if (ComboboxTall != other.ComboboxTall) return false;
      if (SharedMemoryHandle != other.SharedMemoryHandle) return false;
      if (SharedMemorySize != other.SharedMemorySize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasRgba) hash ^= Rgba.GetHashCode();
      if (HasComboboxWide) hash ^= ComboboxWide.GetHashCode();
      if (HasComboboxTall) hash ^= ComboboxTall.GetHashCode();
      if (HasSharedMemoryHandle) hash ^= SharedMemoryHandle.GetHashCode();
      if (HasSharedMemorySize) hash ^= SharedMemorySize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasRgba) {
        output.WriteRawTag(16);
        output.WriteUInt64(Rgba);
      }
      if (HasComboboxWide) {
        output.WriteRawTag(24);
        output.WriteUInt32(ComboboxWide);
      }
      if (HasComboboxTall) {
        output.WriteRawTag(32);
        output.WriteUInt32(ComboboxTall);
      }
      if (HasSharedMemoryHandle) {
        output.WriteRawTag(40);
        output.WriteUInt64(SharedMemoryHandle);
      }
      if (HasSharedMemorySize) {
        output.WriteRawTag(56);
        output.WriteUInt64(SharedMemorySize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasRgba) {
        output.WriteRawTag(16);
        output.WriteUInt64(Rgba);
      }
      if (HasComboboxWide) {
        output.WriteRawTag(24);
        output.WriteUInt32(ComboboxWide);
      }
      if (HasComboboxTall) {
        output.WriteRawTag(32);
        output.WriteUInt32(ComboboxTall);
      }
      if (HasSharedMemoryHandle) {
        output.WriteRawTag(40);
        output.WriteUInt64(SharedMemoryHandle);
      }
      if (HasSharedMemorySize) {
        output.WriteRawTag(56);
        output.WriteUInt64(SharedMemorySize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasRgba) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Rgba);
      }
      if (HasComboboxWide) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ComboboxWide);
      }
      if (HasComboboxTall) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ComboboxTall);
      }
      if (HasSharedMemoryHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedMemoryHandle);
      }
      if (HasSharedMemorySize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedMemorySize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgComboNeedsPaint other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasRgba) {
        Rgba = other.Rgba;
      }
      if (other.HasComboboxWide) {
        ComboboxWide = other.ComboboxWide;
      }
      if (other.HasComboboxTall) {
        ComboboxTall = other.ComboboxTall;
      }
      if (other.HasSharedMemoryHandle) {
        SharedMemoryHandle = other.SharedMemoryHandle;
      }
      if (other.HasSharedMemorySize) {
        SharedMemorySize = other.SharedMemorySize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Rgba = input.ReadUInt64();
            break;
          }
          case 24: {
            ComboboxWide = input.ReadUInt32();
            break;
          }
          case 32: {
            ComboboxTall = input.ReadUInt32();
            break;
          }
          case 40: {
            SharedMemoryHandle = input.ReadUInt64();
            break;
          }
          case 56: {
            SharedMemorySize = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Rgba = input.ReadUInt64();
            break;
          }
          case 24: {
            ComboboxWide = input.ReadUInt32();
            break;
          }
          case 32: {
            ComboboxTall = input.ReadUInt32();
            break;
          }
          case 40: {
            SharedMemoryHandle = input.ReadUInt64();
            break;
          }
          case 56: {
            SharedMemorySize = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgNeedsSharedTexturePaint : pb::IMessage<CMsgNeedsSharedTexturePaint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgNeedsSharedTexturePaint> _parser = new pb::MessageParser<CMsgNeedsSharedTexturePaint>(() => new CMsgNeedsSharedTexturePaint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgNeedsSharedTexturePaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNeedsSharedTexturePaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNeedsSharedTexturePaint(CMsgNeedsSharedTexturePaint other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      shareHandle_ = other.shareHandle_;
      width_ = other.width_;
      height_ = other.height_;
      scrollx_ = other.scrollx_;
      scrolly_ = other.scrolly_;
      pagescale_ = other.pagescale_;
      pageserial_ = other.pageserial_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNeedsSharedTexturePaint Clone() {
      return new CMsgNeedsSharedTexturePaint(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "share_handle" field.</summary>
    public const int ShareHandleFieldNumber = 2;
    private readonly static uint ShareHandleDefaultValue = 0;

    private uint shareHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ShareHandle {
      get { if ((_hasBits0 & 2) != 0) { return shareHandle_; } else { return ShareHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        shareHandle_ = value;
      }
    }
    /// <summary>Gets whether the "share_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShareHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "share_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShareHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 8;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "scrollx" field.</summary>
    public const int ScrollxFieldNumber = 5;
    private readonly static uint ScrollxDefaultValue = 0;

    private uint scrollx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scrollx {
      get { if ((_hasBits0 & 16) != 0) { return scrollx_; } else { return ScrollxDefaultValue; } }
      set {
        _hasBits0 |= 16;
        scrollx_ = value;
      }
    }
    /// <summary>Gets whether the "scrollx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrollx {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "scrollx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrollx() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "scrolly" field.</summary>
    public const int ScrollyFieldNumber = 6;
    private readonly static uint ScrollyDefaultValue = 0;

    private uint scrolly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scrolly {
      get { if ((_hasBits0 & 32) != 0) { return scrolly_; } else { return ScrollyDefaultValue; } }
      set {
        _hasBits0 |= 32;
        scrolly_ = value;
      }
    }
    /// <summary>Gets whether the "scrolly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrolly {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "scrolly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrolly() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "pagescale" field.</summary>
    public const int PagescaleFieldNumber = 7;
    private readonly static float PagescaleDefaultValue = 0F;

    private float pagescale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pagescale {
      get { if ((_hasBits0 & 64) != 0) { return pagescale_; } else { return PagescaleDefaultValue; } }
      set {
        _hasBits0 |= 64;
        pagescale_ = value;
      }
    }
    /// <summary>Gets whether the "pagescale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPagescale {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "pagescale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPagescale() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "pageserial" field.</summary>
    public const int PageserialFieldNumber = 8;
    private readonly static uint PageserialDefaultValue = 0;

    private uint pageserial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Pageserial {
      get { if ((_hasBits0 & 128) != 0) { return pageserial_; } else { return PageserialDefaultValue; } }
      set {
        _hasBits0 |= 128;
        pageserial_ = value;
      }
    }
    /// <summary>Gets whether the "pageserial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageserial {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "pageserial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageserial() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgNeedsSharedTexturePaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgNeedsSharedTexturePaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (ShareHandle != other.ShareHandle) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Scrollx != other.Scrollx) return false;
      if (Scrolly != other.Scrolly) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pagescale, other.Pagescale)) return false;
      if (Pageserial != other.Pageserial) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasShareHandle) hash ^= ShareHandle.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasScrollx) hash ^= Scrollx.GetHashCode();
      if (HasScrolly) hash ^= Scrolly.GetHashCode();
      if (HasPagescale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pagescale);
      if (HasPageserial) hash ^= Pageserial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasShareHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(ShareHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasScrollx) {
        output.WriteRawTag(40);
        output.WriteUInt32(Scrollx);
      }
      if (HasScrolly) {
        output.WriteRawTag(48);
        output.WriteUInt32(Scrolly);
      }
      if (HasPagescale) {
        output.WriteRawTag(61);
        output.WriteFloat(Pagescale);
      }
      if (HasPageserial) {
        output.WriteRawTag(64);
        output.WriteUInt32(Pageserial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasShareHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(ShareHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasScrollx) {
        output.WriteRawTag(40);
        output.WriteUInt32(Scrollx);
      }
      if (HasScrolly) {
        output.WriteRawTag(48);
        output.WriteUInt32(Scrolly);
      }
      if (HasPagescale) {
        output.WriteRawTag(61);
        output.WriteFloat(Pagescale);
      }
      if (HasPageserial) {
        output.WriteRawTag(64);
        output.WriteUInt32(Pageserial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasShareHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShareHandle);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasScrollx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scrollx);
      }
      if (HasScrolly) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scrolly);
      }
      if (HasPagescale) {
        size += 1 + 4;
      }
      if (HasPageserial) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pageserial);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgNeedsSharedTexturePaint other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasShareHandle) {
        ShareHandle = other.ShareHandle;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasScrollx) {
        Scrollx = other.Scrollx;
      }
      if (other.HasScrolly) {
        Scrolly = other.Scrolly;
      }
      if (other.HasPagescale) {
        Pagescale = other.Pagescale;
      }
      if (other.HasPageserial) {
        Pageserial = other.Pageserial;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ShareHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Scrollx = input.ReadUInt32();
            break;
          }
          case 48: {
            Scrolly = input.ReadUInt32();
            break;
          }
          case 61: {
            Pagescale = input.ReadFloat();
            break;
          }
          case 64: {
            Pageserial = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ShareHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Scrollx = input.ReadUInt32();
            break;
          }
          case 48: {
            Scrolly = input.ReadUInt32();
            break;
          }
          case 61: {
            Pagescale = input.ReadFloat();
            break;
          }
          case 64: {
            Pageserial = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGameOverlayTexturePaint : pb::IMessage<CMsgGameOverlayTexturePaint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGameOverlayTexturePaint> _parser = new pb::MessageParser<CMsgGameOverlayTexturePaint>(() => new CMsgGameOverlayTexturePaint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGameOverlayTexturePaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGameOverlayTexturePaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGameOverlayTexturePaint(CMsgGameOverlayTexturePaint other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      width_ = other.width_;
      height_ = other.height_;
      scrollx_ = other.scrollx_;
      scrolly_ = other.scrolly_;
      pagescale_ = other.pagescale_;
      pageserial_ = other.pageserial_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGameOverlayTexturePaint Clone() {
      return new CMsgGameOverlayTexturePaint(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "scrollx" field.</summary>
    public const int ScrollxFieldNumber = 5;
    private readonly static uint ScrollxDefaultValue = 0;

    private uint scrollx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scrollx {
      get { if ((_hasBits0 & 8) != 0) { return scrollx_; } else { return ScrollxDefaultValue; } }
      set {
        _hasBits0 |= 8;
        scrollx_ = value;
      }
    }
    /// <summary>Gets whether the "scrollx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrollx {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "scrollx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrollx() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "scrolly" field.</summary>
    public const int ScrollyFieldNumber = 6;
    private readonly static uint ScrollyDefaultValue = 0;

    private uint scrolly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scrolly {
      get { if ((_hasBits0 & 16) != 0) { return scrolly_; } else { return ScrollyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        scrolly_ = value;
      }
    }
    /// <summary>Gets whether the "scrolly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScrolly {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "scrolly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScrolly() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "pagescale" field.</summary>
    public const int PagescaleFieldNumber = 7;
    private readonly static float PagescaleDefaultValue = 0F;

    private float pagescale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pagescale {
      get { if ((_hasBits0 & 32) != 0) { return pagescale_; } else { return PagescaleDefaultValue; } }
      set {
        _hasBits0 |= 32;
        pagescale_ = value;
      }
    }
    /// <summary>Gets whether the "pagescale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPagescale {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "pagescale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPagescale() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "pageserial" field.</summary>
    public const int PageserialFieldNumber = 8;
    private readonly static uint PageserialDefaultValue = 0;

    private uint pageserial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Pageserial {
      get { if ((_hasBits0 & 64) != 0) { return pageserial_; } else { return PageserialDefaultValue; } }
      set {
        _hasBits0 |= 64;
        pageserial_ = value;
      }
    }
    /// <summary>Gets whether the "pageserial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageserial {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "pageserial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageserial() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGameOverlayTexturePaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGameOverlayTexturePaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Scrollx != other.Scrollx) return false;
      if (Scrolly != other.Scrolly) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pagescale, other.Pagescale)) return false;
      if (Pageserial != other.Pageserial) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasScrollx) hash ^= Scrollx.GetHashCode();
      if (HasScrolly) hash ^= Scrolly.GetHashCode();
      if (HasPagescale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pagescale);
      if (HasPageserial) hash ^= Pageserial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasScrollx) {
        output.WriteRawTag(40);
        output.WriteUInt32(Scrollx);
      }
      if (HasScrolly) {
        output.WriteRawTag(48);
        output.WriteUInt32(Scrolly);
      }
      if (HasPagescale) {
        output.WriteRawTag(61);
        output.WriteFloat(Pagescale);
      }
      if (HasPageserial) {
        output.WriteRawTag(64);
        output.WriteUInt32(Pageserial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasScrollx) {
        output.WriteRawTag(40);
        output.WriteUInt32(Scrollx);
      }
      if (HasScrolly) {
        output.WriteRawTag(48);
        output.WriteUInt32(Scrolly);
      }
      if (HasPagescale) {
        output.WriteRawTag(61);
        output.WriteFloat(Pagescale);
      }
      if (HasPageserial) {
        output.WriteRawTag(64);
        output.WriteUInt32(Pageserial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasScrollx) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scrollx);
      }
      if (HasScrolly) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scrolly);
      }
      if (HasPagescale) {
        size += 1 + 4;
      }
      if (HasPageserial) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pageserial);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGameOverlayTexturePaint other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasScrollx) {
        Scrollx = other.Scrollx;
      }
      if (other.HasScrolly) {
        Scrolly = other.Scrolly;
      }
      if (other.HasPagescale) {
        Pagescale = other.Pagescale;
      }
      if (other.HasPageserial) {
        Pageserial = other.Pageserial;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Scrollx = input.ReadUInt32();
            break;
          }
          case 48: {
            Scrolly = input.ReadUInt32();
            break;
          }
          case 61: {
            Pagescale = input.ReadFloat();
            break;
          }
          case 64: {
            Pageserial = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Scrollx = input.ReadUInt32();
            break;
          }
          case 48: {
            Scrolly = input.ReadUInt32();
            break;
          }
          case 61: {
            Pagescale = input.ReadFloat();
            break;
          }
          case 64: {
            Pageserial = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGetZoom : pb::IMessage<CMsgGetZoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGetZoom> _parser = new pb::MessageParser<CMsgGetZoom>(() => new CMsgGetZoom());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGetZoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetZoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetZoom(CMsgGetZoom other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetZoom Clone() {
      return new CMsgGetZoom(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGetZoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGetZoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGetZoom other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGetZoomResponse : pb::IMessage<CMsgGetZoomResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGetZoomResponse> _parser = new pb::MessageParser<CMsgGetZoomResponse>(() => new CMsgGetZoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGetZoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetZoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetZoomResponse(CMsgGetZoomResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      zoom_ = other.zoom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetZoomResponse Clone() {
      return new CMsgGetZoomResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 2;
    private readonly static float ZoomDefaultValue = 0F;

    private float zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Zoom {
      get { if ((_hasBits0 & 2) != 0) { return zoom_; } else { return ZoomDefaultValue; } }
      set {
        _hasBits0 |= 2;
        zoom_ = value;
      }
    }
    /// <summary>Gets whether the "zoom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZoom {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "zoom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZoom() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGetZoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGetZoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Zoom, other.Zoom)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasZoom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Zoom);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasZoom) {
        output.WriteRawTag(21);
        output.WriteFloat(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasZoom) {
        output.WriteRawTag(21);
        output.WriteFloat(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasZoom) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGetZoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasZoom) {
        Zoom = other.Zoom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Zoom = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Zoom = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgLinkAtPosition : pb::IMessage<CMsgLinkAtPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLinkAtPosition> _parser = new pb::MessageParser<CMsgLinkAtPosition>(() => new CMsgLinkAtPosition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgLinkAtPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLinkAtPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLinkAtPosition(CMsgLinkAtPosition other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLinkAtPosition Clone() {
      return new CMsgLinkAtPosition(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static uint XDefaultValue = 0;

    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static uint YDefaultValue = 0;

    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgLinkAtPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgLinkAtPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgLinkAtPosition other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgLinkAtPositionResponse : pb::IMessage<CMsgLinkAtPositionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLinkAtPositionResponse> _parser = new pb::MessageParser<CMsgLinkAtPositionResponse>(() => new CMsgLinkAtPositionResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgLinkAtPositionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLinkAtPositionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLinkAtPositionResponse(CMsgLinkAtPositionResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      url_ = other.url_;
      blivelink_ = other.blivelink_;
      binput_ = other.binput_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLinkAtPositionResponse Clone() {
      return new CMsgLinkAtPositionResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static uint XDefaultValue = 0;

    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static uint YDefaultValue = 0;

    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "blivelink" field.</summary>
    public const int BlivelinkFieldNumber = 5;
    private readonly static bool BlivelinkDefaultValue = false;

    private bool blivelink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Blivelink {
      get { if ((_hasBits0 & 8) != 0) { return blivelink_; } else { return BlivelinkDefaultValue; } }
      set {
        _hasBits0 |= 8;
        blivelink_ = value;
      }
    }
    /// <summary>Gets whether the "blivelink" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlivelink {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "blivelink" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlivelink() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "binput" field.</summary>
    public const int BinputFieldNumber = 6;
    private readonly static bool BinputDefaultValue = false;

    private bool binput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Binput {
      get { if ((_hasBits0 & 16) != 0) { return binput_; } else { return BinputDefaultValue; } }
      set {
        _hasBits0 |= 16;
        binput_ = value;
      }
    }
    /// <summary>Gets whether the "binput" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBinput {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "binput" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBinput() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgLinkAtPositionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgLinkAtPositionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Url != other.Url) return false;
      if (Blivelink != other.Blivelink) return false;
      if (Binput != other.Binput) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasBlivelink) hash ^= Blivelink.GetHashCode();
      if (HasBinput) hash ^= Binput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (HasUrl) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (HasBlivelink) {
        output.WriteRawTag(40);
        output.WriteBool(Blivelink);
      }
      if (HasBinput) {
        output.WriteRawTag(48);
        output.WriteBool(Binput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (HasUrl) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (HasBlivelink) {
        output.WriteRawTag(40);
        output.WriteBool(Blivelink);
      }
      if (HasBinput) {
        output.WriteRawTag(48);
        output.WriteBool(Binput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasBlivelink) {
        size += 1 + 1;
      }
      if (HasBinput) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgLinkAtPositionResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasBlivelink) {
        Blivelink = other.Blivelink;
      }
      if (other.HasBinput) {
        Binput = other.Binput;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 40: {
            Blivelink = input.ReadBool();
            break;
          }
          case 48: {
            Binput = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 40: {
            Blivelink = input.ReadBool();
            break;
          }
          case 48: {
            Binput = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgZoomToElementAtPosition : pb::IMessage<CMsgZoomToElementAtPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgZoomToElementAtPosition> _parser = new pb::MessageParser<CMsgZoomToElementAtPosition>(() => new CMsgZoomToElementAtPosition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgZoomToElementAtPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToElementAtPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToElementAtPosition(CMsgZoomToElementAtPosition other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToElementAtPosition Clone() {
      return new CMsgZoomToElementAtPosition(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static uint XDefaultValue = 0;

    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static uint YDefaultValue = 0;

    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgZoomToElementAtPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgZoomToElementAtPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgZoomToElementAtPosition other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgZoomToElementAtPositionResponse : pb::IMessage<CMsgZoomToElementAtPositionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgZoomToElementAtPositionResponse> _parser = new pb::MessageParser<CMsgZoomToElementAtPositionResponse>(() => new CMsgZoomToElementAtPositionResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgZoomToElementAtPositionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToElementAtPositionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToElementAtPositionResponse(CMsgZoomToElementAtPositionResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scale_ = other.scale_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToElementAtPositionResponse Clone() {
      return new CMsgZoomToElementAtPositionResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 2;
    private readonly static float ScaleDefaultValue = 0F;

    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Scale {
      get { if ((_hasBits0 & 2) != 0) { return scale_; } else { return ScaleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scale_ = value;
      }
    }
    /// <summary>Gets whether the "scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScale {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScale() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 3;
    private readonly static float DurationDefaultValue = 0F;

    private float duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Duration {
      get { if ((_hasBits0 & 4) != 0) { return duration_; } else { return DurationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        duration_ = value;
      }
    }
    /// <summary>Gets whether the "duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDuration {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDuration() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgZoomToElementAtPositionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgZoomToElementAtPositionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (HasDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScale) {
        output.WriteRawTag(21);
        output.WriteFloat(Scale);
      }
      if (HasDuration) {
        output.WriteRawTag(29);
        output.WriteFloat(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScale) {
        output.WriteRawTag(21);
        output.WriteFloat(Scale);
      }
      if (HasDuration) {
        output.WriteRawTag(29);
        output.WriteFloat(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScale) {
        size += 1 + 4;
      }
      if (HasDuration) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgZoomToElementAtPositionResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScale) {
        Scale = other.Scale;
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Scale = input.ReadFloat();
            break;
          }
          case 29: {
            Duration = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Scale = input.ReadFloat();
            break;
          }
          case 29: {
            Duration = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgScalePageToValue : pb::IMessage<CMsgScalePageToValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgScalePageToValue> _parser = new pb::MessageParser<CMsgScalePageToValue>(() => new CMsgScalePageToValue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgScalePageToValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScalePageToValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScalePageToValue(CMsgScalePageToValue other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      scale_ = other.scale_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScalePageToValue Clone() {
      return new CMsgScalePageToValue(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 2;
    private readonly static float ScaleDefaultValue = 0F;

    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Scale {
      get { if ((_hasBits0 & 2) != 0) { return scale_; } else { return ScaleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scale_ = value;
      }
    }
    /// <summary>Gets whether the "scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScale {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScale() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private readonly static float XDefaultValue = 0F;

    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { if ((_hasBits0 & 4) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 4;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private readonly static float YDefaultValue = 0F;

    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { if ((_hasBits0 & 8) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 8;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgScalePageToValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgScalePageToValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScale) {
        output.WriteRawTag(21);
        output.WriteFloat(Scale);
      }
      if (HasX) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasScale) {
        output.WriteRawTag(21);
        output.WriteFloat(Scale);
      }
      if (HasX) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasScale) {
        size += 1 + 4;
      }
      if (HasX) {
        size += 1 + 4;
      }
      if (HasY) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgScalePageToValue other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasScale) {
        Scale = other.Scale;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Scale = input.ReadFloat();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Scale = input.ReadFloat();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgForcePopupsToDirectHWND : pb::IMessage<CMsgForcePopupsToDirectHWND>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgForcePopupsToDirectHWND> _parser = new pb::MessageParser<CMsgForcePopupsToDirectHWND>(() => new CMsgForcePopupsToDirectHWND());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgForcePopupsToDirectHWND> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgForcePopupsToDirectHWND() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgForcePopupsToDirectHWND(CMsgForcePopupsToDirectHWND other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      forceDirectHwndPopups_ = other.forceDirectHwndPopups_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgForcePopupsToDirectHWND Clone() {
      return new CMsgForcePopupsToDirectHWND(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "force_direct_hwnd_popups" field.</summary>
    public const int ForceDirectHwndPopupsFieldNumber = 2;
    private readonly static bool ForceDirectHwndPopupsDefaultValue = false;

    private bool forceDirectHwndPopups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceDirectHwndPopups {
      get { if ((_hasBits0 & 2) != 0) { return forceDirectHwndPopups_; } else { return ForceDirectHwndPopupsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        forceDirectHwndPopups_ = value;
      }
    }
    /// <summary>Gets whether the "force_direct_hwnd_popups" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceDirectHwndPopups {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "force_direct_hwnd_popups" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceDirectHwndPopups() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgForcePopupsToDirectHWND);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgForcePopupsToDirectHWND other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (ForceDirectHwndPopups != other.ForceDirectHwndPopups) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasForceDirectHwndPopups) hash ^= ForceDirectHwndPopups.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasForceDirectHwndPopups) {
        output.WriteRawTag(16);
        output.WriteBool(ForceDirectHwndPopups);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasForceDirectHwndPopups) {
        output.WriteRawTag(16);
        output.WriteBool(ForceDirectHwndPopups);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasForceDirectHwndPopups) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgForcePopupsToDirectHWND other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasForceDirectHwndPopups) {
        ForceDirectHwndPopups = other.ForceDirectHwndPopups;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ForceDirectHwndPopups = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            ForceDirectHwndPopups = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgScalePageToValueResponse : pb::IMessage<CMsgScalePageToValueResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgScalePageToValueResponse> _parser = new pb::MessageParser<CMsgScalePageToValueResponse>(() => new CMsgScalePageToValueResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgScalePageToValueResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScalePageToValueResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScalePageToValueResponse(CMsgScalePageToValueResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      zoom_ = other.zoom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScalePageToValueResponse Clone() {
      return new CMsgScalePageToValueResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 2;
    private readonly static float ZoomDefaultValue = 0F;

    private float zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Zoom {
      get { if ((_hasBits0 & 2) != 0) { return zoom_; } else { return ZoomDefaultValue; } }
      set {
        _hasBits0 |= 2;
        zoom_ = value;
      }
    }
    /// <summary>Gets whether the "zoom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZoom {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "zoom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZoom() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgScalePageToValueResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgScalePageToValueResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Zoom, other.Zoom)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasZoom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Zoom);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasZoom) {
        output.WriteRawTag(21);
        output.WriteFloat(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasZoom) {
        output.WriteRawTag(21);
        output.WriteFloat(Zoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasZoom) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgScalePageToValueResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasZoom) {
        Zoom = other.Zoom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Zoom = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            Zoom = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSavePageToJPEG : pb::IMessage<CMsgSavePageToJPEG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSavePageToJPEG> _parser = new pb::MessageParser<CMsgSavePageToJPEG>(() => new CMsgSavePageToJPEG());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSavePageToJPEG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSavePageToJPEG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSavePageToJPEG(CMsgSavePageToJPEG other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      filename_ = other.filename_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSavePageToJPEG Clone() {
      return new CMsgSavePageToJPEG(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 3;
    private readonly static string FilenameDefaultValue = "";

    private string filename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filename {
      get { return filename_ ?? FilenameDefaultValue; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilename {
      get { return filename_ != null; }
    }
    /// <summary>Clears the value of the "filename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilename() {
      filename_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSavePageToJPEG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSavePageToJPEG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (Filename != other.Filename) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasFilename) hash ^= Filename.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasFilename) {
        output.WriteRawTag(26);
        output.WriteString(Filename);
      }
      if (HasWidth) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(40);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasFilename) {
        output.WriteRawTag(26);
        output.WriteString(Filename);
      }
      if (HasWidth) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(40);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasFilename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSavePageToJPEG other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasFilename) {
        Filename = other.Filename;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Filename = input.ReadString();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 40: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Filename = input.ReadString();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 40: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSavePageToJPEGResponse : pb::IMessage<CMsgSavePageToJPEGResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSavePageToJPEGResponse> _parser = new pb::MessageParser<CMsgSavePageToJPEGResponse>(() => new CMsgSavePageToJPEGResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSavePageToJPEGResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSavePageToJPEGResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSavePageToJPEGResponse(CMsgSavePageToJPEGResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      filename_ = other.filename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSavePageToJPEGResponse Clone() {
      return new CMsgSavePageToJPEGResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 3;
    private readonly static string FilenameDefaultValue = "";

    private string filename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filename {
      get { return filename_ ?? FilenameDefaultValue; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilename {
      get { return filename_ != null; }
    }
    /// <summary>Clears the value of the "filename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilename() {
      filename_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSavePageToJPEGResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSavePageToJPEGResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (Filename != other.Filename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasFilename) hash ^= Filename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasFilename) {
        output.WriteRawTag(26);
        output.WriteString(Filename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasFilename) {
        output.WriteRawTag(26);
        output.WriteString(Filename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasFilename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSavePageToJPEGResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasFilename) {
        Filename = other.Filename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Filename = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Filename = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSAlert : pb::IMessage<CMsgJSAlert>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSAlert> _parser = new pb::MessageParser<CMsgJSAlert>(() => new CMsgJSAlert());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSAlert> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSAlert() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSAlert(CMsgJSAlert other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSAlert Clone() {
      return new CMsgJSAlert(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSAlert);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSAlert other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSAlert other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSConfirm : pb::IMessage<CMsgJSConfirm>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSConfirm> _parser = new pb::MessageParser<CMsgJSConfirm>(() => new CMsgJSConfirm());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSConfirm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSConfirm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSConfirm(CMsgJSConfirm other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSConfirm Clone() {
      return new CMsgJSConfirm(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSConfirm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSConfirm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSConfirm other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSDialogResponse : pb::IMessage<CMsgJSDialogResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSDialogResponse> _parser = new pb::MessageParser<CMsgJSDialogResponse>(() => new CMsgJSDialogResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSDialogResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSDialogResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSDialogResponse(CMsgJSDialogResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSDialogResponse Clone() {
      return new CMsgJSDialogResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private readonly static bool ResultDefaultValue = false;

    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Result {
      get { if ((_hasBits0 & 2) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 2;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSDialogResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSDialogResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasResult) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSDialogResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgCanGoBackAndForward : pb::IMessage<CMsgCanGoBackAndForward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCanGoBackAndForward> _parser = new pb::MessageParser<CMsgCanGoBackAndForward>(() => new CMsgCanGoBackAndForward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgCanGoBackAndForward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCanGoBackAndForward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCanGoBackAndForward(CMsgCanGoBackAndForward other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      bgoback_ = other.bgoback_;
      bgoforward_ = other.bgoforward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCanGoBackAndForward Clone() {
      return new CMsgCanGoBackAndForward(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bgoback" field.</summary>
    public const int BgobackFieldNumber = 2;
    private readonly static bool BgobackDefaultValue = false;

    private bool bgoback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bgoback {
      get { if ((_hasBits0 & 2) != 0) { return bgoback_; } else { return BgobackDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bgoback_ = value;
      }
    }
    /// <summary>Gets whether the "bgoback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBgoback {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bgoback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBgoback() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bgoforward" field.</summary>
    public const int BgoforwardFieldNumber = 3;
    private readonly static bool BgoforwardDefaultValue = false;

    private bool bgoforward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bgoforward {
      get { if ((_hasBits0 & 4) != 0) { return bgoforward_; } else { return BgoforwardDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bgoforward_ = value;
      }
    }
    /// <summary>Gets whether the "bgoforward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBgoforward {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bgoforward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBgoforward() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgCanGoBackAndForward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgCanGoBackAndForward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Bgoback != other.Bgoback) return false;
      if (Bgoforward != other.Bgoforward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasBgoback) hash ^= Bgoback.GetHashCode();
      if (HasBgoforward) hash ^= Bgoforward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBgoback) {
        output.WriteRawTag(16);
        output.WriteBool(Bgoback);
      }
      if (HasBgoforward) {
        output.WriteRawTag(24);
        output.WriteBool(Bgoforward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBgoback) {
        output.WriteRawTag(16);
        output.WriteBool(Bgoback);
      }
      if (HasBgoforward) {
        output.WriteRawTag(24);
        output.WriteBool(Bgoforward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasBgoback) {
        size += 1 + 1;
      }
      if (HasBgoforward) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgCanGoBackAndForward other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasBgoback) {
        Bgoback = other.Bgoback;
      }
      if (other.HasBgoforward) {
        Bgoforward = other.Bgoforward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Bgoback = input.ReadBool();
            break;
          }
          case 24: {
            Bgoforward = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Bgoback = input.ReadBool();
            break;
          }
          case 24: {
            Bgoforward = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgOpenSteamURL : pb::IMessage<CMsgOpenSteamURL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgOpenSteamURL> _parser = new pb::MessageParser<CMsgOpenSteamURL>(() => new CMsgOpenSteamURL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgOpenSteamURL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenSteamURL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenSteamURL(CMsgOpenSteamURL other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      referrer_ = other.referrer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenSteamURL Clone() {
      return new CMsgOpenSteamURL(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "referrer" field.</summary>
    public const int ReferrerFieldNumber = 3;
    private readonly static string ReferrerDefaultValue = "";

    private string referrer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Referrer {
      get { return referrer_ ?? ReferrerDefaultValue; }
      set {
        referrer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "referrer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReferrer {
      get { return referrer_ != null; }
    }
    /// <summary>Clears the value of the "referrer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReferrer() {
      referrer_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgOpenSteamURL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgOpenSteamURL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if (Referrer != other.Referrer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasReferrer) hash ^= Referrer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasReferrer) {
        output.WriteRawTag(26);
        output.WriteString(Referrer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasReferrer) {
        output.WriteRawTag(26);
        output.WriteString(Referrer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasReferrer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Referrer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgOpenSteamURL other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasReferrer) {
        Referrer = other.Referrer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Referrer = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Referrer = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetCookie : pb::IMessage<CMsgSetCookie>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetCookie> _parser = new pb::MessageParser<CMsgSetCookie>(() => new CMsgSetCookie());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetCookie(CMsgSetCookie other) : this() {
      _hasBits0 = other._hasBits0;
      key_ = other.key_;
      value_ = other.value_;
      path_ = other.path_;
      host_ = other.host_;
      expires_ = other.expires_;
      secure_ = other.secure_;
      httponly_ = other.httponly_;
      samesite_ = other.samesite_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetCookie Clone() {
      return new CMsgSetCookie(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private readonly static string KeyDefaultValue = "";

    private string key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private readonly static string PathDefaultValue = "";

    private string path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_ ?? PathDefaultValue; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPath {
      get { return path_ != null; }
    }
    /// <summary>Clears the value of the "path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPath() {
      path_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 4;
    private readonly static string HostDefaultValue = "";

    private string host_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "expires" field.</summary>
    public const int ExpiresFieldNumber = 5;
    private readonly static uint ExpiresDefaultValue = 0;

    private uint expires_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Expires {
      get { if ((_hasBits0 & 1) != 0) { return expires_; } else { return ExpiresDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expires_ = value;
      }
    }
    /// <summary>Gets whether the "expires" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpires {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expires" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpires() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "secure" field.</summary>
    public const int SecureFieldNumber = 6;
    private readonly static bool SecureDefaultValue = false;

    private bool secure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Secure {
      get { if ((_hasBits0 & 2) != 0) { return secure_; } else { return SecureDefaultValue; } }
      set {
        _hasBits0 |= 2;
        secure_ = value;
      }
    }
    /// <summary>Gets whether the "secure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecure {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "secure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecure() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "httponly" field.</summary>
    public const int HttponlyFieldNumber = 7;
    private readonly static bool HttponlyDefaultValue = false;

    private bool httponly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Httponly {
      get { if ((_hasBits0 & 4) != 0) { return httponly_; } else { return HttponlyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        httponly_ = value;
      }
    }
    /// <summary>Gets whether the "httponly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHttponly {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "httponly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHttponly() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "samesite" field.</summary>
    public const int SamesiteFieldNumber = 8;
    private readonly static int SamesiteDefaultValue = 0;

    private int samesite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Samesite {
      get { if ((_hasBits0 & 8) != 0) { return samesite_; } else { return SamesiteDefaultValue; } }
      set {
        _hasBits0 |= 8;
        samesite_ = value;
      }
    }
    /// <summary>Gets whether the "samesite" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSamesite {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "samesite" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSamesite() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (Path != other.Path) return false;
      if (Host != other.Host) return false;
      if (Expires != other.Expires) return false;
      if (Secure != other.Secure) return false;
      if (Httponly != other.Httponly) return false;
      if (Samesite != other.Samesite) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasPath) hash ^= Path.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasExpires) hash ^= Expires.GetHashCode();
      if (HasSecure) hash ^= Secure.GetHashCode();
      if (HasHttponly) hash ^= Httponly.GetHashCode();
      if (HasSamesite) hash ^= Samesite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasPath) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (HasHost) {
        output.WriteRawTag(34);
        output.WriteString(Host);
      }
      if (HasExpires) {
        output.WriteRawTag(40);
        output.WriteUInt32(Expires);
      }
      if (HasSecure) {
        output.WriteRawTag(48);
        output.WriteBool(Secure);
      }
      if (HasHttponly) {
        output.WriteRawTag(56);
        output.WriteBool(Httponly);
      }
      if (HasSamesite) {
        output.WriteRawTag(64);
        output.WriteInt32(Samesite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasPath) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (HasHost) {
        output.WriteRawTag(34);
        output.WriteString(Host);
      }
      if (HasExpires) {
        output.WriteRawTag(40);
        output.WriteUInt32(Expires);
      }
      if (HasSecure) {
        output.WriteRawTag(48);
        output.WriteBool(Secure);
      }
      if (HasHttponly) {
        output.WriteRawTag(56);
        output.WriteBool(Httponly);
      }
      if (HasSamesite) {
        output.WriteRawTag(64);
        output.WriteInt32(Samesite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasExpires) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expires);
      }
      if (HasSecure) {
        size += 1 + 1;
      }
      if (HasHttponly) {
        size += 1 + 1;
      }
      if (HasSamesite) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Samesite);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetCookie other) {
      if (other == null) {
        return;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasPath) {
        Path = other.Path;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasExpires) {
        Expires = other.Expires;
      }
      if (other.HasSecure) {
        Secure = other.Secure;
      }
      if (other.HasHttponly) {
        Httponly = other.Httponly;
      }
      if (other.HasSamesite) {
        Samesite = other.Samesite;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            Host = input.ReadString();
            break;
          }
          case 40: {
            Expires = input.ReadUInt32();
            break;
          }
          case 48: {
            Secure = input.ReadBool();
            break;
          }
          case 56: {
            Httponly = input.ReadBool();
            break;
          }
          case 64: {
            Samesite = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            Host = input.ReadString();
            break;
          }
          case 40: {
            Expires = input.ReadUInt32();
            break;
          }
          case 48: {
            Secure = input.ReadBool();
            break;
          }
          case 56: {
            Httponly = input.ReadBool();
            break;
          }
          case 64: {
            Samesite = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetTargetFrameRate : pb::IMessage<CMsgSetTargetFrameRate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetTargetFrameRate> _parser = new pb::MessageParser<CMsgSetTargetFrameRate>(() => new CMsgSetTargetFrameRate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetTargetFrameRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetTargetFrameRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetTargetFrameRate(CMsgSetTargetFrameRate other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      nTargetFrameRate_ = other.nTargetFrameRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetTargetFrameRate Clone() {
      return new CMsgSetTargetFrameRate(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nTargetFrameRate" field.</summary>
    public const int NTargetFrameRateFieldNumber = 2;
    private readonly static uint NTargetFrameRateDefaultValue = 0;

    private uint nTargetFrameRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NTargetFrameRate {
      get { if ((_hasBits0 & 2) != 0) { return nTargetFrameRate_; } else { return NTargetFrameRateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        nTargetFrameRate_ = value;
      }
    }
    /// <summary>Gets whether the "nTargetFrameRate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNTargetFrameRate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "nTargetFrameRate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNTargetFrameRate() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetTargetFrameRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetTargetFrameRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (NTargetFrameRate != other.NTargetFrameRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasNTargetFrameRate) hash ^= NTargetFrameRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasNTargetFrameRate) {
        output.WriteRawTag(16);
        output.WriteUInt32(NTargetFrameRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasNTargetFrameRate) {
        output.WriteRawTag(16);
        output.WriteUInt32(NTargetFrameRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasNTargetFrameRate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NTargetFrameRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetTargetFrameRate other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasNTargetFrameRate) {
        NTargetFrameRate = other.NTargetFrameRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            NTargetFrameRate = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            NTargetFrameRate = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPauseRepaint : pb::IMessage<CMsgPauseRepaint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPauseRepaint> _parser = new pb::MessageParser<CMsgPauseRepaint>(() => new CMsgPauseRepaint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPauseRepaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPauseRepaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPauseRepaint(CMsgPauseRepaint other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPauseRepaint Clone() {
      return new CMsgPauseRepaint(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPauseRepaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPauseRepaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPauseRepaint other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFullRepaint : pb::IMessage<CMsgFullRepaint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFullRepaint> _parser = new pb::MessageParser<CMsgFullRepaint>(() => new CMsgFullRepaint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFullRepaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFullRepaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFullRepaint(CMsgFullRepaint other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFullRepaint Clone() {
      return new CMsgFullRepaint(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFullRepaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFullRepaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFullRepaint other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRequestFullScreen : pb::IMessage<CMsgRequestFullScreen>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRequestFullScreen> _parser = new pb::MessageParser<CMsgRequestFullScreen>(() => new CMsgRequestFullScreen());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRequestFullScreen> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRequestFullScreen() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRequestFullScreen(CMsgRequestFullScreen other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRequestFullScreen Clone() {
      return new CMsgRequestFullScreen(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRequestFullScreen);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRequestFullScreen other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRequestFullScreen other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgExitFullScreen : pb::IMessage<CMsgExitFullScreen>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgExitFullScreen> _parser = new pb::MessageParser<CMsgExitFullScreen>(() => new CMsgExitFullScreen());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgExitFullScreen> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgExitFullScreen() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgExitFullScreen(CMsgExitFullScreen other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgExitFullScreen Clone() {
      return new CMsgExitFullScreen(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgExitFullScreen);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgExitFullScreen other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgExitFullScreen other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgToggleFindInPageDialog : pb::IMessage<CMsgToggleFindInPageDialog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgToggleFindInPageDialog> _parser = new pb::MessageParser<CMsgToggleFindInPageDialog>(() => new CMsgToggleFindInPageDialog());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgToggleFindInPageDialog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgToggleFindInPageDialog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgToggleFindInPageDialog(CMsgToggleFindInPageDialog other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgToggleFindInPageDialog Clone() {
      return new CMsgToggleFindInPageDialog(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgToggleFindInPageDialog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgToggleFindInPageDialog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgToggleFindInPageDialog other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetPIDShuttingDown : pb::IMessage<CMsgSetPIDShuttingDown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetPIDShuttingDown> _parser = new pb::MessageParser<CMsgSetPIDShuttingDown>(() => new CMsgSetPIDShuttingDown());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetPIDShuttingDown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetPIDShuttingDown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetPIDShuttingDown(CMsgSetPIDShuttingDown other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetPIDShuttingDown Clone() {
      return new CMsgSetPIDShuttingDown(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetPIDShuttingDown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetPIDShuttingDown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetPIDShuttingDown other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgDisableBackgroundThrottling : pb::IMessage<CMsgDisableBackgroundThrottling>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDisableBackgroundThrottling> _parser = new pb::MessageParser<CMsgDisableBackgroundThrottling>(() => new CMsgDisableBackgroundThrottling());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgDisableBackgroundThrottling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDisableBackgroundThrottling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDisableBackgroundThrottling(CMsgDisableBackgroundThrottling other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDisableBackgroundThrottling Clone() {
      return new CMsgDisableBackgroundThrottling(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgDisableBackgroundThrottling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgDisableBackgroundThrottling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgDisableBackgroundThrottling other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgAckPIDShuttingDown : pb::IMessage<CMsgAckPIDShuttingDown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgAckPIDShuttingDown> _parser = new pb::MessageParser<CMsgAckPIDShuttingDown>(() => new CMsgAckPIDShuttingDown());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgAckPIDShuttingDown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckPIDShuttingDown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckPIDShuttingDown(CMsgAckPIDShuttingDown other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckPIDShuttingDown Clone() {
      return new CMsgAckPIDShuttingDown(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgAckPIDShuttingDown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgAckPIDShuttingDown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgAckPIDShuttingDown other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGetCookiesForURL : pb::IMessage<CMsgGetCookiesForURL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGetCookiesForURL> _parser = new pb::MessageParser<CMsgGetCookiesForURL>(() => new CMsgGetCookiesForURL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGetCookiesForURL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetCookiesForURL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetCookiesForURL(CMsgGetCookiesForURL other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetCookiesForURL Clone() {
      return new CMsgGetCookiesForURL(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGetCookiesForURL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGetCookiesForURL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGetCookiesForURL other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CCookie : pb::IMessage<CCookie>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CCookie> _parser = new pb::MessageParser<CCookie>(() => new CCookie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CCookie(CCookie other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      domain_ = other.domain_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CCookie Clone() {
      return new CCookie(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 3;
    private readonly static string DomainDefaultValue = "";

    private string domain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Domain {
      get { return domain_ ?? DomainDefaultValue; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "domain" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDomain {
      get { return domain_ != null; }
    }
    /// <summary>Clears the value of the "domain" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDomain() {
      domain_ = null;
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 4;
    private readonly static string PathDefaultValue = "";

    private string path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_ ?? PathDefaultValue; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPath {
      get { return path_ != null; }
    }
    /// <summary>Clears the value of the "path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPath() {
      path_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (Domain != other.Domain) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasDomain) hash ^= Domain.GetHashCode();
      if (HasPath) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasDomain) {
        output.WriteRawTag(26);
        output.WriteString(Domain);
      }
      if (HasPath) {
        output.WriteRawTag(34);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasDomain) {
        output.WriteRawTag(26);
        output.WriteString(Domain);
      }
      if (HasPath) {
        output.WriteRawTag(34);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasDomain) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (HasPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CCookie other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasDomain) {
        Domain = other.Domain;
      }
      if (other.HasPath) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            Domain = input.ReadString();
            break;
          }
          case 34: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            Domain = input.ReadString();
            break;
          }
          case 34: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGetCookiesForURLResponse : pb::IMessage<CMsgGetCookiesForURLResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGetCookiesForURLResponse> _parser = new pb::MessageParser<CMsgGetCookiesForURLResponse>(() => new CMsgGetCookiesForURLResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGetCookiesForURLResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetCookiesForURLResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetCookiesForURLResponse(CMsgGetCookiesForURLResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      cookies_ = other.cookies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGetCookiesForURLResponse Clone() {
      return new CMsgGetCookiesForURLResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "cookies" field.</summary>
    public const int CookiesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CCookie> _repeated_cookies_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CCookie.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CCookie> cookies_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CCookie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CCookie> Cookies {
      get { return cookies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGetCookiesForURLResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGetCookiesForURLResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      if(!cookies_.Equals(other.cookies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      hash ^= cookies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      cookies_.WriteTo(output, _repeated_cookies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      cookies_.WriteTo(ref output, _repeated_cookies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      size += cookies_.CalculateSize(_repeated_cookies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGetCookiesForURLResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      cookies_.Add(other.cookies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            cookies_.AddEntriesFrom(input, _repeated_cookies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            cookies_.AddEntriesFrom(ref input, _repeated_cookies_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgNodeHasFocus : pb::IMessage<CMsgNodeHasFocus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgNodeHasFocus> _parser = new pb::MessageParser<CMsgNodeHasFocus>(() => new CMsgNodeHasFocus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgNodeHasFocus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNodeHasFocus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNodeHasFocus(CMsgNodeHasFocus other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      bInput_ = other.bInput_;
      name_ = other.name_;
      elementtagname_ = other.elementtagname_;
      searchbuttontext_ = other.searchbuttontext_;
      bHasMultipleInputs_ = other.bHasMultipleInputs_;
      inputType_ = other.inputType_;
      bIsMainFrame_ = other.bIsMainFrame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNodeHasFocus Clone() {
      return new CMsgNodeHasFocus(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bInput" field.</summary>
    public const int BInputFieldNumber = 2;
    private readonly static bool BInputDefaultValue = false;

    private bool bInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BInput {
      get { if ((_hasBits0 & 2) != 0) { return bInput_; } else { return BInputDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bInput_ = value;
      }
    }
    /// <summary>Gets whether the "bInput" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBInput {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bInput" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBInput() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "elementtagname" field.</summary>
    public const int ElementtagnameFieldNumber = 4;
    private readonly static string ElementtagnameDefaultValue = "";

    private string elementtagname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Elementtagname {
      get { return elementtagname_ ?? ElementtagnameDefaultValue; }
      set {
        elementtagname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "elementtagname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasElementtagname {
      get { return elementtagname_ != null; }
    }
    /// <summary>Clears the value of the "elementtagname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearElementtagname() {
      elementtagname_ = null;
    }

    /// <summary>Field number for the "searchbuttontext" field.</summary>
    public const int SearchbuttontextFieldNumber = 5;
    private readonly static string SearchbuttontextDefaultValue = "";

    private string searchbuttontext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Searchbuttontext {
      get { return searchbuttontext_ ?? SearchbuttontextDefaultValue; }
      set {
        searchbuttontext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "searchbuttontext" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSearchbuttontext {
      get { return searchbuttontext_ != null; }
    }
    /// <summary>Clears the value of the "searchbuttontext" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSearchbuttontext() {
      searchbuttontext_ = null;
    }

    /// <summary>Field number for the "bHasMultipleInputs" field.</summary>
    public const int BHasMultipleInputsFieldNumber = 6;
    private readonly static bool BHasMultipleInputsDefaultValue = false;

    private bool bHasMultipleInputs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BHasMultipleInputs {
      get { if ((_hasBits0 & 4) != 0) { return bHasMultipleInputs_; } else { return BHasMultipleInputsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bHasMultipleInputs_ = value;
      }
    }
    /// <summary>Gets whether the "bHasMultipleInputs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBHasMultipleInputs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bHasMultipleInputs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBHasMultipleInputs() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "input_type" field.</summary>
    public const int InputTypeFieldNumber = 7;
    private readonly static string InputTypeDefaultValue = "";

    private string inputType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputType {
      get { return inputType_ ?? InputTypeDefaultValue; }
      set {
        inputType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "input_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputType {
      get { return inputType_ != null; }
    }
    /// <summary>Clears the value of the "input_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputType() {
      inputType_ = null;
    }

    /// <summary>Field number for the "bIsMainFrame" field.</summary>
    public const int BIsMainFrameFieldNumber = 8;
    private readonly static bool BIsMainFrameDefaultValue = false;

    private bool bIsMainFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsMainFrame {
      get { if ((_hasBits0 & 8) != 0) { return bIsMainFrame_; } else { return BIsMainFrameDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bIsMainFrame_ = value;
      }
    }
    /// <summary>Gets whether the "bIsMainFrame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBIsMainFrame {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bIsMainFrame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBIsMainFrame() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgNodeHasFocus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgNodeHasFocus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (BInput != other.BInput) return false;
      if (Name != other.Name) return false;
      if (Elementtagname != other.Elementtagname) return false;
      if (Searchbuttontext != other.Searchbuttontext) return false;
      if (BHasMultipleInputs != other.BHasMultipleInputs) return false;
      if (InputType != other.InputType) return false;
      if (BIsMainFrame != other.BIsMainFrame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasBInput) hash ^= BInput.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasElementtagname) hash ^= Elementtagname.GetHashCode();
      if (HasSearchbuttontext) hash ^= Searchbuttontext.GetHashCode();
      if (HasBHasMultipleInputs) hash ^= BHasMultipleInputs.GetHashCode();
      if (HasInputType) hash ^= InputType.GetHashCode();
      if (HasBIsMainFrame) hash ^= BIsMainFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBInput) {
        output.WriteRawTag(16);
        output.WriteBool(BInput);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasElementtagname) {
        output.WriteRawTag(34);
        output.WriteString(Elementtagname);
      }
      if (HasSearchbuttontext) {
        output.WriteRawTag(42);
        output.WriteString(Searchbuttontext);
      }
      if (HasBHasMultipleInputs) {
        output.WriteRawTag(48);
        output.WriteBool(BHasMultipleInputs);
      }
      if (HasInputType) {
        output.WriteRawTag(58);
        output.WriteString(InputType);
      }
      if (HasBIsMainFrame) {
        output.WriteRawTag(64);
        output.WriteBool(BIsMainFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasBInput) {
        output.WriteRawTag(16);
        output.WriteBool(BInput);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasElementtagname) {
        output.WriteRawTag(34);
        output.WriteString(Elementtagname);
      }
      if (HasSearchbuttontext) {
        output.WriteRawTag(42);
        output.WriteString(Searchbuttontext);
      }
      if (HasBHasMultipleInputs) {
        output.WriteRawTag(48);
        output.WriteBool(BHasMultipleInputs);
      }
      if (HasInputType) {
        output.WriteRawTag(58);
        output.WriteString(InputType);
      }
      if (HasBIsMainFrame) {
        output.WriteRawTag(64);
        output.WriteBool(BIsMainFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasBInput) {
        size += 1 + 1;
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasElementtagname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Elementtagname);
      }
      if (HasSearchbuttontext) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Searchbuttontext);
      }
      if (HasBHasMultipleInputs) {
        size += 1 + 1;
      }
      if (HasInputType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputType);
      }
      if (HasBIsMainFrame) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgNodeHasFocus other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasBInput) {
        BInput = other.BInput;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasElementtagname) {
        Elementtagname = other.Elementtagname;
      }
      if (other.HasSearchbuttontext) {
        Searchbuttontext = other.Searchbuttontext;
      }
      if (other.HasBHasMultipleInputs) {
        BHasMultipleInputs = other.BHasMultipleInputs;
      }
      if (other.HasInputType) {
        InputType = other.InputType;
      }
      if (other.HasBIsMainFrame) {
        BIsMainFrame = other.BIsMainFrame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            BInput = input.ReadBool();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Elementtagname = input.ReadString();
            break;
          }
          case 42: {
            Searchbuttontext = input.ReadString();
            break;
          }
          case 48: {
            BHasMultipleInputs = input.ReadBool();
            break;
          }
          case 58: {
            InputType = input.ReadString();
            break;
          }
          case 64: {
            BIsMainFrame = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            BInput = input.ReadBool();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Elementtagname = input.ReadString();
            break;
          }
          case 42: {
            Searchbuttontext = input.ReadString();
            break;
          }
          case 48: {
            BHasMultipleInputs = input.ReadBool();
            break;
          }
          case 58: {
            InputType = input.ReadString();
            break;
          }
          case 64: {
            BIsMainFrame = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgZoomToFocusedElement : pb::IMessage<CMsgZoomToFocusedElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgZoomToFocusedElement> _parser = new pb::MessageParser<CMsgZoomToFocusedElement>(() => new CMsgZoomToFocusedElement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgZoomToFocusedElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToFocusedElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToFocusedElement(CMsgZoomToFocusedElement other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgZoomToFocusedElement Clone() {
      return new CMsgZoomToFocusedElement(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgZoomToFocusedElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgZoomToFocusedElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgZoomToFocusedElement other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFocusedNodeText : pb::IMessage<CMsgFocusedNodeText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFocusedNodeText> _parser = new pb::MessageParser<CMsgFocusedNodeText>(() => new CMsgFocusedNodeText());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFocusedNodeText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFocusedNodeText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFocusedNodeText(CMsgFocusedNodeText other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFocusedNodeText Clone() {
      return new CMsgFocusedNodeText(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFocusedNodeText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFocusedNodeText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFocusedNodeText other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgFocusedNodeTextResponse : pb::IMessage<CMsgFocusedNodeTextResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgFocusedNodeTextResponse> _parser = new pb::MessageParser<CMsgFocusedNodeTextResponse>(() => new CMsgFocusedNodeTextResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgFocusedNodeTextResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFocusedNodeTextResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFocusedNodeTextResponse(CMsgFocusedNodeTextResponse other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgFocusedNodeTextResponse Clone() {
      return new CMsgFocusedNodeTextResponse(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgFocusedNodeTextResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgFocusedNodeTextResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgFocusedNodeTextResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBuildID : pb::IMessage<CMsgBuildID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBuildID> _parser = new pb::MessageParser<CMsgBuildID>(() => new CMsgBuildID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBuildID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBuildID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBuildID(CMsgBuildID other) : this() {
      _hasBits0 = other._hasBits0;
      buildId_ = other.buildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBuildID Clone() {
      return new CMsgBuildID(this);
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 1;
    private readonly static ulong BuildIdDefaultValue = 0UL;

    private ulong buildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BuildId {
      get { if ((_hasBits0 & 1) != 0) { return buildId_; } else { return BuildIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        buildId_ = value;
      }
    }
    /// <summary>Gets whether the "build_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "build_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBuildID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBuildID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildId != other.BuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBuildId) hash ^= BuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBuildId) {
        output.WriteRawTag(8);
        output.WriteUInt64(BuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBuildId) {
        output.WriteRawTag(8);
        output.WriteUInt64(BuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBuildId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBuildID other) {
      if (other == null) {
        return;
      }
      if (other.HasBuildId) {
        BuildId = other.BuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuildId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgOpenDevTools : pb::IMessage<CMsgOpenDevTools>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgOpenDevTools> _parser = new pb::MessageParser<CMsgOpenDevTools>(() => new CMsgOpenDevTools());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgOpenDevTools> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenDevTools() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenDevTools(CMsgOpenDevTools other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgOpenDevTools Clone() {
      return new CMsgOpenDevTools(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgOpenDevTools);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgOpenDevTools other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgOpenDevTools other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgCloseDevTools : pb::IMessage<CMsgCloseDevTools>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCloseDevTools> _parser = new pb::MessageParser<CMsgCloseDevTools>(() => new CMsgCloseDevTools());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgCloseDevTools> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCloseDevTools() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCloseDevTools(CMsgCloseDevTools other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgCloseDevTools Clone() {
      return new CMsgCloseDevTools(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgCloseDevTools);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgCloseDevTools other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgCloseDevTools other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgUnlockH264 : pb::IMessage<CMsgUnlockH264>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgUnlockH264> _parser = new pb::MessageParser<CMsgUnlockH264>(() => new CMsgUnlockH264());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgUnlockH264> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgUnlockH264() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgUnlockH264(CMsgUnlockH264 other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      unloccode_ = other.unloccode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgUnlockH264 Clone() {
      return new CMsgUnlockH264(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unloccode" field.</summary>
    public const int UnloccodeFieldNumber = 2;
    private readonly static string UnloccodeDefaultValue = "";

    private string unloccode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Unloccode {
      get { return unloccode_ ?? UnloccodeDefaultValue; }
      set {
        unloccode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "unloccode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnloccode {
      get { return unloccode_ != null; }
    }
    /// <summary>Clears the value of the "unloccode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnloccode() {
      unloccode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgUnlockH264);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgUnlockH264 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Unloccode != other.Unloccode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUnloccode) hash ^= Unloccode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUnloccode) {
        output.WriteRawTag(18);
        output.WriteString(Unloccode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUnloccode) {
        output.WriteRawTag(18);
        output.WriteString(Unloccode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUnloccode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unloccode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgUnlockH264 other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUnloccode) {
        Unloccode = other.Unloccode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Unloccode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Unloccode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgScreenInformationChanged : pb::IMessage<CMsgScreenInformationChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgScreenInformationChanged> _parser = new pb::MessageParser<CMsgScreenInformationChanged>(() => new CMsgScreenInformationChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgScreenInformationChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScreenInformationChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScreenInformationChanged(CMsgScreenInformationChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      overrideWidth_ = other.overrideWidth_;
      overrideHeight_ = other.overrideHeight_;
      monitorLeft_ = other.monitorLeft_;
      monitorTop_ = other.monitorTop_;
      monitorRight_ = other.monitorRight_;
      monitorBottom_ = other.monitorBottom_;
      usableLeft_ = other.usableLeft_;
      usableTop_ = other.usableTop_;
      usableRight_ = other.usableRight_;
      usableBottom_ = other.usableBottom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScreenInformationChanged Clone() {
      return new CMsgScreenInformationChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "override_width" field.</summary>
    public const int OverrideWidthFieldNumber = 2;
    private readonly static uint OverrideWidthDefaultValue = 0;

    private uint overrideWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OverrideWidth {
      get { if ((_hasBits0 & 2) != 0) { return overrideWidth_; } else { return OverrideWidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        overrideWidth_ = value;
      }
    }
    /// <summary>Gets whether the "override_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverrideWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "override_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverrideWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "override_height" field.</summary>
    public const int OverrideHeightFieldNumber = 3;
    private readonly static uint OverrideHeightDefaultValue = 0;

    private uint overrideHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OverrideHeight {
      get { if ((_hasBits0 & 4) != 0) { return overrideHeight_; } else { return OverrideHeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        overrideHeight_ = value;
      }
    }
    /// <summary>Gets whether the "override_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverrideHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "override_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverrideHeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "monitor_left" field.</summary>
    public const int MonitorLeftFieldNumber = 4;
    private readonly static uint MonitorLeftDefaultValue = 0;

    private uint monitorLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MonitorLeft {
      get { if ((_hasBits0 & 8) != 0) { return monitorLeft_; } else { return MonitorLeftDefaultValue; } }
      set {
        _hasBits0 |= 8;
        monitorLeft_ = value;
      }
    }
    /// <summary>Gets whether the "monitor_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonitorLeft {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "monitor_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonitorLeft() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "monitor_top" field.</summary>
    public const int MonitorTopFieldNumber = 5;
    private readonly static uint MonitorTopDefaultValue = 0;

    private uint monitorTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MonitorTop {
      get { if ((_hasBits0 & 16) != 0) { return monitorTop_; } else { return MonitorTopDefaultValue; } }
      set {
        _hasBits0 |= 16;
        monitorTop_ = value;
      }
    }
    /// <summary>Gets whether the "monitor_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonitorTop {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "monitor_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonitorTop() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "monitor_right" field.</summary>
    public const int MonitorRightFieldNumber = 6;
    private readonly static uint MonitorRightDefaultValue = 0;

    private uint monitorRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MonitorRight {
      get { if ((_hasBits0 & 32) != 0) { return monitorRight_; } else { return MonitorRightDefaultValue; } }
      set {
        _hasBits0 |= 32;
        monitorRight_ = value;
      }
    }
    /// <summary>Gets whether the "monitor_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonitorRight {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "monitor_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonitorRight() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "monitor_bottom" field.</summary>
    public const int MonitorBottomFieldNumber = 7;
    private readonly static uint MonitorBottomDefaultValue = 0;

    private uint monitorBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MonitorBottom {
      get { if ((_hasBits0 & 64) != 0) { return monitorBottom_; } else { return MonitorBottomDefaultValue; } }
      set {
        _hasBits0 |= 64;
        monitorBottom_ = value;
      }
    }
    /// <summary>Gets whether the "monitor_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonitorBottom {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "monitor_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonitorBottom() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "usable_left" field.</summary>
    public const int UsableLeftFieldNumber = 8;
    private readonly static uint UsableLeftDefaultValue = 0;

    private uint usableLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UsableLeft {
      get { if ((_hasBits0 & 128) != 0) { return usableLeft_; } else { return UsableLeftDefaultValue; } }
      set {
        _hasBits0 |= 128;
        usableLeft_ = value;
      }
    }
    /// <summary>Gets whether the "usable_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsableLeft {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "usable_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsableLeft() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "usable_top" field.</summary>
    public const int UsableTopFieldNumber = 9;
    private readonly static uint UsableTopDefaultValue = 0;

    private uint usableTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UsableTop {
      get { if ((_hasBits0 & 256) != 0) { return usableTop_; } else { return UsableTopDefaultValue; } }
      set {
        _hasBits0 |= 256;
        usableTop_ = value;
      }
    }
    /// <summary>Gets whether the "usable_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsableTop {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "usable_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsableTop() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "usable_right" field.</summary>
    public const int UsableRightFieldNumber = 10;
    private readonly static uint UsableRightDefaultValue = 0;

    private uint usableRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UsableRight {
      get { if ((_hasBits0 & 512) != 0) { return usableRight_; } else { return UsableRightDefaultValue; } }
      set {
        _hasBits0 |= 512;
        usableRight_ = value;
      }
    }
    /// <summary>Gets whether the "usable_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsableRight {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "usable_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsableRight() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "usable_bottom" field.</summary>
    public const int UsableBottomFieldNumber = 11;
    private readonly static uint UsableBottomDefaultValue = 0;

    private uint usableBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UsableBottom {
      get { if ((_hasBits0 & 1024) != 0) { return usableBottom_; } else { return UsableBottomDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        usableBottom_ = value;
      }
    }
    /// <summary>Gets whether the "usable_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsableBottom {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "usable_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsableBottom() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgScreenInformationChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgScreenInformationChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OverrideWidth != other.OverrideWidth) return false;
      if (OverrideHeight != other.OverrideHeight) return false;
      if (MonitorLeft != other.MonitorLeft) return false;
      if (MonitorTop != other.MonitorTop) return false;
      if (MonitorRight != other.MonitorRight) return false;
      if (MonitorBottom != other.MonitorBottom) return false;
      if (UsableLeft != other.UsableLeft) return false;
      if (UsableTop != other.UsableTop) return false;
      if (UsableRight != other.UsableRight) return false;
      if (UsableBottom != other.UsableBottom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOverrideWidth) hash ^= OverrideWidth.GetHashCode();
      if (HasOverrideHeight) hash ^= OverrideHeight.GetHashCode();
      if (HasMonitorLeft) hash ^= MonitorLeft.GetHashCode();
      if (HasMonitorTop) hash ^= MonitorTop.GetHashCode();
      if (HasMonitorRight) hash ^= MonitorRight.GetHashCode();
      if (HasMonitorBottom) hash ^= MonitorBottom.GetHashCode();
      if (HasUsableLeft) hash ^= UsableLeft.GetHashCode();
      if (HasUsableTop) hash ^= UsableTop.GetHashCode();
      if (HasUsableRight) hash ^= UsableRight.GetHashCode();
      if (HasUsableBottom) hash ^= UsableBottom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOverrideWidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(OverrideWidth);
      }
      if (HasOverrideHeight) {
        output.WriteRawTag(24);
        output.WriteUInt32(OverrideHeight);
      }
      if (HasMonitorLeft) {
        output.WriteRawTag(32);
        output.WriteUInt32(MonitorLeft);
      }
      if (HasMonitorTop) {
        output.WriteRawTag(40);
        output.WriteUInt32(MonitorTop);
      }
      if (HasMonitorRight) {
        output.WriteRawTag(48);
        output.WriteUInt32(MonitorRight);
      }
      if (HasMonitorBottom) {
        output.WriteRawTag(56);
        output.WriteUInt32(MonitorBottom);
      }
      if (HasUsableLeft) {
        output.WriteRawTag(64);
        output.WriteUInt32(UsableLeft);
      }
      if (HasUsableTop) {
        output.WriteRawTag(72);
        output.WriteUInt32(UsableTop);
      }
      if (HasUsableRight) {
        output.WriteRawTag(80);
        output.WriteUInt32(UsableRight);
      }
      if (HasUsableBottom) {
        output.WriteRawTag(88);
        output.WriteUInt32(UsableBottom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOverrideWidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(OverrideWidth);
      }
      if (HasOverrideHeight) {
        output.WriteRawTag(24);
        output.WriteUInt32(OverrideHeight);
      }
      if (HasMonitorLeft) {
        output.WriteRawTag(32);
        output.WriteUInt32(MonitorLeft);
      }
      if (HasMonitorTop) {
        output.WriteRawTag(40);
        output.WriteUInt32(MonitorTop);
      }
      if (HasMonitorRight) {
        output.WriteRawTag(48);
        output.WriteUInt32(MonitorRight);
      }
      if (HasMonitorBottom) {
        output.WriteRawTag(56);
        output.WriteUInt32(MonitorBottom);
      }
      if (HasUsableLeft) {
        output.WriteRawTag(64);
        output.WriteUInt32(UsableLeft);
      }
      if (HasUsableTop) {
        output.WriteRawTag(72);
        output.WriteUInt32(UsableTop);
      }
      if (HasUsableRight) {
        output.WriteRawTag(80);
        output.WriteUInt32(UsableRight);
      }
      if (HasUsableBottom) {
        output.WriteRawTag(88);
        output.WriteUInt32(UsableBottom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOverrideWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OverrideWidth);
      }
      if (HasOverrideHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OverrideHeight);
      }
      if (HasMonitorLeft) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonitorLeft);
      }
      if (HasMonitorTop) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonitorTop);
      }
      if (HasMonitorRight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonitorRight);
      }
      if (HasMonitorBottom) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonitorBottom);
      }
      if (HasUsableLeft) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsableLeft);
      }
      if (HasUsableTop) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsableTop);
      }
      if (HasUsableRight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsableRight);
      }
      if (HasUsableBottom) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsableBottom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgScreenInformationChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOverrideWidth) {
        OverrideWidth = other.OverrideWidth;
      }
      if (other.HasOverrideHeight) {
        OverrideHeight = other.OverrideHeight;
      }
      if (other.HasMonitorLeft) {
        MonitorLeft = other.MonitorLeft;
      }
      if (other.HasMonitorTop) {
        MonitorTop = other.MonitorTop;
      }
      if (other.HasMonitorRight) {
        MonitorRight = other.MonitorRight;
      }
      if (other.HasMonitorBottom) {
        MonitorBottom = other.MonitorBottom;
      }
      if (other.HasUsableLeft) {
        UsableLeft = other.UsableLeft;
      }
      if (other.HasUsableTop) {
        UsableTop = other.UsableTop;
      }
      if (other.HasUsableRight) {
        UsableRight = other.UsableRight;
      }
      if (other.HasUsableBottom) {
        UsableBottom = other.UsableBottom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OverrideWidth = input.ReadUInt32();
            break;
          }
          case 24: {
            OverrideHeight = input.ReadUInt32();
            break;
          }
          case 32: {
            MonitorLeft = input.ReadUInt32();
            break;
          }
          case 40: {
            MonitorTop = input.ReadUInt32();
            break;
          }
          case 48: {
            MonitorRight = input.ReadUInt32();
            break;
          }
          case 56: {
            MonitorBottom = input.ReadUInt32();
            break;
          }
          case 64: {
            UsableLeft = input.ReadUInt32();
            break;
          }
          case 72: {
            UsableTop = input.ReadUInt32();
            break;
          }
          case 80: {
            UsableRight = input.ReadUInt32();
            break;
          }
          case 88: {
            UsableBottom = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OverrideWidth = input.ReadUInt32();
            break;
          }
          case 24: {
            OverrideHeight = input.ReadUInt32();
            break;
          }
          case 32: {
            MonitorLeft = input.ReadUInt32();
            break;
          }
          case 40: {
            MonitorTop = input.ReadUInt32();
            break;
          }
          case 48: {
            MonitorRight = input.ReadUInt32();
            break;
          }
          case 56: {
            MonitorBottom = input.ReadUInt32();
            break;
          }
          case 64: {
            UsableLeft = input.ReadUInt32();
            break;
          }
          case 72: {
            UsableTop = input.ReadUInt32();
            break;
          }
          case 80: {
            UsableRight = input.ReadUInt32();
            break;
          }
          case 88: {
            UsableBottom = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgClearAllCookies : pb::IMessage<CMsgClearAllCookies>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClearAllCookies> _parser = new pb::MessageParser<CMsgClearAllCookies>(() => new CMsgClearAllCookies());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgClearAllCookies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearAllCookies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearAllCookies(CMsgClearAllCookies other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgClearAllCookies Clone() {
      return new CMsgClearAllCookies(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgClearAllCookies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgClearAllCookies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgClearAllCookies other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgScreenDPI : pb::IMessage<CMsgScreenDPI>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgScreenDPI> _parser = new pb::MessageParser<CMsgScreenDPI>(() => new CMsgScreenDPI());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgScreenDPI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScreenDPI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScreenDPI(CMsgScreenDPI other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      dpiScaling_ = other.dpiScaling_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgScreenDPI Clone() {
      return new CMsgScreenDPI(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "dpi_scaling" field.</summary>
    public const int DpiScalingFieldNumber = 2;
    private readonly static float DpiScalingDefaultValue = 0F;

    private float dpiScaling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DpiScaling {
      get { if ((_hasBits0 & 2) != 0) { return dpiScaling_; } else { return DpiScalingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dpiScaling_ = value;
      }
    }
    /// <summary>Gets whether the "dpi_scaling" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDpiScaling {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "dpi_scaling" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDpiScaling() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgScreenDPI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgScreenDPI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DpiScaling, other.DpiScaling)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasDpiScaling) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DpiScaling);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasDpiScaling) {
        output.WriteRawTag(21);
        output.WriteFloat(DpiScaling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasDpiScaling) {
        output.WriteRawTag(21);
        output.WriteFloat(DpiScaling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasDpiScaling) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgScreenDPI other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasDpiScaling) {
        DpiScaling = other.DpiScaling;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            DpiScaling = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 21: {
            DpiScaling = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgAckScreenDPI : pb::IMessage<CMsgAckScreenDPI>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgAckScreenDPI> _parser = new pb::MessageParser<CMsgAckScreenDPI>(() => new CMsgAckScreenDPI());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgAckScreenDPI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckScreenDPI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckScreenDPI(CMsgAckScreenDPI other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAckScreenDPI Clone() {
      return new CMsgAckScreenDPI(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgAckScreenDPI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgAckScreenDPI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgAckScreenDPI other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgAuthedSteamDomains : pb::IMessage<CMsgAuthedSteamDomains>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgAuthedSteamDomains> _parser = new pb::MessageParser<CMsgAuthedSteamDomains>(() => new CMsgAuthedSteamDomains());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgAuthedSteamDomains> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAuthedSteamDomains() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAuthedSteamDomains(CMsgAuthedSteamDomains other) : this() {
      domains_ = other.domains_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgAuthedSteamDomains Clone() {
      return new CMsgAuthedSteamDomains(this);
    }

    /// <summary>Field number for the "domains" field.</summary>
    public const int DomainsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_domains_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> domains_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Domains {
      get { return domains_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgAuthedSteamDomains);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgAuthedSteamDomains other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!domains_.Equals(other.domains_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= domains_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      domains_.WriteTo(output, _repeated_domains_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      domains_.WriteTo(ref output, _repeated_domains_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += domains_.CalculateSize(_repeated_domains_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgAuthedSteamDomains other) {
      if (other == null) {
        return;
      }
      domains_.Add(other.domains_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            domains_.AddEntriesFrom(input, _repeated_domains_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            domains_.AddEntriesFrom(ref input, _repeated_domains_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSteamAuthNeeded : pb::IMessage<CMsgSteamAuthNeeded>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSteamAuthNeeded> _parser = new pb::MessageParser<CMsgSteamAuthNeeded>(() => new CMsgSteamAuthNeeded());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSteamAuthNeeded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamAuthNeeded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamAuthNeeded(CMsgSteamAuthNeeded other) : this() {
      _hasBits0 = other._hasBits0;
      filler_ = other.filler_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamAuthNeeded Clone() {
      return new CMsgSteamAuthNeeded(this);
    }

    /// <summary>Field number for the "filler" field.</summary>
    public const int FillerFieldNumber = 1;
    private readonly static bool FillerDefaultValue = false;

    private bool filler_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Filler {
      get { if ((_hasBits0 & 1) != 0) { return filler_; } else { return FillerDefaultValue; } }
      set {
        _hasBits0 |= 1;
        filler_ = value;
      }
    }
    /// <summary>Gets whether the "filler" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFiller {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "filler" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFiller() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSteamAuthNeeded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSteamAuthNeeded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filler != other.Filler) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFiller) hash ^= Filler.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFiller) {
        output.WriteRawTag(8);
        output.WriteBool(Filler);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFiller) {
        output.WriteRawTag(8);
        output.WriteBool(Filler);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFiller) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSteamAuthNeeded other) {
      if (other == null) {
        return;
      }
      if (other.HasFiller) {
        Filler = other.Filler;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Filler = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Filler = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSteamAuthCookiesSet : pb::IMessage<CMsgSteamAuthCookiesSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSteamAuthCookiesSet> _parser = new pb::MessageParser<CMsgSteamAuthCookiesSet>(() => new CMsgSteamAuthCookiesSet());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSteamAuthCookiesSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamAuthCookiesSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamAuthCookiesSet(CMsgSteamAuthCookiesSet other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamAuthCookiesSet Clone() {
      return new CMsgSteamAuthCookiesSet(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSteamAuthCookiesSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSteamAuthCookiesSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSteamAuthCookiesSet other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSRegisterMethod : pb::IMessage<CMsgJSRegisterMethod>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSRegisterMethod> _parser = new pb::MessageParser<CMsgJSRegisterMethod>(() => new CMsgJSRegisterMethod());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSRegisterMethod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSRegisterMethod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSRegisterMethod(CMsgJSRegisterMethod other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      name_ = other.name_;
      methodType_ = other.methodType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSRegisterMethod Clone() {
      return new CMsgJSRegisterMethod(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "method_type" field.</summary>
    public const int MethodTypeFieldNumber = 3;
    private readonly static global::OpenSteamworks.Protobuf.EJSRegisterMethodType MethodTypeDefaultValue = global::OpenSteamworks.Protobuf.EJSRegisterMethodType.Invalid;

    private global::OpenSteamworks.Protobuf.EJSRegisterMethodType methodType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EJSRegisterMethodType MethodType {
      get { if ((_hasBits0 & 2) != 0) { return methodType_; } else { return MethodTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        methodType_ = value;
      }
    }
    /// <summary>Gets whether the "method_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMethodType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "method_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMethodType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSRegisterMethod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSRegisterMethod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Name != other.Name) return false;
      if (MethodType != other.MethodType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasMethodType) hash ^= MethodType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasMethodType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MethodType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasMethodType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MethodType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasMethodType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MethodType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSRegisterMethod other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasMethodType) {
        MethodType = other.MethodType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            MethodType = (global::OpenSteamworks.Protobuf.EJSRegisterMethodType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            MethodType = (global::OpenSteamworks.Protobuf.EJSRegisterMethodType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSValue : pb::IMessage<CMsgJSValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSValue> _parser = new pb::MessageParser<CMsgJSValue>(() => new CMsgJSValue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSValue(CMsgJSValue other) : this() {
      _hasBits0 = other._hasBits0;
      boolValue_ = other.boolValue_;
      intValue_ = other.intValue_;
      uintValue_ = other.uintValue_;
      doubleValue_ = other.doubleValue_;
      stringValue_ = other.stringValue_;
      functionHandle_ = other.functionHandle_;
      bytesValue_ = other.bytesValue_;
      isArray_ = other.isArray_;
      arrayValues_ = other.arrayValues_.Clone();
      isObject_ = other.isObject_;
      objectProperties_ = other.objectProperties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSValue Clone() {
      return new CMsgJSValue(this);
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 1;
    private readonly static bool BoolValueDefaultValue = false;

    private bool boolValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BoolValue {
      get { if ((_hasBits0 & 1) != 0) { return boolValue_; } else { return BoolValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        boolValue_ = value;
      }
    }
    /// <summary>Gets whether the "bool_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBoolValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bool_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBoolValue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "int_value" field.</summary>
    public const int IntValueFieldNumber = 2;
    private readonly static int IntValueDefaultValue = 0;

    private int intValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IntValue {
      get { if ((_hasBits0 & 2) != 0) { return intValue_; } else { return IntValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        intValue_ = value;
      }
    }
    /// <summary>Gets whether the "int_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIntValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "int_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIntValue() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uint_value" field.</summary>
    public const int UintValueFieldNumber = 3;
    private readonly static uint UintValueDefaultValue = 0;

    private uint uintValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UintValue {
      get { if ((_hasBits0 & 4) != 0) { return uintValue_; } else { return UintValueDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uintValue_ = value;
      }
    }
    /// <summary>Gets whether the "uint_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUintValue {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uint_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUintValue() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 4;
    private readonly static double DoubleValueDefaultValue = 0D;

    private double doubleValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DoubleValue {
      get { if ((_hasBits0 & 8) != 0) { return doubleValue_; } else { return DoubleValueDefaultValue; } }
      set {
        _hasBits0 |= 8;
        doubleValue_ = value;
      }
    }
    /// <summary>Gets whether the "double_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDoubleValue {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "double_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDoubleValue() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 5;
    private readonly static string StringValueDefaultValue = "";

    private string stringValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StringValue {
      get { return stringValue_ ?? StringValueDefaultValue; }
      set {
        stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "string_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStringValue {
      get { return stringValue_ != null; }
    }
    /// <summary>Clears the value of the "string_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStringValue() {
      stringValue_ = null;
    }

    /// <summary>Field number for the "function_handle" field.</summary>
    public const int FunctionHandleFieldNumber = 6;
    private readonly static ulong FunctionHandleDefaultValue = 0UL;

    private ulong functionHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FunctionHandle {
      get { if ((_hasBits0 & 16) != 0) { return functionHandle_; } else { return FunctionHandleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        functionHandle_ = value;
      }
    }
    /// <summary>Gets whether the "function_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFunctionHandle {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "function_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFunctionHandle() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "bytes_value" field.</summary>
    public const int BytesValueFieldNumber = 12;
    private readonly static pb::ByteString BytesValueDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bytesValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BytesValue {
      get { return bytesValue_ ?? BytesValueDefaultValue; }
      set {
        bytesValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bytes_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytesValue {
      get { return bytesValue_ != null; }
    }
    /// <summary>Clears the value of the "bytes_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytesValue() {
      bytesValue_ = null;
    }

    /// <summary>Field number for the "is_array" field.</summary>
    public const int IsArrayFieldNumber = 8;
    private readonly static bool IsArrayDefaultValue = false;

    private bool isArray_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsArray {
      get { if ((_hasBits0 & 32) != 0) { return isArray_; } else { return IsArrayDefaultValue; } }
      set {
        _hasBits0 |= 32;
        isArray_ = value;
      }
    }
    /// <summary>Gets whether the "is_array" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsArray {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "is_array" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsArray() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "array_values" field.</summary>
    public const int ArrayValuesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgJSValue> _repeated_arrayValues_codec
        = pb::FieldCodec.ForMessage(74, global::OpenSteamworks.Protobuf.CMsgJSValue.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue> arrayValues_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue> ArrayValues {
      get { return arrayValues_; }
    }

    /// <summary>Field number for the "is_object" field.</summary>
    public const int IsObjectFieldNumber = 10;
    private readonly static bool IsObjectDefaultValue = false;

    private bool isObject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsObject {
      get { if ((_hasBits0 & 64) != 0) { return isObject_; } else { return IsObjectDefaultValue; } }
      set {
        _hasBits0 |= 64;
        isObject_ = value;
      }
    }
    /// <summary>Gets whether the "is_object" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsObject {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "is_object" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsObject() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "object_properties" field.</summary>
    public const int ObjectPropertiesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty> _repeated_objectProperties_codec
        = pb::FieldCodec.ForMessage(90, global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty> objectProperties_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue.Types.JSObjectProperty> ObjectProperties {
      get { return objectProperties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoolValue != other.BoolValue) return false;
      if (IntValue != other.IntValue) return false;
      if (UintValue != other.UintValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (StringValue != other.StringValue) return false;
      if (FunctionHandle != other.FunctionHandle) return false;
      if (BytesValue != other.BytesValue) return false;
      if (IsArray != other.IsArray) return false;
      if(!arrayValues_.Equals(other.arrayValues_)) return false;
      if (IsObject != other.IsObject) return false;
      if(!objectProperties_.Equals(other.objectProperties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBoolValue) hash ^= BoolValue.GetHashCode();
      if (HasIntValue) hash ^= IntValue.GetHashCode();
      if (HasUintValue) hash ^= UintValue.GetHashCode();
      if (HasDoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (HasStringValue) hash ^= StringValue.GetHashCode();
      if (HasFunctionHandle) hash ^= FunctionHandle.GetHashCode();
      if (HasBytesValue) hash ^= BytesValue.GetHashCode();
      if (HasIsArray) hash ^= IsArray.GetHashCode();
      hash ^= arrayValues_.GetHashCode();
      if (HasIsObject) hash ^= IsObject.GetHashCode();
      hash ^= objectProperties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBoolValue) {
        output.WriteRawTag(8);
        output.WriteBool(BoolValue);
      }
      if (HasIntValue) {
        output.WriteRawTag(16);
        output.WriteInt32(IntValue);
      }
      if (HasUintValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(UintValue);
      }
      if (HasDoubleValue) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleValue);
      }
      if (HasStringValue) {
        output.WriteRawTag(42);
        output.WriteString(StringValue);
      }
      if (HasFunctionHandle) {
        output.WriteRawTag(48);
        output.WriteUInt64(FunctionHandle);
      }
      if (HasIsArray) {
        output.WriteRawTag(64);
        output.WriteBool(IsArray);
      }
      arrayValues_.WriteTo(output, _repeated_arrayValues_codec);
      if (HasIsObject) {
        output.WriteRawTag(80);
        output.WriteBool(IsObject);
      }
      objectProperties_.WriteTo(output, _repeated_objectProperties_codec);
      if (HasBytesValue) {
        output.WriteRawTag(98);
        output.WriteBytes(BytesValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBoolValue) {
        output.WriteRawTag(8);
        output.WriteBool(BoolValue);
      }
      if (HasIntValue) {
        output.WriteRawTag(16);
        output.WriteInt32(IntValue);
      }
      if (HasUintValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(UintValue);
      }
      if (HasDoubleValue) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleValue);
      }
      if (HasStringValue) {
        output.WriteRawTag(42);
        output.WriteString(StringValue);
      }
      if (HasFunctionHandle) {
        output.WriteRawTag(48);
        output.WriteUInt64(FunctionHandle);
      }
      if (HasIsArray) {
        output.WriteRawTag(64);
        output.WriteBool(IsArray);
      }
      arrayValues_.WriteTo(ref output, _repeated_arrayValues_codec);
      if (HasIsObject) {
        output.WriteRawTag(80);
        output.WriteBool(IsObject);
      }
      objectProperties_.WriteTo(ref output, _repeated_objectProperties_codec);
      if (HasBytesValue) {
        output.WriteRawTag(98);
        output.WriteBytes(BytesValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBoolValue) {
        size += 1 + 1;
      }
      if (HasIntValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntValue);
      }
      if (HasUintValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UintValue);
      }
      if (HasDoubleValue) {
        size += 1 + 8;
      }
      if (HasStringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (HasFunctionHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FunctionHandle);
      }
      if (HasBytesValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
      }
      if (HasIsArray) {
        size += 1 + 1;
      }
      size += arrayValues_.CalculateSize(_repeated_arrayValues_codec);
      if (HasIsObject) {
        size += 1 + 1;
      }
      size += objectProperties_.CalculateSize(_repeated_objectProperties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSValue other) {
      if (other == null) {
        return;
      }
      if (other.HasBoolValue) {
        BoolValue = other.BoolValue;
      }
      if (other.HasIntValue) {
        IntValue = other.IntValue;
      }
      if (other.HasUintValue) {
        UintValue = other.UintValue;
      }
      if (other.HasDoubleValue) {
        DoubleValue = other.DoubleValue;
      }
      if (other.HasStringValue) {
        StringValue = other.StringValue;
      }
      if (other.HasFunctionHandle) {
        FunctionHandle = other.FunctionHandle;
      }
      if (other.HasBytesValue) {
        BytesValue = other.BytesValue;
      }
      if (other.HasIsArray) {
        IsArray = other.IsArray;
      }
      arrayValues_.Add(other.arrayValues_);
      if (other.HasIsObject) {
        IsObject = other.IsObject;
      }
      objectProperties_.Add(other.objectProperties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoolValue = input.ReadBool();
            break;
          }
          case 16: {
            IntValue = input.ReadInt32();
            break;
          }
          case 24: {
            UintValue = input.ReadUInt32();
            break;
          }
          case 33: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 42: {
            StringValue = input.ReadString();
            break;
          }
          case 48: {
            FunctionHandle = input.ReadUInt64();
            break;
          }
          case 64: {
            IsArray = input.ReadBool();
            break;
          }
          case 74: {
            arrayValues_.AddEntriesFrom(input, _repeated_arrayValues_codec);
            break;
          }
          case 80: {
            IsObject = input.ReadBool();
            break;
          }
          case 90: {
            objectProperties_.AddEntriesFrom(input, _repeated_objectProperties_codec);
            break;
          }
          case 98: {
            BytesValue = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BoolValue = input.ReadBool();
            break;
          }
          case 16: {
            IntValue = input.ReadInt32();
            break;
          }
          case 24: {
            UintValue = input.ReadUInt32();
            break;
          }
          case 33: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 42: {
            StringValue = input.ReadString();
            break;
          }
          case 48: {
            FunctionHandle = input.ReadUInt64();
            break;
          }
          case 64: {
            IsArray = input.ReadBool();
            break;
          }
          case 74: {
            arrayValues_.AddEntriesFrom(ref input, _repeated_arrayValues_codec);
            break;
          }
          case 80: {
            IsObject = input.ReadBool();
            break;
          }
          case 90: {
            objectProperties_.AddEntriesFrom(ref input, _repeated_objectProperties_codec);
            break;
          }
          case 98: {
            BytesValue = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgJSValue message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class JSObjectProperty : pb::IMessage<JSObjectProperty>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<JSObjectProperty> _parser = new pb::MessageParser<JSObjectProperty>(() => new JSObjectProperty());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<JSObjectProperty> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgJSValue.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JSObjectProperty() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JSObjectProperty(JSObjectProperty other) : this() {
          name_ = other.name_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JSObjectProperty Clone() {
          return new JSObjectProperty(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::OpenSteamworks.Protobuf.CMsgJSValue value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.CMsgJSValue Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as JSObjectProperty);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(JSObjectProperty other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(JSObjectProperty other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::OpenSteamworks.Protobuf.CMsgJSValue();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::OpenSteamworks.Protobuf.CMsgJSValue();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::OpenSteamworks.Protobuf.CMsgJSValue();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSMethodCall : pb::IMessage<CMsgJSMethodCall>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSMethodCall> _parser = new pb::MessageParser<CMsgJSMethodCall>(() => new CMsgJSMethodCall());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSMethodCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSMethodCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSMethodCall(CMsgJSMethodCall other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      name_ = other.name_;
      arguments_ = other.arguments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSMethodCall Clone() {
      return new CMsgJSMethodCall(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgJSValue> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CMsgJSValue.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue> arguments_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue> Arguments {
      get { return arguments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSMethodCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSMethodCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (Name != other.Name) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSMethodCall other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      arguments_.Add(other.arguments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSExecuteCallback : pb::IMessage<CMsgJSExecuteCallback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSExecuteCallback> _parser = new pb::MessageParser<CMsgJSExecuteCallback>(() => new CMsgJSExecuteCallback());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSExecuteCallback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSExecuteCallback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSExecuteCallback(CMsgJSExecuteCallback other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      functionHandle_ = other.functionHandle_;
      arguments_ = other.arguments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSExecuteCallback Clone() {
      return new CMsgJSExecuteCallback(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "function_handle" field.</summary>
    public const int FunctionHandleFieldNumber = 3;
    private readonly static ulong FunctionHandleDefaultValue = 0UL;

    private ulong functionHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FunctionHandle {
      get { if ((_hasBits0 & 4) != 0) { return functionHandle_; } else { return FunctionHandleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        functionHandle_ = value;
      }
    }
    /// <summary>Gets whether the "function_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFunctionHandle {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "function_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFunctionHandle() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgJSValue> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CMsgJSValue.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue> arguments_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgJSValue> Arguments {
      get { return arguments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSExecuteCallback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSExecuteCallback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (FunctionHandle != other.FunctionHandle) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasFunctionHandle) hash ^= FunctionHandle.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasFunctionHandle) {
        output.WriteRawTag(24);
        output.WriteUInt64(FunctionHandle);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasFunctionHandle) {
        output.WriteRawTag(24);
        output.WriteUInt64(FunctionHandle);
      }
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasFunctionHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FunctionHandle);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSExecuteCallback other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasFunctionHandle) {
        FunctionHandle = other.FunctionHandle;
      }
      arguments_.Add(other.arguments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            FunctionHandle = input.ReadUInt64();
            break;
          }
          case 34: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            FunctionHandle = input.ReadUInt64();
            break;
          }
          case 34: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSExecutePromise : pb::IMessage<CMsgJSExecutePromise>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSExecutePromise> _parser = new pb::MessageParser<CMsgJSExecutePromise>(() => new CMsgJSExecutePromise());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSExecutePromise> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSExecutePromise() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSExecutePromise(CMsgJSExecutePromise other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      promiseHandle_ = other.promiseHandle_;
      rejectReason_ = other.rejectReason_;
      argument_ = other.argument_ != null ? other.argument_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSExecutePromise Clone() {
      return new CMsgJSExecutePromise(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "promise_handle" field.</summary>
    public const int PromiseHandleFieldNumber = 3;
    private readonly static ulong PromiseHandleDefaultValue = 0UL;

    private ulong promiseHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PromiseHandle {
      get { if ((_hasBits0 & 4) != 0) { return promiseHandle_; } else { return PromiseHandleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        promiseHandle_ = value;
      }
    }
    /// <summary>Gets whether the "promise_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPromiseHandle {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "promise_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPromiseHandle() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "reject_reason" field.</summary>
    public const int RejectReasonFieldNumber = 4;
    private readonly static string RejectReasonDefaultValue = "";

    private string rejectReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RejectReason {
      get { return rejectReason_ ?? RejectReasonDefaultValue; }
      set {
        rejectReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reject_reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRejectReason {
      get { return rejectReason_ != null; }
    }
    /// <summary>Clears the value of the "reject_reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRejectReason() {
      rejectReason_ = null;
    }

    /// <summary>Field number for the "argument" field.</summary>
    public const int ArgumentFieldNumber = 5;
    private global::OpenSteamworks.Protobuf.CMsgJSValue argument_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CMsgJSValue Argument {
      get { return argument_; }
      set {
        argument_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSExecutePromise);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSExecutePromise other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (PromiseHandle != other.PromiseHandle) return false;
      if (RejectReason != other.RejectReason) return false;
      if (!object.Equals(Argument, other.Argument)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasPromiseHandle) hash ^= PromiseHandle.GetHashCode();
      if (HasRejectReason) hash ^= RejectReason.GetHashCode();
      if (argument_ != null) hash ^= Argument.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasPromiseHandle) {
        output.WriteRawTag(24);
        output.WriteUInt64(PromiseHandle);
      }
      if (HasRejectReason) {
        output.WriteRawTag(34);
        output.WriteString(RejectReason);
      }
      if (argument_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Argument);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasPromiseHandle) {
        output.WriteRawTag(24);
        output.WriteUInt64(PromiseHandle);
      }
      if (HasRejectReason) {
        output.WriteRawTag(34);
        output.WriteString(RejectReason);
      }
      if (argument_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Argument);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasPromiseHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PromiseHandle);
      }
      if (HasRejectReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RejectReason);
      }
      if (argument_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Argument);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSExecutePromise other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasPromiseHandle) {
        PromiseHandle = other.PromiseHandle;
      }
      if (other.HasRejectReason) {
        RejectReason = other.RejectReason;
      }
      if (other.argument_ != null) {
        if (argument_ == null) {
          Argument = new global::OpenSteamworks.Protobuf.CMsgJSValue();
        }
        Argument.MergeFrom(other.Argument);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            PromiseHandle = input.ReadUInt64();
            break;
          }
          case 34: {
            RejectReason = input.ReadString();
            break;
          }
          case 42: {
            if (argument_ == null) {
              Argument = new global::OpenSteamworks.Protobuf.CMsgJSValue();
            }
            input.ReadMessage(Argument);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            PromiseHandle = input.ReadUInt64();
            break;
          }
          case 34: {
            RejectReason = input.ReadString();
            break;
          }
          case 42: {
            if (argument_ == null) {
              Argument = new global::OpenSteamworks.Protobuf.CMsgJSValue();
            }
            input.ReadMessage(Argument);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSReleaseCallback : pb::IMessage<CMsgJSReleaseCallback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSReleaseCallback> _parser = new pb::MessageParser<CMsgJSReleaseCallback>(() => new CMsgJSReleaseCallback());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSReleaseCallback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSReleaseCallback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSReleaseCallback(CMsgJSReleaseCallback other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      functionHandle_ = other.functionHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSReleaseCallback Clone() {
      return new CMsgJSReleaseCallback(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "function_handle" field.</summary>
    public const int FunctionHandleFieldNumber = 3;
    private readonly static ulong FunctionHandleDefaultValue = 0UL;

    private ulong functionHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FunctionHandle {
      get { if ((_hasBits0 & 4) != 0) { return functionHandle_; } else { return FunctionHandleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        functionHandle_ = value;
      }
    }
    /// <summary>Gets whether the "function_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFunctionHandle {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "function_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFunctionHandle() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSReleaseCallback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSReleaseCallback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (FunctionHandle != other.FunctionHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasFunctionHandle) hash ^= FunctionHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasFunctionHandle) {
        output.WriteRawTag(24);
        output.WriteUInt64(FunctionHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasFunctionHandle) {
        output.WriteRawTag(24);
        output.WriteUInt64(FunctionHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasFunctionHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FunctionHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSReleaseCallback other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasFunctionHandle) {
        FunctionHandle = other.FunctionHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            FunctionHandle = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 24: {
            FunctionHandle = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgJSRaiseException : pb::IMessage<CMsgJSRaiseException>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgJSRaiseException> _parser = new pb::MessageParser<CMsgJSRaiseException>(() => new CMsgJSRaiseException());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgJSRaiseException> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSRaiseException() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSRaiseException(CMsgJSRaiseException other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      owningBrowserHandle_ = other.owningBrowserHandle_;
      exception_ = other.exception_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgJSRaiseException Clone() {
      return new CMsgJSRaiseException(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owning_browser_handle" field.</summary>
    public const int OwningBrowserHandleFieldNumber = 2;
    private readonly static uint OwningBrowserHandleDefaultValue = 0;

    private uint owningBrowserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwningBrowserHandle {
      get { if ((_hasBits0 & 2) != 0) { return owningBrowserHandle_; } else { return OwningBrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        owningBrowserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "owning_browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwningBrowserHandle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "owning_browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwningBrowserHandle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 3;
    private readonly static string ExceptionDefaultValue = "";

    private string exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exception {
      get { return exception_ ?? ExceptionDefaultValue; }
      set {
        exception_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exception" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasException {
      get { return exception_ != null; }
    }
    /// <summary>Clears the value of the "exception" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearException() {
      exception_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgJSRaiseException);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgJSRaiseException other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (OwningBrowserHandle != other.OwningBrowserHandle) return false;
      if (Exception != other.Exception) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasOwningBrowserHandle) hash ^= OwningBrowserHandle.GetHashCode();
      if (HasException) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasException) {
        output.WriteRawTag(26);
        output.WriteString(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        output.WriteRawTag(16);
        output.WriteUInt32(OwningBrowserHandle);
      }
      if (HasException) {
        output.WriteRawTag(26);
        output.WriteString(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasOwningBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwningBrowserHandle);
      }
      if (HasException) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgJSRaiseException other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasOwningBrowserHandle) {
        OwningBrowserHandle = other.OwningBrowserHandle;
      }
      if (other.HasException) {
        Exception = other.Exception;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 26: {
            Exception = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            OwningBrowserHandle = input.ReadUInt32();
            break;
          }
          case 26: {
            Exception = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgLoadLocalization : pb::IMessage<CMsgLoadLocalization>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLoadLocalization> _parser = new pb::MessageParser<CMsgLoadLocalization>(() => new CMsgLoadLocalization());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgLoadLocalization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadLocalization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadLocalization(CMsgLoadLocalization other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      localizationPath_ = other.localizationPath_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgLoadLocalization Clone() {
      return new CMsgLoadLocalization(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "localization_path" field.</summary>
    public const int LocalizationPathFieldNumber = 2;
    private readonly static string LocalizationPathDefaultValue = "";

    private string localizationPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LocalizationPath {
      get { return localizationPath_ ?? LocalizationPathDefaultValue; }
      set {
        localizationPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "localization_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocalizationPath {
      get { return localizationPath_ != null; }
    }
    /// <summary>Clears the value of the "localization_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocalizationPath() {
      localizationPath_ = null;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgLoadLocalization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgLoadLocalization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (LocalizationPath != other.LocalizationPath) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasLocalizationPath) hash ^= LocalizationPath.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasLocalizationPath) {
        output.WriteRawTag(18);
        output.WriteString(LocalizationPath);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasLocalizationPath) {
        output.WriteRawTag(18);
        output.WriteString(LocalizationPath);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasLocalizationPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizationPath);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgLoadLocalization other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasLocalizationPath) {
        LocalizationPath = other.LocalizationPath;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            LocalizationPath = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            LocalizationPath = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgNotifyUserActivation : pb::IMessage<CMsgNotifyUserActivation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgNotifyUserActivation> _parser = new pb::MessageParser<CMsgNotifyUserActivation>(() => new CMsgNotifyUserActivation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgNotifyUserActivation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNotifyUserActivation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNotifyUserActivation(CMsgNotifyUserActivation other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgNotifyUserActivation Clone() {
      return new CMsgNotifyUserActivation(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgNotifyUserActivation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgNotifyUserActivation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgNotifyUserActivation other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetNetFakeLocalSystemState : pb::IMessage<CMsgSetNetFakeLocalSystemState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetNetFakeLocalSystemState> _parser = new pb::MessageParser<CMsgSetNetFakeLocalSystemState>(() => new CMsgSetNetFakeLocalSystemState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetNetFakeLocalSystemState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetNetFakeLocalSystemState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetNetFakeLocalSystemState(CMsgSetNetFakeLocalSystemState other) : this() {
      _hasBits0 = other._hasBits0;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetNetFakeLocalSystemState Clone() {
      return new CMsgSetNetFakeLocalSystemState(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private readonly static uint StateDefaultValue = 0;

    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetNetFakeLocalSystemState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetNetFakeLocalSystemState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetNetFakeLocalSystemState other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetGameOverlayTargetPIDs : pb::IMessage<CMsgSetGameOverlayTargetPIDs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetGameOverlayTargetPIDs> _parser = new pb::MessageParser<CMsgSetGameOverlayTargetPIDs>(() => new CMsgSetGameOverlayTargetPIDs());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetGameOverlayTargetPIDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetGameOverlayTargetPIDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetGameOverlayTargetPIDs(CMsgSetGameOverlayTargetPIDs other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      targetPid_ = other.targetPid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetGameOverlayTargetPIDs Clone() {
      return new CMsgSetGameOverlayTargetPIDs(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_pid" field.</summary>
    public const int TargetPidFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_targetPid_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> targetPid_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TargetPid {
      get { return targetPid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetGameOverlayTargetPIDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetGameOverlayTargetPIDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if(!targetPid_.Equals(other.targetPid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      hash ^= targetPid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      targetPid_.WriteTo(output, _repeated_targetPid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      targetPid_.WriteTo(ref output, _repeated_targetPid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      size += targetPid_.CalculateSize(_repeated_targetPid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetGameOverlayTargetPIDs other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      targetPid_.Add(other.targetPid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            targetPid_.AddEntriesFrom(input, _repeated_targetPid_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            targetPid_.AddEntriesFrom(ref input, _repeated_targetPid_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgGameOverlayTargetTextureID : pb::IMessage<CMsgGameOverlayTargetTextureID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGameOverlayTargetTextureID> _parser = new pb::MessageParser<CMsgGameOverlayTargetTextureID>(() => new CMsgGameOverlayTargetTextureID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGameOverlayTargetTextureID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGameOverlayTargetTextureID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGameOverlayTargetTextureID(CMsgGameOverlayTargetTextureID other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      targetPid_ = other.targetPid_;
      textureHandle_ = other.textureHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGameOverlayTargetTextureID Clone() {
      return new CMsgGameOverlayTargetTextureID(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_pid" field.</summary>
    public const int TargetPidFieldNumber = 2;
    private readonly static uint TargetPidDefaultValue = 0;

    private uint targetPid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetPid {
      get { if ((_hasBits0 & 2) != 0) { return targetPid_; } else { return TargetPidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        targetPid_ = value;
      }
    }
    /// <summary>Gets whether the "target_pid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetPid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "target_pid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetPid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "texture_handle" field.</summary>
    public const int TextureHandleFieldNumber = 3;
    private readonly static uint TextureHandleDefaultValue = 0;

    private uint textureHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TextureHandle {
      get { if ((_hasBits0 & 4) != 0) { return textureHandle_; } else { return TextureHandleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        textureHandle_ = value;
      }
    }
    /// <summary>Gets whether the "texture_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextureHandle {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "texture_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextureHandle() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGameOverlayTargetTextureID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGameOverlayTargetTextureID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (TargetPid != other.TargetPid) return false;
      if (TextureHandle != other.TextureHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasTargetPid) hash ^= TargetPid.GetHashCode();
      if (HasTextureHandle) hash ^= TextureHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasTargetPid) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetPid);
      }
      if (HasTextureHandle) {
        output.WriteRawTag(24);
        output.WriteUInt32(TextureHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasTargetPid) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetPid);
      }
      if (HasTextureHandle) {
        output.WriteRawTag(24);
        output.WriteUInt32(TextureHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasTargetPid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetPid);
      }
      if (HasTextureHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TextureHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGameOverlayTargetTextureID other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasTargetPid) {
        TargetPid = other.TargetPid;
      }
      if (other.HasTextureHandle) {
        TextureHandle = other.TextureHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            TargetPid = input.ReadUInt32();
            break;
          }
          case 24: {
            TextureHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            TargetPid = input.ReadUInt32();
            break;
          }
          case 24: {
            TextureHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgDraggableRegionsChanged : pb::IMessage<CMsgDraggableRegionsChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDraggableRegionsChanged> _parser = new pb::MessageParser<CMsgDraggableRegionsChanged>(() => new CMsgDraggableRegionsChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgDraggableRegionsChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDraggableRegionsChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDraggableRegionsChanged(CMsgDraggableRegionsChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      rects_ = other.rects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDraggableRegionsChanged Clone() {
      return new CMsgDraggableRegionsChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rects" field.</summary>
    public const int RectsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects> _repeated_rects_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects> rects_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Types.DraggableRects> Rects {
      get { return rects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgDraggableRegionsChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgDraggableRegionsChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if(!rects_.Equals(other.rects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      hash ^= rects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      rects_.WriteTo(output, _repeated_rects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      rects_.WriteTo(ref output, _repeated_rects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      size += rects_.CalculateSize(_repeated_rects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgDraggableRegionsChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      rects_.Add(other.rects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            rects_.AddEntriesFrom(input, _repeated_rects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            rects_.AddEntriesFrom(ref input, _repeated_rects_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgDraggableRegionsChanged message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DraggableRects : pb::IMessage<DraggableRects>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DraggableRects> _parser = new pb::MessageParser<DraggableRects>(() => new DraggableRects());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DraggableRects> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgDraggableRegionsChanged.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DraggableRects() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DraggableRects(DraggableRects other) : this() {
          _hasBits0 = other._hasBits0;
          x_ = other.x_;
          y_ = other.y_;
          width_ = other.width_;
          height_ = other.height_;
          draggable_ = other.draggable_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DraggableRects Clone() {
          return new DraggableRects(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private readonly static int XDefaultValue = 0;

        private int x_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int X {
          get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
          set {
            _hasBits0 |= 1;
            x_ = value;
          }
        }
        /// <summary>Gets whether the "x" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasX {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "x" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearX() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private readonly static int YDefaultValue = 0;

        private int y_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Y {
          get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
          set {
            _hasBits0 |= 2;
            y_ = value;
          }
        }
        /// <summary>Gets whether the "y" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasY {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "y" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearY() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private readonly static int WidthDefaultValue = 0;

        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Width {
          get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
          set {
            _hasBits0 |= 4;
            width_ = value;
          }
        }
        /// <summary>Gets whether the "width" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWidth {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "width" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWidth() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private readonly static int HeightDefaultValue = 0;

        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Height {
          get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
          set {
            _hasBits0 |= 8;
            height_ = value;
          }
        }
        /// <summary>Gets whether the "height" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHeight {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "height" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHeight() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "draggable" field.</summary>
        public const int DraggableFieldNumber = 5;
        private readonly static bool DraggableDefaultValue = false;

        private bool draggable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Draggable {
          get { if ((_hasBits0 & 16) != 0) { return draggable_; } else { return DraggableDefaultValue; } }
          set {
            _hasBits0 |= 16;
            draggable_ = value;
          }
        }
        /// <summary>Gets whether the "draggable" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDraggable {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "draggable" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDraggable() {
          _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DraggableRects);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DraggableRects other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (X != other.X) return false;
          if (Y != other.Y) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (Draggable != other.Draggable) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasX) hash ^= X.GetHashCode();
          if (HasY) hash ^= Y.GetHashCode();
          if (HasWidth) hash ^= Width.GetHashCode();
          if (HasHeight) hash ^= Height.GetHashCode();
          if (HasDraggable) hash ^= Draggable.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasX) {
            output.WriteRawTag(8);
            output.WriteInt32(X);
          }
          if (HasY) {
            output.WriteRawTag(16);
            output.WriteInt32(Y);
          }
          if (HasWidth) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (HasHeight) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (HasDraggable) {
            output.WriteRawTag(40);
            output.WriteBool(Draggable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasX) {
            output.WriteRawTag(8);
            output.WriteInt32(X);
          }
          if (HasY) {
            output.WriteRawTag(16);
            output.WriteInt32(Y);
          }
          if (HasWidth) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (HasHeight) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (HasDraggable) {
            output.WriteRawTag(40);
            output.WriteBool(Draggable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasX) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
          }
          if (HasY) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
          }
          if (HasWidth) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (HasHeight) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (HasDraggable) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DraggableRects other) {
          if (other == null) {
            return;
          }
          if (other.HasX) {
            X = other.X;
          }
          if (other.HasY) {
            Y = other.Y;
          }
          if (other.HasWidth) {
            Width = other.Width;
          }
          if (other.HasHeight) {
            Height = other.Height;
          }
          if (other.HasDraggable) {
            Draggable = other.Draggable;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                X = input.ReadInt32();
                break;
              }
              case 16: {
                Y = input.ReadInt32();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                Draggable = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                X = input.ReadInt32();
                break;
              }
              case 16: {
                Y = input.ReadInt32();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                Draggable = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgResizeGripChanged : pb::IMessage<CMsgResizeGripChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgResizeGripChanged> _parser = new pb::MessageParser<CMsgResizeGripChanged>(() => new CMsgResizeGripChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgResizeGripChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgResizeGripChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgResizeGripChanged(CMsgResizeGripChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgResizeGripChanged Clone() {
      return new CMsgResizeGripChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgResizeGripChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgResizeGripChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgResizeGripChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetWindowPosition : pb::IMessage<CMsgSetWindowPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetWindowPosition> _parser = new pb::MessageParser<CMsgSetWindowPosition>(() => new CMsgSetWindowPosition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetWindowPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowPosition(CMsgSetWindowPosition other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      width_ = other.width_;
      height_ = other.height_;
      minWidth_ = other.minWidth_;
      minHeight_ = other.minHeight_;
      maxWidth_ = other.maxWidth_;
      maxHeight_ = other.maxHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowPosition Clone() {
      return new CMsgSetWindowPosition(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static double XDefaultValue = 0D;

    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static double YDefaultValue = 0D;

    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private readonly static double WidthDefaultValue = 0D;

    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Width {
      get { if ((_hasBits0 & 8) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private readonly static double HeightDefaultValue = 0D;

    private double height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { if ((_hasBits0 & 16) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 16;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "min_width" field.</summary>
    public const int MinWidthFieldNumber = 6;
    private readonly static double MinWidthDefaultValue = 0D;

    private double minWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinWidth {
      get { if ((_hasBits0 & 32) != 0) { return minWidth_; } else { return MinWidthDefaultValue; } }
      set {
        _hasBits0 |= 32;
        minWidth_ = value;
      }
    }
    /// <summary>Gets whether the "min_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinWidth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "min_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinWidth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "min_height" field.</summary>
    public const int MinHeightFieldNumber = 7;
    private readonly static double MinHeightDefaultValue = 0D;

    private double minHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinHeight {
      get { if ((_hasBits0 & 64) != 0) { return minHeight_; } else { return MinHeightDefaultValue; } }
      set {
        _hasBits0 |= 64;
        minHeight_ = value;
      }
    }
    /// <summary>Gets whether the "min_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinHeight {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "min_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinHeight() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "max_width" field.</summary>
    public const int MaxWidthFieldNumber = 8;
    private readonly static double MaxWidthDefaultValue = 0D;

    private double maxWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxWidth {
      get { if ((_hasBits0 & 128) != 0) { return maxWidth_; } else { return MaxWidthDefaultValue; } }
      set {
        _hasBits0 |= 128;
        maxWidth_ = value;
      }
    }
    /// <summary>Gets whether the "max_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxWidth {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "max_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxWidth() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "max_height" field.</summary>
    public const int MaxHeightFieldNumber = 9;
    private readonly static double MaxHeightDefaultValue = 0D;

    private double maxHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxHeight {
      get { if ((_hasBits0 & 256) != 0) { return maxHeight_; } else { return MaxHeightDefaultValue; } }
      set {
        _hasBits0 |= 256;
        maxHeight_ = value;
      }
    }
    /// <summary>Gets whether the "max_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxHeight {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "max_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxHeight() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetWindowPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetWindowPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinWidth, other.MinWidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinHeight, other.MinHeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxWidth, other.MaxWidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxHeight, other.MaxHeight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (HasMinWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinWidth);
      if (HasMinHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinHeight);
      if (HasMaxWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxWidth);
      if (HasMaxHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxHeight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (HasWidth) {
        output.WriteRawTag(33);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(41);
        output.WriteDouble(Height);
      }
      if (HasMinWidth) {
        output.WriteRawTag(49);
        output.WriteDouble(MinWidth);
      }
      if (HasMinHeight) {
        output.WriteRawTag(57);
        output.WriteDouble(MinHeight);
      }
      if (HasMaxWidth) {
        output.WriteRawTag(65);
        output.WriteDouble(MaxWidth);
      }
      if (HasMaxHeight) {
        output.WriteRawTag(73);
        output.WriteDouble(MaxHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (HasWidth) {
        output.WriteRawTag(33);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(41);
        output.WriteDouble(Height);
      }
      if (HasMinWidth) {
        output.WriteRawTag(49);
        output.WriteDouble(MinWidth);
      }
      if (HasMinHeight) {
        output.WriteRawTag(57);
        output.WriteDouble(MinHeight);
      }
      if (HasMaxWidth) {
        output.WriteRawTag(65);
        output.WriteDouble(MaxWidth);
      }
      if (HasMaxHeight) {
        output.WriteRawTag(73);
        output.WriteDouble(MaxHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + 8;
      }
      if (HasY) {
        size += 1 + 8;
      }
      if (HasWidth) {
        size += 1 + 8;
      }
      if (HasHeight) {
        size += 1 + 8;
      }
      if (HasMinWidth) {
        size += 1 + 8;
      }
      if (HasMinHeight) {
        size += 1 + 8;
      }
      if (HasMaxWidth) {
        size += 1 + 8;
      }
      if (HasMaxHeight) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetWindowPosition other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasMinWidth) {
        MinWidth = other.MinWidth;
      }
      if (other.HasMinHeight) {
        MinHeight = other.MinHeight;
      }
      if (other.HasMaxWidth) {
        MaxWidth = other.MaxWidth;
      }
      if (other.HasMaxHeight) {
        MaxHeight = other.MaxHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
          case 33: {
            Width = input.ReadDouble();
            break;
          }
          case 41: {
            Height = input.ReadDouble();
            break;
          }
          case 49: {
            MinWidth = input.ReadDouble();
            break;
          }
          case 57: {
            MinHeight = input.ReadDouble();
            break;
          }
          case 65: {
            MaxWidth = input.ReadDouble();
            break;
          }
          case 73: {
            MaxHeight = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
          case 33: {
            Width = input.ReadDouble();
            break;
          }
          case 41: {
            Height = input.ReadDouble();
            break;
          }
          case 49: {
            MinWidth = input.ReadDouble();
            break;
          }
          case 57: {
            MinHeight = input.ReadDouble();
            break;
          }
          case 65: {
            MaxWidth = input.ReadDouble();
            break;
          }
          case 73: {
            MaxHeight = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgShowWindow : pb::IMessage<CMsgShowWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgShowWindow> _parser = new pb::MessageParser<CMsgShowWindow>(() => new CMsgShowWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgShowWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowWindow(CMsgShowWindow other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowWindow Clone() {
      return new CMsgShowWindow(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgShowWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgShowWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgShowWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHideWindow : pb::IMessage<CMsgHideWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHideWindow> _parser = new pb::MessageParser<CMsgHideWindow>(() => new CMsgHideWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHideWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHideWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHideWindow(CMsgHideWindow other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHideWindow Clone() {
      return new CMsgHideWindow(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHideWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHideWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHideWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBringWindowToFront : pb::IMessage<CMsgBringWindowToFront>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBringWindowToFront> _parser = new pb::MessageParser<CMsgBringWindowToFront>(() => new CMsgBringWindowToFront());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBringWindowToFront> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBringWindowToFront() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBringWindowToFront(CMsgBringWindowToFront other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBringWindowToFront Clone() {
      return new CMsgBringWindowToFront(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBringWindowToFront);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBringWindowToFront other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBringWindowToFront other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetForegroundWindow : pb::IMessage<CMsgSetForegroundWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetForegroundWindow> _parser = new pb::MessageParser<CMsgSetForegroundWindow>(() => new CMsgSetForegroundWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetForegroundWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetForegroundWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetForegroundWindow(CMsgSetForegroundWindow other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetForegroundWindow Clone() {
      return new CMsgSetForegroundWindow(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetForegroundWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetForegroundWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetForegroundWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMaximizeRestoreWindow : pb::IMessage<CMsgMaximizeRestoreWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMaximizeRestoreWindow> _parser = new pb::MessageParser<CMsgMaximizeRestoreWindow>(() => new CMsgMaximizeRestoreWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMaximizeRestoreWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMaximizeRestoreWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMaximizeRestoreWindow(CMsgMaximizeRestoreWindow other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMaximizeRestoreWindow Clone() {
      return new CMsgMaximizeRestoreWindow(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMaximizeRestoreWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMaximizeRestoreWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMaximizeRestoreWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgMinimizeWindow : pb::IMessage<CMsgMinimizeWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgMinimizeWindow> _parser = new pb::MessageParser<CMsgMinimizeWindow>(() => new CMsgMinimizeWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgMinimizeWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMinimizeWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMinimizeWindow(CMsgMinimizeWindow other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgMinimizeWindow Clone() {
      return new CMsgMinimizeWindow(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgMinimizeWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgMinimizeWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgMinimizeWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgShowBrowserContextMenu : pb::IMessage<CMsgShowBrowserContextMenu>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgShowBrowserContextMenu> _parser = new pb::MessageParser<CMsgShowBrowserContextMenu>(() => new CMsgShowBrowserContextMenu());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgShowBrowserContextMenu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowBrowserContextMenu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowBrowserContextMenu(CMsgShowBrowserContextMenu other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      customCommands_ = other.customCommands_.Clone();
      typeFlags_ = other.typeFlags_;
      pageUrl_ = other.pageUrl_;
      coordX_ = other.coordX_;
      coordY_ = other.coordY_;
      linurl_ = other.linurl_;
      unfilteredLinurl_ = other.unfilteredLinurl_;
      selectionText_ = other.selectionText_;
      misspelledWord_ = other.misspelledWord_;
      editStateFlags_ = other.editStateFlags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgShowBrowserContextMenu Clone() {
      return new CMsgShowBrowserContextMenu(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "custom_commands" field.</summary>
    public const int CustomCommandsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand> _repeated_customCommands_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand> customCommands_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Types.ContextCommand> CustomCommands {
      get { return customCommands_; }
    }

    /// <summary>Field number for the "type_flags" field.</summary>
    public const int TypeFlagsFieldNumber = 3;
    private readonly static uint TypeFlagsDefaultValue = 0;

    private uint typeFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TypeFlags {
      get { if ((_hasBits0 & 2) != 0) { return typeFlags_; } else { return TypeFlagsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        typeFlags_ = value;
      }
    }
    /// <summary>Gets whether the "type_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTypeFlags {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTypeFlags() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "page_url" field.</summary>
    public const int PageUrlFieldNumber = 4;
    private readonly static string PageUrlDefaultValue = "";

    private string pageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageUrl {
      get { return pageUrl_ ?? PageUrlDefaultValue; }
      set {
        pageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "page_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPageUrl {
      get { return pageUrl_ != null; }
    }
    /// <summary>Clears the value of the "page_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPageUrl() {
      pageUrl_ = null;
    }

    /// <summary>Field number for the "coord_x" field.</summary>
    public const int CoordXFieldNumber = 5;
    private readonly static int CoordXDefaultValue = 0;

    private int coordX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CoordX {
      get { if ((_hasBits0 & 4) != 0) { return coordX_; } else { return CoordXDefaultValue; } }
      set {
        _hasBits0 |= 4;
        coordX_ = value;
      }
    }
    /// <summary>Gets whether the "coord_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCoordX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "coord_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCoordX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "coord_y" field.</summary>
    public const int CoordYFieldNumber = 6;
    private readonly static int CoordYDefaultValue = 0;

    private int coordY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CoordY {
      get { if ((_hasBits0 & 8) != 0) { return coordY_; } else { return CoordYDefaultValue; } }
      set {
        _hasBits0 |= 8;
        coordY_ = value;
      }
    }
    /// <summary>Gets whether the "coord_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCoordY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "coord_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCoordY() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "linurl" field.</summary>
    public const int LinurlFieldNumber = 7;
    private readonly static string LinurlDefaultValue = "";

    private string linurl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Linurl {
      get { return linurl_ ?? LinurlDefaultValue; }
      set {
        linurl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "linurl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinurl {
      get { return linurl_ != null; }
    }
    /// <summary>Clears the value of the "linurl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinurl() {
      linurl_ = null;
    }

    /// <summary>Field number for the "unfiltered_linurl" field.</summary>
    public const int UnfilteredLinurlFieldNumber = 8;
    private readonly static string UnfilteredLinurlDefaultValue = "";

    private string unfilteredLinurl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnfilteredLinurl {
      get { return unfilteredLinurl_ ?? UnfilteredLinurlDefaultValue; }
      set {
        unfilteredLinurl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "unfiltered_linurl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnfilteredLinurl {
      get { return unfilteredLinurl_ != null; }
    }
    /// <summary>Clears the value of the "unfiltered_linurl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnfilteredLinurl() {
      unfilteredLinurl_ = null;
    }

    /// <summary>Field number for the "selection_text" field.</summary>
    public const int SelectionTextFieldNumber = 9;
    private readonly static string SelectionTextDefaultValue = "";

    private string selectionText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SelectionText {
      get { return selectionText_ ?? SelectionTextDefaultValue; }
      set {
        selectionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "selection_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectionText {
      get { return selectionText_ != null; }
    }
    /// <summary>Clears the value of the "selection_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectionText() {
      selectionText_ = null;
    }

    /// <summary>Field number for the "misspelled_word" field.</summary>
    public const int MisspelledWordFieldNumber = 10;
    private readonly static string MisspelledWordDefaultValue = "";

    private string misspelledWord_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MisspelledWord {
      get { return misspelledWord_ ?? MisspelledWordDefaultValue; }
      set {
        misspelledWord_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "misspelled_word" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMisspelledWord {
      get { return misspelledWord_ != null; }
    }
    /// <summary>Clears the value of the "misspelled_word" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMisspelledWord() {
      misspelledWord_ = null;
    }

    /// <summary>Field number for the "edit_state_flags" field.</summary>
    public const int EditStateFlagsFieldNumber = 11;
    private readonly static uint EditStateFlagsDefaultValue = 0;

    private uint editStateFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EditStateFlags {
      get { if ((_hasBits0 & 16) != 0) { return editStateFlags_; } else { return EditStateFlagsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        editStateFlags_ = value;
      }
    }
    /// <summary>Gets whether the "edit_state_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEditStateFlags {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "edit_state_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEditStateFlags() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgShowBrowserContextMenu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgShowBrowserContextMenu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if(!customCommands_.Equals(other.customCommands_)) return false;
      if (TypeFlags != other.TypeFlags) return false;
      if (PageUrl != other.PageUrl) return false;
      if (CoordX != other.CoordX) return false;
      if (CoordY != other.CoordY) return false;
      if (Linurl != other.Linurl) return false;
      if (UnfilteredLinurl != other.UnfilteredLinurl) return false;
      if (SelectionText != other.SelectionText) return false;
      if (MisspelledWord != other.MisspelledWord) return false;
      if (EditStateFlags != other.EditStateFlags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      hash ^= customCommands_.GetHashCode();
      if (HasTypeFlags) hash ^= TypeFlags.GetHashCode();
      if (HasPageUrl) hash ^= PageUrl.GetHashCode();
      if (HasCoordX) hash ^= CoordX.GetHashCode();
      if (HasCoordY) hash ^= CoordY.GetHashCode();
      if (HasLinurl) hash ^= Linurl.GetHashCode();
      if (HasUnfilteredLinurl) hash ^= UnfilteredLinurl.GetHashCode();
      if (HasSelectionText) hash ^= SelectionText.GetHashCode();
      if (HasMisspelledWord) hash ^= MisspelledWord.GetHashCode();
      if (HasEditStateFlags) hash ^= EditStateFlags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      customCommands_.WriteTo(output, _repeated_customCommands_codec);
      if (HasTypeFlags) {
        output.WriteRawTag(24);
        output.WriteUInt32(TypeFlags);
      }
      if (HasPageUrl) {
        output.WriteRawTag(34);
        output.WriteString(PageUrl);
      }
      if (HasCoordX) {
        output.WriteRawTag(40);
        output.WriteInt32(CoordX);
      }
      if (HasCoordY) {
        output.WriteRawTag(48);
        output.WriteInt32(CoordY);
      }
      if (HasLinurl) {
        output.WriteRawTag(58);
        output.WriteString(Linurl);
      }
      if (HasUnfilteredLinurl) {
        output.WriteRawTag(66);
        output.WriteString(UnfilteredLinurl);
      }
      if (HasSelectionText) {
        output.WriteRawTag(74);
        output.WriteString(SelectionText);
      }
      if (HasMisspelledWord) {
        output.WriteRawTag(82);
        output.WriteString(MisspelledWord);
      }
      if (HasEditStateFlags) {
        output.WriteRawTag(88);
        output.WriteUInt32(EditStateFlags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      customCommands_.WriteTo(ref output, _repeated_customCommands_codec);
      if (HasTypeFlags) {
        output.WriteRawTag(24);
        output.WriteUInt32(TypeFlags);
      }
      if (HasPageUrl) {
        output.WriteRawTag(34);
        output.WriteString(PageUrl);
      }
      if (HasCoordX) {
        output.WriteRawTag(40);
        output.WriteInt32(CoordX);
      }
      if (HasCoordY) {
        output.WriteRawTag(48);
        output.WriteInt32(CoordY);
      }
      if (HasLinurl) {
        output.WriteRawTag(58);
        output.WriteString(Linurl);
      }
      if (HasUnfilteredLinurl) {
        output.WriteRawTag(66);
        output.WriteString(UnfilteredLinurl);
      }
      if (HasSelectionText) {
        output.WriteRawTag(74);
        output.WriteString(SelectionText);
      }
      if (HasMisspelledWord) {
        output.WriteRawTag(82);
        output.WriteString(MisspelledWord);
      }
      if (HasEditStateFlags) {
        output.WriteRawTag(88);
        output.WriteUInt32(EditStateFlags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      size += customCommands_.CalculateSize(_repeated_customCommands_codec);
      if (HasTypeFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TypeFlags);
      }
      if (HasPageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageUrl);
      }
      if (HasCoordX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoordX);
      }
      if (HasCoordY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoordY);
      }
      if (HasLinurl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Linurl);
      }
      if (HasUnfilteredLinurl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnfilteredLinurl);
      }
      if (HasSelectionText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectionText);
      }
      if (HasMisspelledWord) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MisspelledWord);
      }
      if (HasEditStateFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EditStateFlags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgShowBrowserContextMenu other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      customCommands_.Add(other.customCommands_);
      if (other.HasTypeFlags) {
        TypeFlags = other.TypeFlags;
      }
      if (other.HasPageUrl) {
        PageUrl = other.PageUrl;
      }
      if (other.HasCoordX) {
        CoordX = other.CoordX;
      }
      if (other.HasCoordY) {
        CoordY = other.CoordY;
      }
      if (other.HasLinurl) {
        Linurl = other.Linurl;
      }
      if (other.HasUnfilteredLinurl) {
        UnfilteredLinurl = other.UnfilteredLinurl;
      }
      if (other.HasSelectionText) {
        SelectionText = other.SelectionText;
      }
      if (other.HasMisspelledWord) {
        MisspelledWord = other.MisspelledWord;
      }
      if (other.HasEditStateFlags) {
        EditStateFlags = other.EditStateFlags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            customCommands_.AddEntriesFrom(input, _repeated_customCommands_codec);
            break;
          }
          case 24: {
            TypeFlags = input.ReadUInt32();
            break;
          }
          case 34: {
            PageUrl = input.ReadString();
            break;
          }
          case 40: {
            CoordX = input.ReadInt32();
            break;
          }
          case 48: {
            CoordY = input.ReadInt32();
            break;
          }
          case 58: {
            Linurl = input.ReadString();
            break;
          }
          case 66: {
            UnfilteredLinurl = input.ReadString();
            break;
          }
          case 74: {
            SelectionText = input.ReadString();
            break;
          }
          case 82: {
            MisspelledWord = input.ReadString();
            break;
          }
          case 88: {
            EditStateFlags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            customCommands_.AddEntriesFrom(ref input, _repeated_customCommands_codec);
            break;
          }
          case 24: {
            TypeFlags = input.ReadUInt32();
            break;
          }
          case 34: {
            PageUrl = input.ReadString();
            break;
          }
          case 40: {
            CoordX = input.ReadInt32();
            break;
          }
          case 48: {
            CoordY = input.ReadInt32();
            break;
          }
          case 58: {
            Linurl = input.ReadString();
            break;
          }
          case 66: {
            UnfilteredLinurl = input.ReadString();
            break;
          }
          case 74: {
            SelectionText = input.ReadString();
            break;
          }
          case 82: {
            MisspelledWord = input.ReadString();
            break;
          }
          case 88: {
            EditStateFlags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgShowBrowserContextMenu message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ContextCommand : pb::IMessage<ContextCommand>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ContextCommand> _parser = new pb::MessageParser<ContextCommand>(() => new ContextCommand());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ContextCommand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgShowBrowserContextMenu.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContextCommand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContextCommand(ContextCommand other) : this() {
          _hasBits0 = other._hasBits0;
          id_ = other.id_;
          label_ = other.label_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContextCommand Clone() {
          return new ContextCommand(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private readonly static int IdDefaultValue = 0;

        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Id {
          get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            id_ = value;
          }
        }
        /// <summary>Gets whether the "id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 2;
        private readonly static string LabelDefaultValue = "";

        private string label_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Label {
          get { return label_ ?? LabelDefaultValue; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "label" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLabel {
          get { return label_ != null; }
        }
        /// <summary>Clears the value of the "label" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLabel() {
          label_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ContextCommand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ContextCommand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Label != other.Label) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasId) hash ^= Id.GetHashCode();
          if (HasLabel) hash ^= Label.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasId) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (HasLabel) {
            output.WriteRawTag(18);
            output.WriteString(Label);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasId) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (HasLabel) {
            output.WriteRawTag(18);
            output.WriteString(Label);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasId) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (HasLabel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ContextCommand other) {
          if (other == null) {
            return;
          }
          if (other.HasId) {
            Id = other.Id;
          }
          if (other.HasLabel) {
            Label = other.Label;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 18: {
                Label = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 18: {
                Label = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgHandleContextMenuCommand : pb::IMessage<CMsgHandleContextMenuCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgHandleContextMenuCommand> _parser = new pb::MessageParser<CMsgHandleContextMenuCommand>(() => new CMsgHandleContextMenuCommand());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgHandleContextMenuCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHandleContextMenuCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHandleContextMenuCommand(CMsgHandleContextMenuCommand other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      commandId_ = other.commandId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgHandleContextMenuCommand Clone() {
      return new CMsgHandleContextMenuCommand(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 2;
    private readonly static int CommandIdDefaultValue = 0;

    private int commandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CommandId {
      get { if ((_hasBits0 & 2) != 0) { return commandId_; } else { return CommandIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        commandId_ = value;
      }
    }
    /// <summary>Gets whether the "command_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommandId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "command_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommandId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgHandleContextMenuCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgHandleContextMenuCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (CommandId != other.CommandId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasCommandId) hash ^= CommandId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasCommandId) {
        output.WriteRawTag(16);
        output.WriteInt32(CommandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasCommandId) {
        output.WriteRawTag(16);
        output.WriteInt32(CommandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasCommandId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommandId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgHandleContextMenuCommand other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasCommandId) {
        CommandId = other.CommandId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            CommandId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            CommandId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgTouchGesture : pb::IMessage<CMsgTouchGesture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgTouchGesture> _parser = new pb::MessageParser<CMsgTouchGesture>(() => new CMsgTouchGesture());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgTouchGesture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgTouchGesture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgTouchGesture(CMsgTouchGesture other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      id_ = other.id_;
      gesture_ = other.gesture_;
      x_ = other.x_;
      y_ = other.y_;
      width_ = other.width_;
      height_ = other.height_;
      tapCount_ = other.tapCount_;
      pinchScale_ = other.pinchScale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgTouchGesture Clone() {
      return new CMsgTouchGesture(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 2) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gesture" field.</summary>
    public const int GestureFieldNumber = 3;
    private readonly static uint GestureDefaultValue = 0;

    private uint gesture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Gesture {
      get { if ((_hasBits0 & 4) != 0) { return gesture_; } else { return GestureDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gesture_ = value;
      }
    }
    /// <summary>Gets whether the "gesture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGesture {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gesture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGesture() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private readonly static double XDefaultValue = 0D;

    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { if ((_hasBits0 & 8) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 8;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private readonly static double YDefaultValue = 0D;

    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { if ((_hasBits0 & 16) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 16;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private readonly static double WidthDefaultValue = 0D;

    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Width {
      get { if ((_hasBits0 & 32) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 32;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private readonly static double HeightDefaultValue = 0D;

    private double height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { if ((_hasBits0 & 64) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 64;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "tap_count" field.</summary>
    public const int TapCountFieldNumber = 8;
    private readonly static uint TapCountDefaultValue = 0;

    private uint tapCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TapCount {
      get { if ((_hasBits0 & 128) != 0) { return tapCount_; } else { return TapCountDefaultValue; } }
      set {
        _hasBits0 |= 128;
        tapCount_ = value;
      }
    }
    /// <summary>Gets whether the "tap_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTapCount {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "tap_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTapCount() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "pinch_scale" field.</summary>
    public const int PinchScaleFieldNumber = 9;
    private readonly static double PinchScaleDefaultValue = 0D;

    private double pinchScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PinchScale {
      get { if ((_hasBits0 & 256) != 0) { return pinchScale_; } else { return PinchScaleDefaultValue; } }
      set {
        _hasBits0 |= 256;
        pinchScale_ = value;
      }
    }
    /// <summary>Gets whether the "pinch_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPinchScale {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "pinch_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPinchScale() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgTouchGesture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgTouchGesture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Id != other.Id) return false;
      if (Gesture != other.Gesture) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      if (TapCount != other.TapCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PinchScale, other.PinchScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasGesture) hash ^= Gesture.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (HasTapCount) hash ^= TapCount.GetHashCode();
      if (HasPinchScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PinchScale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (HasGesture) {
        output.WriteRawTag(24);
        output.WriteUInt32(Gesture);
      }
      if (HasX) {
        output.WriteRawTag(33);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(41);
        output.WriteDouble(Y);
      }
      if (HasWidth) {
        output.WriteRawTag(49);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(57);
        output.WriteDouble(Height);
      }
      if (HasTapCount) {
        output.WriteRawTag(64);
        output.WriteUInt32(TapCount);
      }
      if (HasPinchScale) {
        output.WriteRawTag(73);
        output.WriteDouble(PinchScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (HasGesture) {
        output.WriteRawTag(24);
        output.WriteUInt32(Gesture);
      }
      if (HasX) {
        output.WriteRawTag(33);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(41);
        output.WriteDouble(Y);
      }
      if (HasWidth) {
        output.WriteRawTag(49);
        output.WriteDouble(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(57);
        output.WriteDouble(Height);
      }
      if (HasTapCount) {
        output.WriteRawTag(64);
        output.WriteUInt32(TapCount);
      }
      if (HasPinchScale) {
        output.WriteRawTag(73);
        output.WriteDouble(PinchScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasGesture) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gesture);
      }
      if (HasX) {
        size += 1 + 8;
      }
      if (HasY) {
        size += 1 + 8;
      }
      if (HasWidth) {
        size += 1 + 8;
      }
      if (HasHeight) {
        size += 1 + 8;
      }
      if (HasTapCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TapCount);
      }
      if (HasPinchScale) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgTouchGesture other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasGesture) {
        Gesture = other.Gesture;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasTapCount) {
        TapCount = other.TapCount;
      }
      if (other.HasPinchScale) {
        PinchScale = other.PinchScale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Gesture = input.ReadUInt32();
            break;
          }
          case 33: {
            X = input.ReadDouble();
            break;
          }
          case 41: {
            Y = input.ReadDouble();
            break;
          }
          case 49: {
            Width = input.ReadDouble();
            break;
          }
          case 57: {
            Height = input.ReadDouble();
            break;
          }
          case 64: {
            TapCount = input.ReadUInt32();
            break;
          }
          case 73: {
            PinchScale = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Gesture = input.ReadUInt32();
            break;
          }
          case 33: {
            X = input.ReadDouble();
            break;
          }
          case 41: {
            Y = input.ReadDouble();
            break;
          }
          case 49: {
            Width = input.ReadDouble();
            break;
          }
          case 57: {
            Height = input.ReadDouble();
            break;
          }
          case 64: {
            TapCount = input.ReadUInt32();
            break;
          }
          case 73: {
            PinchScale = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetTouchGesturesToCancel : pb::IMessage<CMsgSetTouchGesturesToCancel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetTouchGesturesToCancel> _parser = new pb::MessageParser<CMsgSetTouchGesturesToCancel>(() => new CMsgSetTouchGesturesToCancel());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetTouchGesturesToCancel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetTouchGesturesToCancel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetTouchGesturesToCancel(CMsgSetTouchGesturesToCancel other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      gestures_ = other.gestures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetTouchGesturesToCancel Clone() {
      return new CMsgSetTouchGesturesToCancel(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gestures" field.</summary>
    public const int GesturesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_gestures_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> gestures_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Gestures {
      get { return gestures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetTouchGesturesToCancel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetTouchGesturesToCancel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if(!gestures_.Equals(other.gestures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      hash ^= gestures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      gestures_.WriteTo(output, _repeated_gestures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      gestures_.WriteTo(ref output, _repeated_gestures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      size += gestures_.CalculateSize(_repeated_gestures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetTouchGesturesToCancel other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      gestures_.Add(other.gestures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            gestures_.AddEntriesFrom(input, _repeated_gestures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            gestures_.AddEntriesFrom(ref input, _repeated_gestures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgImeSetComposition : pb::IMessage<CMsgImeSetComposition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgImeSetComposition> _parser = new pb::MessageParser<CMsgImeSetComposition>(() => new CMsgImeSetComposition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgImeSetComposition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeSetComposition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeSetComposition(CMsgImeSetComposition other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeSetComposition Clone() {
      return new CMsgImeSetComposition(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgImeSetComposition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgImeSetComposition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgImeSetComposition other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgImeCommitText : pb::IMessage<CMsgImeCommitText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgImeCommitText> _parser = new pb::MessageParser<CMsgImeCommitText>(() => new CMsgImeCommitText());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgImeCommitText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCommitText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCommitText(CMsgImeCommitText other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCommitText Clone() {
      return new CMsgImeCommitText(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgImeCommitText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgImeCommitText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgImeCommitText other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgImeCancelComposition : pb::IMessage<CMsgImeCancelComposition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgImeCancelComposition> _parser = new pb::MessageParser<CMsgImeCancelComposition>(() => new CMsgImeCancelComposition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgImeCancelComposition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCancelComposition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCancelComposition(CMsgImeCancelComposition other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCancelComposition Clone() {
      return new CMsgImeCancelComposition(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgImeCancelComposition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgImeCancelComposition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgImeCancelComposition other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgImeCompositionRangeChanged : pb::IMessage<CMsgImeCompositionRangeChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgImeCompositionRangeChanged> _parser = new pb::MessageParser<CMsgImeCompositionRangeChanged>(() => new CMsgImeCompositionRangeChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgImeCompositionRangeChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCompositionRangeChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCompositionRangeChanged(CMsgImeCompositionRangeChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgImeCompositionRangeChanged Clone() {
      return new CMsgImeCompositionRangeChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static uint XDefaultValue = 0;

    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static uint YDefaultValue = 0;

    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgImeCompositionRangeChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgImeCompositionRangeChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgImeCompositionRangeChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgInspectElement : pb::IMessage<CMsgInspectElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgInspectElement> _parser = new pb::MessageParser<CMsgInspectElement>(() => new CMsgInspectElement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgInspectElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgInspectElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgInspectElement(CMsgInspectElement other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgInspectElement Clone() {
      return new CMsgInspectElement(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static uint XDefaultValue = 0;

    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static uint YDefaultValue = 0;

    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgInspectElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgInspectElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasX) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgInspectElement other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgDisableF5 : pb::IMessage<CMsgDisableF5>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDisableF5> _parser = new pb::MessageParser<CMsgDisableF5>(() => new CMsgDisableF5());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgDisableF5> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDisableF5() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDisableF5(CMsgDisableF5 other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      disable_ = other.disable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgDisableF5 Clone() {
      return new CMsgDisableF5(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "disable" field.</summary>
    public const int DisableFieldNumber = 2;
    private readonly static bool DisableDefaultValue = false;

    private bool disable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Disable {
      get { if ((_hasBits0 & 2) != 0) { return disable_; } else { return DisableDefaultValue; } }
      set {
        _hasBits0 |= 2;
        disable_ = value;
      }
    }
    /// <summary>Gets whether the "disable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisable {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "disable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisable() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgDisableF5);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgDisableF5 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Disable != other.Disable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasDisable) hash ^= Disable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasDisable) {
        output.WriteRawTag(16);
        output.WriteBool(Disable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasDisable) {
        output.WriteRawTag(16);
        output.WriteBool(Disable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasDisable) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgDisableF5 other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasDisable) {
        Disable = other.Disable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Disable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Disable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgStartDownload : pb::IMessage<CMsgStartDownload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgStartDownload> _parser = new pb::MessageParser<CMsgStartDownload>(() => new CMsgStartDownload());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgStartDownload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartDownload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartDownload(CMsgStartDownload other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgStartDownload Clone() {
      return new CMsgStartDownload(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgStartDownload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgStartDownload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgStartDownload other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetWindowStackingOrder : pb::IMessage<CMsgSetWindowStackingOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetWindowStackingOrder> _parser = new pb::MessageParser<CMsgSetWindowStackingOrder>(() => new CMsgSetWindowStackingOrder());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetWindowStackingOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowStackingOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowStackingOrder(CMsgSetWindowStackingOrder other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      estackingorder_ = other.estackingorder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetWindowStackingOrder Clone() {
      return new CMsgSetWindowStackingOrder(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "estackingorder" field.</summary>
    public const int EstackingorderFieldNumber = 2;
    private readonly static uint EstackingorderDefaultValue = 0;

    private uint estackingorder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Estackingorder {
      get { if ((_hasBits0 & 2) != 0) { return estackingorder_; } else { return EstackingorderDefaultValue; } }
      set {
        _hasBits0 |= 2;
        estackingorder_ = value;
      }
    }
    /// <summary>Gets whether the "estackingorder" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEstackingorder {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "estackingorder" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEstackingorder() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetWindowStackingOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetWindowStackingOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Estackingorder != other.Estackingorder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasEstackingorder) hash ^= Estackingorder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasEstackingorder) {
        output.WriteRawTag(16);
        output.WriteUInt32(Estackingorder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasEstackingorder) {
        output.WriteRawTag(16);
        output.WriteUInt32(Estackingorder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasEstackingorder) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Estackingorder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetWindowStackingOrder other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasEstackingorder) {
        Estackingorder = other.Estackingorder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Estackingorder = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Estackingorder = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserViewPostMessageToParentRequest : pb::IMessage<CMsgBrowserViewPostMessageToParentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserViewPostMessageToParentRequest> _parser = new pb::MessageParser<CMsgBrowserViewPostMessageToParentRequest>(() => new CMsgBrowserViewPostMessageToParentRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserViewPostMessageToParentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserViewPostMessageToParentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserViewPostMessageToParentRequest(CMsgBrowserViewPostMessageToParentRequest other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      message_ = other.message_;
      args_ = other.args_;
      requestingUrl_ = other.requestingUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserViewPostMessageToParentRequest Clone() {
      return new CMsgBrowserViewPostMessageToParentRequest(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private readonly static string ArgsDefaultValue = "";

    private string args_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Args {
      get { return args_ ?? ArgsDefaultValue; }
      set {
        args_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "args" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArgs {
      get { return args_ != null; }
    }
    /// <summary>Clears the value of the "args" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArgs() {
      args_ = null;
    }

    /// <summary>Field number for the "requesting_url" field.</summary>
    public const int RequestingUrlFieldNumber = 4;
    private readonly static string RequestingUrlDefaultValue = "";

    private string requestingUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestingUrl {
      get { return requestingUrl_ ?? RequestingUrlDefaultValue; }
      set {
        requestingUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "requesting_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestingUrl {
      get { return requestingUrl_ != null; }
    }
    /// <summary>Clears the value of the "requesting_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestingUrl() {
      requestingUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserViewPostMessageToParentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserViewPostMessageToParentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Message != other.Message) return false;
      if (Args != other.Args) return false;
      if (RequestingUrl != other.RequestingUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (HasArgs) hash ^= Args.GetHashCode();
      if (HasRequestingUrl) hash ^= RequestingUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (HasArgs) {
        output.WriteRawTag(26);
        output.WriteString(Args);
      }
      if (HasRequestingUrl) {
        output.WriteRawTag(34);
        output.WriteString(RequestingUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (HasArgs) {
        output.WriteRawTag(26);
        output.WriteString(Args);
      }
      if (HasRequestingUrl) {
        output.WriteRawTag(34);
        output.WriteString(RequestingUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (HasArgs) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Args);
      }
      if (HasRequestingUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestingUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserViewPostMessageToParentRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      if (other.HasArgs) {
        Args = other.Args;
      }
      if (other.HasRequestingUrl) {
        RequestingUrl = other.RequestingUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            Args = input.ReadString();
            break;
          }
          case 34: {
            RequestingUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            Args = input.ReadString();
            break;
          }
          case 34: {
            RequestingUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBlockedRequest : pb::IMessage<CMsgBlockedRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBlockedRequest> _parser = new pb::MessageParser<CMsgBlockedRequest>(() => new CMsgBlockedRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBlockedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBlockedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBlockedRequest(CMsgBlockedRequest other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBlockedRequest Clone() {
      return new CMsgBlockedRequest(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBlockedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBlockedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBlockedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgBrowserFocusChanged : pb::IMessage<CMsgBrowserFocusChanged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBrowserFocusChanged> _parser = new pb::MessageParser<CMsgBrowserFocusChanged>(() => new CMsgBrowserFocusChanged());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgBrowserFocusChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserFocusChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserFocusChanged(CMsgBrowserFocusChanged other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      focused_ = other.focused_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgBrowserFocusChanged Clone() {
      return new CMsgBrowserFocusChanged(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "focused" field.</summary>
    public const int FocusedFieldNumber = 2;
    private readonly static bool FocusedDefaultValue = false;

    private bool focused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Focused {
      get { if ((_hasBits0 & 2) != 0) { return focused_; } else { return FocusedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        focused_ = value;
      }
    }
    /// <summary>Gets whether the "focused" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFocused {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "focused" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFocused() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgBrowserFocusChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgBrowserFocusChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Focused != other.Focused) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasFocused) hash ^= Focused.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasFocused) {
        output.WriteRawTag(16);
        output.WriteBool(Focused);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasFocused) {
        output.WriteRawTag(16);
        output.WriteBool(Focused);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasFocused) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgBrowserFocusChanged other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasFocused) {
        Focused = other.Focused;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Focused = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Focused = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetProtocolBlockList : pb::IMessage<CMsgSetProtocolBlockList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetProtocolBlockList> _parser = new pb::MessageParser<CMsgSetProtocolBlockList>(() => new CMsgSetProtocolBlockList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetProtocolBlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetProtocolBlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetProtocolBlockList(CMsgSetProtocolBlockList other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      list_ = other.list_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetProtocolBlockList Clone() {
      return new CMsgSetProtocolBlockList(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private readonly static string ListDefaultValue = "";

    private string list_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string List {
      get { return list_ ?? ListDefaultValue; }
      set {
        list_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasList {
      get { return list_ != null; }
    }
    /// <summary>Clears the value of the "list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearList() {
      list_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetProtocolBlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetProtocolBlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (List != other.List) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasList) hash ^= List.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasList) {
        output.WriteRawTag(18);
        output.WriteString(List);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasList) {
        output.WriteRawTag(18);
        output.WriteString(List);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(List);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetProtocolBlockList other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasList) {
        List = other.List;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            List = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 18: {
            List = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetForceDeviceScaleFactors : pb::IMessage<CMsgSetForceDeviceScaleFactors>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetForceDeviceScaleFactors> _parser = new pb::MessageParser<CMsgSetForceDeviceScaleFactors>(() => new CMsgSetForceDeviceScaleFactors());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetForceDeviceScaleFactors> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetForceDeviceScaleFactors() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetForceDeviceScaleFactors(CMsgSetForceDeviceScaleFactors other) : this() {
      _hasBits0 = other._hasBits0;
      dpiScale_ = other.dpiScale_;
      browserScale_ = other.browserScale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetForceDeviceScaleFactors Clone() {
      return new CMsgSetForceDeviceScaleFactors(this);
    }

    /// <summary>Field number for the "dpi_scale" field.</summary>
    public const int DpiScaleFieldNumber = 1;
    private readonly static double DpiScaleDefaultValue = 0D;

    private double dpiScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DpiScale {
      get { if ((_hasBits0 & 1) != 0) { return dpiScale_; } else { return DpiScaleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dpiScale_ = value;
      }
    }
    /// <summary>Gets whether the "dpi_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDpiScale {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dpi_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDpiScale() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "browser_scale" field.</summary>
    public const int BrowserScaleFieldNumber = 2;
    private readonly static double BrowserScaleDefaultValue = 0D;

    private double browserScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BrowserScale {
      get { if ((_hasBits0 & 2) != 0) { return browserScale_; } else { return BrowserScaleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        browserScale_ = value;
      }
    }
    /// <summary>Gets whether the "browser_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserScale {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "browser_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserScale() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetForceDeviceScaleFactors);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetForceDeviceScaleFactors other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DpiScale, other.DpiScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BrowserScale, other.BrowserScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDpiScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DpiScale);
      if (HasBrowserScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BrowserScale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDpiScale) {
        output.WriteRawTag(9);
        output.WriteDouble(DpiScale);
      }
      if (HasBrowserScale) {
        output.WriteRawTag(17);
        output.WriteDouble(BrowserScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDpiScale) {
        output.WriteRawTag(9);
        output.WriteDouble(DpiScale);
      }
      if (HasBrowserScale) {
        output.WriteRawTag(17);
        output.WriteDouble(BrowserScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDpiScale) {
        size += 1 + 8;
      }
      if (HasBrowserScale) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetForceDeviceScaleFactors other) {
      if (other == null) {
        return;
      }
      if (other.HasDpiScale) {
        DpiScale = other.DpiScale;
      }
      if (other.HasBrowserScale) {
        BrowserScale = other.BrowserScale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DpiScale = input.ReadDouble();
            break;
          }
          case 17: {
            BrowserScale = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            DpiScale = input.ReadDouble();
            break;
          }
          case 17: {
            BrowserScale = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetUIMode : pb::IMessage<CMsgSetUIMode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetUIMode> _parser = new pb::MessageParser<CMsgSetUIMode>(() => new CMsgSetUIMode());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetUIMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetUIMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetUIMode(CMsgSetUIMode other) : this() {
      _hasBits0 = other._hasBits0;
      uiMode_ = other.uiMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetUIMode Clone() {
      return new CMsgSetUIMode(this);
    }

    /// <summary>Field number for the "ui_mode" field.</summary>
    public const int UiModeFieldNumber = 1;
    private readonly static int UiModeDefaultValue = 0;

    private int uiMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UiMode {
      get { if ((_hasBits0 & 1) != 0) { return uiMode_; } else { return UiModeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uiMode_ = value;
      }
    }
    /// <summary>Gets whether the "ui_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUiMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ui_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUiMode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetUIMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetUIMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UiMode != other.UiMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUiMode) hash ^= UiMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUiMode) {
        output.WriteRawTag(8);
        output.WriteInt32(UiMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUiMode) {
        output.WriteRawTag(8);
        output.WriteInt32(UiMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUiMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UiMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetUIMode other) {
      if (other == null) {
        return;
      }
      if (other.HasUiMode) {
        UiMode = other.UiMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UiMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UiMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetSteamBetaName : pb::IMessage<CMsgSetSteamBetaName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetSteamBetaName> _parser = new pb::MessageParser<CMsgSetSteamBetaName>(() => new CMsgSetSteamBetaName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetSteamBetaName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetSteamBetaName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetSteamBetaName(CMsgSetSteamBetaName other) : this() {
      steamBetaName_ = other.steamBetaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetSteamBetaName Clone() {
      return new CMsgSetSteamBetaName(this);
    }

    /// <summary>Field number for the "steam_beta_name" field.</summary>
    public const int SteamBetaNameFieldNumber = 1;
    private readonly static string SteamBetaNameDefaultValue = "";

    private string steamBetaName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SteamBetaName {
      get { return steamBetaName_ ?? SteamBetaNameDefaultValue; }
      set {
        steamBetaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "steam_beta_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamBetaName {
      get { return steamBetaName_ != null; }
    }
    /// <summary>Clears the value of the "steam_beta_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamBetaName() {
      steamBetaName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetSteamBetaName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetSteamBetaName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SteamBetaName != other.SteamBetaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamBetaName) hash ^= SteamBetaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamBetaName) {
        output.WriteRawTag(10);
        output.WriteString(SteamBetaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamBetaName) {
        output.WriteRawTag(10);
        output.WriteString(SteamBetaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamBetaName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamBetaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetSteamBetaName other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamBetaName) {
        SteamBetaName = other.SteamBetaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SteamBetaName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SteamBetaName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgPopupCreated : pb::IMessage<CMsgPopupCreated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgPopupCreated> _parser = new pb::MessageParser<CMsgPopupCreated>(() => new CMsgPopupCreated());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgPopupCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupCreated(CMsgPopupCreated other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgPopupCreated Clone() {
      return new CMsgPopupCreated(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgPopupCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgPopupCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgPopupCreated other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSetVRKeyboardVisibility : pb::IMessage<CMsgSetVRKeyboardVisibility>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSetVRKeyboardVisibility> _parser = new pb::MessageParser<CMsgSetVRKeyboardVisibility>(() => new CMsgSetVRKeyboardVisibility());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSetVRKeyboardVisibility> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetVRKeyboardVisibility() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetVRKeyboardVisibility(CMsgSetVRKeyboardVisibility other) : this() {
      _hasBits0 = other._hasBits0;
      browserHandle_ = other.browserHandle_;
      visible_ = other.visible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSetVRKeyboardVisibility Clone() {
      return new CMsgSetVRKeyboardVisibility(this);
    }

    /// <summary>Field number for the "browser_handle" field.</summary>
    public const int BrowserHandleFieldNumber = 1;
    private readonly static uint BrowserHandleDefaultValue = 0;

    private uint browserHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrowserHandle {
      get { if ((_hasBits0 & 1) != 0) { return browserHandle_; } else { return BrowserHandleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        browserHandle_ = value;
      }
    }
    /// <summary>Gets whether the "browser_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserHandle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "browser_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserHandle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private readonly static bool VisibleDefaultValue = false;

    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 2) != 0) { return visible_; } else { return VisibleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSetVRKeyboardVisibility);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSetVRKeyboardVisibility other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowserHandle != other.BrowserHandle) return false;
      if (Visible != other.Visible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowserHandle) hash ^= BrowserHandle.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrowserHandle) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrowserHandle);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowserHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrowserHandle);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSetVRKeyboardVisibility other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowserHandle) {
        BrowserHandle = other.BrowserHandle;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrowserHandle = input.ReadUInt32();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRestartJSContext : pb::IMessage<CMsgRestartJSContext>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRestartJSContext> _parser = new pb::MessageParser<CMsgRestartJSContext>(() => new CMsgRestartJSContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRestartJSContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.HtmlmessagesReflection.Descriptor.MessageTypes[165]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRestartJSContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRestartJSContext(CMsgRestartJSContext other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRestartJSContext Clone() {
      return new CMsgRestartJSContext(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRestartJSContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRestartJSContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRestartJSContext other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
