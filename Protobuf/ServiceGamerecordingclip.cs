// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_gamerecordingclip.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_gamerecordingclip.proto</summary>
  public static partial class ServiceGamerecordingclipReflection {

    #region Descriptor
    /// <summary>File descriptor for service_gamerecordingclip.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceGamerecordingclipReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9zZXJ2aWNlX2dhbWVyZWNvcmRpbmdjbGlwLnByb3RvGiBnb29nbGUvcHJv",
            "dG9idWYvZGVzY3JpcHRvci5wcm90byJ6CiZDR2FtZVJlY29yZGluZ19DcmVh",
            "dGVTaGFyZUNsaXBfUmVxdWVzdBIhCgRjbGlwGAIgASgLMhMuQ0dhbWVSZWNv",
            "cmRpbmdDbGlwEi0KCXZpZGVvX2RlZhgDIAMoCzIaLkNNc2dWaWRlb0dhbWVS",
            "ZWNvcmRpbmdEZWYiTAonQ0dhbWVSZWNvcmRpbmdfQ3JlYXRlU2hhcmVDbGlw",
            "X1Jlc3BvbnNlEiEKBGNsaXAYASABKAsyEy5DR2FtZVJlY29yZGluZ0NsaXAi",
            "OgonQ0dhbWVSZWNvcmRpbmdfRGVsZXRlU2hhcmVkQ2xpcF9SZXF1ZXN0Eg8K",
            "B2NsaXBfaWQYAiABKAYiKgooQ0dhbWVSZWNvcmRpbmdfRGVsZXRlU2hhcmVk",
            "Q2xpcF9SZXNwb25zZSI9CipDR2FtZVJlY29yZGluZ19HZXRTaW5nbGVTaGFy",
            "ZWRDbGlwX1JlcXVlc3QSDwoHY2xpcF9pZBgCIAEoBiJQCitDR2FtZVJlY29y",
            "ZGluZ19HZXRTaW5nbGVTaGFyZWRDbGlwX1Jlc3BvbnNlEiEKBGNsaXAYASAB",
            "KAsyEy5DR2FtZVJlY29yZGluZ0NsaXAi2QEKEkNHYW1lUmVjb3JkaW5nQ2xp",
            "cBIPCgdjbGlwX2lkGAEgASgGEg4KBmdhbWVpZBgCIAEoBBIVCg1kYXRlX3Jl",
            "Y29yZGVkGAQgASgNEh0KFXRvdGFsX2ZpbGVfc2l6ZV9ieXRlcxgHIAEoBBIn",
            "Cgl2aWRlb19pZHMYCSADKAsyFC5DVmlkZW9NYW5hZ2VyQ2xpcElEEhUKDW93",
            "bmVyX3N0ZWFtaWQYCiABKAYSFwoPdXBsb2FkX2NvbXBsZXRlGAsgASgIEhMK",
            "C2R1cmF0aW9uX21zGAwgASgNIrQBCh9DTXNnVmlkZW9HYW1lUmVjb3JkaW5n",
            "Q29tcG9uZW50EhYKDmNvbXBvbmVudF9uYW1lGAEgASgJEhAKCGNvbnRlbnRz",
            "GAIgASgNEhQKDHNlZ21lbnRfc2l6ZRgDIAEoDRIRCglmaWxlX3R5cGUYBCAB",
            "KAkSPgoPcmVwcmVzZW50YXRpb25zGAUgAygLMiUuQ01zZ1ZpZGVvR2FtZVJl",
            "Y29yZGluZ1JlcHJlc2VudGF0aW9uIp8CChlDTXNnVmlkZW9HYW1lUmVjb3Jk",
            "aW5nRGVmEg8KB3N0ZWFtaWQYASABKAQSDgoGYXBwX2lkGAIgASgNEhQKDG51",
            "bV9zZWdtZW50cxgDIAEoDRIbChNsZW5ndGhfbWlsbGlzZWNvbmRzGAQgASgN",
            "EiIKGnNlZ21lbnRfZHVyYXRpb25fdGltZXNjYWxlGAUgASgNEhgKEHNlZ21l",
            "bnRfZHVyYXRpb24YBiABKA0SNAoKY29tcG9uZW50cxgHIAMoCzIgLkNNc2dW",
            "aWRlb0dhbWVSZWNvcmRpbmdDb21wb25lbnQSFQoNc3RhcnRfdGltZV9tcxgI",
            "IAEoDRIjChtzdGFydF9vZmZzZXRfaW5fdGltZWxpbmVfbXMYCSABKA0iiQIK",
            "JENNc2dWaWRlb0dhbWVSZWNvcmRpbmdSZXByZXNlbnRhdGlvbhIbChNyZXBy",
            "ZXNlbnRhdGlvbl9uYW1lGAIgASgJEh0KFWhvcml6b250YWxfcmVzb2x1dGlv",
            "bhgDIAEoDRIbChN2ZXJ0aWNhbF9yZXNvbHV0aW9uGAQgASgNEhIKCmZyYW1l",
            "X3JhdGUYBSABKAESEQoJYmFuZHdpZHRoGAYgASgNEhkKEWF1ZGlvX3NhbXBs",
            "ZV9yYXRlGAcgASgNEhkKEWZyYW1lX3JhdGVfc3RyaW5nGAggASgJEg0KBWNv",
            "ZGVjGAkgASgJEhwKFGF1ZGlvX2NoYW5uZWxfY29uZmlnGAogASgNIrQBChND",
            "VmlkZW9NYW5hZ2VyQ2xpcElEEh0KFXZpZGVvX21hbmFnZXJfY2xpcF9pZBgB",
            "IAEoBhIeChZ2aWRlb19tYW5hZ2VyX3ZpZGVvX2lkGAIgASgGEhoKEnNlcnZl",
            "cl90aW1lbGluZV9pZBgDIAEoBhIUCgxtYW5pZmVzdF91cmwYBCABKAkSEwoL",
            "ZHVyYXRpb25fbXMYBSABKA0SFwoPc3RhcnRfb2Zmc2V0X21zGAYgASgNMtQC",
            "ChFHYW1lUmVjb3JkaW5nQ2xpcBJkCg9DcmVhdGVTaGFyZUNsaXASJy5DR2Ft",
            "ZVJlY29yZGluZ19DcmVhdGVTaGFyZUNsaXBfUmVxdWVzdBooLkNHYW1lUmVj",
            "b3JkaW5nX0NyZWF0ZVNoYXJlQ2xpcF9SZXNwb25zZRJnChBEZWxldGVTaGFy",
            "ZWRDbGlwEiguQ0dhbWVSZWNvcmRpbmdfRGVsZXRlU2hhcmVkQ2xpcF9SZXF1",
            "ZXN0GikuQ0dhbWVSZWNvcmRpbmdfRGVsZXRlU2hhcmVkQ2xpcF9SZXNwb25z",
            "ZRJwChNHZXRTaW5nbGVTaGFyZWRDbGlwEisuQ0dhbWVSZWNvcmRpbmdfR2V0",
            "U2luZ2xlU2hhcmVkQ2xpcF9SZXF1ZXN0GiwuQ0dhbWVSZWNvcmRpbmdfR2V0",
            "U2luZ2xlU2hhcmVkQ2xpcF9SZXNwb25zZUIgqgIdT3BlblN0ZWFtd29ya3Mu",
            "UHJvdG9idWYuV2ViVUk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CreateShareClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CreateShareClip_Request.Parser, new[]{ "Clip", "VideoDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CreateShareClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_CreateShareClip_Response.Parser, new[]{ "Clip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteSharedClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteSharedClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteSharedClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_DeleteSharedClip_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetSingleSharedClip_Request), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetSingleSharedClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetSingleSharedClip_Response), global::OpenSteamworks.Protobuf.WebUI.CGameRecording_GetSingleSharedClip_Response.Parser, new[]{ "Clip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip), global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip.Parser, new[]{ "ClipId", "Gameid", "DateRecorded", "TotalFileSizeBytes", "VideoIds", "OwnerSteamid", "UploadComplete", "DurationMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent), global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent.Parser, new[]{ "ComponentName", "Contents", "SegmentSize", "FileType", "Representations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef), global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef.Parser, new[]{ "Steamid", "AppId", "NumSegments", "LengthMilliseconds", "SegmentDurationTimescale", "SegmentDuration", "Components", "StartTimeMs", "StartOffsetInTimelineMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation), global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation.Parser, new[]{ "RepresentationName", "HorizontalResolution", "VerticalResolution", "FrameRate", "Bandwidth", "AudioSampleRate", "FrameRateString", "Codec", "AudioChannelConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID), global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID.Parser, new[]{ "VideoManagerClipId", "VideoManagerVideoId", "ServerTimelineId", "ManifestUrl", "DurationMs", "StartOffsetMs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_CreateShareClip_Request : pb::IMessage<CGameRecording_CreateShareClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_CreateShareClip_Request> _parser = new pb::MessageParser<CGameRecording_CreateShareClip_Request>(() => new CGameRecording_CreateShareClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_CreateShareClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Request(CGameRecording_CreateShareClip_Request other) : this() {
      clip_ = other.clip_ != null ? other.clip_.Clone() : null;
      videoDef_ = other.videoDef_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Request Clone() {
      return new CGameRecording_CreateShareClip_Request(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip clip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip Clip {
      get { return clip_; }
      set {
        clip_ = value;
      }
    }

    /// <summary>Field number for the "video_def" field.</summary>
    public const int VideoDefFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef> _repeated_videoDef_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef> videoDef_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingDef> VideoDef {
      get { return videoDef_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_CreateShareClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_CreateShareClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clip, other.Clip)) return false;
      if(!videoDef_.Equals(other.videoDef_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (clip_ != null) hash ^= Clip.GetHashCode();
      hash ^= videoDef_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clip_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Clip);
      }
      videoDef_.WriteTo(output, _repeated_videoDef_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clip_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Clip);
      }
      videoDef_.WriteTo(ref output, _repeated_videoDef_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (clip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clip);
      }
      size += videoDef_.CalculateSize(_repeated_videoDef_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_CreateShareClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.clip_ != null) {
        if (clip_ == null) {
          Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
        }
        Clip.MergeFrom(other.Clip);
      }
      videoDef_.Add(other.videoDef_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
          case 26: {
            videoDef_.AddEntriesFrom(input, _repeated_videoDef_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
          case 26: {
            videoDef_.AddEntriesFrom(ref input, _repeated_videoDef_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_CreateShareClip_Response : pb::IMessage<CGameRecording_CreateShareClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_CreateShareClip_Response> _parser = new pb::MessageParser<CGameRecording_CreateShareClip_Response>(() => new CGameRecording_CreateShareClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_CreateShareClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Response(CGameRecording_CreateShareClip_Response other) : this() {
      clip_ = other.clip_ != null ? other.clip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Response Clone() {
      return new CGameRecording_CreateShareClip_Response(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip clip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip Clip {
      get { return clip_; }
      set {
        clip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_CreateShareClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_CreateShareClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clip, other.Clip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (clip_ != null) hash ^= Clip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (clip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_CreateShareClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.clip_ != null) {
        if (clip_ == null) {
          Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
        }
        Clip.MergeFrom(other.Clip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_DeleteSharedClip_Request : pb::IMessage<CGameRecording_DeleteSharedClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_DeleteSharedClip_Request> _parser = new pb::MessageParser<CGameRecording_DeleteSharedClip_Request>(() => new CGameRecording_DeleteSharedClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_DeleteSharedClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Request(CGameRecording_DeleteSharedClip_Request other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Request Clone() {
      return new CGameRecording_DeleteSharedClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 2;
    private readonly static ulong ClipIdDefaultValue = 0UL;

    private ulong clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClipId {
      get { if ((_hasBits0 & 1) != 0) { return clipId_; } else { return ClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipId_ = value;
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_DeleteSharedClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_DeleteSharedClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_DeleteSharedClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_DeleteSharedClip_Response : pb::IMessage<CGameRecording_DeleteSharedClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_DeleteSharedClip_Response> _parser = new pb::MessageParser<CGameRecording_DeleteSharedClip_Response>(() => new CGameRecording_DeleteSharedClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_DeleteSharedClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Response(CGameRecording_DeleteSharedClip_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Response Clone() {
      return new CGameRecording_DeleteSharedClip_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_DeleteSharedClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_DeleteSharedClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_DeleteSharedClip_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetSingleSharedClip_Request : pb::IMessage<CGameRecording_GetSingleSharedClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetSingleSharedClip_Request> _parser = new pb::MessageParser<CGameRecording_GetSingleSharedClip_Request>(() => new CGameRecording_GetSingleSharedClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetSingleSharedClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Request(CGameRecording_GetSingleSharedClip_Request other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Request Clone() {
      return new CGameRecording_GetSingleSharedClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 2;
    private readonly static ulong ClipIdDefaultValue = 0UL;

    private ulong clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClipId {
      get { if ((_hasBits0 & 1) != 0) { return clipId_; } else { return ClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipId_ = value;
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetSingleSharedClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetSingleSharedClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetSingleSharedClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetSingleSharedClip_Response : pb::IMessage<CGameRecording_GetSingleSharedClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetSingleSharedClip_Response> _parser = new pb::MessageParser<CGameRecording_GetSingleSharedClip_Response>(() => new CGameRecording_GetSingleSharedClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetSingleSharedClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Response(CGameRecording_GetSingleSharedClip_Response other) : this() {
      clip_ = other.clip_ != null ? other.clip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Response Clone() {
      return new CGameRecording_GetSingleSharedClip_Response(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip clip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip Clip {
      get { return clip_; }
      set {
        clip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetSingleSharedClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetSingleSharedClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clip, other.Clip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (clip_ != null) hash ^= Clip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (clip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetSingleSharedClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.clip_ != null) {
        if (clip_ == null) {
          Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
        }
        Clip.MergeFrom(other.Clip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.WebUI.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecordingClip : pb::IMessage<CGameRecordingClip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecordingClip> _parser = new pb::MessageParser<CGameRecordingClip>(() => new CGameRecordingClip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecordingClip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingClip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingClip(CGameRecordingClip other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      gameid_ = other.gameid_;
      dateRecorded_ = other.dateRecorded_;
      totalFileSizeBytes_ = other.totalFileSizeBytes_;
      videoIds_ = other.videoIds_.Clone();
      ownerSteamid_ = other.ownerSteamid_;
      uploadComplete_ = other.uploadComplete_;
      durationMs_ = other.durationMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingClip Clone() {
      return new CGameRecordingClip(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static ulong ClipIdDefaultValue = 0UL;

    private ulong clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClipId {
      get { if ((_hasBits0 & 1) != 0) { return clipId_; } else { return ClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipId_ = value;
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 2;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 2) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "date_recorded" field.</summary>
    public const int DateRecordedFieldNumber = 4;
    private readonly static uint DateRecordedDefaultValue = 0;

    private uint dateRecorded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DateRecorded {
      get { if ((_hasBits0 & 4) != 0) { return dateRecorded_; } else { return DateRecordedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dateRecorded_ = value;
      }
    }
    /// <summary>Gets whether the "date_recorded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDateRecorded {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "date_recorded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDateRecorded() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_file_size_bytes" field.</summary>
    public const int TotalFileSizeBytesFieldNumber = 7;
    private readonly static ulong TotalFileSizeBytesDefaultValue = 0UL;

    private ulong totalFileSizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalFileSizeBytes {
      get { if ((_hasBits0 & 8) != 0) { return totalFileSizeBytes_; } else { return TotalFileSizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalFileSizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "total_file_size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalFileSizeBytes {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_file_size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalFileSizeBytes() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "video_ids" field.</summary>
    public const int VideoIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID> _repeated_videoIds_codec
        = pb::FieldCodec.ForMessage(74, global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID> videoIds_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CVideoManagerClipID> VideoIds {
      get { return videoIds_; }
    }

    /// <summary>Field number for the "owner_steamid" field.</summary>
    public const int OwnerSteamidFieldNumber = 10;
    private readonly static ulong OwnerSteamidDefaultValue = 0UL;

    private ulong ownerSteamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OwnerSteamid {
      get { if ((_hasBits0 & 16) != 0) { return ownerSteamid_; } else { return OwnerSteamidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ownerSteamid_ = value;
      }
    }
    /// <summary>Gets whether the "owner_steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerSteamid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "owner_steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerSteamid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "upload_complete" field.</summary>
    public const int UploadCompleteFieldNumber = 11;
    private readonly static bool UploadCompleteDefaultValue = false;

    private bool uploadComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UploadComplete {
      get { if ((_hasBits0 & 32) != 0) { return uploadComplete_; } else { return UploadCompleteDefaultValue; } }
      set {
        _hasBits0 |= 32;
        uploadComplete_ = value;
      }
    }
    /// <summary>Gets whether the "upload_complete" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUploadComplete {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "upload_complete" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUploadComplete() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 12;
    private readonly static uint DurationMsDefaultValue = 0;

    private uint durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DurationMs {
      get { if ((_hasBits0 & 64) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecordingClip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecordingClip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      if (Gameid != other.Gameid) return false;
      if (DateRecorded != other.DateRecorded) return false;
      if (TotalFileSizeBytes != other.TotalFileSizeBytes) return false;
      if(!videoIds_.Equals(other.videoIds_)) return false;
      if (OwnerSteamid != other.OwnerSteamid) return false;
      if (UploadComplete != other.UploadComplete) return false;
      if (DurationMs != other.DurationMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (HasDateRecorded) hash ^= DateRecorded.GetHashCode();
      if (HasTotalFileSizeBytes) hash ^= TotalFileSizeBytes.GetHashCode();
      hash ^= videoIds_.GetHashCode();
      if (HasOwnerSteamid) hash ^= OwnerSteamid.GetHashCode();
      if (HasUploadComplete) hash ^= UploadComplete.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ClipId);
      }
      if (HasGameid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Gameid);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateRecorded);
      }
      if (HasTotalFileSizeBytes) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalFileSizeBytes);
      }
      videoIds_.WriteTo(output, _repeated_videoIds_codec);
      if (HasOwnerSteamid) {
        output.WriteRawTag(81);
        output.WriteFixed64(OwnerSteamid);
      }
      if (HasUploadComplete) {
        output.WriteRawTag(88);
        output.WriteBool(UploadComplete);
      }
      if (HasDurationMs) {
        output.WriteRawTag(96);
        output.WriteUInt32(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ClipId);
      }
      if (HasGameid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Gameid);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateRecorded);
      }
      if (HasTotalFileSizeBytes) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalFileSizeBytes);
      }
      videoIds_.WriteTo(ref output, _repeated_videoIds_codec);
      if (HasOwnerSteamid) {
        output.WriteRawTag(81);
        output.WriteFixed64(OwnerSteamid);
      }
      if (HasUploadComplete) {
        output.WriteRawTag(88);
        output.WriteBool(UploadComplete);
      }
      if (HasDurationMs) {
        output.WriteRawTag(96);
        output.WriteUInt32(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + 8;
      }
      if (HasGameid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gameid);
      }
      if (HasDateRecorded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateRecorded);
      }
      if (HasTotalFileSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalFileSizeBytes);
      }
      size += videoIds_.CalculateSize(_repeated_videoIds_codec);
      if (HasOwnerSteamid) {
        size += 1 + 8;
      }
      if (HasUploadComplete) {
        size += 1 + 1;
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DurationMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecordingClip other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      if (other.HasDateRecorded) {
        DateRecorded = other.DateRecorded;
      }
      if (other.HasTotalFileSizeBytes) {
        TotalFileSizeBytes = other.TotalFileSizeBytes;
      }
      videoIds_.Add(other.videoIds_);
      if (other.HasOwnerSteamid) {
        OwnerSteamid = other.OwnerSteamid;
      }
      if (other.HasUploadComplete) {
        UploadComplete = other.UploadComplete;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ClipId = input.ReadFixed64();
            break;
          }
          case 16: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 32: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 56: {
            TotalFileSizeBytes = input.ReadUInt64();
            break;
          }
          case 74: {
            videoIds_.AddEntriesFrom(input, _repeated_videoIds_codec);
            break;
          }
          case 81: {
            OwnerSteamid = input.ReadFixed64();
            break;
          }
          case 88: {
            UploadComplete = input.ReadBool();
            break;
          }
          case 96: {
            DurationMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            ClipId = input.ReadFixed64();
            break;
          }
          case 16: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 32: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 56: {
            TotalFileSizeBytes = input.ReadUInt64();
            break;
          }
          case 74: {
            videoIds_.AddEntriesFrom(ref input, _repeated_videoIds_codec);
            break;
          }
          case 81: {
            OwnerSteamid = input.ReadFixed64();
            break;
          }
          case 88: {
            UploadComplete = input.ReadBool();
            break;
          }
          case 96: {
            DurationMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVideoGameRecordingComponent : pb::IMessage<CMsgVideoGameRecordingComponent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVideoGameRecordingComponent> _parser = new pb::MessageParser<CMsgVideoGameRecordingComponent>(() => new CMsgVideoGameRecordingComponent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVideoGameRecordingComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingComponent(CMsgVideoGameRecordingComponent other) : this() {
      _hasBits0 = other._hasBits0;
      componentName_ = other.componentName_;
      contents_ = other.contents_;
      segmentSize_ = other.segmentSize_;
      fileType_ = other.fileType_;
      representations_ = other.representations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingComponent Clone() {
      return new CMsgVideoGameRecordingComponent(this);
    }

    /// <summary>Field number for the "component_name" field.</summary>
    public const int ComponentNameFieldNumber = 1;
    private readonly static string ComponentNameDefaultValue = "";

    private string componentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentName {
      get { return componentName_ ?? ComponentNameDefaultValue; }
      set {
        componentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "component_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComponentName {
      get { return componentName_ != null; }
    }
    /// <summary>Clears the value of the "component_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComponentName() {
      componentName_ = null;
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 2;
    private readonly static uint ContentsDefaultValue = 0;

    private uint contents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Contents {
      get { if ((_hasBits0 & 1) != 0) { return contents_; } else { return ContentsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        contents_ = value;
      }
    }
    /// <summary>Gets whether the "contents" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContents {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "contents" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContents() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "segment_size" field.</summary>
    public const int SegmentSizeFieldNumber = 3;
    private readonly static uint SegmentSizeDefaultValue = 0;

    private uint segmentSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentSize {
      get { if ((_hasBits0 & 2) != 0) { return segmentSize_; } else { return SegmentSizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        segmentSize_ = value;
      }
    }
    /// <summary>Gets whether the "segment_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "segment_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "file_type" field.</summary>
    public const int FileTypeFieldNumber = 4;
    private readonly static string FileTypeDefaultValue = "";

    private string fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileType {
      get { return fileType_ ?? FileTypeDefaultValue; }
      set {
        fileType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "file_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileType {
      get { return fileType_ != null; }
    }
    /// <summary>Clears the value of the "file_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileType() {
      fileType_ = null;
    }

    /// <summary>Field number for the "representations" field.</summary>
    public const int RepresentationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation> _repeated_representations_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation> representations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingRepresentation> Representations {
      get { return representations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVideoGameRecordingComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVideoGameRecordingComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ComponentName != other.ComponentName) return false;
      if (Contents != other.Contents) return false;
      if (SegmentSize != other.SegmentSize) return false;
      if (FileType != other.FileType) return false;
      if(!representations_.Equals(other.representations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasComponentName) hash ^= ComponentName.GetHashCode();
      if (HasContents) hash ^= Contents.GetHashCode();
      if (HasSegmentSize) hash ^= SegmentSize.GetHashCode();
      if (HasFileType) hash ^= FileType.GetHashCode();
      hash ^= representations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasComponentName) {
        output.WriteRawTag(10);
        output.WriteString(ComponentName);
      }
      if (HasContents) {
        output.WriteRawTag(16);
        output.WriteUInt32(Contents);
      }
      if (HasSegmentSize) {
        output.WriteRawTag(24);
        output.WriteUInt32(SegmentSize);
      }
      if (HasFileType) {
        output.WriteRawTag(34);
        output.WriteString(FileType);
      }
      representations_.WriteTo(output, _repeated_representations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasComponentName) {
        output.WriteRawTag(10);
        output.WriteString(ComponentName);
      }
      if (HasContents) {
        output.WriteRawTag(16);
        output.WriteUInt32(Contents);
      }
      if (HasSegmentSize) {
        output.WriteRawTag(24);
        output.WriteUInt32(SegmentSize);
      }
      if (HasFileType) {
        output.WriteRawTag(34);
        output.WriteString(FileType);
      }
      representations_.WriteTo(ref output, _repeated_representations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasComponentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentName);
      }
      if (HasContents) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Contents);
      }
      if (HasSegmentSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentSize);
      }
      if (HasFileType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileType);
      }
      size += representations_.CalculateSize(_repeated_representations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVideoGameRecordingComponent other) {
      if (other == null) {
        return;
      }
      if (other.HasComponentName) {
        ComponentName = other.ComponentName;
      }
      if (other.HasContents) {
        Contents = other.Contents;
      }
      if (other.HasSegmentSize) {
        SegmentSize = other.SegmentSize;
      }
      if (other.HasFileType) {
        FileType = other.FileType;
      }
      representations_.Add(other.representations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ComponentName = input.ReadString();
            break;
          }
          case 16: {
            Contents = input.ReadUInt32();
            break;
          }
          case 24: {
            SegmentSize = input.ReadUInt32();
            break;
          }
          case 34: {
            FileType = input.ReadString();
            break;
          }
          case 42: {
            representations_.AddEntriesFrom(input, _repeated_representations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ComponentName = input.ReadString();
            break;
          }
          case 16: {
            Contents = input.ReadUInt32();
            break;
          }
          case 24: {
            SegmentSize = input.ReadUInt32();
            break;
          }
          case 34: {
            FileType = input.ReadString();
            break;
          }
          case 42: {
            representations_.AddEntriesFrom(ref input, _repeated_representations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVideoGameRecordingDef : pb::IMessage<CMsgVideoGameRecordingDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVideoGameRecordingDef> _parser = new pb::MessageParser<CMsgVideoGameRecordingDef>(() => new CMsgVideoGameRecordingDef());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVideoGameRecordingDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingDef(CMsgVideoGameRecordingDef other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      appId_ = other.appId_;
      numSegments_ = other.numSegments_;
      lengthMilliseconds_ = other.lengthMilliseconds_;
      segmentDurationTimescale_ = other.segmentDurationTimescale_;
      segmentDuration_ = other.segmentDuration_;
      components_ = other.components_.Clone();
      startTimeMs_ = other.startTimeMs_;
      startOffsetInTimelineMs_ = other.startOffsetInTimelineMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingDef Clone() {
      return new CMsgVideoGameRecordingDef(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private readonly static uint AppIdDefaultValue = 0;

    private uint appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AppId {
      get { if ((_hasBits0 & 2) != 0) { return appId_; } else { return AppIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appId_ = value;
      }
    }
    /// <summary>Gets whether the "app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "num_segments" field.</summary>
    public const int NumSegmentsFieldNumber = 3;
    private readonly static uint NumSegmentsDefaultValue = 0;

    private uint numSegments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumSegments {
      get { if ((_hasBits0 & 4) != 0) { return numSegments_; } else { return NumSegmentsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        numSegments_ = value;
      }
    }
    /// <summary>Gets whether the "num_segments" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumSegments {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "num_segments" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumSegments() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "length_milliseconds" field.</summary>
    public const int LengthMillisecondsFieldNumber = 4;
    private readonly static uint LengthMillisecondsDefaultValue = 0;

    private uint lengthMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LengthMilliseconds {
      get { if ((_hasBits0 & 8) != 0) { return lengthMilliseconds_; } else { return LengthMillisecondsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lengthMilliseconds_ = value;
      }
    }
    /// <summary>Gets whether the "length_milliseconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLengthMilliseconds {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "length_milliseconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLengthMilliseconds() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "segment_duration_timescale" field.</summary>
    public const int SegmentDurationTimescaleFieldNumber = 5;
    private readonly static uint SegmentDurationTimescaleDefaultValue = 0;

    private uint segmentDurationTimescale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentDurationTimescale {
      get { if ((_hasBits0 & 16) != 0) { return segmentDurationTimescale_; } else { return SegmentDurationTimescaleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        segmentDurationTimescale_ = value;
      }
    }
    /// <summary>Gets whether the "segment_duration_timescale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentDurationTimescale {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "segment_duration_timescale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentDurationTimescale() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "segment_duration" field.</summary>
    public const int SegmentDurationFieldNumber = 6;
    private readonly static uint SegmentDurationDefaultValue = 0;

    private uint segmentDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentDuration {
      get { if ((_hasBits0 & 32) != 0) { return segmentDuration_; } else { return SegmentDurationDefaultValue; } }
      set {
        _hasBits0 |= 32;
        segmentDuration_ = value;
      }
    }
    /// <summary>Gets whether the "segment_duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentDuration {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "segment_duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentDuration() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent> _repeated_components_codec
        = pb::FieldCodec.ForMessage(58, global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent> components_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMsgVideoGameRecordingComponent> Components {
      get { return components_; }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 8;
    private readonly static uint StartTimeMsDefaultValue = 0;

    private uint startTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartTimeMs {
      get { if ((_hasBits0 & 64) != 0) { return startTimeMs_; } else { return StartTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        startTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTimeMs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "start_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTimeMs() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "start_offset_in_timeline_ms" field.</summary>
    public const int StartOffsetInTimelineMsFieldNumber = 9;
    private readonly static uint StartOffsetInTimelineMsDefaultValue = 0;

    private uint startOffsetInTimelineMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartOffsetInTimelineMs {
      get { if ((_hasBits0 & 128) != 0) { return startOffsetInTimelineMs_; } else { return StartOffsetInTimelineMsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        startOffsetInTimelineMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset_in_timeline_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffsetInTimelineMs {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "start_offset_in_timeline_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffsetInTimelineMs() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVideoGameRecordingDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVideoGameRecordingDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (AppId != other.AppId) return false;
      if (NumSegments != other.NumSegments) return false;
      if (LengthMilliseconds != other.LengthMilliseconds) return false;
      if (SegmentDurationTimescale != other.SegmentDurationTimescale) return false;
      if (SegmentDuration != other.SegmentDuration) return false;
      if(!components_.Equals(other.components_)) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (StartOffsetInTimelineMs != other.StartOffsetInTimelineMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasAppId) hash ^= AppId.GetHashCode();
      if (HasNumSegments) hash ^= NumSegments.GetHashCode();
      if (HasLengthMilliseconds) hash ^= LengthMilliseconds.GetHashCode();
      if (HasSegmentDurationTimescale) hash ^= SegmentDurationTimescale.GetHashCode();
      if (HasSegmentDuration) hash ^= SegmentDuration.GetHashCode();
      hash ^= components_.GetHashCode();
      if (HasStartTimeMs) hash ^= StartTimeMs.GetHashCode();
      if (HasStartOffsetInTimelineMs) hash ^= StartOffsetInTimelineMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasAppId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AppId);
      }
      if (HasNumSegments) {
        output.WriteRawTag(24);
        output.WriteUInt32(NumSegments);
      }
      if (HasLengthMilliseconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(LengthMilliseconds);
      }
      if (HasSegmentDurationTimescale) {
        output.WriteRawTag(40);
        output.WriteUInt32(SegmentDurationTimescale);
      }
      if (HasSegmentDuration) {
        output.WriteRawTag(48);
        output.WriteUInt32(SegmentDuration);
      }
      components_.WriteTo(output, _repeated_components_codec);
      if (HasStartTimeMs) {
        output.WriteRawTag(64);
        output.WriteUInt32(StartTimeMs);
      }
      if (HasStartOffsetInTimelineMs) {
        output.WriteRawTag(72);
        output.WriteUInt32(StartOffsetInTimelineMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasAppId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AppId);
      }
      if (HasNumSegments) {
        output.WriteRawTag(24);
        output.WriteUInt32(NumSegments);
      }
      if (HasLengthMilliseconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(LengthMilliseconds);
      }
      if (HasSegmentDurationTimescale) {
        output.WriteRawTag(40);
        output.WriteUInt32(SegmentDurationTimescale);
      }
      if (HasSegmentDuration) {
        output.WriteRawTag(48);
        output.WriteUInt32(SegmentDuration);
      }
      components_.WriteTo(ref output, _repeated_components_codec);
      if (HasStartTimeMs) {
        output.WriteRawTag(64);
        output.WriteUInt32(StartTimeMs);
      }
      if (HasStartOffsetInTimelineMs) {
        output.WriteRawTag(72);
        output.WriteUInt32(StartOffsetInTimelineMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasAppId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
      }
      if (HasNumSegments) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumSegments);
      }
      if (HasLengthMilliseconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LengthMilliseconds);
      }
      if (HasSegmentDurationTimescale) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentDurationTimescale);
      }
      if (HasSegmentDuration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentDuration);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      if (HasStartTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartTimeMs);
      }
      if (HasStartOffsetInTimelineMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartOffsetInTimelineMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVideoGameRecordingDef other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasNumSegments) {
        NumSegments = other.NumSegments;
      }
      if (other.HasLengthMilliseconds) {
        LengthMilliseconds = other.LengthMilliseconds;
      }
      if (other.HasSegmentDurationTimescale) {
        SegmentDurationTimescale = other.SegmentDurationTimescale;
      }
      if (other.HasSegmentDuration) {
        SegmentDuration = other.SegmentDuration;
      }
      components_.Add(other.components_);
      if (other.HasStartTimeMs) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.HasStartOffsetInTimelineMs) {
        StartOffsetInTimelineMs = other.StartOffsetInTimelineMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            AppId = input.ReadUInt32();
            break;
          }
          case 24: {
            NumSegments = input.ReadUInt32();
            break;
          }
          case 32: {
            LengthMilliseconds = input.ReadUInt32();
            break;
          }
          case 40: {
            SegmentDurationTimescale = input.ReadUInt32();
            break;
          }
          case 48: {
            SegmentDuration = input.ReadUInt32();
            break;
          }
          case 58: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
          case 64: {
            StartTimeMs = input.ReadUInt32();
            break;
          }
          case 72: {
            StartOffsetInTimelineMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            AppId = input.ReadUInt32();
            break;
          }
          case 24: {
            NumSegments = input.ReadUInt32();
            break;
          }
          case 32: {
            LengthMilliseconds = input.ReadUInt32();
            break;
          }
          case 40: {
            SegmentDurationTimescale = input.ReadUInt32();
            break;
          }
          case 48: {
            SegmentDuration = input.ReadUInt32();
            break;
          }
          case 58: {
            components_.AddEntriesFrom(ref input, _repeated_components_codec);
            break;
          }
          case 64: {
            StartTimeMs = input.ReadUInt32();
            break;
          }
          case 72: {
            StartOffsetInTimelineMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVideoGameRecordingRepresentation : pb::IMessage<CMsgVideoGameRecordingRepresentation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVideoGameRecordingRepresentation> _parser = new pb::MessageParser<CMsgVideoGameRecordingRepresentation>(() => new CMsgVideoGameRecordingRepresentation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVideoGameRecordingRepresentation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingRepresentation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingRepresentation(CMsgVideoGameRecordingRepresentation other) : this() {
      _hasBits0 = other._hasBits0;
      representationName_ = other.representationName_;
      horizontalResolution_ = other.horizontalResolution_;
      verticalResolution_ = other.verticalResolution_;
      frameRate_ = other.frameRate_;
      bandwidth_ = other.bandwidth_;
      audioSampleRate_ = other.audioSampleRate_;
      frameRateString_ = other.frameRateString_;
      codec_ = other.codec_;
      audioChannelConfig_ = other.audioChannelConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingRepresentation Clone() {
      return new CMsgVideoGameRecordingRepresentation(this);
    }

    /// <summary>Field number for the "representation_name" field.</summary>
    public const int RepresentationNameFieldNumber = 2;
    private readonly static string RepresentationNameDefaultValue = "";

    private string representationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RepresentationName {
      get { return representationName_ ?? RepresentationNameDefaultValue; }
      set {
        representationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "representation_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRepresentationName {
      get { return representationName_ != null; }
    }
    /// <summary>Clears the value of the "representation_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRepresentationName() {
      representationName_ = null;
    }

    /// <summary>Field number for the "horizontal_resolution" field.</summary>
    public const int HorizontalResolutionFieldNumber = 3;
    private readonly static uint HorizontalResolutionDefaultValue = 0;

    private uint horizontalResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HorizontalResolution {
      get { if ((_hasBits0 & 1) != 0) { return horizontalResolution_; } else { return HorizontalResolutionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        horizontalResolution_ = value;
      }
    }
    /// <summary>Gets whether the "horizontal_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHorizontalResolution {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "horizontal_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHorizontalResolution() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "vertical_resolution" field.</summary>
    public const int VerticalResolutionFieldNumber = 4;
    private readonly static uint VerticalResolutionDefaultValue = 0;

    private uint verticalResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VerticalResolution {
      get { if ((_hasBits0 & 2) != 0) { return verticalResolution_; } else { return VerticalResolutionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        verticalResolution_ = value;
      }
    }
    /// <summary>Gets whether the "vertical_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerticalResolution {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "vertical_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerticalResolution() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "frame_rate" field.</summary>
    public const int FrameRateFieldNumber = 5;
    private readonly static double FrameRateDefaultValue = 0D;

    private double frameRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FrameRate {
      get { if ((_hasBits0 & 4) != 0) { return frameRate_; } else { return FrameRateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        frameRate_ = value;
      }
    }
    /// <summary>Gets whether the "frame_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameRate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "frame_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameRate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bandwidth" field.</summary>
    public const int BandwidthFieldNumber = 6;
    private readonly static uint BandwidthDefaultValue = 0;

    private uint bandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bandwidth {
      get { if ((_hasBits0 & 8) != 0) { return bandwidth_; } else { return BandwidthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBandwidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBandwidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "audio_sample_rate" field.</summary>
    public const int AudioSampleRateFieldNumber = 7;
    private readonly static uint AudioSampleRateDefaultValue = 0;

    private uint audioSampleRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AudioSampleRate {
      get { if ((_hasBits0 & 16) != 0) { return audioSampleRate_; } else { return AudioSampleRateDefaultValue; } }
      set {
        _hasBits0 |= 16;
        audioSampleRate_ = value;
      }
    }
    /// <summary>Gets whether the "audio_sample_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioSampleRate {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "audio_sample_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioSampleRate() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "frame_rate_string" field.</summary>
    public const int FrameRateStringFieldNumber = 8;
    private readonly static string FrameRateStringDefaultValue = "";

    private string frameRateString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameRateString {
      get { return frameRateString_ ?? FrameRateStringDefaultValue; }
      set {
        frameRateString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_rate_string" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameRateString {
      get { return frameRateString_ != null; }
    }
    /// <summary>Clears the value of the "frame_rate_string" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameRateString() {
      frameRateString_ = null;
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 9;
    private readonly static string CodecDefaultValue = "";

    private string codec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Codec {
      get { return codec_ ?? CodecDefaultValue; }
      set {
        codec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodec {
      get { return codec_ != null; }
    }
    /// <summary>Clears the value of the "codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodec() {
      codec_ = null;
    }

    /// <summary>Field number for the "audio_channel_config" field.</summary>
    public const int AudioChannelConfigFieldNumber = 10;
    private readonly static uint AudioChannelConfigDefaultValue = 0;

    private uint audioChannelConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AudioChannelConfig {
      get { if ((_hasBits0 & 32) != 0) { return audioChannelConfig_; } else { return AudioChannelConfigDefaultValue; } }
      set {
        _hasBits0 |= 32;
        audioChannelConfig_ = value;
      }
    }
    /// <summary>Gets whether the "audio_channel_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioChannelConfig {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "audio_channel_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioChannelConfig() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVideoGameRecordingRepresentation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVideoGameRecordingRepresentation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RepresentationName != other.RepresentationName) return false;
      if (HorizontalResolution != other.HorizontalResolution) return false;
      if (VerticalResolution != other.VerticalResolution) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FrameRate, other.FrameRate)) return false;
      if (Bandwidth != other.Bandwidth) return false;
      if (AudioSampleRate != other.AudioSampleRate) return false;
      if (FrameRateString != other.FrameRateString) return false;
      if (Codec != other.Codec) return false;
      if (AudioChannelConfig != other.AudioChannelConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRepresentationName) hash ^= RepresentationName.GetHashCode();
      if (HasHorizontalResolution) hash ^= HorizontalResolution.GetHashCode();
      if (HasVerticalResolution) hash ^= VerticalResolution.GetHashCode();
      if (HasFrameRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FrameRate);
      if (HasBandwidth) hash ^= Bandwidth.GetHashCode();
      if (HasAudioSampleRate) hash ^= AudioSampleRate.GetHashCode();
      if (HasFrameRateString) hash ^= FrameRateString.GetHashCode();
      if (HasCodec) hash ^= Codec.GetHashCode();
      if (HasAudioChannelConfig) hash ^= AudioChannelConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRepresentationName) {
        output.WriteRawTag(18);
        output.WriteString(RepresentationName);
      }
      if (HasHorizontalResolution) {
        output.WriteRawTag(24);
        output.WriteUInt32(HorizontalResolution);
      }
      if (HasVerticalResolution) {
        output.WriteRawTag(32);
        output.WriteUInt32(VerticalResolution);
      }
      if (HasFrameRate) {
        output.WriteRawTag(41);
        output.WriteDouble(FrameRate);
      }
      if (HasBandwidth) {
        output.WriteRawTag(48);
        output.WriteUInt32(Bandwidth);
      }
      if (HasAudioSampleRate) {
        output.WriteRawTag(56);
        output.WriteUInt32(AudioSampleRate);
      }
      if (HasFrameRateString) {
        output.WriteRawTag(66);
        output.WriteString(FrameRateString);
      }
      if (HasCodec) {
        output.WriteRawTag(74);
        output.WriteString(Codec);
      }
      if (HasAudioChannelConfig) {
        output.WriteRawTag(80);
        output.WriteUInt32(AudioChannelConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRepresentationName) {
        output.WriteRawTag(18);
        output.WriteString(RepresentationName);
      }
      if (HasHorizontalResolution) {
        output.WriteRawTag(24);
        output.WriteUInt32(HorizontalResolution);
      }
      if (HasVerticalResolution) {
        output.WriteRawTag(32);
        output.WriteUInt32(VerticalResolution);
      }
      if (HasFrameRate) {
        output.WriteRawTag(41);
        output.WriteDouble(FrameRate);
      }
      if (HasBandwidth) {
        output.WriteRawTag(48);
        output.WriteUInt32(Bandwidth);
      }
      if (HasAudioSampleRate) {
        output.WriteRawTag(56);
        output.WriteUInt32(AudioSampleRate);
      }
      if (HasFrameRateString) {
        output.WriteRawTag(66);
        output.WriteString(FrameRateString);
      }
      if (HasCodec) {
        output.WriteRawTag(74);
        output.WriteString(Codec);
      }
      if (HasAudioChannelConfig) {
        output.WriteRawTag(80);
        output.WriteUInt32(AudioChannelConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRepresentationName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepresentationName);
      }
      if (HasHorizontalResolution) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HorizontalResolution);
      }
      if (HasVerticalResolution) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VerticalResolution);
      }
      if (HasFrameRate) {
        size += 1 + 8;
      }
      if (HasBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bandwidth);
      }
      if (HasAudioSampleRate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AudioSampleRate);
      }
      if (HasFrameRateString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameRateString);
      }
      if (HasCodec) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codec);
      }
      if (HasAudioChannelConfig) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AudioChannelConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVideoGameRecordingRepresentation other) {
      if (other == null) {
        return;
      }
      if (other.HasRepresentationName) {
        RepresentationName = other.RepresentationName;
      }
      if (other.HasHorizontalResolution) {
        HorizontalResolution = other.HorizontalResolution;
      }
      if (other.HasVerticalResolution) {
        VerticalResolution = other.VerticalResolution;
      }
      if (other.HasFrameRate) {
        FrameRate = other.FrameRate;
      }
      if (other.HasBandwidth) {
        Bandwidth = other.Bandwidth;
      }
      if (other.HasAudioSampleRate) {
        AudioSampleRate = other.AudioSampleRate;
      }
      if (other.HasFrameRateString) {
        FrameRateString = other.FrameRateString;
      }
      if (other.HasCodec) {
        Codec = other.Codec;
      }
      if (other.HasAudioChannelConfig) {
        AudioChannelConfig = other.AudioChannelConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            RepresentationName = input.ReadString();
            break;
          }
          case 24: {
            HorizontalResolution = input.ReadUInt32();
            break;
          }
          case 32: {
            VerticalResolution = input.ReadUInt32();
            break;
          }
          case 41: {
            FrameRate = input.ReadDouble();
            break;
          }
          case 48: {
            Bandwidth = input.ReadUInt32();
            break;
          }
          case 56: {
            AudioSampleRate = input.ReadUInt32();
            break;
          }
          case 66: {
            FrameRateString = input.ReadString();
            break;
          }
          case 74: {
            Codec = input.ReadString();
            break;
          }
          case 80: {
            AudioChannelConfig = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            RepresentationName = input.ReadString();
            break;
          }
          case 24: {
            HorizontalResolution = input.ReadUInt32();
            break;
          }
          case 32: {
            VerticalResolution = input.ReadUInt32();
            break;
          }
          case 41: {
            FrameRate = input.ReadDouble();
            break;
          }
          case 48: {
            Bandwidth = input.ReadUInt32();
            break;
          }
          case 56: {
            AudioSampleRate = input.ReadUInt32();
            break;
          }
          case 66: {
            FrameRateString = input.ReadString();
            break;
          }
          case 74: {
            Codec = input.ReadString();
            break;
          }
          case 80: {
            AudioChannelConfig = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideoManagerClipID : pb::IMessage<CVideoManagerClipID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideoManagerClipID> _parser = new pb::MessageParser<CVideoManagerClipID>(() => new CVideoManagerClipID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideoManagerClipID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceGamerecordingclipReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoManagerClipID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoManagerClipID(CVideoManagerClipID other) : this() {
      _hasBits0 = other._hasBits0;
      videoManagerClipId_ = other.videoManagerClipId_;
      videoManagerVideoId_ = other.videoManagerVideoId_;
      serverTimelineId_ = other.serverTimelineId_;
      manifestUrl_ = other.manifestUrl_;
      durationMs_ = other.durationMs_;
      startOffsetMs_ = other.startOffsetMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoManagerClipID Clone() {
      return new CVideoManagerClipID(this);
    }

    /// <summary>Field number for the "video_manager_clip_id" field.</summary>
    public const int VideoManagerClipIdFieldNumber = 1;
    private readonly static ulong VideoManagerClipIdDefaultValue = 0UL;

    private ulong videoManagerClipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VideoManagerClipId {
      get { if ((_hasBits0 & 1) != 0) { return videoManagerClipId_; } else { return VideoManagerClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        videoManagerClipId_ = value;
      }
    }
    /// <summary>Gets whether the "video_manager_clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoManagerClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "video_manager_clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoManagerClipId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "video_manager_video_id" field.</summary>
    public const int VideoManagerVideoIdFieldNumber = 2;
    private readonly static ulong VideoManagerVideoIdDefaultValue = 0UL;

    private ulong videoManagerVideoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VideoManagerVideoId {
      get { if ((_hasBits0 & 2) != 0) { return videoManagerVideoId_; } else { return VideoManagerVideoIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        videoManagerVideoId_ = value;
      }
    }
    /// <summary>Gets whether the "video_manager_video_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoManagerVideoId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "video_manager_video_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoManagerVideoId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "server_timeline_id" field.</summary>
    public const int ServerTimelineIdFieldNumber = 3;
    private readonly static ulong ServerTimelineIdDefaultValue = 0UL;

    private ulong serverTimelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ServerTimelineId {
      get { if ((_hasBits0 & 4) != 0) { return serverTimelineId_; } else { return ServerTimelineIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        serverTimelineId_ = value;
      }
    }
    /// <summary>Gets whether the "server_timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerTimelineId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "server_timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerTimelineId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "manifest_url" field.</summary>
    public const int ManifestUrlFieldNumber = 4;
    private readonly static string ManifestUrlDefaultValue = "";

    private string manifestUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ManifestUrl {
      get { return manifestUrl_ ?? ManifestUrlDefaultValue; }
      set {
        manifestUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "manifest_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasManifestUrl {
      get { return manifestUrl_ != null; }
    }
    /// <summary>Clears the value of the "manifest_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearManifestUrl() {
      manifestUrl_ = null;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 5;
    private readonly static uint DurationMsDefaultValue = 0;

    private uint durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DurationMs {
      get { if ((_hasBits0 & 8) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "start_offset_ms" field.</summary>
    public const int StartOffsetMsFieldNumber = 6;
    private readonly static uint StartOffsetMsDefaultValue = 0;

    private uint startOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartOffsetMs {
      get { if ((_hasBits0 & 16) != 0) { return startOffsetMs_; } else { return StartOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        startOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffsetMs {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "start_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffsetMs() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideoManagerClipID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideoManagerClipID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VideoManagerClipId != other.VideoManagerClipId) return false;
      if (VideoManagerVideoId != other.VideoManagerVideoId) return false;
      if (ServerTimelineId != other.ServerTimelineId) return false;
      if (ManifestUrl != other.ManifestUrl) return false;
      if (DurationMs != other.DurationMs) return false;
      if (StartOffsetMs != other.StartOffsetMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVideoManagerClipId) hash ^= VideoManagerClipId.GetHashCode();
      if (HasVideoManagerVideoId) hash ^= VideoManagerVideoId.GetHashCode();
      if (HasServerTimelineId) hash ^= ServerTimelineId.GetHashCode();
      if (HasManifestUrl) hash ^= ManifestUrl.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasStartOffsetMs) hash ^= StartOffsetMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVideoManagerClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        output.WriteRawTag(17);
        output.WriteFixed64(VideoManagerVideoId);
      }
      if (HasServerTimelineId) {
        output.WriteRawTag(25);
        output.WriteFixed64(ServerTimelineId);
      }
      if (HasManifestUrl) {
        output.WriteRawTag(34);
        output.WriteString(ManifestUrl);
      }
      if (HasDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt32(DurationMs);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt32(StartOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVideoManagerClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        output.WriteRawTag(17);
        output.WriteFixed64(VideoManagerVideoId);
      }
      if (HasServerTimelineId) {
        output.WriteRawTag(25);
        output.WriteFixed64(ServerTimelineId);
      }
      if (HasManifestUrl) {
        output.WriteRawTag(34);
        output.WriteString(ManifestUrl);
      }
      if (HasDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt32(DurationMs);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt32(StartOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVideoManagerClipId) {
        size += 1 + 8;
      }
      if (HasVideoManagerVideoId) {
        size += 1 + 8;
      }
      if (HasServerTimelineId) {
        size += 1 + 8;
      }
      if (HasManifestUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ManifestUrl);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DurationMs);
      }
      if (HasStartOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartOffsetMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideoManagerClipID other) {
      if (other == null) {
        return;
      }
      if (other.HasVideoManagerClipId) {
        VideoManagerClipId = other.VideoManagerClipId;
      }
      if (other.HasVideoManagerVideoId) {
        VideoManagerVideoId = other.VideoManagerVideoId;
      }
      if (other.HasServerTimelineId) {
        ServerTimelineId = other.ServerTimelineId;
      }
      if (other.HasManifestUrl) {
        ManifestUrl = other.ManifestUrl;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasStartOffsetMs) {
        StartOffsetMs = other.StartOffsetMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            VideoManagerClipId = input.ReadFixed64();
            break;
          }
          case 17: {
            VideoManagerVideoId = input.ReadFixed64();
            break;
          }
          case 25: {
            ServerTimelineId = input.ReadFixed64();
            break;
          }
          case 34: {
            ManifestUrl = input.ReadString();
            break;
          }
          case 40: {
            DurationMs = input.ReadUInt32();
            break;
          }
          case 48: {
            StartOffsetMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            VideoManagerClipId = input.ReadFixed64();
            break;
          }
          case 17: {
            VideoManagerVideoId = input.ReadFixed64();
            break;
          }
          case 25: {
            ServerTimelineId = input.ReadFixed64();
            break;
          }
          case 34: {
            ManifestUrl = input.ReadString();
            break;
          }
          case 40: {
            DurationMs = input.ReadUInt32();
            break;
          }
          case 48: {
            StartOffsetMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
