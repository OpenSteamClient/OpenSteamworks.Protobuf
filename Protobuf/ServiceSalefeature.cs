// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_salefeature.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_salefeature.proto</summary>
  public static partial class ServiceSalefeatureReflection {

    #region Descriptor
    /// <summary>File descriptor for service_salefeature.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceSalefeatureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlzZXJ2aWNlX3NhbGVmZWF0dXJlLnByb3RvGiBnb29nbGUvcHJvdG9idWYv",
            "ZGVzY3JpcHRvci5wcm90bxoRY29tbW9uX2Jhc2UucHJvdG8icQoTQ0FjaGll",
            "dmVtZW50RGV0YWlscxIOCgZzdGF0aWQYASABKA0SDwoHZmllbGRpZBgCIAEo",
            "DRIhChlhY2hpZXZlbWVudF9uYW1lX2ludGVybmFsGAMgASgJEhYKDnJ0aW1l",
            "X3VubG9ja2VkGAQgASgNImcKF0NGcmllbmRTaGFyZWRZZWFySW5WaWV3Eg8K",
            "B3N0ZWFtaWQYASABKAYSHwoNcHJpdmFjeV9zdGF0ZRgDIAEoBUIIgrUYBGVu",
            "dW0SGgoScnRfcHJpdmFjeV91cGRhdGVkGAQgASgNIpcBChFDR2FtZUFjaGll",
            "dmVtZW50cxINCgVhcHBpZBgBIAEoDRIqCgxhY2hpZXZlbWVudHMYAiADKAsy",
            "FC5DQWNoaWV2ZW1lbnREZXRhaWxzEiYKHmFsbF90aW1lX3VubG9ja2VkX2Fj",
            "aGlldmVtZW50cxgDIAEoDRIfChd1bmxvY2tlZF9tb3JlX2luX2Z1dHVyZRgE",
            "IAEoCCLhAQoSQ0dhbWVQbGF5dGltZVN0YXRzEg0KBWFwcGlkGAEgASgNEh4K",
            "BXN0YXRzGAIgASgLMg8uQ1BsYXl0aW1lU3RhdHMSKQoPcGxheXRpbWVfc3Ry",
            "ZWFrGAMgASgLMhAuQ1BsYXl0aW1lU3RyZWFrEicKDnBsYXl0aW1lX3Jhbmtz",
            "GAQgASgLMg8uQ1BsYXl0aW1lUmFua3MSGgoScnRpbWVfZmlyc3RfcGxheWVk",
            "GAUgASgNEiwKE3JlbGF0aXZlX2dhbWVfc3RhdHMYBiABKAsyDy5DUGxheXRp",
            "bWVTdGF0cyIoCglDR2FtZVJhbmsSDQoFYXBwaWQYASABKA0SDAoEcmFuaxgC",
            "IAEoDSK2AgoNQ0dhbWVSYW5raW5ncxIqCg9vdmVyYWxsX3JhbmtpbmcYASAB",
            "KAsyES5DUmFua2luZ0NhdGVnb3J5EiUKCnZyX3JhbmtpbmcYAiABKAsyES5D",
            "UmFua2luZ0NhdGVnb3J5EiUKCmRlY3JhbmtpbmcYAyABKAsyES5DUmFua2lu",
            "Z0NhdGVnb3J5Ei0KEmNvbnRyb2xsZXJfcmFua2luZxgEIAEoCzIRLkNSYW5r",
            "aW5nQ2F0ZWdvcnkSKAoNbGludXhfcmFua2luZxgFIAEoCzIRLkNSYW5raW5n",
            "Q2F0ZWdvcnkSJgoLbWFjX3JhbmtpbmcYBiABKAsyES5DUmFua2luZ0NhdGVn",
            "b3J5EioKD3dpbmRvd3NfcmFua2luZxgHIAEoCzIRLkNSYW5raW5nQ2F0ZWdv",
            "cnki/QIKDENHYW1lU3VtbWFyeRINCgVhcHBpZBgBIAEoDRIVCg1uZXdfdGhp",
            "c195ZWFyGAIgASgIEiMKG3J0aW1lX2ZpcnN0X3BsYXllZF9saWZldGltZRgD",
            "IAEoDRIMCgRkZW1vGAQgASgIEhAKCHBsYXl0ZXN0GAUgASgIEiIKGnBsYXll",
            "ZF9kdXJpbmdfZWFybHlfYWNjZXNzGAYgASgIEhEKCXBsYXllZF92chgHIAEo",
            "CBITCgtwbGF5ZWRfZGVjaxgIIAEoCBIZChFwbGF5ZWRfY29udHJvbGxlchgJ",
            "IAEoCBIUCgxwbGF5ZWRfbGludXgYCiABKAgSEgoKcGxheWVkX21hYxgLIAEo",
            "CBIWCg5wbGF5ZWRfd2luZG93cxgMIAEoCBIlCh10b3RhbF9wbGF5dGltZV9w",
            "ZXJjZW50YWdleDEwMBgNIAEoDRIWCg50b3RhbF9zZXNzaW9ucxgOIAEoDRIa",
            "ChJydGltZV9yZWxlYXNlX2RhdGUYDyABKA0iXgoSQ0dsb2JhbFBlcmNlbnRp",
            "bGVzEhsKE21lZGlhbl9hY2hpZXZlbWVudHMYASABKA0SFAoMbWVkaWFuX2dh",
            "bWVzGAIgASgNEhUKDW1lZGlhbl9zdHJlYWsYAyABKA0iggEKG0NHbG9iYWxQ",
            "bGF5dGltZURpc3RyaWJ1dGlvbhIUCgxuZXdfcmVsZWFzZXMYASABKA0SFwoP",
            "cmVjZW50X3JlbGVhc2VzGAIgASgNEhgKEGNsYXNzaWNfcmVsZWFzZXMYAyAB",
            "KA0SGgoScmVjZW50X2N1dG9mZl95ZWFyGAQgASgNIvcBChVDTW9udGhseVBs",
            "YXl0aW1lU3RhdHMSEwoLcnRpbWVfbW9udGgYASABKA0SHgoFc3RhdHMYAiAB",
            "KAsyDy5DUGxheXRpbWVTdGF0cxIpCg9wbGF5dGltZV9zdHJlYWsYAyABKAsy",
            "EC5DUGxheXRpbWVTdHJlYWsSIgoFYXBwaWQYBCADKAsyEy5DR2FtZVBsYXl0",
            "aW1lU3RhdHMSLwoWcmVsYXRpdmVfbW9udGhseV9zdGF0cxgFIAEoCzIPLkNQ",
            "bGF5dGltZVN0YXRzEikKDGdhbWVfc3VtbWFyeRgGIAMoCzITLkNTaW1wbGVH",
            "YW1lU3VtbWFyeSLTAQoQQ01vbnRobHlQcm9ncmVzcxIMCgR5ZWFyGAEgASgN",
            "Eg0KBW1vbnRoGAIgASgNEhsKE3J0X3Byb2Nlc3Npbmdfc3RhcnQYAyABKA0S",
            "GQoRcnRfcXVldWVfY29tcGxldGUYBCABKA0SGAoQcnRfcXVldWVfZW1wdGll",
            "ZBgFIAEoDRIbChNydF9wbGF0Zm9ybV9zdW1tYXJ5GAYgASgNEhcKD2FjY291",
            "bnRzX3F1ZXVlZBgHIAEoDRIaChJsYXJnZXN0X2FjY291bnRfaWQYCCABKA0i",
            "5AMKEkNQbGF5dGltZUJ5TnVtYmVycxIaChJzY3JlZW5zaG90c19zaGFyZWQY",
            "ASABKA0SEgoKZ2lmdHNfc2VudBgCIAEoDRIZChFsb3lhbHR5X3JlYWN0aW9u",
            "cxgDIAEoDRIXCg93cml0dGVuX3Jldmlld3MYBCABKA0SGAoQZ3VpZGVzX3N1",
            "Ym1pdHRlZBgFIAEoDRIeChZ3b3Jrc2hvcF9jb250cmlidXRpb25zGAYgASgN",
            "EhUKDWJhZGdlc19lYXJuZWQYByABKA0SFQoNZnJpZW5kc19hZGRlZBgIIAEo",
            "DRITCgtmb3J1bV9wb3N0cxgJIAEoDRIeChZ3b3Jrc2hvcF9zdWJzY3JpcHRp",
            "b25zGAogASgNEhkKEWd1aWRlX3N1YnNjcmliZXJzGAsgASgNEhwKFHdvcmtz",
            "aG9wX3N1YnNjcmliZXJzGAwgASgNEhgKEGdhbWVzX3BsYXllZF9wY3QYDSAB",
            "KA0SGAoQYWNoaWV2ZW1lbnRzX3BjdBgOIAEoDRIVCg1nYW1lX3N0cmVhcGN0",
            "GA8gASgNEhgKEGdhbWVzX3BsYXllZF9hdmcYECABKA0SGAoQYWNoaWV2ZW1l",
            "bnRzX2F2ZxgRIAEoDRIVCg1nYW1lX3N0cmVhYXZnGBIgASgNIp0BCg5DUGxh",
            "eXRpbWVSYW5rcxIUCgxvdmVyYWxsX3JhbmsYASABKA0SDwoHdnJfcmFuaxgC",
            "IAEoDRIPCgdkZWNyYW5rGAMgASgNEhcKD2NvbnRyb2xsZXJfcmFuaxgEIAEo",
            "DRISCgpsaW51eF9yYW5rGAUgASgNEhAKCG1hY19yYW5rGAYgASgNEhQKDHdp",
            "bmRvd3NfcmFuaxgHIAEoDSLrAwoOQ1BsYXl0aW1lU3RhdHMSHgoWdG90YWxf",
            "cGxheXRpbWVfc2Vjb25kcxgBIAEoDRIWCg50b3RhbF9zZXNzaW9ucxgUIAEo",
            "DRITCgt2cl9zZXNzaW9ucxgVIAEoDRITCgtkZWNzZXNzaW9ucxgWIAEoDRIb",
            "ChNjb250cm9sbGVyX3Nlc3Npb25zGBcgASgNEhYKDmxpbnV4X3Nlc3Npb25z",
            "GBggASgNEhYKDm1hY29zX3Nlc3Npb25zGBkgASgNEhgKEHdpbmRvd3Nfc2Vz",
            "c2lvbnMYGiABKA0SJQoddG90YWxfcGxheXRpbWVfcGVyY2VudGFnZXgxMDAY",
            "GyABKA0SIgoadnJfcGxheXRpbWVfcGVyY2VudGFnZXgxMDAYHCABKA0SIgoa",
            "ZGVjcGxheXRpbWVfcGVyY2VudGFnZXgxMDAYHSABKA0SKgoiY29udHJvbGxl",
            "cl9wbGF5dGltZV9wZXJjZW50YWdleDEwMBgeIAEoDRIlCh1saW51eF9wbGF5",
            "dGltZV9wZXJjZW50YWdleDEwMBgfIAEoDRIlCh1tYWNvc19wbGF5dGltZV9w",
            "ZXJjZW50YWdleDEwMBggIAEoDRInCh93aW5kb3dzX3BsYXl0aW1lX3BlcmNl",
            "bnRhZ2V4MTAwGCEgASgNInIKD0NQbGF5dGltZVN0cmVhaxIgChhsb25nZXN0",
            "X2NvbnNlY3V0aXZlX2RheXMYASABKA0SEwoLcnRpbWVfc3RhcnQYAiABKA0S",
            "KAoKc3RyZWFnYW1lcxgDIAMoCzIULkNQbGF5dGltZVN0cmVha0dhbWUiJAoT",
            "Q1BsYXl0aW1lU3RyZWFrR2FtZRINCgVhcHBpZBgBIAEoDSJCChBDUmFua2lu",
            "Z0NhdGVnb3J5EhAKCGNhdGVnb3J5GAEgASgJEhwKCHJhbmtpbmdzGAIgAygL",
            "MgouQ0dhbWVSYW5rImoKMUNTYWxlRmVhdHVyZV9HZXRGcmllbmRzU2hhcmVk",
            "WWVhckluUmV2aWV3X1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIMCgR5ZWFy",
            "GAIgASgNEhYKDnJldHVybl9wcml2YXRlGAMgASgIInMKMkNTYWxlRmVhdHVy",
            "ZV9HZXRGcmllbmRzU2hhcmVkWWVhckluUmV2aWV3X1Jlc3BvbnNlEi8KDWZy",
            "aWVuZF9zaGFyZXMYASADKAsyGC5DRnJpZW5kU2hhcmVkWWVhckluVmlldxIM",
            "CgR5ZWFyGAIgASgNIkAKMENTYWxlRmVhdHVyZV9HZXRVcGRhdGVQcm9jZXNz",
            "aW5nUHJvZ3Jlc3NfUmVxdWVzdBIMCgR5ZWFyGAEgASgNIlcKMUNTYWxlRmVh",
            "dHVyZV9HZXRVcGRhdGVQcm9jZXNzaW5nUHJvZ3Jlc3NfUmVzcG9uc2USIgoH",
            "cmVzdWx0cxgBIAMoCzIRLkNNb250aGx5UHJvZ3Jlc3MiXgomQ1NhbGVGZWF0",
            "dXJlX0dldFVzZXJBY3Rpb25EYXRhX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEo",
            "BhILCgNnaWQYAiABKAYSFgoEdHlwZRgDIAEoBUIIgrUYBGVudW0iOwonQ1Nh",
            "bGVGZWF0dXJlX0dldFVzZXJBY3Rpb25EYXRhX1Jlc3BvbnNlEhAKCGpzb25k",
            "YXRhGAEgASgJIk8KLkNTYWxlRmVhdHVyZV9HZXRVc2VyU2hhcmluZ1Blcm1p",
            "c3Npb25zX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIMCgR5ZWFyGAIgASgN",
            "IpgBCi9DU2FsZUZlYXR1cmVfR2V0VXNlclNoYXJpbmdQZXJtaXNzaW9uc19S",
            "ZXNwb25zZRIfCg1wcml2YWN5X3N0YXRlGAEgASgFQgiCtRgEZW51bRIXCg9n",
            "ZW5lcmF0ZWRfdmFsdWUYAiABKAgSDwoHc3RlYW1pZBgDIAEoBhIaChJydF9w",
            "cml2YWN5X3VwZGF0ZWQYBCABKA0icQosQ1NhbGVGZWF0dXJlX0dldFVzZXJZ",
            "ZWFyQWNoaWV2ZW1lbnRzX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIMCgR5",
            "ZWFyGAIgASgNEg4KBmFwcGlkcxgDIAMoDRISCgp0b3RhbF9vbmx5GAQgASgI",
            "IsIBCi1DU2FsZUZlYXR1cmVfR2V0VXNlclllYXJBY2hpZXZlbWVudHNfUmVz",
            "cG9uc2USLQoRZ2FtZV9hY2hpZXZlbWVudHMYASADKAsyEi5DR2FtZUFjaGll",
            "dmVtZW50cxIaChJ0b3RhbF9hY2hpZXZlbWVudHMYAiABKA0SHwoXdG90YWxf",
            "cmFyZV9hY2hpZXZlbWVudHMYAyABKA0SJQoddG90YWxfZ2FtZXNfd2l0aF9h",
            "Y2hpZXZlbWVudHMYBCABKA0iegooQ1NhbGVGZWF0dXJlX0dldFVzZXJZZWFy",
            "SW5SZXZpZXdfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEgwKBHllYXIYAiAB",
            "KA0SGAoQZm9yY2VfcmVnZW5lcmF0ZRgDIAEoCBIVCg1hY2Nlc3Nfc291cmNl",
            "GAQgASgFIuwBCilDU2FsZUZlYXR1cmVfR2V0VXNlclllYXJJblJldmlld19S",
            "ZXNwb25zZRImCgVzdGF0cxgBIAEoCzIXLkNVc2VyWWVhckluUmV2aWV3U3Rh",
            "dHMSOQoRcGVyZm9ybWFuY2Vfc3RhdHMYAiABKAsyHi5DWWVhckluUmV2aWV3",
            "UGVyZm9ybWFuY2VTdGF0cxIoCgtwZXJjZW50aWxlcxgDIAEoCzITLkNHbG9i",
            "YWxQZXJjZW50aWxlcxIyCgxkaXN0cmlidXRpb24YBCABKAsyHC5DR2xvYmFs",
            "UGxheXRpbWVEaXN0cmlidXRpb24iZQoyQ1NhbGVGZWF0dXJlX0dldFVzZXJZ",
            "ZWFySW5SZXZpZXdTaGFyZUltYWdlX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEo",
            "BhIMCgR5ZWFyGAIgASgNEhAKCGxhbmd1YWdlGAMgASgJIoEBCjNDU2FsZUZl",
            "YXR1cmVfR2V0VXNlclllYXJJblJldmlld1NoYXJlSW1hZ2VfUmVzcG9uc2US",
            "SgoGaW1hZ2VzGAEgAygLMjouQ1NhbGVGZWF0dXJlX0dldFVzZXJZZWFySW5S",
            "ZXZpZXdTaGFyZUltYWdlX1Jlc3BvbnNlX0ltYWdlIlsKOUNTYWxlRmVhdHVy",
            "ZV9HZXRVc2VyWWVhckluUmV2aWV3U2hhcmVJbWFnZV9SZXNwb25zZV9JbWFn",
            "ZRIMCgRuYW1lGAEgASgJEhAKCHVybF9wYXRoGAIgASgJIlwKK0NTYWxlRmVh",
            "dHVyZV9HZXRVc2VyWWVhclNjcmVlbnNob3RzX1JlcXVlc3QSDwoHc3RlYW1p",
            "ZBgBIAEoBhIMCgR5ZWFyGAIgASgNEg4KBmFwcGlkcxgDIAMoDSJ8CixDU2Fs",
            "ZUZlYXR1cmVfR2V0VXNlclllYXJTY3JlZW5zaG90c19SZXNwb25zZRJMCgRh",
            "cHBzGAEgAygLMj4uQ1NhbGVGZWF0dXJlX0dldFVzZXJZZWFyU2NyZWVuc2hv",
            "dHNfUmVzcG9uc2VfU2NyZWVuc2hvdHNCeUFwcCL8AQo3Q1NhbGVGZWF0dXJl",
            "X0dldFVzZXJZZWFyU2NyZWVuc2hvdHNfUmVzcG9uc2VfU2NyZWVuc2hvdBIR",
            "CglpbWFnZV91cmwYASABKAkSEwoLcHJldmlld191cmwYAiABKAkSEwoLaW1h",
            "Z2Vfd2lkdGgYAyABKA0SFAoMaW1hZ2VfaGVpZ2h0GAQgASgNEh8KF21heWJl",
            "X2luYXBwcm9wcmlhdGVfc2V4GAUgASgIEiQKHG1heWJlX2luYXBwcm9wcmlh",
            "dGVfdmlvbGVuY2UYBiABKAgSEgoKdmlzaWJpbGl0eRgHIAEoDRITCgtzcG9p",
            "bGVyX3RhZxgIIAEoCCKdAQo9Q1NhbGVGZWF0dXJlX0dldFVzZXJZZWFyU2Ny",
            "ZWVuc2hvdHNfUmVzcG9uc2VfU2NyZWVuc2hvdHNCeUFwcBINCgVhcHBpZBgB",
            "IAEoDRJNCgtzY3JlZW5zaG90cxgCIAMoCzI4LkNTYWxlRmVhdHVyZV9HZXRV",
            "c2VyWWVhclNjcmVlbnNob3RzX1Jlc3BvbnNlX1NjcmVlbnNob3QicAomQ1Nh",
            "bGVGZWF0dXJlX1NldFVzZXJBY3Rpb25EYXRhX1JlcXVlc3QSDwoHc3RlYW1p",
            "ZBgBIAEoBhILCgNnaWQYAiABKAYSFgoEdHlwZRgDIAEoBUIIgrUYBGVudW0S",
            "EAoIanNvbmRhdGEYBCABKAkiKQonQ1NhbGVGZWF0dXJlX1NldFVzZXJBY3Rp",
            "b25EYXRhX1Jlc3BvbnNlInAKLkNTYWxlRmVhdHVyZV9TZXRVc2VyU2hhcmlu",
            "Z1Blcm1pc3Npb25zX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIMCgR5ZWFy",
            "GAIgASgNEh8KDXByaXZhY3lfc3RhdGUYAyABKAVCCIK1GARlbnVtIlIKL0NT",
            "YWxlRmVhdHVyZV9TZXRVc2VyU2hhcmluZ1Blcm1pc3Npb25zX1Jlc3BvbnNl",
            "Eh8KDXByaXZhY3lfc3RhdGUYASABKAVCCIK1GARlbnVtInQKEkNTaW1wbGVH",
            "YW1lU3VtbWFyeRINCgVhcHBpZBgBIAEoDRIlCh10b3RhbF9wbGF5dGltZV9w",
            "ZXJjZW50YWdleDEwMBgCIAEoDRIoCiByZWxhdGl2ZV9wbGF5dGltZV9wZXJj",
            "ZW50YWdleDEwMBgDIAEoDSLHAwoSQ1VzZXJQbGF5dGltZVN0YXRzEiQKC3Rv",
            "dGFsX3N0YXRzGAEgASgLMg8uQ1BsYXl0aW1lU3RhdHMSIgoFZ2FtZXMYAiAD",
            "KAsyEy5DR2FtZVBsYXl0aW1lU3RhdHMSKQoPcGxheXRpbWVfc3RyZWFrGAMg",
            "ASgLMhAuQ1BsYXl0aW1lU3RyZWFrEiYKBm1vbnRocxgFIAMoCzIWLkNNb250",
            "aGx5UGxheXRpbWVTdGF0cxIjCgxnYW1lX3N1bW1hcnkYBiADKAsyDS5DR2Ft",
            "ZVN1bW1hcnkSFAoMZGVtb3NfcGxheWVkGAcgASgNEiUKDWdhbWVfcmFua2lu",
            "Z3MYCCABKAsyDi5DR2FtZVJhbmtpbmdzEhgKEHBsYXl0ZXN0c19wbGF5ZWQY",
            "CSABKA0SMQoNc3VtbWFyeV9zdGF0cxgKIAEoCzIaLkNVc2VyUGxheXRpbWVT",
            "dW1tYXJ5U3RhdHMSGQoLc3Vic3RhbnRpYWwYCyABKAg6BHRydWUSIQoJdGFn",
            "X3N0YXRzGAwgASgLMg4uQ1VzZXJUYWdTdGF0cxInCgpieV9udW1iZXJzGA0g",
            "ASgLMhMuQ1BsYXl0aW1lQnlOdW1iZXJzIn8KGUNVc2VyUGxheXRpbWVTdW1t",
            "YXJ5U3RhdHMSGgoSdG90YWxfYWNoaWV2ZW1lbnRzGAIgASgNEiUKHXRvdGFs",
            "X2dhbWVzX3dpdGhfYWNoaWV2ZW1lbnRzGAMgASgNEh8KF3RvdGFsX3JhcmVf",
            "YWNoaWV2ZW1lbnRzGAQgASgNIjIKDUNVc2VyVGFnU3RhdHMSIQoFc3RhdHMY",
            "ASADKAsyEi5DVXNlclRhZ1N0YXRzX1RhZyJZChFDVXNlclRhZ1N0YXRzX1Rh",
            "ZxIOCgZ0YWdfaWQYASABKA0SEgoKdGFnX3dlaWdodBgCIAEoAhIgChh0YWdf",
            "d2VpZ2h0X3ByZV9zZWxlY3Rpb24YAyABKAIiiAEKFkNVc2VyWWVhckluUmV2",
            "aWV3U3RhdHMSEgoKYWNjb3VudF9pZBgBIAEoDRIMCgR5ZWFyGAIgASgNEisK",
            "DnBsYXl0aW1lX3N0YXRzGAMgASgLMhMuQ1VzZXJQbGF5dGltZVN0YXRzEh8K",
            "DXByaXZhY3lfc3RhdGUYBCABKAVCCIK1GARlbnVtIrIBCh1DWWVhckluUmV2",
            "aWV3UGVyZm9ybWFuY2VTdGF0cxIQCghmcm9tX2RibxgBIAEoCBIXCg9vdmVy",
            "YWxsX3RpbWVfbXMYAiABKAQSEwoLZGJvX2xvYWRfbXMYAyABKAQSGgoScXVl",
            "cnlfZXhlY3V0aW9uX21zGAQgASgEEh0KFW1lc3NhZ2VfcG9wdWxhdGlvbl9t",
            "cxgFIAEoBBIWCg5kYm9fbG9jbG9hZF9tcxgGIAEoBDLaCQoLU2FsZUZlYXR1",
            "cmUShwEKHEdldEZyaWVuZHNTaGFyZWRZZWFySW5SZXZpZXcSMi5DU2FsZUZl",
            "YXR1cmVfR2V0RnJpZW5kc1NoYXJlZFllYXJJblJldmlld19SZXF1ZXN0GjMu",
            "Q1NhbGVGZWF0dXJlX0dldEZyaWVuZHNTaGFyZWRZZWFySW5SZXZpZXdfUmVz",
            "cG9uc2UShAEKG0dldFVwZGF0ZVByb2Nlc3NpbmdQcm9ncmVzcxIxLkNTYWxl",
            "RmVhdHVyZV9HZXRVcGRhdGVQcm9jZXNzaW5nUHJvZ3Jlc3NfUmVxdWVzdBoy",
            "LkNTYWxlRmVhdHVyZV9HZXRVcGRhdGVQcm9jZXNzaW5nUHJvZ3Jlc3NfUmVz",
            "cG9uc2USZgoRR2V0VXNlckFjdGlvbkRhdGESJy5DU2FsZUZlYXR1cmVfR2V0",
            "VXNlckFjdGlvbkRhdGFfUmVxdWVzdBooLkNTYWxlRmVhdHVyZV9HZXRVc2Vy",
            "QWN0aW9uRGF0YV9SZXNwb25zZRJ+ChlHZXRVc2VyU2hhcmluZ1Blcm1pc3Np",
            "b25zEi8uQ1NhbGVGZWF0dXJlX0dldFVzZXJTaGFyaW5nUGVybWlzc2lvbnNf",
            "UmVxdWVzdBowLkNTYWxlRmVhdHVyZV9HZXRVc2VyU2hhcmluZ1Blcm1pc3Np",
            "b25zX1Jlc3BvbnNlEngKF0dldFVzZXJZZWFyQWNoaWV2ZW1lbnRzEi0uQ1Nh",
            "bGVGZWF0dXJlX0dldFVzZXJZZWFyQWNoaWV2ZW1lbnRzX1JlcXVlc3QaLi5D",
            "U2FsZUZlYXR1cmVfR2V0VXNlclllYXJBY2hpZXZlbWVudHNfUmVzcG9uc2US",
            "bAoTR2V0VXNlclllYXJJblJldmlldxIpLkNTYWxlRmVhdHVyZV9HZXRVc2Vy",
            "WWVhckluUmV2aWV3X1JlcXVlc3QaKi5DU2FsZUZlYXR1cmVfR2V0VXNlclll",
            "YXJJblJldmlld19SZXNwb25zZRKKAQodR2V0VXNlclllYXJJblJldmlld1No",
            "YXJlSW1hZ2USMy5DU2FsZUZlYXR1cmVfR2V0VXNlclllYXJJblJldmlld1No",
            "YXJlSW1hZ2VfUmVxdWVzdBo0LkNTYWxlRmVhdHVyZV9HZXRVc2VyWWVhcklu",
            "UmV2aWV3U2hhcmVJbWFnZV9SZXNwb25zZRJ1ChZHZXRVc2VyWWVhclNjcmVl",
            "bnNob3RzEiwuQ1NhbGVGZWF0dXJlX0dldFVzZXJZZWFyU2NyZWVuc2hvdHNf",
            "UmVxdWVzdBotLkNTYWxlRmVhdHVyZV9HZXRVc2VyWWVhclNjcmVlbnNob3Rz",
            "X1Jlc3BvbnNlEmYKEVNldFVzZXJBY3Rpb25EYXRhEicuQ1NhbGVGZWF0dXJl",
            "X1NldFVzZXJBY3Rpb25EYXRhX1JlcXVlc3QaKC5DU2FsZUZlYXR1cmVfU2V0",
            "VXNlckFjdGlvbkRhdGFfUmVzcG9uc2USfgoZU2V0VXNlclNoYXJpbmdQZXJt",
            "aXNzaW9ucxIvLkNTYWxlRmVhdHVyZV9TZXRVc2VyU2hhcmluZ1Blcm1pc3Np",
            "b25zX1JlcXVlc3QaMC5DU2FsZUZlYXR1cmVfU2V0VXNlclNoYXJpbmdQZXJt",
            "aXNzaW9uc19SZXNwb25zZUIgqgIdT3BlblN0ZWFtd29ya3MuUHJvdG9idWYu",
            "V2ViVUk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.WebUI.CommonBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails), global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails.Parser, new[]{ "Statid", "Fieldid", "AchievementNameInternal", "RtimeUnlocked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView), global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView.Parser, new[]{ "Steamid", "PrivacyState", "RtPrivacyUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameAchievements), global::OpenSteamworks.Protobuf.WebUI.CGameAchievements.Parser, new[]{ "Appid", "Achievements", "AllTimeUnlockedAchievements", "UnlockedMoreInFuture" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats), global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats.Parser, new[]{ "Appid", "Stats", "PlaytimeStreak", "PlaytimeRanks", "RtimeFirstPlayed", "RelativeGameStats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRank), global::OpenSteamworks.Protobuf.WebUI.CGameRank.Parser, new[]{ "Appid", "Rank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameRankings), global::OpenSteamworks.Protobuf.WebUI.CGameRankings.Parser, new[]{ "OverallRanking", "VrRanking", "Decranking", "ControllerRanking", "LinuxRanking", "MacRanking", "WindowsRanking" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGameSummary), global::OpenSteamworks.Protobuf.WebUI.CGameSummary.Parser, new[]{ "Appid", "NewThisYear", "RtimeFirstPlayedLifetime", "Demo", "Playtest", "PlayedDuringEarlyAccess", "PlayedVr", "PlayedDeck", "PlayedController", "PlayedLinux", "PlayedMac", "PlayedWindows", "TotalPlaytimePercentagex100", "TotalSessions", "RtimeReleaseDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles), global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles.Parser, new[]{ "MedianAchievements", "MedianGames", "MedianStreak" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution), global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution.Parser, new[]{ "NewReleases", "RecentReleases", "ClassicReleases", "RecentCutoffYear" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats), global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats.Parser, new[]{ "RtimeMonth", "Stats", "PlaytimeStreak", "Appid", "RelativeMonthlyStats", "GameSummary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress), global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress.Parser, new[]{ "Year", "Month", "RtProcessingStart", "RtQueueComplete", "RtQueueEmptied", "RtPlatformSummary", "AccountsQueued", "LargestAccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers), global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers.Parser, new[]{ "ScreenshotsShared", "GiftsSent", "LoyaltyReactions", "WrittenReviews", "GuidesSubmitted", "WorkshopContributions", "BadgesEarned", "FriendsAdded", "ForumPosts", "WorkshopSubscriptions", "GuideSubscribers", "WorkshopSubscribers", "GamesPlayedPct", "AchievementsPct", "GameStreapct", "GamesPlayedAvg", "AchievementsAvg", "GameStreaavg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks), global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks.Parser, new[]{ "OverallRank", "VrRank", "Decrank", "ControllerRank", "LinuxRank", "MacRank", "WindowsRank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats), global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats.Parser, new[]{ "TotalPlaytimeSeconds", "TotalSessions", "VrSessions", "Decsessions", "ControllerSessions", "LinuxSessions", "MacosSessions", "WindowsSessions", "TotalPlaytimePercentagex100", "VrPlaytimePercentagex100", "DecplaytimePercentagex100", "ControllerPlaytimePercentagex100", "LinuxPlaytimePercentagex100", "MacosPlaytimePercentagex100", "WindowsPlaytimePercentagex100" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak), global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak.Parser, new[]{ "LongestConsecutiveDays", "RtimeStart", "Streagames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame), global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame.Parser, new[]{ "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRankingCategory), global::OpenSteamworks.Protobuf.WebUI.CRankingCategory.Parser, new[]{ "Category", "Rankings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetFriendsSharedYearInReview_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetFriendsSharedYearInReview_Request.Parser, new[]{ "Steamid", "Year", "ReturnPrivate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetFriendsSharedYearInReview_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetFriendsSharedYearInReview_Response.Parser, new[]{ "FriendShares", "Year" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUpdateProcessingProgress_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUpdateProcessingProgress_Request.Parser, new[]{ "Year" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUpdateProcessingProgress_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUpdateProcessingProgress_Response.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserActionData_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserActionData_Request.Parser, new[]{ "Steamid", "Gid", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserActionData_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserActionData_Response.Parser, new[]{ "Jsondata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserSharingPermissions_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserSharingPermissions_Request.Parser, new[]{ "Steamid", "Year" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserSharingPermissions_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserSharingPermissions_Response.Parser, new[]{ "PrivacyState", "GeneratedValue", "Steamid", "RtPrivacyUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearAchievements_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearAchievements_Request.Parser, new[]{ "Steamid", "Year", "Appids", "TotalOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearAchievements_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearAchievements_Response.Parser, new[]{ "GameAchievements", "TotalAchievements", "TotalRareAchievements", "TotalGamesWithAchievements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReview_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReview_Request.Parser, new[]{ "Steamid", "Year", "ForceRegenerate", "AccessSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReview_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReview_Response.Parser, new[]{ "Stats", "PerformanceStats", "Percentiles", "Distribution" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Request.Parser, new[]{ "Steamid", "Year", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response.Parser, new[]{ "Images" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image.Parser, new[]{ "Name", "UrlPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Request.Parser, new[]{ "Steamid", "Year", "Appids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response.Parser, new[]{ "Apps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot.Parser, new[]{ "ImageUrl", "PreviewUrl", "ImageWidth", "ImageHeight", "MaybeInappropriateSex", "MaybeInappropriateViolence", "Visibility", "SpoilerTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp.Parser, new[]{ "Appid", "Screenshots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserActionData_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserActionData_Request.Parser, new[]{ "Steamid", "Gid", "Type", "Jsondata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserActionData_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserActionData_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserSharingPermissions_Request), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserSharingPermissions_Request.Parser, new[]{ "Steamid", "Year", "PrivacyState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserSharingPermissions_Response), global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_SetUserSharingPermissions_Response.Parser, new[]{ "PrivacyState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary), global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary.Parser, new[]{ "Appid", "TotalPlaytimePercentagex100", "RelativePlaytimePercentagex100" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats), global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats.Parser, new[]{ "TotalStats", "Games", "PlaytimeStreak", "Months", "GameSummary", "DemosPlayed", "GameRankings", "PlaytestsPlayed", "SummaryStats", "Substantial", "TagStats", "ByNumbers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats), global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats.Parser, new[]{ "TotalAchievements", "TotalGamesWithAchievements", "TotalRareAchievements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserTagStats), global::OpenSteamworks.Protobuf.WebUI.CUserTagStats.Parser, new[]{ "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag), global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag.Parser, new[]{ "TagId", "TagWeight", "TagWeightPreSelection" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats), global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats.Parser, new[]{ "AccountId", "Year", "PlaytimeStats", "PrivacyState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats), global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats.Parser, new[]{ "FromDbo", "OverallTimeMs", "DboLoadMs", "QueryExecutionMs", "MessagePopulationMs", "DboLocloadMs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CAchievementDetails : pb::IMessage<CAchievementDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CAchievementDetails> _parser = new pb::MessageParser<CAchievementDetails>(() => new CAchievementDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CAchievementDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAchievementDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAchievementDetails(CAchievementDetails other) : this() {
      _hasBits0 = other._hasBits0;
      statid_ = other.statid_;
      fieldid_ = other.fieldid_;
      achievementNameInternal_ = other.achievementNameInternal_;
      rtimeUnlocked_ = other.rtimeUnlocked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAchievementDetails Clone() {
      return new CAchievementDetails(this);
    }

    /// <summary>Field number for the "statid" field.</summary>
    public const int StatidFieldNumber = 1;
    private readonly static uint StatidDefaultValue = 0;

    private uint statid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Statid {
      get { if ((_hasBits0 & 1) != 0) { return statid_; } else { return StatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        statid_ = value;
      }
    }
    /// <summary>Gets whether the "statid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "statid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fieldid" field.</summary>
    public const int FieldidFieldNumber = 2;
    private readonly static uint FieldidDefaultValue = 0;

    private uint fieldid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Fieldid {
      get { if ((_hasBits0 & 2) != 0) { return fieldid_; } else { return FieldidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fieldid_ = value;
      }
    }
    /// <summary>Gets whether the "fieldid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFieldid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fieldid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFieldid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "achievement_name_internal" field.</summary>
    public const int AchievementNameInternalFieldNumber = 3;
    private readonly static string AchievementNameInternalDefaultValue = "";

    private string achievementNameInternal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AchievementNameInternal {
      get { return achievementNameInternal_ ?? AchievementNameInternalDefaultValue; }
      set {
        achievementNameInternal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "achievement_name_internal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAchievementNameInternal {
      get { return achievementNameInternal_ != null; }
    }
    /// <summary>Clears the value of the "achievement_name_internal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAchievementNameInternal() {
      achievementNameInternal_ = null;
    }

    /// <summary>Field number for the "rtime_unlocked" field.</summary>
    public const int RtimeUnlockedFieldNumber = 4;
    private readonly static uint RtimeUnlockedDefaultValue = 0;

    private uint rtimeUnlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtimeUnlocked {
      get { if ((_hasBits0 & 4) != 0) { return rtimeUnlocked_; } else { return RtimeUnlockedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rtimeUnlocked_ = value;
      }
    }
    /// <summary>Gets whether the "rtime_unlocked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtimeUnlocked {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rtime_unlocked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtimeUnlocked() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CAchievementDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CAchievementDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Statid != other.Statid) return false;
      if (Fieldid != other.Fieldid) return false;
      if (AchievementNameInternal != other.AchievementNameInternal) return false;
      if (RtimeUnlocked != other.RtimeUnlocked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatid) hash ^= Statid.GetHashCode();
      if (HasFieldid) hash ^= Fieldid.GetHashCode();
      if (HasAchievementNameInternal) hash ^= AchievementNameInternal.GetHashCode();
      if (HasRtimeUnlocked) hash ^= RtimeUnlocked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStatid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Statid);
      }
      if (HasFieldid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Fieldid);
      }
      if (HasAchievementNameInternal) {
        output.WriteRawTag(26);
        output.WriteString(AchievementNameInternal);
      }
      if (HasRtimeUnlocked) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtimeUnlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStatid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Statid);
      }
      if (HasFieldid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Fieldid);
      }
      if (HasAchievementNameInternal) {
        output.WriteRawTag(26);
        output.WriteString(AchievementNameInternal);
      }
      if (HasRtimeUnlocked) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtimeUnlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStatid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Statid);
      }
      if (HasFieldid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fieldid);
      }
      if (HasAchievementNameInternal) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AchievementNameInternal);
      }
      if (HasRtimeUnlocked) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeUnlocked);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CAchievementDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasStatid) {
        Statid = other.Statid;
      }
      if (other.HasFieldid) {
        Fieldid = other.Fieldid;
      }
      if (other.HasAchievementNameInternal) {
        AchievementNameInternal = other.AchievementNameInternal;
      }
      if (other.HasRtimeUnlocked) {
        RtimeUnlocked = other.RtimeUnlocked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Statid = input.ReadUInt32();
            break;
          }
          case 16: {
            Fieldid = input.ReadUInt32();
            break;
          }
          case 26: {
            AchievementNameInternal = input.ReadString();
            break;
          }
          case 32: {
            RtimeUnlocked = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Statid = input.ReadUInt32();
            break;
          }
          case 16: {
            Fieldid = input.ReadUInt32();
            break;
          }
          case 26: {
            AchievementNameInternal = input.ReadString();
            break;
          }
          case 32: {
            RtimeUnlocked = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CFriendSharedYearInView : pb::IMessage<CFriendSharedYearInView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CFriendSharedYearInView> _parser = new pb::MessageParser<CFriendSharedYearInView>(() => new CFriendSharedYearInView());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CFriendSharedYearInView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFriendSharedYearInView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFriendSharedYearInView(CFriendSharedYearInView other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      privacyState_ = other.privacyState_;
      rtPrivacyUpdated_ = other.rtPrivacyUpdated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFriendSharedYearInView Clone() {
      return new CFriendSharedYearInView(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "privacy_state" field.</summary>
    public const int PrivacyStateFieldNumber = 3;
    private readonly static int PrivacyStateDefaultValue = 0;

    private int privacyState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyState {
      get { if ((_hasBits0 & 2) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        privacyState_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rt_privacy_updated" field.</summary>
    public const int RtPrivacyUpdatedFieldNumber = 4;
    private readonly static uint RtPrivacyUpdatedDefaultValue = 0;

    private uint rtPrivacyUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtPrivacyUpdated {
      get { if ((_hasBits0 & 4) != 0) { return rtPrivacyUpdated_; } else { return RtPrivacyUpdatedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rtPrivacyUpdated_ = value;
      }
    }
    /// <summary>Gets whether the "rt_privacy_updated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtPrivacyUpdated {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rt_privacy_updated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtPrivacyUpdated() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CFriendSharedYearInView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CFriendSharedYearInView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (PrivacyState != other.PrivacyState) return false;
      if (RtPrivacyUpdated != other.RtPrivacyUpdated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
      if (HasRtPrivacyUpdated) hash ^= RtPrivacyUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasPrivacyState) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivacyState);
      }
      if (HasRtPrivacyUpdated) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtPrivacyUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasPrivacyState) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivacyState);
      }
      if (HasRtPrivacyUpdated) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtPrivacyUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasPrivacyState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
      }
      if (HasRtPrivacyUpdated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtPrivacyUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CFriendSharedYearInView other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasPrivacyState) {
        PrivacyState = other.PrivacyState;
      }
      if (other.HasRtPrivacyUpdated) {
        RtPrivacyUpdated = other.RtPrivacyUpdated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 24: {
            PrivacyState = input.ReadInt32();
            break;
          }
          case 32: {
            RtPrivacyUpdated = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 24: {
            PrivacyState = input.ReadInt32();
            break;
          }
          case 32: {
            RtPrivacyUpdated = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameAchievements : pb::IMessage<CGameAchievements>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameAchievements> _parser = new pb::MessageParser<CGameAchievements>(() => new CGameAchievements());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameAchievements> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameAchievements() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameAchievements(CGameAchievements other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      achievements_ = other.achievements_.Clone();
      allTimeUnlockedAchievements_ = other.allTimeUnlockedAchievements_;
      unlockedMoreInFuture_ = other.unlockedMoreInFuture_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameAchievements Clone() {
      return new CGameAchievements(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "achievements" field.</summary>
    public const int AchievementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails> _repeated_achievements_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails> achievements_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CAchievementDetails> Achievements {
      get { return achievements_; }
    }

    /// <summary>Field number for the "all_time_unlocked_achievements" field.</summary>
    public const int AllTimeUnlockedAchievementsFieldNumber = 3;
    private readonly static uint AllTimeUnlockedAchievementsDefaultValue = 0;

    private uint allTimeUnlockedAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AllTimeUnlockedAchievements {
      get { if ((_hasBits0 & 2) != 0) { return allTimeUnlockedAchievements_; } else { return AllTimeUnlockedAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        allTimeUnlockedAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "all_time_unlocked_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllTimeUnlockedAchievements {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "all_time_unlocked_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllTimeUnlockedAchievements() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "unlocked_more_in_future" field.</summary>
    public const int UnlockedMoreInFutureFieldNumber = 4;
    private readonly static bool UnlockedMoreInFutureDefaultValue = false;

    private bool unlockedMoreInFuture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UnlockedMoreInFuture {
      get { if ((_hasBits0 & 4) != 0) { return unlockedMoreInFuture_; } else { return UnlockedMoreInFutureDefaultValue; } }
      set {
        _hasBits0 |= 4;
        unlockedMoreInFuture_ = value;
      }
    }
    /// <summary>Gets whether the "unlocked_more_in_future" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnlockedMoreInFuture {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "unlocked_more_in_future" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnlockedMoreInFuture() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameAchievements);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameAchievements other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if(!achievements_.Equals(other.achievements_)) return false;
      if (AllTimeUnlockedAchievements != other.AllTimeUnlockedAchievements) return false;
      if (UnlockedMoreInFuture != other.UnlockedMoreInFuture) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      hash ^= achievements_.GetHashCode();
      if (HasAllTimeUnlockedAchievements) hash ^= AllTimeUnlockedAchievements.GetHashCode();
      if (HasUnlockedMoreInFuture) hash ^= UnlockedMoreInFuture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      achievements_.WriteTo(output, _repeated_achievements_codec);
      if (HasAllTimeUnlockedAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(AllTimeUnlockedAchievements);
      }
      if (HasUnlockedMoreInFuture) {
        output.WriteRawTag(32);
        output.WriteBool(UnlockedMoreInFuture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      achievements_.WriteTo(ref output, _repeated_achievements_codec);
      if (HasAllTimeUnlockedAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(AllTimeUnlockedAchievements);
      }
      if (HasUnlockedMoreInFuture) {
        output.WriteRawTag(32);
        output.WriteBool(UnlockedMoreInFuture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      size += achievements_.CalculateSize(_repeated_achievements_codec);
      if (HasAllTimeUnlockedAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AllTimeUnlockedAchievements);
      }
      if (HasUnlockedMoreInFuture) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameAchievements other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      achievements_.Add(other.achievements_);
      if (other.HasAllTimeUnlockedAchievements) {
        AllTimeUnlockedAchievements = other.AllTimeUnlockedAchievements;
      }
      if (other.HasUnlockedMoreInFuture) {
        UnlockedMoreInFuture = other.UnlockedMoreInFuture;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            achievements_.AddEntriesFrom(input, _repeated_achievements_codec);
            break;
          }
          case 24: {
            AllTimeUnlockedAchievements = input.ReadUInt32();
            break;
          }
          case 32: {
            UnlockedMoreInFuture = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            achievements_.AddEntriesFrom(ref input, _repeated_achievements_codec);
            break;
          }
          case 24: {
            AllTimeUnlockedAchievements = input.ReadUInt32();
            break;
          }
          case 32: {
            UnlockedMoreInFuture = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGamePlaytimeStats : pb::IMessage<CGamePlaytimeStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGamePlaytimeStats> _parser = new pb::MessageParser<CGamePlaytimeStats>(() => new CGamePlaytimeStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGamePlaytimeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGamePlaytimeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGamePlaytimeStats(CGamePlaytimeStats other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      playtimeStreak_ = other.playtimeStreak_ != null ? other.playtimeStreak_.Clone() : null;
      playtimeRanks_ = other.playtimeRanks_ != null ? other.playtimeRanks_.Clone() : null;
      rtimeFirstPlayed_ = other.rtimeFirstPlayed_;
      relativeGameStats_ = other.relativeGameStats_ != null ? other.relativeGameStats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGamePlaytimeStats Clone() {
      return new CGamePlaytimeStats(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "playtime_streak" field.</summary>
    public const int PlaytimeStreakFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak playtimeStreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak PlaytimeStreak {
      get { return playtimeStreak_; }
      set {
        playtimeStreak_ = value;
      }
    }

    /// <summary>Field number for the "playtime_ranks" field.</summary>
    public const int PlaytimeRanksFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks playtimeRanks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks PlaytimeRanks {
      get { return playtimeRanks_; }
      set {
        playtimeRanks_ = value;
      }
    }

    /// <summary>Field number for the "rtime_first_played" field.</summary>
    public const int RtimeFirstPlayedFieldNumber = 5;
    private readonly static uint RtimeFirstPlayedDefaultValue = 0;

    private uint rtimeFirstPlayed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtimeFirstPlayed {
      get { if ((_hasBits0 & 2) != 0) { return rtimeFirstPlayed_; } else { return RtimeFirstPlayedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rtimeFirstPlayed_ = value;
      }
    }
    /// <summary>Gets whether the "rtime_first_played" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtimeFirstPlayed {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rtime_first_played" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtimeFirstPlayed() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "relative_game_stats" field.</summary>
    public const int RelativeGameStatsFieldNumber = 6;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats relativeGameStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats RelativeGameStats {
      get { return relativeGameStats_; }
      set {
        relativeGameStats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGamePlaytimeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGamePlaytimeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(PlaytimeStreak, other.PlaytimeStreak)) return false;
      if (!object.Equals(PlaytimeRanks, other.PlaytimeRanks)) return false;
      if (RtimeFirstPlayed != other.RtimeFirstPlayed) return false;
      if (!object.Equals(RelativeGameStats, other.RelativeGameStats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (playtimeStreak_ != null) hash ^= PlaytimeStreak.GetHashCode();
      if (playtimeRanks_ != null) hash ^= PlaytimeRanks.GetHashCode();
      if (HasRtimeFirstPlayed) hash ^= RtimeFirstPlayed.GetHashCode();
      if (relativeGameStats_ != null) hash ^= RelativeGameStats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (playtimeStreak_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStreak);
      }
      if (playtimeRanks_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlaytimeRanks);
      }
      if (HasRtimeFirstPlayed) {
        output.WriteRawTag(40);
        output.WriteUInt32(RtimeFirstPlayed);
      }
      if (relativeGameStats_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RelativeGameStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (playtimeStreak_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStreak);
      }
      if (playtimeRanks_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlaytimeRanks);
      }
      if (HasRtimeFirstPlayed) {
        output.WriteRawTag(40);
        output.WriteUInt32(RtimeFirstPlayed);
      }
      if (relativeGameStats_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RelativeGameStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (playtimeStreak_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaytimeStreak);
      }
      if (playtimeRanks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaytimeRanks);
      }
      if (HasRtimeFirstPlayed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeFirstPlayed);
      }
      if (relativeGameStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelativeGameStats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGamePlaytimeStats other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.playtimeStreak_ != null) {
        if (playtimeStreak_ == null) {
          PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
        }
        PlaytimeStreak.MergeFrom(other.PlaytimeStreak);
      }
      if (other.playtimeRanks_ != null) {
        if (playtimeRanks_ == null) {
          PlaytimeRanks = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks();
        }
        PlaytimeRanks.MergeFrom(other.PlaytimeRanks);
      }
      if (other.HasRtimeFirstPlayed) {
        RtimeFirstPlayed = other.RtimeFirstPlayed;
      }
      if (other.relativeGameStats_ != null) {
        if (relativeGameStats_ == null) {
          RelativeGameStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
        }
        RelativeGameStats.MergeFrom(other.RelativeGameStats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            if (stats_ == null) {
              Stats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            if (playtimeStreak_ == null) {
              PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
            }
            input.ReadMessage(PlaytimeStreak);
            break;
          }
          case 34: {
            if (playtimeRanks_ == null) {
              PlaytimeRanks = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks();
            }
            input.ReadMessage(PlaytimeRanks);
            break;
          }
          case 40: {
            RtimeFirstPlayed = input.ReadUInt32();
            break;
          }
          case 50: {
            if (relativeGameStats_ == null) {
              RelativeGameStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(RelativeGameStats);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            if (stats_ == null) {
              Stats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            if (playtimeStreak_ == null) {
              PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
            }
            input.ReadMessage(PlaytimeStreak);
            break;
          }
          case 34: {
            if (playtimeRanks_ == null) {
              PlaytimeRanks = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeRanks();
            }
            input.ReadMessage(PlaytimeRanks);
            break;
          }
          case 40: {
            RtimeFirstPlayed = input.ReadUInt32();
            break;
          }
          case 50: {
            if (relativeGameStats_ == null) {
              RelativeGameStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(RelativeGameStats);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRank : pb::IMessage<CGameRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRank> _parser = new pb::MessageParser<CGameRank>(() => new CGameRank());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRank(CGameRank other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      rank_ = other.rank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRank Clone() {
      return new CGameRank(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 2;
    private readonly static uint RankDefaultValue = 0;

    private uint rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank {
      get { if ((_hasBits0 & 2) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Rank != other.Rank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRank other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Rank = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Rank = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRankings : pb::IMessage<CGameRankings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRankings> _parser = new pb::MessageParser<CGameRankings>(() => new CGameRankings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRankings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRankings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRankings(CGameRankings other) : this() {
      overallRanking_ = other.overallRanking_ != null ? other.overallRanking_.Clone() : null;
      vrRanking_ = other.vrRanking_ != null ? other.vrRanking_.Clone() : null;
      decranking_ = other.decranking_ != null ? other.decranking_.Clone() : null;
      controllerRanking_ = other.controllerRanking_ != null ? other.controllerRanking_.Clone() : null;
      linuxRanking_ = other.linuxRanking_ != null ? other.linuxRanking_.Clone() : null;
      macRanking_ = other.macRanking_ != null ? other.macRanking_.Clone() : null;
      windowsRanking_ = other.windowsRanking_ != null ? other.windowsRanking_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRankings Clone() {
      return new CGameRankings(this);
    }

    /// <summary>Field number for the "overall_ranking" field.</summary>
    public const int OverallRankingFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory overallRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory OverallRanking {
      get { return overallRanking_; }
      set {
        overallRanking_ = value;
      }
    }

    /// <summary>Field number for the "vr_ranking" field.</summary>
    public const int VrRankingFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory vrRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory VrRanking {
      get { return vrRanking_; }
      set {
        vrRanking_ = value;
      }
    }

    /// <summary>Field number for the "decranking" field.</summary>
    public const int DecrankingFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory decranking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory Decranking {
      get { return decranking_; }
      set {
        decranking_ = value;
      }
    }

    /// <summary>Field number for the "controller_ranking" field.</summary>
    public const int ControllerRankingFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory controllerRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory ControllerRanking {
      get { return controllerRanking_; }
      set {
        controllerRanking_ = value;
      }
    }

    /// <summary>Field number for the "linux_ranking" field.</summary>
    public const int LinuxRankingFieldNumber = 5;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory linuxRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory LinuxRanking {
      get { return linuxRanking_; }
      set {
        linuxRanking_ = value;
      }
    }

    /// <summary>Field number for the "mac_ranking" field.</summary>
    public const int MacRankingFieldNumber = 6;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory macRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory MacRanking {
      get { return macRanking_; }
      set {
        macRanking_ = value;
      }
    }

    /// <summary>Field number for the "windows_ranking" field.</summary>
    public const int WindowsRankingFieldNumber = 7;
    private global::OpenSteamworks.Protobuf.WebUI.CRankingCategory windowsRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRankingCategory WindowsRanking {
      get { return windowsRanking_; }
      set {
        windowsRanking_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRankings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRankings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OverallRanking, other.OverallRanking)) return false;
      if (!object.Equals(VrRanking, other.VrRanking)) return false;
      if (!object.Equals(Decranking, other.Decranking)) return false;
      if (!object.Equals(ControllerRanking, other.ControllerRanking)) return false;
      if (!object.Equals(LinuxRanking, other.LinuxRanking)) return false;
      if (!object.Equals(MacRanking, other.MacRanking)) return false;
      if (!object.Equals(WindowsRanking, other.WindowsRanking)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (overallRanking_ != null) hash ^= OverallRanking.GetHashCode();
      if (vrRanking_ != null) hash ^= VrRanking.GetHashCode();
      if (decranking_ != null) hash ^= Decranking.GetHashCode();
      if (controllerRanking_ != null) hash ^= ControllerRanking.GetHashCode();
      if (linuxRanking_ != null) hash ^= LinuxRanking.GetHashCode();
      if (macRanking_ != null) hash ^= MacRanking.GetHashCode();
      if (windowsRanking_ != null) hash ^= WindowsRanking.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (overallRanking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OverallRanking);
      }
      if (vrRanking_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VrRanking);
      }
      if (decranking_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Decranking);
      }
      if (controllerRanking_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ControllerRanking);
      }
      if (linuxRanking_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinuxRanking);
      }
      if (macRanking_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MacRanking);
      }
      if (windowsRanking_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(WindowsRanking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (overallRanking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OverallRanking);
      }
      if (vrRanking_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VrRanking);
      }
      if (decranking_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Decranking);
      }
      if (controllerRanking_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ControllerRanking);
      }
      if (linuxRanking_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinuxRanking);
      }
      if (macRanking_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MacRanking);
      }
      if (windowsRanking_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(WindowsRanking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (overallRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OverallRanking);
      }
      if (vrRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VrRanking);
      }
      if (decranking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Decranking);
      }
      if (controllerRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControllerRanking);
      }
      if (linuxRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinuxRanking);
      }
      if (macRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MacRanking);
      }
      if (windowsRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WindowsRanking);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRankings other) {
      if (other == null) {
        return;
      }
      if (other.overallRanking_ != null) {
        if (overallRanking_ == null) {
          OverallRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        OverallRanking.MergeFrom(other.OverallRanking);
      }
      if (other.vrRanking_ != null) {
        if (vrRanking_ == null) {
          VrRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        VrRanking.MergeFrom(other.VrRanking);
      }
      if (other.decranking_ != null) {
        if (decranking_ == null) {
          Decranking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        Decranking.MergeFrom(other.Decranking);
      }
      if (other.controllerRanking_ != null) {
        if (controllerRanking_ == null) {
          ControllerRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        ControllerRanking.MergeFrom(other.ControllerRanking);
      }
      if (other.linuxRanking_ != null) {
        if (linuxRanking_ == null) {
          LinuxRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        LinuxRanking.MergeFrom(other.LinuxRanking);
      }
      if (other.macRanking_ != null) {
        if (macRanking_ == null) {
          MacRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        MacRanking.MergeFrom(other.MacRanking);
      }
      if (other.windowsRanking_ != null) {
        if (windowsRanking_ == null) {
          WindowsRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
        }
        WindowsRanking.MergeFrom(other.WindowsRanking);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (overallRanking_ == null) {
              OverallRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(OverallRanking);
            break;
          }
          case 18: {
            if (vrRanking_ == null) {
              VrRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(VrRanking);
            break;
          }
          case 26: {
            if (decranking_ == null) {
              Decranking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(Decranking);
            break;
          }
          case 34: {
            if (controllerRanking_ == null) {
              ControllerRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(ControllerRanking);
            break;
          }
          case 42: {
            if (linuxRanking_ == null) {
              LinuxRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(LinuxRanking);
            break;
          }
          case 50: {
            if (macRanking_ == null) {
              MacRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(MacRanking);
            break;
          }
          case 58: {
            if (windowsRanking_ == null) {
              WindowsRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(WindowsRanking);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (overallRanking_ == null) {
              OverallRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(OverallRanking);
            break;
          }
          case 18: {
            if (vrRanking_ == null) {
              VrRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(VrRanking);
            break;
          }
          case 26: {
            if (decranking_ == null) {
              Decranking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(Decranking);
            break;
          }
          case 34: {
            if (controllerRanking_ == null) {
              ControllerRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(ControllerRanking);
            break;
          }
          case 42: {
            if (linuxRanking_ == null) {
              LinuxRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(LinuxRanking);
            break;
          }
          case 50: {
            if (macRanking_ == null) {
              MacRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(MacRanking);
            break;
          }
          case 58: {
            if (windowsRanking_ == null) {
              WindowsRanking = new global::OpenSteamworks.Protobuf.WebUI.CRankingCategory();
            }
            input.ReadMessage(WindowsRanking);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameSummary : pb::IMessage<CGameSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameSummary> _parser = new pb::MessageParser<CGameSummary>(() => new CGameSummary());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameSummary(CGameSummary other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      newThisYear_ = other.newThisYear_;
      rtimeFirstPlayedLifetime_ = other.rtimeFirstPlayedLifetime_;
      demo_ = other.demo_;
      playtest_ = other.playtest_;
      playedDuringEarlyAccess_ = other.playedDuringEarlyAccess_;
      playedVr_ = other.playedVr_;
      playedDeck_ = other.playedDeck_;
      playedController_ = other.playedController_;
      playedLinux_ = other.playedLinux_;
      playedMac_ = other.playedMac_;
      playedWindows_ = other.playedWindows_;
      totalPlaytimePercentagex100_ = other.totalPlaytimePercentagex100_;
      totalSessions_ = other.totalSessions_;
      rtimeReleaseDate_ = other.rtimeReleaseDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameSummary Clone() {
      return new CGameSummary(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "new_this_year" field.</summary>
    public const int NewThisYearFieldNumber = 2;
    private readonly static bool NewThisYearDefaultValue = false;

    private bool newThisYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NewThisYear {
      get { if ((_hasBits0 & 2) != 0) { return newThisYear_; } else { return NewThisYearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        newThisYear_ = value;
      }
    }
    /// <summary>Gets whether the "new_this_year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewThisYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "new_this_year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewThisYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rtime_first_played_lifetime" field.</summary>
    public const int RtimeFirstPlayedLifetimeFieldNumber = 3;
    private readonly static uint RtimeFirstPlayedLifetimeDefaultValue = 0;

    private uint rtimeFirstPlayedLifetime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtimeFirstPlayedLifetime {
      get { if ((_hasBits0 & 4) != 0) { return rtimeFirstPlayedLifetime_; } else { return RtimeFirstPlayedLifetimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rtimeFirstPlayedLifetime_ = value;
      }
    }
    /// <summary>Gets whether the "rtime_first_played_lifetime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtimeFirstPlayedLifetime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rtime_first_played_lifetime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtimeFirstPlayedLifetime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "demo" field.</summary>
    public const int DemoFieldNumber = 4;
    private readonly static bool DemoDefaultValue = false;

    private bool demo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Demo {
      get { if ((_hasBits0 & 8) != 0) { return demo_; } else { return DemoDefaultValue; } }
      set {
        _hasBits0 |= 8;
        demo_ = value;
      }
    }
    /// <summary>Gets whether the "demo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDemo {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "demo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDemo() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "playtest" field.</summary>
    public const int PlaytestFieldNumber = 5;
    private readonly static bool PlaytestDefaultValue = false;

    private bool playtest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playtest {
      get { if ((_hasBits0 & 16) != 0) { return playtest_; } else { return PlaytestDefaultValue; } }
      set {
        _hasBits0 |= 16;
        playtest_ = value;
      }
    }
    /// <summary>Gets whether the "playtest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaytest {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "playtest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaytest() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "played_during_early_access" field.</summary>
    public const int PlayedDuringEarlyAccessFieldNumber = 6;
    private readonly static bool PlayedDuringEarlyAccessDefaultValue = false;

    private bool playedDuringEarlyAccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedDuringEarlyAccess {
      get { if ((_hasBits0 & 32) != 0) { return playedDuringEarlyAccess_; } else { return PlayedDuringEarlyAccessDefaultValue; } }
      set {
        _hasBits0 |= 32;
        playedDuringEarlyAccess_ = value;
      }
    }
    /// <summary>Gets whether the "played_during_early_access" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedDuringEarlyAccess {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "played_during_early_access" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedDuringEarlyAccess() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "played_vr" field.</summary>
    public const int PlayedVrFieldNumber = 7;
    private readonly static bool PlayedVrDefaultValue = false;

    private bool playedVr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedVr {
      get { if ((_hasBits0 & 64) != 0) { return playedVr_; } else { return PlayedVrDefaultValue; } }
      set {
        _hasBits0 |= 64;
        playedVr_ = value;
      }
    }
    /// <summary>Gets whether the "played_vr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedVr {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "played_vr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedVr() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "played_deck" field.</summary>
    public const int PlayedDeckFieldNumber = 8;
    private readonly static bool PlayedDeckDefaultValue = false;

    private bool playedDeck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedDeck {
      get { if ((_hasBits0 & 128) != 0) { return playedDeck_; } else { return PlayedDeckDefaultValue; } }
      set {
        _hasBits0 |= 128;
        playedDeck_ = value;
      }
    }
    /// <summary>Gets whether the "played_deck" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedDeck {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "played_deck" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedDeck() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "played_controller" field.</summary>
    public const int PlayedControllerFieldNumber = 9;
    private readonly static bool PlayedControllerDefaultValue = false;

    private bool playedController_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedController {
      get { if ((_hasBits0 & 256) != 0) { return playedController_; } else { return PlayedControllerDefaultValue; } }
      set {
        _hasBits0 |= 256;
        playedController_ = value;
      }
    }
    /// <summary>Gets whether the "played_controller" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedController {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "played_controller" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedController() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "played_linux" field.</summary>
    public const int PlayedLinuxFieldNumber = 10;
    private readonly static bool PlayedLinuxDefaultValue = false;

    private bool playedLinux_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedLinux {
      get { if ((_hasBits0 & 512) != 0) { return playedLinux_; } else { return PlayedLinuxDefaultValue; } }
      set {
        _hasBits0 |= 512;
        playedLinux_ = value;
      }
    }
    /// <summary>Gets whether the "played_linux" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedLinux {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "played_linux" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedLinux() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "played_mac" field.</summary>
    public const int PlayedMacFieldNumber = 11;
    private readonly static bool PlayedMacDefaultValue = false;

    private bool playedMac_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedMac {
      get { if ((_hasBits0 & 1024) != 0) { return playedMac_; } else { return PlayedMacDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        playedMac_ = value;
      }
    }
    /// <summary>Gets whether the "played_mac" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedMac {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "played_mac" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedMac() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "played_windows" field.</summary>
    public const int PlayedWindowsFieldNumber = 12;
    private readonly static bool PlayedWindowsDefaultValue = false;

    private bool playedWindows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayedWindows {
      get { if ((_hasBits0 & 2048) != 0) { return playedWindows_; } else { return PlayedWindowsDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        playedWindows_ = value;
      }
    }
    /// <summary>Gets whether the "played_windows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedWindows {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "played_windows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedWindows() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "total_playtime_percentagex100" field.</summary>
    public const int TotalPlaytimePercentagex100FieldNumber = 13;
    private readonly static uint TotalPlaytimePercentagex100DefaultValue = 0;

    private uint totalPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalPlaytimePercentagex100 {
      get { if ((_hasBits0 & 4096) != 0) { return totalPlaytimePercentagex100_; } else { return TotalPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 4096;
        totalPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "total_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlaytimePercentagex100 {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "total_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlaytimePercentagex100() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "total_sessions" field.</summary>
    public const int TotalSessionsFieldNumber = 14;
    private readonly static uint TotalSessionsDefaultValue = 0;

    private uint totalSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalSessions {
      get { if ((_hasBits0 & 8192) != 0) { return totalSessions_; } else { return TotalSessionsDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        totalSessions_ = value;
      }
    }
    /// <summary>Gets whether the "total_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalSessions {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "total_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalSessions() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "rtime_release_date" field.</summary>
    public const int RtimeReleaseDateFieldNumber = 15;
    private readonly static uint RtimeReleaseDateDefaultValue = 0;

    private uint rtimeReleaseDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtimeReleaseDate {
      get { if ((_hasBits0 & 16384) != 0) { return rtimeReleaseDate_; } else { return RtimeReleaseDateDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        rtimeReleaseDate_ = value;
      }
    }
    /// <summary>Gets whether the "rtime_release_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtimeReleaseDate {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "rtime_release_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtimeReleaseDate() {
      _hasBits0 &= ~16384;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (NewThisYear != other.NewThisYear) return false;
      if (RtimeFirstPlayedLifetime != other.RtimeFirstPlayedLifetime) return false;
      if (Demo != other.Demo) return false;
      if (Playtest != other.Playtest) return false;
      if (PlayedDuringEarlyAccess != other.PlayedDuringEarlyAccess) return false;
      if (PlayedVr != other.PlayedVr) return false;
      if (PlayedDeck != other.PlayedDeck) return false;
      if (PlayedController != other.PlayedController) return false;
      if (PlayedLinux != other.PlayedLinux) return false;
      if (PlayedMac != other.PlayedMac) return false;
      if (PlayedWindows != other.PlayedWindows) return false;
      if (TotalPlaytimePercentagex100 != other.TotalPlaytimePercentagex100) return false;
      if (TotalSessions != other.TotalSessions) return false;
      if (RtimeReleaseDate != other.RtimeReleaseDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasNewThisYear) hash ^= NewThisYear.GetHashCode();
      if (HasRtimeFirstPlayedLifetime) hash ^= RtimeFirstPlayedLifetime.GetHashCode();
      if (HasDemo) hash ^= Demo.GetHashCode();
      if (HasPlaytest) hash ^= Playtest.GetHashCode();
      if (HasPlayedDuringEarlyAccess) hash ^= PlayedDuringEarlyAccess.GetHashCode();
      if (HasPlayedVr) hash ^= PlayedVr.GetHashCode();
      if (HasPlayedDeck) hash ^= PlayedDeck.GetHashCode();
      if (HasPlayedController) hash ^= PlayedController.GetHashCode();
      if (HasPlayedLinux) hash ^= PlayedLinux.GetHashCode();
      if (HasPlayedMac) hash ^= PlayedMac.GetHashCode();
      if (HasPlayedWindows) hash ^= PlayedWindows.GetHashCode();
      if (HasTotalPlaytimePercentagex100) hash ^= TotalPlaytimePercentagex100.GetHashCode();
      if (HasTotalSessions) hash ^= TotalSessions.GetHashCode();
      if (HasRtimeReleaseDate) hash ^= RtimeReleaseDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasNewThisYear) {
        output.WriteRawTag(16);
        output.WriteBool(NewThisYear);
      }
      if (HasRtimeFirstPlayedLifetime) {
        output.WriteRawTag(24);
        output.WriteUInt32(RtimeFirstPlayedLifetime);
      }
      if (HasDemo) {
        output.WriteRawTag(32);
        output.WriteBool(Demo);
      }
      if (HasPlaytest) {
        output.WriteRawTag(40);
        output.WriteBool(Playtest);
      }
      if (HasPlayedDuringEarlyAccess) {
        output.WriteRawTag(48);
        output.WriteBool(PlayedDuringEarlyAccess);
      }
      if (HasPlayedVr) {
        output.WriteRawTag(56);
        output.WriteBool(PlayedVr);
      }
      if (HasPlayedDeck) {
        output.WriteRawTag(64);
        output.WriteBool(PlayedDeck);
      }
      if (HasPlayedController) {
        output.WriteRawTag(72);
        output.WriteBool(PlayedController);
      }
      if (HasPlayedLinux) {
        output.WriteRawTag(80);
        output.WriteBool(PlayedLinux);
      }
      if (HasPlayedMac) {
        output.WriteRawTag(88);
        output.WriteBool(PlayedMac);
      }
      if (HasPlayedWindows) {
        output.WriteRawTag(96);
        output.WriteBool(PlayedWindows);
      }
      if (HasTotalPlaytimePercentagex100) {
        output.WriteRawTag(104);
        output.WriteUInt32(TotalPlaytimePercentagex100);
      }
      if (HasTotalSessions) {
        output.WriteRawTag(112);
        output.WriteUInt32(TotalSessions);
      }
      if (HasRtimeReleaseDate) {
        output.WriteRawTag(120);
        output.WriteUInt32(RtimeReleaseDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasNewThisYear) {
        output.WriteRawTag(16);
        output.WriteBool(NewThisYear);
      }
      if (HasRtimeFirstPlayedLifetime) {
        output.WriteRawTag(24);
        output.WriteUInt32(RtimeFirstPlayedLifetime);
      }
      if (HasDemo) {
        output.WriteRawTag(32);
        output.WriteBool(Demo);
      }
      if (HasPlaytest) {
        output.WriteRawTag(40);
        output.WriteBool(Playtest);
      }
      if (HasPlayedDuringEarlyAccess) {
        output.WriteRawTag(48);
        output.WriteBool(PlayedDuringEarlyAccess);
      }
      if (HasPlayedVr) {
        output.WriteRawTag(56);
        output.WriteBool(PlayedVr);
      }
      if (HasPlayedDeck) {
        output.WriteRawTag(64);
        output.WriteBool(PlayedDeck);
      }
      if (HasPlayedController) {
        output.WriteRawTag(72);
        output.WriteBool(PlayedController);
      }
      if (HasPlayedLinux) {
        output.WriteRawTag(80);
        output.WriteBool(PlayedLinux);
      }
      if (HasPlayedMac) {
        output.WriteRawTag(88);
        output.WriteBool(PlayedMac);
      }
      if (HasPlayedWindows) {
        output.WriteRawTag(96);
        output.WriteBool(PlayedWindows);
      }
      if (HasTotalPlaytimePercentagex100) {
        output.WriteRawTag(104);
        output.WriteUInt32(TotalPlaytimePercentagex100);
      }
      if (HasTotalSessions) {
        output.WriteRawTag(112);
        output.WriteUInt32(TotalSessions);
      }
      if (HasRtimeReleaseDate) {
        output.WriteRawTag(120);
        output.WriteUInt32(RtimeReleaseDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasNewThisYear) {
        size += 1 + 1;
      }
      if (HasRtimeFirstPlayedLifetime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeFirstPlayedLifetime);
      }
      if (HasDemo) {
        size += 1 + 1;
      }
      if (HasPlaytest) {
        size += 1 + 1;
      }
      if (HasPlayedDuringEarlyAccess) {
        size += 1 + 1;
      }
      if (HasPlayedVr) {
        size += 1 + 1;
      }
      if (HasPlayedDeck) {
        size += 1 + 1;
      }
      if (HasPlayedController) {
        size += 1 + 1;
      }
      if (HasPlayedLinux) {
        size += 1 + 1;
      }
      if (HasPlayedMac) {
        size += 1 + 1;
      }
      if (HasPlayedWindows) {
        size += 1 + 1;
      }
      if (HasTotalPlaytimePercentagex100) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalPlaytimePercentagex100);
      }
      if (HasTotalSessions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalSessions);
      }
      if (HasRtimeReleaseDate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeReleaseDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameSummary other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasNewThisYear) {
        NewThisYear = other.NewThisYear;
      }
      if (other.HasRtimeFirstPlayedLifetime) {
        RtimeFirstPlayedLifetime = other.RtimeFirstPlayedLifetime;
      }
      if (other.HasDemo) {
        Demo = other.Demo;
      }
      if (other.HasPlaytest) {
        Playtest = other.Playtest;
      }
      if (other.HasPlayedDuringEarlyAccess) {
        PlayedDuringEarlyAccess = other.PlayedDuringEarlyAccess;
      }
      if (other.HasPlayedVr) {
        PlayedVr = other.PlayedVr;
      }
      if (other.HasPlayedDeck) {
        PlayedDeck = other.PlayedDeck;
      }
      if (other.HasPlayedController) {
        PlayedController = other.PlayedController;
      }
      if (other.HasPlayedLinux) {
        PlayedLinux = other.PlayedLinux;
      }
      if (other.HasPlayedMac) {
        PlayedMac = other.PlayedMac;
      }
      if (other.HasPlayedWindows) {
        PlayedWindows = other.PlayedWindows;
      }
      if (other.HasTotalPlaytimePercentagex100) {
        TotalPlaytimePercentagex100 = other.TotalPlaytimePercentagex100;
      }
      if (other.HasTotalSessions) {
        TotalSessions = other.TotalSessions;
      }
      if (other.HasRtimeReleaseDate) {
        RtimeReleaseDate = other.RtimeReleaseDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            NewThisYear = input.ReadBool();
            break;
          }
          case 24: {
            RtimeFirstPlayedLifetime = input.ReadUInt32();
            break;
          }
          case 32: {
            Demo = input.ReadBool();
            break;
          }
          case 40: {
            Playtest = input.ReadBool();
            break;
          }
          case 48: {
            PlayedDuringEarlyAccess = input.ReadBool();
            break;
          }
          case 56: {
            PlayedVr = input.ReadBool();
            break;
          }
          case 64: {
            PlayedDeck = input.ReadBool();
            break;
          }
          case 72: {
            PlayedController = input.ReadBool();
            break;
          }
          case 80: {
            PlayedLinux = input.ReadBool();
            break;
          }
          case 88: {
            PlayedMac = input.ReadBool();
            break;
          }
          case 96: {
            PlayedWindows = input.ReadBool();
            break;
          }
          case 104: {
            TotalPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 112: {
            TotalSessions = input.ReadUInt32();
            break;
          }
          case 120: {
            RtimeReleaseDate = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            NewThisYear = input.ReadBool();
            break;
          }
          case 24: {
            RtimeFirstPlayedLifetime = input.ReadUInt32();
            break;
          }
          case 32: {
            Demo = input.ReadBool();
            break;
          }
          case 40: {
            Playtest = input.ReadBool();
            break;
          }
          case 48: {
            PlayedDuringEarlyAccess = input.ReadBool();
            break;
          }
          case 56: {
            PlayedVr = input.ReadBool();
            break;
          }
          case 64: {
            PlayedDeck = input.ReadBool();
            break;
          }
          case 72: {
            PlayedController = input.ReadBool();
            break;
          }
          case 80: {
            PlayedLinux = input.ReadBool();
            break;
          }
          case 88: {
            PlayedMac = input.ReadBool();
            break;
          }
          case 96: {
            PlayedWindows = input.ReadBool();
            break;
          }
          case 104: {
            TotalPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 112: {
            TotalSessions = input.ReadUInt32();
            break;
          }
          case 120: {
            RtimeReleaseDate = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGlobalPercentiles : pb::IMessage<CGlobalPercentiles>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGlobalPercentiles> _parser = new pb::MessageParser<CGlobalPercentiles>(() => new CGlobalPercentiles());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGlobalPercentiles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGlobalPercentiles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGlobalPercentiles(CGlobalPercentiles other) : this() {
      _hasBits0 = other._hasBits0;
      medianAchievements_ = other.medianAchievements_;
      medianGames_ = other.medianGames_;
      medianStreak_ = other.medianStreak_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGlobalPercentiles Clone() {
      return new CGlobalPercentiles(this);
    }

    /// <summary>Field number for the "median_achievements" field.</summary>
    public const int MedianAchievementsFieldNumber = 1;
    private readonly static uint MedianAchievementsDefaultValue = 0;

    private uint medianAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MedianAchievements {
      get { if ((_hasBits0 & 1) != 0) { return medianAchievements_; } else { return MedianAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        medianAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "median_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMedianAchievements {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "median_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMedianAchievements() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "median_games" field.</summary>
    public const int MedianGamesFieldNumber = 2;
    private readonly static uint MedianGamesDefaultValue = 0;

    private uint medianGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MedianGames {
      get { if ((_hasBits0 & 2) != 0) { return medianGames_; } else { return MedianGamesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        medianGames_ = value;
      }
    }
    /// <summary>Gets whether the "median_games" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMedianGames {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "median_games" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMedianGames() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "median_streak" field.</summary>
    public const int MedianStreakFieldNumber = 3;
    private readonly static uint MedianStreakDefaultValue = 0;

    private uint medianStreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MedianStreak {
      get { if ((_hasBits0 & 4) != 0) { return medianStreak_; } else { return MedianStreakDefaultValue; } }
      set {
        _hasBits0 |= 4;
        medianStreak_ = value;
      }
    }
    /// <summary>Gets whether the "median_streak" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMedianStreak {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "median_streak" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMedianStreak() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGlobalPercentiles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGlobalPercentiles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MedianAchievements != other.MedianAchievements) return false;
      if (MedianGames != other.MedianGames) return false;
      if (MedianStreak != other.MedianStreak) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMedianAchievements) hash ^= MedianAchievements.GetHashCode();
      if (HasMedianGames) hash ^= MedianGames.GetHashCode();
      if (HasMedianStreak) hash ^= MedianStreak.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMedianAchievements) {
        output.WriteRawTag(8);
        output.WriteUInt32(MedianAchievements);
      }
      if (HasMedianGames) {
        output.WriteRawTag(16);
        output.WriteUInt32(MedianGames);
      }
      if (HasMedianStreak) {
        output.WriteRawTag(24);
        output.WriteUInt32(MedianStreak);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMedianAchievements) {
        output.WriteRawTag(8);
        output.WriteUInt32(MedianAchievements);
      }
      if (HasMedianGames) {
        output.WriteRawTag(16);
        output.WriteUInt32(MedianGames);
      }
      if (HasMedianStreak) {
        output.WriteRawTag(24);
        output.WriteUInt32(MedianStreak);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMedianAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MedianAchievements);
      }
      if (HasMedianGames) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MedianGames);
      }
      if (HasMedianStreak) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MedianStreak);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGlobalPercentiles other) {
      if (other == null) {
        return;
      }
      if (other.HasMedianAchievements) {
        MedianAchievements = other.MedianAchievements;
      }
      if (other.HasMedianGames) {
        MedianGames = other.MedianGames;
      }
      if (other.HasMedianStreak) {
        MedianStreak = other.MedianStreak;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MedianAchievements = input.ReadUInt32();
            break;
          }
          case 16: {
            MedianGames = input.ReadUInt32();
            break;
          }
          case 24: {
            MedianStreak = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MedianAchievements = input.ReadUInt32();
            break;
          }
          case 16: {
            MedianGames = input.ReadUInt32();
            break;
          }
          case 24: {
            MedianStreak = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGlobalPlaytimeDistribution : pb::IMessage<CGlobalPlaytimeDistribution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGlobalPlaytimeDistribution> _parser = new pb::MessageParser<CGlobalPlaytimeDistribution>(() => new CGlobalPlaytimeDistribution());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGlobalPlaytimeDistribution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGlobalPlaytimeDistribution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGlobalPlaytimeDistribution(CGlobalPlaytimeDistribution other) : this() {
      _hasBits0 = other._hasBits0;
      newReleases_ = other.newReleases_;
      recentReleases_ = other.recentReleases_;
      classicReleases_ = other.classicReleases_;
      recentCutoffYear_ = other.recentCutoffYear_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGlobalPlaytimeDistribution Clone() {
      return new CGlobalPlaytimeDistribution(this);
    }

    /// <summary>Field number for the "new_releases" field.</summary>
    public const int NewReleasesFieldNumber = 1;
    private readonly static uint NewReleasesDefaultValue = 0;

    private uint newReleases_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NewReleases {
      get { if ((_hasBits0 & 1) != 0) { return newReleases_; } else { return NewReleasesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        newReleases_ = value;
      }
    }
    /// <summary>Gets whether the "new_releases" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewReleases {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "new_releases" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewReleases() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "recent_releases" field.</summary>
    public const int RecentReleasesFieldNumber = 2;
    private readonly static uint RecentReleasesDefaultValue = 0;

    private uint recentReleases_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RecentReleases {
      get { if ((_hasBits0 & 2) != 0) { return recentReleases_; } else { return RecentReleasesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        recentReleases_ = value;
      }
    }
    /// <summary>Gets whether the "recent_releases" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecentReleases {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "recent_releases" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecentReleases() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "classic_releases" field.</summary>
    public const int ClassicReleasesFieldNumber = 3;
    private readonly static uint ClassicReleasesDefaultValue = 0;

    private uint classicReleases_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClassicReleases {
      get { if ((_hasBits0 & 4) != 0) { return classicReleases_; } else { return ClassicReleasesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        classicReleases_ = value;
      }
    }
    /// <summary>Gets whether the "classic_releases" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClassicReleases {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "classic_releases" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClassicReleases() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "recent_cutoff_year" field.</summary>
    public const int RecentCutoffYearFieldNumber = 4;
    private readonly static uint RecentCutoffYearDefaultValue = 0;

    private uint recentCutoffYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RecentCutoffYear {
      get { if ((_hasBits0 & 8) != 0) { return recentCutoffYear_; } else { return RecentCutoffYearDefaultValue; } }
      set {
        _hasBits0 |= 8;
        recentCutoffYear_ = value;
      }
    }
    /// <summary>Gets whether the "recent_cutoff_year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecentCutoffYear {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "recent_cutoff_year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecentCutoffYear() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGlobalPlaytimeDistribution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGlobalPlaytimeDistribution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewReleases != other.NewReleases) return false;
      if (RecentReleases != other.RecentReleases) return false;
      if (ClassicReleases != other.ClassicReleases) return false;
      if (RecentCutoffYear != other.RecentCutoffYear) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNewReleases) hash ^= NewReleases.GetHashCode();
      if (HasRecentReleases) hash ^= RecentReleases.GetHashCode();
      if (HasClassicReleases) hash ^= ClassicReleases.GetHashCode();
      if (HasRecentCutoffYear) hash ^= RecentCutoffYear.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNewReleases) {
        output.WriteRawTag(8);
        output.WriteUInt32(NewReleases);
      }
      if (HasRecentReleases) {
        output.WriteRawTag(16);
        output.WriteUInt32(RecentReleases);
      }
      if (HasClassicReleases) {
        output.WriteRawTag(24);
        output.WriteUInt32(ClassicReleases);
      }
      if (HasRecentCutoffYear) {
        output.WriteRawTag(32);
        output.WriteUInt32(RecentCutoffYear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNewReleases) {
        output.WriteRawTag(8);
        output.WriteUInt32(NewReleases);
      }
      if (HasRecentReleases) {
        output.WriteRawTag(16);
        output.WriteUInt32(RecentReleases);
      }
      if (HasClassicReleases) {
        output.WriteRawTag(24);
        output.WriteUInt32(ClassicReleases);
      }
      if (HasRecentCutoffYear) {
        output.WriteRawTag(32);
        output.WriteUInt32(RecentCutoffYear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNewReleases) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewReleases);
      }
      if (HasRecentReleases) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecentReleases);
      }
      if (HasClassicReleases) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassicReleases);
      }
      if (HasRecentCutoffYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecentCutoffYear);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGlobalPlaytimeDistribution other) {
      if (other == null) {
        return;
      }
      if (other.HasNewReleases) {
        NewReleases = other.NewReleases;
      }
      if (other.HasRecentReleases) {
        RecentReleases = other.RecentReleases;
      }
      if (other.HasClassicReleases) {
        ClassicReleases = other.ClassicReleases;
      }
      if (other.HasRecentCutoffYear) {
        RecentCutoffYear = other.RecentCutoffYear;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewReleases = input.ReadUInt32();
            break;
          }
          case 16: {
            RecentReleases = input.ReadUInt32();
            break;
          }
          case 24: {
            ClassicReleases = input.ReadUInt32();
            break;
          }
          case 32: {
            RecentCutoffYear = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NewReleases = input.ReadUInt32();
            break;
          }
          case 16: {
            RecentReleases = input.ReadUInt32();
            break;
          }
          case 24: {
            ClassicReleases = input.ReadUInt32();
            break;
          }
          case 32: {
            RecentCutoffYear = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMonthlyPlaytimeStats : pb::IMessage<CMonthlyPlaytimeStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMonthlyPlaytimeStats> _parser = new pb::MessageParser<CMonthlyPlaytimeStats>(() => new CMonthlyPlaytimeStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMonthlyPlaytimeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMonthlyPlaytimeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMonthlyPlaytimeStats(CMonthlyPlaytimeStats other) : this() {
      _hasBits0 = other._hasBits0;
      rtimeMonth_ = other.rtimeMonth_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      playtimeStreak_ = other.playtimeStreak_ != null ? other.playtimeStreak_.Clone() : null;
      appid_ = other.appid_.Clone();
      relativeMonthlyStats_ = other.relativeMonthlyStats_ != null ? other.relativeMonthlyStats_.Clone() : null;
      gameSummary_ = other.gameSummary_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMonthlyPlaytimeStats Clone() {
      return new CMonthlyPlaytimeStats(this);
    }

    /// <summary>Field number for the "rtime_month" field.</summary>
    public const int RtimeMonthFieldNumber = 1;
    private readonly static uint RtimeMonthDefaultValue = 0;

    private uint rtimeMonth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtimeMonth {
      get { if ((_hasBits0 & 1) != 0) { return rtimeMonth_; } else { return RtimeMonthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rtimeMonth_ = value;
      }
    }
    /// <summary>Gets whether the "rtime_month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtimeMonth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rtime_month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtimeMonth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "playtime_streak" field.</summary>
    public const int PlaytimeStreakFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak playtimeStreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak PlaytimeStreak {
      get { return playtimeStreak_; }
      set {
        playtimeStreak_ = value;
      }
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats> _repeated_appid_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats> appid_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats> Appid {
      get { return appid_; }
    }

    /// <summary>Field number for the "relative_monthly_stats" field.</summary>
    public const int RelativeMonthlyStatsFieldNumber = 5;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats relativeMonthlyStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats RelativeMonthlyStats {
      get { return relativeMonthlyStats_; }
      set {
        relativeMonthlyStats_ = value;
      }
    }

    /// <summary>Field number for the "game_summary" field.</summary>
    public const int GameSummaryFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary> _repeated_gameSummary_codec
        = pb::FieldCodec.ForMessage(50, global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary> gameSummary_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSimpleGameSummary> GameSummary {
      get { return gameSummary_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMonthlyPlaytimeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMonthlyPlaytimeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RtimeMonth != other.RtimeMonth) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(PlaytimeStreak, other.PlaytimeStreak)) return false;
      if(!appid_.Equals(other.appid_)) return false;
      if (!object.Equals(RelativeMonthlyStats, other.RelativeMonthlyStats)) return false;
      if(!gameSummary_.Equals(other.gameSummary_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRtimeMonth) hash ^= RtimeMonth.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (playtimeStreak_ != null) hash ^= PlaytimeStreak.GetHashCode();
      hash ^= appid_.GetHashCode();
      if (relativeMonthlyStats_ != null) hash ^= RelativeMonthlyStats.GetHashCode();
      hash ^= gameSummary_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRtimeMonth) {
        output.WriteRawTag(8);
        output.WriteUInt32(RtimeMonth);
      }
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (playtimeStreak_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStreak);
      }
      appid_.WriteTo(output, _repeated_appid_codec);
      if (relativeMonthlyStats_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RelativeMonthlyStats);
      }
      gameSummary_.WriteTo(output, _repeated_gameSummary_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRtimeMonth) {
        output.WriteRawTag(8);
        output.WriteUInt32(RtimeMonth);
      }
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (playtimeStreak_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStreak);
      }
      appid_.WriteTo(ref output, _repeated_appid_codec);
      if (relativeMonthlyStats_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RelativeMonthlyStats);
      }
      gameSummary_.WriteTo(ref output, _repeated_gameSummary_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRtimeMonth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeMonth);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (playtimeStreak_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaytimeStreak);
      }
      size += appid_.CalculateSize(_repeated_appid_codec);
      if (relativeMonthlyStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelativeMonthlyStats);
      }
      size += gameSummary_.CalculateSize(_repeated_gameSummary_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMonthlyPlaytimeStats other) {
      if (other == null) {
        return;
      }
      if (other.HasRtimeMonth) {
        RtimeMonth = other.RtimeMonth;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.playtimeStreak_ != null) {
        if (playtimeStreak_ == null) {
          PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
        }
        PlaytimeStreak.MergeFrom(other.PlaytimeStreak);
      }
      appid_.Add(other.appid_);
      if (other.relativeMonthlyStats_ != null) {
        if (relativeMonthlyStats_ == null) {
          RelativeMonthlyStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
        }
        RelativeMonthlyStats.MergeFrom(other.RelativeMonthlyStats);
      }
      gameSummary_.Add(other.gameSummary_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RtimeMonth = input.ReadUInt32();
            break;
          }
          case 18: {
            if (stats_ == null) {
              Stats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            if (playtimeStreak_ == null) {
              PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
            }
            input.ReadMessage(PlaytimeStreak);
            break;
          }
          case 34: {
            appid_.AddEntriesFrom(input, _repeated_appid_codec);
            break;
          }
          case 42: {
            if (relativeMonthlyStats_ == null) {
              RelativeMonthlyStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(RelativeMonthlyStats);
            break;
          }
          case 50: {
            gameSummary_.AddEntriesFrom(input, _repeated_gameSummary_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RtimeMonth = input.ReadUInt32();
            break;
          }
          case 18: {
            if (stats_ == null) {
              Stats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            if (playtimeStreak_ == null) {
              PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
            }
            input.ReadMessage(PlaytimeStreak);
            break;
          }
          case 34: {
            appid_.AddEntriesFrom(ref input, _repeated_appid_codec);
            break;
          }
          case 42: {
            if (relativeMonthlyStats_ == null) {
              RelativeMonthlyStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(RelativeMonthlyStats);
            break;
          }
          case 50: {
            gameSummary_.AddEntriesFrom(ref input, _repeated_gameSummary_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMonthlyProgress : pb::IMessage<CMonthlyProgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMonthlyProgress> _parser = new pb::MessageParser<CMonthlyProgress>(() => new CMonthlyProgress());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMonthlyProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMonthlyProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMonthlyProgress(CMonthlyProgress other) : this() {
      _hasBits0 = other._hasBits0;
      year_ = other.year_;
      month_ = other.month_;
      rtProcessingStart_ = other.rtProcessingStart_;
      rtQueueComplete_ = other.rtQueueComplete_;
      rtQueueEmptied_ = other.rtQueueEmptied_;
      rtPlatformSummary_ = other.rtPlatformSummary_;
      accountsQueued_ = other.accountsQueued_;
      largestAccountId_ = other.largestAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMonthlyProgress Clone() {
      return new CMonthlyProgress(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 1;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private readonly static uint MonthDefaultValue = 0;

    private uint month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Month {
      get { if ((_hasBits0 & 2) != 0) { return month_; } else { return MonthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        month_ = value;
      }
    }
    /// <summary>Gets whether the "month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rt_processing_start" field.</summary>
    public const int RtProcessingStartFieldNumber = 3;
    private readonly static uint RtProcessingStartDefaultValue = 0;

    private uint rtProcessingStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtProcessingStart {
      get { if ((_hasBits0 & 4) != 0) { return rtProcessingStart_; } else { return RtProcessingStartDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rtProcessingStart_ = value;
      }
    }
    /// <summary>Gets whether the "rt_processing_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtProcessingStart {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rt_processing_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtProcessingStart() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rt_queue_complete" field.</summary>
    public const int RtQueueCompleteFieldNumber = 4;
    private readonly static uint RtQueueCompleteDefaultValue = 0;

    private uint rtQueueComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtQueueComplete {
      get { if ((_hasBits0 & 8) != 0) { return rtQueueComplete_; } else { return RtQueueCompleteDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rtQueueComplete_ = value;
      }
    }
    /// <summary>Gets whether the "rt_queue_complete" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtQueueComplete {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rt_queue_complete" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtQueueComplete() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "rt_queue_emptied" field.</summary>
    public const int RtQueueEmptiedFieldNumber = 5;
    private readonly static uint RtQueueEmptiedDefaultValue = 0;

    private uint rtQueueEmptied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtQueueEmptied {
      get { if ((_hasBits0 & 16) != 0) { return rtQueueEmptied_; } else { return RtQueueEmptiedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        rtQueueEmptied_ = value;
      }
    }
    /// <summary>Gets whether the "rt_queue_emptied" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtQueueEmptied {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "rt_queue_emptied" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtQueueEmptied() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "rt_platform_summary" field.</summary>
    public const int RtPlatformSummaryFieldNumber = 6;
    private readonly static uint RtPlatformSummaryDefaultValue = 0;

    private uint rtPlatformSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtPlatformSummary {
      get { if ((_hasBits0 & 32) != 0) { return rtPlatformSummary_; } else { return RtPlatformSummaryDefaultValue; } }
      set {
        _hasBits0 |= 32;
        rtPlatformSummary_ = value;
      }
    }
    /// <summary>Gets whether the "rt_platform_summary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtPlatformSummary {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "rt_platform_summary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtPlatformSummary() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "accounts_queued" field.</summary>
    public const int AccountsQueuedFieldNumber = 7;
    private readonly static uint AccountsQueuedDefaultValue = 0;

    private uint accountsQueued_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AccountsQueued {
      get { if ((_hasBits0 & 64) != 0) { return accountsQueued_; } else { return AccountsQueuedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        accountsQueued_ = value;
      }
    }
    /// <summary>Gets whether the "accounts_queued" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountsQueued {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "accounts_queued" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountsQueued() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "largest_account_id" field.</summary>
    public const int LargestAccountIdFieldNumber = 8;
    private readonly static uint LargestAccountIdDefaultValue = 0;

    private uint largestAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LargestAccountId {
      get { if ((_hasBits0 & 128) != 0) { return largestAccountId_; } else { return LargestAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 128;
        largestAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "largest_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLargestAccountId {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "largest_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLargestAccountId() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMonthlyProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMonthlyProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      if (Month != other.Month) return false;
      if (RtProcessingStart != other.RtProcessingStart) return false;
      if (RtQueueComplete != other.RtQueueComplete) return false;
      if (RtQueueEmptied != other.RtQueueEmptied) return false;
      if (RtPlatformSummary != other.RtPlatformSummary) return false;
      if (AccountsQueued != other.AccountsQueued) return false;
      if (LargestAccountId != other.LargestAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasMonth) hash ^= Month.GetHashCode();
      if (HasRtProcessingStart) hash ^= RtProcessingStart.GetHashCode();
      if (HasRtQueueComplete) hash ^= RtQueueComplete.GetHashCode();
      if (HasRtQueueEmptied) hash ^= RtQueueEmptied.GetHashCode();
      if (HasRtPlatformSummary) hash ^= RtPlatformSummary.GetHashCode();
      if (HasAccountsQueued) hash ^= AccountsQueued.GetHashCode();
      if (HasLargestAccountId) hash ^= LargestAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteUInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Month);
      }
      if (HasRtProcessingStart) {
        output.WriteRawTag(24);
        output.WriteUInt32(RtProcessingStart);
      }
      if (HasRtQueueComplete) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtQueueComplete);
      }
      if (HasRtQueueEmptied) {
        output.WriteRawTag(40);
        output.WriteUInt32(RtQueueEmptied);
      }
      if (HasRtPlatformSummary) {
        output.WriteRawTag(48);
        output.WriteUInt32(RtPlatformSummary);
      }
      if (HasAccountsQueued) {
        output.WriteRawTag(56);
        output.WriteUInt32(AccountsQueued);
      }
      if (HasLargestAccountId) {
        output.WriteRawTag(64);
        output.WriteUInt32(LargestAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteUInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Month);
      }
      if (HasRtProcessingStart) {
        output.WriteRawTag(24);
        output.WriteUInt32(RtProcessingStart);
      }
      if (HasRtQueueComplete) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtQueueComplete);
      }
      if (HasRtQueueEmptied) {
        output.WriteRawTag(40);
        output.WriteUInt32(RtQueueEmptied);
      }
      if (HasRtPlatformSummary) {
        output.WriteRawTag(48);
        output.WriteUInt32(RtPlatformSummary);
      }
      if (HasAccountsQueued) {
        output.WriteRawTag(56);
        output.WriteUInt32(AccountsQueued);
      }
      if (HasLargestAccountId) {
        output.WriteRawTag(64);
        output.WriteUInt32(LargestAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (HasMonth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Month);
      }
      if (HasRtProcessingStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtProcessingStart);
      }
      if (HasRtQueueComplete) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtQueueComplete);
      }
      if (HasRtQueueEmptied) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtQueueEmptied);
      }
      if (HasRtPlatformSummary) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtPlatformSummary);
      }
      if (HasAccountsQueued) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountsQueued);
      }
      if (HasLargestAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LargestAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMonthlyProgress other) {
      if (other == null) {
        return;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasMonth) {
        Month = other.Month;
      }
      if (other.HasRtProcessingStart) {
        RtProcessingStart = other.RtProcessingStart;
      }
      if (other.HasRtQueueComplete) {
        RtQueueComplete = other.RtQueueComplete;
      }
      if (other.HasRtQueueEmptied) {
        RtQueueEmptied = other.RtQueueEmptied;
      }
      if (other.HasRtPlatformSummary) {
        RtPlatformSummary = other.RtPlatformSummary;
      }
      if (other.HasAccountsQueued) {
        AccountsQueued = other.AccountsQueued;
      }
      if (other.HasLargestAccountId) {
        LargestAccountId = other.LargestAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Year = input.ReadUInt32();
            break;
          }
          case 16: {
            Month = input.ReadUInt32();
            break;
          }
          case 24: {
            RtProcessingStart = input.ReadUInt32();
            break;
          }
          case 32: {
            RtQueueComplete = input.ReadUInt32();
            break;
          }
          case 40: {
            RtQueueEmptied = input.ReadUInt32();
            break;
          }
          case 48: {
            RtPlatformSummary = input.ReadUInt32();
            break;
          }
          case 56: {
            AccountsQueued = input.ReadUInt32();
            break;
          }
          case 64: {
            LargestAccountId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Year = input.ReadUInt32();
            break;
          }
          case 16: {
            Month = input.ReadUInt32();
            break;
          }
          case 24: {
            RtProcessingStart = input.ReadUInt32();
            break;
          }
          case 32: {
            RtQueueComplete = input.ReadUInt32();
            break;
          }
          case 40: {
            RtQueueEmptied = input.ReadUInt32();
            break;
          }
          case 48: {
            RtPlatformSummary = input.ReadUInt32();
            break;
          }
          case 56: {
            AccountsQueued = input.ReadUInt32();
            break;
          }
          case 64: {
            LargestAccountId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlaytimeByNumbers : pb::IMessage<CPlaytimeByNumbers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlaytimeByNumbers> _parser = new pb::MessageParser<CPlaytimeByNumbers>(() => new CPlaytimeByNumbers());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlaytimeByNumbers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeByNumbers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeByNumbers(CPlaytimeByNumbers other) : this() {
      _hasBits0 = other._hasBits0;
      screenshotsShared_ = other.screenshotsShared_;
      giftsSent_ = other.giftsSent_;
      loyaltyReactions_ = other.loyaltyReactions_;
      writtenReviews_ = other.writtenReviews_;
      guidesSubmitted_ = other.guidesSubmitted_;
      workshopContributions_ = other.workshopContributions_;
      badgesEarned_ = other.badgesEarned_;
      friendsAdded_ = other.friendsAdded_;
      forumPosts_ = other.forumPosts_;
      workshopSubscriptions_ = other.workshopSubscriptions_;
      guideSubscribers_ = other.guideSubscribers_;
      workshopSubscribers_ = other.workshopSubscribers_;
      gamesPlayedPct_ = other.gamesPlayedPct_;
      achievementsPct_ = other.achievementsPct_;
      gameStreapct_ = other.gameStreapct_;
      gamesPlayedAvg_ = other.gamesPlayedAvg_;
      achievementsAvg_ = other.achievementsAvg_;
      gameStreaavg_ = other.gameStreaavg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeByNumbers Clone() {
      return new CPlaytimeByNumbers(this);
    }

    /// <summary>Field number for the "screenshots_shared" field.</summary>
    public const int ScreenshotsSharedFieldNumber = 1;
    private readonly static uint ScreenshotsSharedDefaultValue = 0;

    private uint screenshotsShared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScreenshotsShared {
      get { if ((_hasBits0 & 1) != 0) { return screenshotsShared_; } else { return ScreenshotsSharedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        screenshotsShared_ = value;
      }
    }
    /// <summary>Gets whether the "screenshots_shared" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScreenshotsShared {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "screenshots_shared" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScreenshotsShared() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gifts_sent" field.</summary>
    public const int GiftsSentFieldNumber = 2;
    private readonly static uint GiftsSentDefaultValue = 0;

    private uint giftsSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GiftsSent {
      get { if ((_hasBits0 & 2) != 0) { return giftsSent_; } else { return GiftsSentDefaultValue; } }
      set {
        _hasBits0 |= 2;
        giftsSent_ = value;
      }
    }
    /// <summary>Gets whether the "gifts_sent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGiftsSent {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gifts_sent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGiftsSent() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "loyalty_reactions" field.</summary>
    public const int LoyaltyReactionsFieldNumber = 3;
    private readonly static uint LoyaltyReactionsDefaultValue = 0;

    private uint loyaltyReactions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LoyaltyReactions {
      get { if ((_hasBits0 & 4) != 0) { return loyaltyReactions_; } else { return LoyaltyReactionsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        loyaltyReactions_ = value;
      }
    }
    /// <summary>Gets whether the "loyalty_reactions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoyaltyReactions {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "loyalty_reactions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoyaltyReactions() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "written_reviews" field.</summary>
    public const int WrittenReviewsFieldNumber = 4;
    private readonly static uint WrittenReviewsDefaultValue = 0;

    private uint writtenReviews_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WrittenReviews {
      get { if ((_hasBits0 & 8) != 0) { return writtenReviews_; } else { return WrittenReviewsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        writtenReviews_ = value;
      }
    }
    /// <summary>Gets whether the "written_reviews" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWrittenReviews {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "written_reviews" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWrittenReviews() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "guides_submitted" field.</summary>
    public const int GuidesSubmittedFieldNumber = 5;
    private readonly static uint GuidesSubmittedDefaultValue = 0;

    private uint guidesSubmitted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GuidesSubmitted {
      get { if ((_hasBits0 & 16) != 0) { return guidesSubmitted_; } else { return GuidesSubmittedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        guidesSubmitted_ = value;
      }
    }
    /// <summary>Gets whether the "guides_submitted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuidesSubmitted {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "guides_submitted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuidesSubmitted() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "workshop_contributions" field.</summary>
    public const int WorkshopContributionsFieldNumber = 6;
    private readonly static uint WorkshopContributionsDefaultValue = 0;

    private uint workshopContributions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WorkshopContributions {
      get { if ((_hasBits0 & 32) != 0) { return workshopContributions_; } else { return WorkshopContributionsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        workshopContributions_ = value;
      }
    }
    /// <summary>Gets whether the "workshop_contributions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorkshopContributions {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "workshop_contributions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorkshopContributions() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "badges_earned" field.</summary>
    public const int BadgesEarnedFieldNumber = 7;
    private readonly static uint BadgesEarnedDefaultValue = 0;

    private uint badgesEarned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BadgesEarned {
      get { if ((_hasBits0 & 64) != 0) { return badgesEarned_; } else { return BadgesEarnedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        badgesEarned_ = value;
      }
    }
    /// <summary>Gets whether the "badges_earned" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBadgesEarned {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "badges_earned" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBadgesEarned() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "friends_added" field.</summary>
    public const int FriendsAddedFieldNumber = 8;
    private readonly static uint FriendsAddedDefaultValue = 0;

    private uint friendsAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendsAdded {
      get { if ((_hasBits0 & 128) != 0) { return friendsAdded_; } else { return FriendsAddedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        friendsAdded_ = value;
      }
    }
    /// <summary>Gets whether the "friends_added" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsAdded {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "friends_added" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsAdded() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "forum_posts" field.</summary>
    public const int ForumPostsFieldNumber = 9;
    private readonly static uint ForumPostsDefaultValue = 0;

    private uint forumPosts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ForumPosts {
      get { if ((_hasBits0 & 256) != 0) { return forumPosts_; } else { return ForumPostsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        forumPosts_ = value;
      }
    }
    /// <summary>Gets whether the "forum_posts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForumPosts {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "forum_posts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForumPosts() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "workshop_subscriptions" field.</summary>
    public const int WorkshopSubscriptionsFieldNumber = 10;
    private readonly static uint WorkshopSubscriptionsDefaultValue = 0;

    private uint workshopSubscriptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WorkshopSubscriptions {
      get { if ((_hasBits0 & 512) != 0) { return workshopSubscriptions_; } else { return WorkshopSubscriptionsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        workshopSubscriptions_ = value;
      }
    }
    /// <summary>Gets whether the "workshop_subscriptions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorkshopSubscriptions {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "workshop_subscriptions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorkshopSubscriptions() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "guide_subscribers" field.</summary>
    public const int GuideSubscribersFieldNumber = 11;
    private readonly static uint GuideSubscribersDefaultValue = 0;

    private uint guideSubscribers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GuideSubscribers {
      get { if ((_hasBits0 & 1024) != 0) { return guideSubscribers_; } else { return GuideSubscribersDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        guideSubscribers_ = value;
      }
    }
    /// <summary>Gets whether the "guide_subscribers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuideSubscribers {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "guide_subscribers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuideSubscribers() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "workshop_subscribers" field.</summary>
    public const int WorkshopSubscribersFieldNumber = 12;
    private readonly static uint WorkshopSubscribersDefaultValue = 0;

    private uint workshopSubscribers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WorkshopSubscribers {
      get { if ((_hasBits0 & 2048) != 0) { return workshopSubscribers_; } else { return WorkshopSubscribersDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        workshopSubscribers_ = value;
      }
    }
    /// <summary>Gets whether the "workshop_subscribers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWorkshopSubscribers {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "workshop_subscribers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWorkshopSubscribers() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "games_played_pct" field.</summary>
    public const int GamesPlayedPctFieldNumber = 13;
    private readonly static uint GamesPlayedPctDefaultValue = 0;

    private uint gamesPlayedPct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GamesPlayedPct {
      get { if ((_hasBits0 & 4096) != 0) { return gamesPlayedPct_; } else { return GamesPlayedPctDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        gamesPlayedPct_ = value;
      }
    }
    /// <summary>Gets whether the "games_played_pct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesPlayedPct {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "games_played_pct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesPlayedPct() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "achievements_pct" field.</summary>
    public const int AchievementsPctFieldNumber = 14;
    private readonly static uint AchievementsPctDefaultValue = 0;

    private uint achievementsPct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AchievementsPct {
      get { if ((_hasBits0 & 8192) != 0) { return achievementsPct_; } else { return AchievementsPctDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        achievementsPct_ = value;
      }
    }
    /// <summary>Gets whether the "achievements_pct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAchievementsPct {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "achievements_pct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAchievementsPct() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "game_streapct" field.</summary>
    public const int GameStreapctFieldNumber = 15;
    private readonly static uint GameStreapctDefaultValue = 0;

    private uint gameStreapct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameStreapct {
      get { if ((_hasBits0 & 16384) != 0) { return gameStreapct_; } else { return GameStreapctDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        gameStreapct_ = value;
      }
    }
    /// <summary>Gets whether the "game_streapct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameStreapct {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "game_streapct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameStreapct() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "games_played_avg" field.</summary>
    public const int GamesPlayedAvgFieldNumber = 16;
    private readonly static uint GamesPlayedAvgDefaultValue = 0;

    private uint gamesPlayedAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GamesPlayedAvg {
      get { if ((_hasBits0 & 32768) != 0) { return gamesPlayedAvg_; } else { return GamesPlayedAvgDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gamesPlayedAvg_ = value;
      }
    }
    /// <summary>Gets whether the "games_played_avg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesPlayedAvg {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "games_played_avg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesPlayedAvg() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "achievements_avg" field.</summary>
    public const int AchievementsAvgFieldNumber = 17;
    private readonly static uint AchievementsAvgDefaultValue = 0;

    private uint achievementsAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AchievementsAvg {
      get { if ((_hasBits0 & 65536) != 0) { return achievementsAvg_; } else { return AchievementsAvgDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        achievementsAvg_ = value;
      }
    }
    /// <summary>Gets whether the "achievements_avg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAchievementsAvg {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "achievements_avg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAchievementsAvg() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "game_streaavg" field.</summary>
    public const int GameStreaavgFieldNumber = 18;
    private readonly static uint GameStreaavgDefaultValue = 0;

    private uint gameStreaavg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameStreaavg {
      get { if ((_hasBits0 & 131072) != 0) { return gameStreaavg_; } else { return GameStreaavgDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        gameStreaavg_ = value;
      }
    }
    /// <summary>Gets whether the "game_streaavg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameStreaavg {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "game_streaavg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameStreaavg() {
      _hasBits0 &= ~131072;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlaytimeByNumbers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlaytimeByNumbers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScreenshotsShared != other.ScreenshotsShared) return false;
      if (GiftsSent != other.GiftsSent) return false;
      if (LoyaltyReactions != other.LoyaltyReactions) return false;
      if (WrittenReviews != other.WrittenReviews) return false;
      if (GuidesSubmitted != other.GuidesSubmitted) return false;
      if (WorkshopContributions != other.WorkshopContributions) return false;
      if (BadgesEarned != other.BadgesEarned) return false;
      if (FriendsAdded != other.FriendsAdded) return false;
      if (ForumPosts != other.ForumPosts) return false;
      if (WorkshopSubscriptions != other.WorkshopSubscriptions) return false;
      if (GuideSubscribers != other.GuideSubscribers) return false;
      if (WorkshopSubscribers != other.WorkshopSubscribers) return false;
      if (GamesPlayedPct != other.GamesPlayedPct) return false;
      if (AchievementsPct != other.AchievementsPct) return false;
      if (GameStreapct != other.GameStreapct) return false;
      if (GamesPlayedAvg != other.GamesPlayedAvg) return false;
      if (AchievementsAvg != other.AchievementsAvg) return false;
      if (GameStreaavg != other.GameStreaavg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScreenshotsShared) hash ^= ScreenshotsShared.GetHashCode();
      if (HasGiftsSent) hash ^= GiftsSent.GetHashCode();
      if (HasLoyaltyReactions) hash ^= LoyaltyReactions.GetHashCode();
      if (HasWrittenReviews) hash ^= WrittenReviews.GetHashCode();
      if (HasGuidesSubmitted) hash ^= GuidesSubmitted.GetHashCode();
      if (HasWorkshopContributions) hash ^= WorkshopContributions.GetHashCode();
      if (HasBadgesEarned) hash ^= BadgesEarned.GetHashCode();
      if (HasFriendsAdded) hash ^= FriendsAdded.GetHashCode();
      if (HasForumPosts) hash ^= ForumPosts.GetHashCode();
      if (HasWorkshopSubscriptions) hash ^= WorkshopSubscriptions.GetHashCode();
      if (HasGuideSubscribers) hash ^= GuideSubscribers.GetHashCode();
      if (HasWorkshopSubscribers) hash ^= WorkshopSubscribers.GetHashCode();
      if (HasGamesPlayedPct) hash ^= GamesPlayedPct.GetHashCode();
      if (HasAchievementsPct) hash ^= AchievementsPct.GetHashCode();
      if (HasGameStreapct) hash ^= GameStreapct.GetHashCode();
      if (HasGamesPlayedAvg) hash ^= GamesPlayedAvg.GetHashCode();
      if (HasAchievementsAvg) hash ^= AchievementsAvg.GetHashCode();
      if (HasGameStreaavg) hash ^= GameStreaavg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScreenshotsShared) {
        output.WriteRawTag(8);
        output.WriteUInt32(ScreenshotsShared);
      }
      if (HasGiftsSent) {
        output.WriteRawTag(16);
        output.WriteUInt32(GiftsSent);
      }
      if (HasLoyaltyReactions) {
        output.WriteRawTag(24);
        output.WriteUInt32(LoyaltyReactions);
      }
      if (HasWrittenReviews) {
        output.WriteRawTag(32);
        output.WriteUInt32(WrittenReviews);
      }
      if (HasGuidesSubmitted) {
        output.WriteRawTag(40);
        output.WriteUInt32(GuidesSubmitted);
      }
      if (HasWorkshopContributions) {
        output.WriteRawTag(48);
        output.WriteUInt32(WorkshopContributions);
      }
      if (HasBadgesEarned) {
        output.WriteRawTag(56);
        output.WriteUInt32(BadgesEarned);
      }
      if (HasFriendsAdded) {
        output.WriteRawTag(64);
        output.WriteUInt32(FriendsAdded);
      }
      if (HasForumPosts) {
        output.WriteRawTag(72);
        output.WriteUInt32(ForumPosts);
      }
      if (HasWorkshopSubscriptions) {
        output.WriteRawTag(80);
        output.WriteUInt32(WorkshopSubscriptions);
      }
      if (HasGuideSubscribers) {
        output.WriteRawTag(88);
        output.WriteUInt32(GuideSubscribers);
      }
      if (HasWorkshopSubscribers) {
        output.WriteRawTag(96);
        output.WriteUInt32(WorkshopSubscribers);
      }
      if (HasGamesPlayedPct) {
        output.WriteRawTag(104);
        output.WriteUInt32(GamesPlayedPct);
      }
      if (HasAchievementsPct) {
        output.WriteRawTag(112);
        output.WriteUInt32(AchievementsPct);
      }
      if (HasGameStreapct) {
        output.WriteRawTag(120);
        output.WriteUInt32(GameStreapct);
      }
      if (HasGamesPlayedAvg) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(GamesPlayedAvg);
      }
      if (HasAchievementsAvg) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(AchievementsAvg);
      }
      if (HasGameStreaavg) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(GameStreaavg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScreenshotsShared) {
        output.WriteRawTag(8);
        output.WriteUInt32(ScreenshotsShared);
      }
      if (HasGiftsSent) {
        output.WriteRawTag(16);
        output.WriteUInt32(GiftsSent);
      }
      if (HasLoyaltyReactions) {
        output.WriteRawTag(24);
        output.WriteUInt32(LoyaltyReactions);
      }
      if (HasWrittenReviews) {
        output.WriteRawTag(32);
        output.WriteUInt32(WrittenReviews);
      }
      if (HasGuidesSubmitted) {
        output.WriteRawTag(40);
        output.WriteUInt32(GuidesSubmitted);
      }
      if (HasWorkshopContributions) {
        output.WriteRawTag(48);
        output.WriteUInt32(WorkshopContributions);
      }
      if (HasBadgesEarned) {
        output.WriteRawTag(56);
        output.WriteUInt32(BadgesEarned);
      }
      if (HasFriendsAdded) {
        output.WriteRawTag(64);
        output.WriteUInt32(FriendsAdded);
      }
      if (HasForumPosts) {
        output.WriteRawTag(72);
        output.WriteUInt32(ForumPosts);
      }
      if (HasWorkshopSubscriptions) {
        output.WriteRawTag(80);
        output.WriteUInt32(WorkshopSubscriptions);
      }
      if (HasGuideSubscribers) {
        output.WriteRawTag(88);
        output.WriteUInt32(GuideSubscribers);
      }
      if (HasWorkshopSubscribers) {
        output.WriteRawTag(96);
        output.WriteUInt32(WorkshopSubscribers);
      }
      if (HasGamesPlayedPct) {
        output.WriteRawTag(104);
        output.WriteUInt32(GamesPlayedPct);
      }
      if (HasAchievementsPct) {
        output.WriteRawTag(112);
        output.WriteUInt32(AchievementsPct);
      }
      if (HasGameStreapct) {
        output.WriteRawTag(120);
        output.WriteUInt32(GameStreapct);
      }
      if (HasGamesPlayedAvg) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(GamesPlayedAvg);
      }
      if (HasAchievementsAvg) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(AchievementsAvg);
      }
      if (HasGameStreaavg) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(GameStreaavg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScreenshotsShared) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScreenshotsShared);
      }
      if (HasGiftsSent) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GiftsSent);
      }
      if (HasLoyaltyReactions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoyaltyReactions);
      }
      if (HasWrittenReviews) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WrittenReviews);
      }
      if (HasGuidesSubmitted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuidesSubmitted);
      }
      if (HasWorkshopContributions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorkshopContributions);
      }
      if (HasBadgesEarned) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BadgesEarned);
      }
      if (HasFriendsAdded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendsAdded);
      }
      if (HasForumPosts) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ForumPosts);
      }
      if (HasWorkshopSubscriptions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorkshopSubscriptions);
      }
      if (HasGuideSubscribers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuideSubscribers);
      }
      if (HasWorkshopSubscribers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorkshopSubscribers);
      }
      if (HasGamesPlayedPct) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GamesPlayedPct);
      }
      if (HasAchievementsPct) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AchievementsPct);
      }
      if (HasGameStreapct) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameStreapct);
      }
      if (HasGamesPlayedAvg) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GamesPlayedAvg);
      }
      if (HasAchievementsAvg) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AchievementsAvg);
      }
      if (HasGameStreaavg) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GameStreaavg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlaytimeByNumbers other) {
      if (other == null) {
        return;
      }
      if (other.HasScreenshotsShared) {
        ScreenshotsShared = other.ScreenshotsShared;
      }
      if (other.HasGiftsSent) {
        GiftsSent = other.GiftsSent;
      }
      if (other.HasLoyaltyReactions) {
        LoyaltyReactions = other.LoyaltyReactions;
      }
      if (other.HasWrittenReviews) {
        WrittenReviews = other.WrittenReviews;
      }
      if (other.HasGuidesSubmitted) {
        GuidesSubmitted = other.GuidesSubmitted;
      }
      if (other.HasWorkshopContributions) {
        WorkshopContributions = other.WorkshopContributions;
      }
      if (other.HasBadgesEarned) {
        BadgesEarned = other.BadgesEarned;
      }
      if (other.HasFriendsAdded) {
        FriendsAdded = other.FriendsAdded;
      }
      if (other.HasForumPosts) {
        ForumPosts = other.ForumPosts;
      }
      if (other.HasWorkshopSubscriptions) {
        WorkshopSubscriptions = other.WorkshopSubscriptions;
      }
      if (other.HasGuideSubscribers) {
        GuideSubscribers = other.GuideSubscribers;
      }
      if (other.HasWorkshopSubscribers) {
        WorkshopSubscribers = other.WorkshopSubscribers;
      }
      if (other.HasGamesPlayedPct) {
        GamesPlayedPct = other.GamesPlayedPct;
      }
      if (other.HasAchievementsPct) {
        AchievementsPct = other.AchievementsPct;
      }
      if (other.HasGameStreapct) {
        GameStreapct = other.GameStreapct;
      }
      if (other.HasGamesPlayedAvg) {
        GamesPlayedAvg = other.GamesPlayedAvg;
      }
      if (other.HasAchievementsAvg) {
        AchievementsAvg = other.AchievementsAvg;
      }
      if (other.HasGameStreaavg) {
        GameStreaavg = other.GameStreaavg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScreenshotsShared = input.ReadUInt32();
            break;
          }
          case 16: {
            GiftsSent = input.ReadUInt32();
            break;
          }
          case 24: {
            LoyaltyReactions = input.ReadUInt32();
            break;
          }
          case 32: {
            WrittenReviews = input.ReadUInt32();
            break;
          }
          case 40: {
            GuidesSubmitted = input.ReadUInt32();
            break;
          }
          case 48: {
            WorkshopContributions = input.ReadUInt32();
            break;
          }
          case 56: {
            BadgesEarned = input.ReadUInt32();
            break;
          }
          case 64: {
            FriendsAdded = input.ReadUInt32();
            break;
          }
          case 72: {
            ForumPosts = input.ReadUInt32();
            break;
          }
          case 80: {
            WorkshopSubscriptions = input.ReadUInt32();
            break;
          }
          case 88: {
            GuideSubscribers = input.ReadUInt32();
            break;
          }
          case 96: {
            WorkshopSubscribers = input.ReadUInt32();
            break;
          }
          case 104: {
            GamesPlayedPct = input.ReadUInt32();
            break;
          }
          case 112: {
            AchievementsPct = input.ReadUInt32();
            break;
          }
          case 120: {
            GameStreapct = input.ReadUInt32();
            break;
          }
          case 128: {
            GamesPlayedAvg = input.ReadUInt32();
            break;
          }
          case 136: {
            AchievementsAvg = input.ReadUInt32();
            break;
          }
          case 144: {
            GameStreaavg = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ScreenshotsShared = input.ReadUInt32();
            break;
          }
          case 16: {
            GiftsSent = input.ReadUInt32();
            break;
          }
          case 24: {
            LoyaltyReactions = input.ReadUInt32();
            break;
          }
          case 32: {
            WrittenReviews = input.ReadUInt32();
            break;
          }
          case 40: {
            GuidesSubmitted = input.ReadUInt32();
            break;
          }
          case 48: {
            WorkshopContributions = input.ReadUInt32();
            break;
          }
          case 56: {
            BadgesEarned = input.ReadUInt32();
            break;
          }
          case 64: {
            FriendsAdded = input.ReadUInt32();
            break;
          }
          case 72: {
            ForumPosts = input.ReadUInt32();
            break;
          }
          case 80: {
            WorkshopSubscriptions = input.ReadUInt32();
            break;
          }
          case 88: {
            GuideSubscribers = input.ReadUInt32();
            break;
          }
          case 96: {
            WorkshopSubscribers = input.ReadUInt32();
            break;
          }
          case 104: {
            GamesPlayedPct = input.ReadUInt32();
            break;
          }
          case 112: {
            AchievementsPct = input.ReadUInt32();
            break;
          }
          case 120: {
            GameStreapct = input.ReadUInt32();
            break;
          }
          case 128: {
            GamesPlayedAvg = input.ReadUInt32();
            break;
          }
          case 136: {
            AchievementsAvg = input.ReadUInt32();
            break;
          }
          case 144: {
            GameStreaavg = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlaytimeRanks : pb::IMessage<CPlaytimeRanks>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlaytimeRanks> _parser = new pb::MessageParser<CPlaytimeRanks>(() => new CPlaytimeRanks());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlaytimeRanks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeRanks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeRanks(CPlaytimeRanks other) : this() {
      _hasBits0 = other._hasBits0;
      overallRank_ = other.overallRank_;
      vrRank_ = other.vrRank_;
      decrank_ = other.decrank_;
      controllerRank_ = other.controllerRank_;
      linuxRank_ = other.linuxRank_;
      macRank_ = other.macRank_;
      windowsRank_ = other.windowsRank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeRanks Clone() {
      return new CPlaytimeRanks(this);
    }

    /// <summary>Field number for the "overall_rank" field.</summary>
    public const int OverallRankFieldNumber = 1;
    private readonly static uint OverallRankDefaultValue = 0;

    private uint overallRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OverallRank {
      get { if ((_hasBits0 & 1) != 0) { return overallRank_; } else { return OverallRankDefaultValue; } }
      set {
        _hasBits0 |= 1;
        overallRank_ = value;
      }
    }
    /// <summary>Gets whether the "overall_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverallRank {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "overall_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverallRank() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "vr_rank" field.</summary>
    public const int VrRankFieldNumber = 2;
    private readonly static uint VrRankDefaultValue = 0;

    private uint vrRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VrRank {
      get { if ((_hasBits0 & 2) != 0) { return vrRank_; } else { return VrRankDefaultValue; } }
      set {
        _hasBits0 |= 2;
        vrRank_ = value;
      }
    }
    /// <summary>Gets whether the "vr_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVrRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "vr_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVrRank() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "decrank" field.</summary>
    public const int DecrankFieldNumber = 3;
    private readonly static uint DecrankDefaultValue = 0;

    private uint decrank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Decrank {
      get { if ((_hasBits0 & 4) != 0) { return decrank_; } else { return DecrankDefaultValue; } }
      set {
        _hasBits0 |= 4;
        decrank_ = value;
      }
    }
    /// <summary>Gets whether the "decrank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDecrank {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "decrank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDecrank() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "controller_rank" field.</summary>
    public const int ControllerRankFieldNumber = 4;
    private readonly static uint ControllerRankDefaultValue = 0;

    private uint controllerRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControllerRank {
      get { if ((_hasBits0 & 8) != 0) { return controllerRank_; } else { return ControllerRankDefaultValue; } }
      set {
        _hasBits0 |= 8;
        controllerRank_ = value;
      }
    }
    /// <summary>Gets whether the "controller_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerRank {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "controller_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerRank() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "linux_rank" field.</summary>
    public const int LinuxRankFieldNumber = 5;
    private readonly static uint LinuxRankDefaultValue = 0;

    private uint linuxRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LinuxRank {
      get { if ((_hasBits0 & 16) != 0) { return linuxRank_; } else { return LinuxRankDefaultValue; } }
      set {
        _hasBits0 |= 16;
        linuxRank_ = value;
      }
    }
    /// <summary>Gets whether the "linux_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinuxRank {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "linux_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinuxRank() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "mac_rank" field.</summary>
    public const int MacRankFieldNumber = 6;
    private readonly static uint MacRankDefaultValue = 0;

    private uint macRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MacRank {
      get { if ((_hasBits0 & 32) != 0) { return macRank_; } else { return MacRankDefaultValue; } }
      set {
        _hasBits0 |= 32;
        macRank_ = value;
      }
    }
    /// <summary>Gets whether the "mac_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMacRank {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "mac_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMacRank() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "windows_rank" field.</summary>
    public const int WindowsRankFieldNumber = 7;
    private readonly static uint WindowsRankDefaultValue = 0;

    private uint windowsRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WindowsRank {
      get { if ((_hasBits0 & 64) != 0) { return windowsRank_; } else { return WindowsRankDefaultValue; } }
      set {
        _hasBits0 |= 64;
        windowsRank_ = value;
      }
    }
    /// <summary>Gets whether the "windows_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWindowsRank {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "windows_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWindowsRank() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlaytimeRanks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlaytimeRanks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverallRank != other.OverallRank) return false;
      if (VrRank != other.VrRank) return false;
      if (Decrank != other.Decrank) return false;
      if (ControllerRank != other.ControllerRank) return false;
      if (LinuxRank != other.LinuxRank) return false;
      if (MacRank != other.MacRank) return false;
      if (WindowsRank != other.WindowsRank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOverallRank) hash ^= OverallRank.GetHashCode();
      if (HasVrRank) hash ^= VrRank.GetHashCode();
      if (HasDecrank) hash ^= Decrank.GetHashCode();
      if (HasControllerRank) hash ^= ControllerRank.GetHashCode();
      if (HasLinuxRank) hash ^= LinuxRank.GetHashCode();
      if (HasMacRank) hash ^= MacRank.GetHashCode();
      if (HasWindowsRank) hash ^= WindowsRank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOverallRank) {
        output.WriteRawTag(8);
        output.WriteUInt32(OverallRank);
      }
      if (HasVrRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(VrRank);
      }
      if (HasDecrank) {
        output.WriteRawTag(24);
        output.WriteUInt32(Decrank);
      }
      if (HasControllerRank) {
        output.WriteRawTag(32);
        output.WriteUInt32(ControllerRank);
      }
      if (HasLinuxRank) {
        output.WriteRawTag(40);
        output.WriteUInt32(LinuxRank);
      }
      if (HasMacRank) {
        output.WriteRawTag(48);
        output.WriteUInt32(MacRank);
      }
      if (HasWindowsRank) {
        output.WriteRawTag(56);
        output.WriteUInt32(WindowsRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOverallRank) {
        output.WriteRawTag(8);
        output.WriteUInt32(OverallRank);
      }
      if (HasVrRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(VrRank);
      }
      if (HasDecrank) {
        output.WriteRawTag(24);
        output.WriteUInt32(Decrank);
      }
      if (HasControllerRank) {
        output.WriteRawTag(32);
        output.WriteUInt32(ControllerRank);
      }
      if (HasLinuxRank) {
        output.WriteRawTag(40);
        output.WriteUInt32(LinuxRank);
      }
      if (HasMacRank) {
        output.WriteRawTag(48);
        output.WriteUInt32(MacRank);
      }
      if (HasWindowsRank) {
        output.WriteRawTag(56);
        output.WriteUInt32(WindowsRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOverallRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OverallRank);
      }
      if (HasVrRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VrRank);
      }
      if (HasDecrank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Decrank);
      }
      if (HasControllerRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerRank);
      }
      if (HasLinuxRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LinuxRank);
      }
      if (HasMacRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MacRank);
      }
      if (HasWindowsRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowsRank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlaytimeRanks other) {
      if (other == null) {
        return;
      }
      if (other.HasOverallRank) {
        OverallRank = other.OverallRank;
      }
      if (other.HasVrRank) {
        VrRank = other.VrRank;
      }
      if (other.HasDecrank) {
        Decrank = other.Decrank;
      }
      if (other.HasControllerRank) {
        ControllerRank = other.ControllerRank;
      }
      if (other.HasLinuxRank) {
        LinuxRank = other.LinuxRank;
      }
      if (other.HasMacRank) {
        MacRank = other.MacRank;
      }
      if (other.HasWindowsRank) {
        WindowsRank = other.WindowsRank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverallRank = input.ReadUInt32();
            break;
          }
          case 16: {
            VrRank = input.ReadUInt32();
            break;
          }
          case 24: {
            Decrank = input.ReadUInt32();
            break;
          }
          case 32: {
            ControllerRank = input.ReadUInt32();
            break;
          }
          case 40: {
            LinuxRank = input.ReadUInt32();
            break;
          }
          case 48: {
            MacRank = input.ReadUInt32();
            break;
          }
          case 56: {
            WindowsRank = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverallRank = input.ReadUInt32();
            break;
          }
          case 16: {
            VrRank = input.ReadUInt32();
            break;
          }
          case 24: {
            Decrank = input.ReadUInt32();
            break;
          }
          case 32: {
            ControllerRank = input.ReadUInt32();
            break;
          }
          case 40: {
            LinuxRank = input.ReadUInt32();
            break;
          }
          case 48: {
            MacRank = input.ReadUInt32();
            break;
          }
          case 56: {
            WindowsRank = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlaytimeStats : pb::IMessage<CPlaytimeStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlaytimeStats> _parser = new pb::MessageParser<CPlaytimeStats>(() => new CPlaytimeStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlaytimeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStats(CPlaytimeStats other) : this() {
      _hasBits0 = other._hasBits0;
      totalPlaytimeSeconds_ = other.totalPlaytimeSeconds_;
      totalSessions_ = other.totalSessions_;
      vrSessions_ = other.vrSessions_;
      decsessions_ = other.decsessions_;
      controllerSessions_ = other.controllerSessions_;
      linuxSessions_ = other.linuxSessions_;
      macosSessions_ = other.macosSessions_;
      windowsSessions_ = other.windowsSessions_;
      totalPlaytimePercentagex100_ = other.totalPlaytimePercentagex100_;
      vrPlaytimePercentagex100_ = other.vrPlaytimePercentagex100_;
      decplaytimePercentagex100_ = other.decplaytimePercentagex100_;
      controllerPlaytimePercentagex100_ = other.controllerPlaytimePercentagex100_;
      linuxPlaytimePercentagex100_ = other.linuxPlaytimePercentagex100_;
      macosPlaytimePercentagex100_ = other.macosPlaytimePercentagex100_;
      windowsPlaytimePercentagex100_ = other.windowsPlaytimePercentagex100_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStats Clone() {
      return new CPlaytimeStats(this);
    }

    /// <summary>Field number for the "total_playtime_seconds" field.</summary>
    public const int TotalPlaytimeSecondsFieldNumber = 1;
    private readonly static uint TotalPlaytimeSecondsDefaultValue = 0;

    private uint totalPlaytimeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalPlaytimeSeconds {
      get { if ((_hasBits0 & 1) != 0) { return totalPlaytimeSeconds_; } else { return TotalPlaytimeSecondsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalPlaytimeSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "total_playtime_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlaytimeSeconds {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total_playtime_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlaytimeSeconds() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total_sessions" field.</summary>
    public const int TotalSessionsFieldNumber = 20;
    private readonly static uint TotalSessionsDefaultValue = 0;

    private uint totalSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalSessions {
      get { if ((_hasBits0 & 2) != 0) { return totalSessions_; } else { return TotalSessionsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalSessions_ = value;
      }
    }
    /// <summary>Gets whether the "total_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalSessions {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalSessions() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "vr_sessions" field.</summary>
    public const int VrSessionsFieldNumber = 21;
    private readonly static uint VrSessionsDefaultValue = 0;

    private uint vrSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VrSessions {
      get { if ((_hasBits0 & 4) != 0) { return vrSessions_; } else { return VrSessionsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        vrSessions_ = value;
      }
    }
    /// <summary>Gets whether the "vr_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVrSessions {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "vr_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVrSessions() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "decsessions" field.</summary>
    public const int DecsessionsFieldNumber = 22;
    private readonly static uint DecsessionsDefaultValue = 0;

    private uint decsessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Decsessions {
      get { if ((_hasBits0 & 8) != 0) { return decsessions_; } else { return DecsessionsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        decsessions_ = value;
      }
    }
    /// <summary>Gets whether the "decsessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDecsessions {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "decsessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDecsessions() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "controller_sessions" field.</summary>
    public const int ControllerSessionsFieldNumber = 23;
    private readonly static uint ControllerSessionsDefaultValue = 0;

    private uint controllerSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControllerSessions {
      get { if ((_hasBits0 & 16) != 0) { return controllerSessions_; } else { return ControllerSessionsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        controllerSessions_ = value;
      }
    }
    /// <summary>Gets whether the "controller_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerSessions {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "controller_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerSessions() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "linux_sessions" field.</summary>
    public const int LinuxSessionsFieldNumber = 24;
    private readonly static uint LinuxSessionsDefaultValue = 0;

    private uint linuxSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LinuxSessions {
      get { if ((_hasBits0 & 32) != 0) { return linuxSessions_; } else { return LinuxSessionsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        linuxSessions_ = value;
      }
    }
    /// <summary>Gets whether the "linux_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinuxSessions {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "linux_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinuxSessions() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "macos_sessions" field.</summary>
    public const int MacosSessionsFieldNumber = 25;
    private readonly static uint MacosSessionsDefaultValue = 0;

    private uint macosSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MacosSessions {
      get { if ((_hasBits0 & 64) != 0) { return macosSessions_; } else { return MacosSessionsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        macosSessions_ = value;
      }
    }
    /// <summary>Gets whether the "macos_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMacosSessions {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "macos_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMacosSessions() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "windows_sessions" field.</summary>
    public const int WindowsSessionsFieldNumber = 26;
    private readonly static uint WindowsSessionsDefaultValue = 0;

    private uint windowsSessions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WindowsSessions {
      get { if ((_hasBits0 & 128) != 0) { return windowsSessions_; } else { return WindowsSessionsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        windowsSessions_ = value;
      }
    }
    /// <summary>Gets whether the "windows_sessions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWindowsSessions {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "windows_sessions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWindowsSessions() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "total_playtime_percentagex100" field.</summary>
    public const int TotalPlaytimePercentagex100FieldNumber = 27;
    private readonly static uint TotalPlaytimePercentagex100DefaultValue = 0;

    private uint totalPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalPlaytimePercentagex100 {
      get { if ((_hasBits0 & 256) != 0) { return totalPlaytimePercentagex100_; } else { return TotalPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 256;
        totalPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "total_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlaytimePercentagex100 {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "total_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlaytimePercentagex100() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "vr_playtime_percentagex100" field.</summary>
    public const int VrPlaytimePercentagex100FieldNumber = 28;
    private readonly static uint VrPlaytimePercentagex100DefaultValue = 0;

    private uint vrPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VrPlaytimePercentagex100 {
      get { if ((_hasBits0 & 512) != 0) { return vrPlaytimePercentagex100_; } else { return VrPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 512;
        vrPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "vr_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVrPlaytimePercentagex100 {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "vr_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVrPlaytimePercentagex100() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "decplaytime_percentagex100" field.</summary>
    public const int DecplaytimePercentagex100FieldNumber = 29;
    private readonly static uint DecplaytimePercentagex100DefaultValue = 0;

    private uint decplaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DecplaytimePercentagex100 {
      get { if ((_hasBits0 & 1024) != 0) { return decplaytimePercentagex100_; } else { return DecplaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 1024;
        decplaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "decplaytime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDecplaytimePercentagex100 {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "decplaytime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDecplaytimePercentagex100() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "controller_playtime_percentagex100" field.</summary>
    public const int ControllerPlaytimePercentagex100FieldNumber = 30;
    private readonly static uint ControllerPlaytimePercentagex100DefaultValue = 0;

    private uint controllerPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControllerPlaytimePercentagex100 {
      get { if ((_hasBits0 & 2048) != 0) { return controllerPlaytimePercentagex100_; } else { return ControllerPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 2048;
        controllerPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "controller_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerPlaytimePercentagex100 {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "controller_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerPlaytimePercentagex100() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "linux_playtime_percentagex100" field.</summary>
    public const int LinuxPlaytimePercentagex100FieldNumber = 31;
    private readonly static uint LinuxPlaytimePercentagex100DefaultValue = 0;

    private uint linuxPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LinuxPlaytimePercentagex100 {
      get { if ((_hasBits0 & 4096) != 0) { return linuxPlaytimePercentagex100_; } else { return LinuxPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 4096;
        linuxPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "linux_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinuxPlaytimePercentagex100 {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "linux_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinuxPlaytimePercentagex100() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "macos_playtime_percentagex100" field.</summary>
    public const int MacosPlaytimePercentagex100FieldNumber = 32;
    private readonly static uint MacosPlaytimePercentagex100DefaultValue = 0;

    private uint macosPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MacosPlaytimePercentagex100 {
      get { if ((_hasBits0 & 8192) != 0) { return macosPlaytimePercentagex100_; } else { return MacosPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 8192;
        macosPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "macos_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMacosPlaytimePercentagex100 {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "macos_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMacosPlaytimePercentagex100() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "windows_playtime_percentagex100" field.</summary>
    public const int WindowsPlaytimePercentagex100FieldNumber = 33;
    private readonly static uint WindowsPlaytimePercentagex100DefaultValue = 0;

    private uint windowsPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WindowsPlaytimePercentagex100 {
      get { if ((_hasBits0 & 16384) != 0) { return windowsPlaytimePercentagex100_; } else { return WindowsPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 16384;
        windowsPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "windows_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWindowsPlaytimePercentagex100 {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "windows_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWindowsPlaytimePercentagex100() {
      _hasBits0 &= ~16384;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlaytimeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlaytimeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalPlaytimeSeconds != other.TotalPlaytimeSeconds) return false;
      if (TotalSessions != other.TotalSessions) return false;
      if (VrSessions != other.VrSessions) return false;
      if (Decsessions != other.Decsessions) return false;
      if (ControllerSessions != other.ControllerSessions) return false;
      if (LinuxSessions != other.LinuxSessions) return false;
      if (MacosSessions != other.MacosSessions) return false;
      if (WindowsSessions != other.WindowsSessions) return false;
      if (TotalPlaytimePercentagex100 != other.TotalPlaytimePercentagex100) return false;
      if (VrPlaytimePercentagex100 != other.VrPlaytimePercentagex100) return false;
      if (DecplaytimePercentagex100 != other.DecplaytimePercentagex100) return false;
      if (ControllerPlaytimePercentagex100 != other.ControllerPlaytimePercentagex100) return false;
      if (LinuxPlaytimePercentagex100 != other.LinuxPlaytimePercentagex100) return false;
      if (MacosPlaytimePercentagex100 != other.MacosPlaytimePercentagex100) return false;
      if (WindowsPlaytimePercentagex100 != other.WindowsPlaytimePercentagex100) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTotalPlaytimeSeconds) hash ^= TotalPlaytimeSeconds.GetHashCode();
      if (HasTotalSessions) hash ^= TotalSessions.GetHashCode();
      if (HasVrSessions) hash ^= VrSessions.GetHashCode();
      if (HasDecsessions) hash ^= Decsessions.GetHashCode();
      if (HasControllerSessions) hash ^= ControllerSessions.GetHashCode();
      if (HasLinuxSessions) hash ^= LinuxSessions.GetHashCode();
      if (HasMacosSessions) hash ^= MacosSessions.GetHashCode();
      if (HasWindowsSessions) hash ^= WindowsSessions.GetHashCode();
      if (HasTotalPlaytimePercentagex100) hash ^= TotalPlaytimePercentagex100.GetHashCode();
      if (HasVrPlaytimePercentagex100) hash ^= VrPlaytimePercentagex100.GetHashCode();
      if (HasDecplaytimePercentagex100) hash ^= DecplaytimePercentagex100.GetHashCode();
      if (HasControllerPlaytimePercentagex100) hash ^= ControllerPlaytimePercentagex100.GetHashCode();
      if (HasLinuxPlaytimePercentagex100) hash ^= LinuxPlaytimePercentagex100.GetHashCode();
      if (HasMacosPlaytimePercentagex100) hash ^= MacosPlaytimePercentagex100.GetHashCode();
      if (HasWindowsPlaytimePercentagex100) hash ^= WindowsPlaytimePercentagex100.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTotalPlaytimeSeconds) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotalPlaytimeSeconds);
      }
      if (HasTotalSessions) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(TotalSessions);
      }
      if (HasVrSessions) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(VrSessions);
      }
      if (HasDecsessions) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(Decsessions);
      }
      if (HasControllerSessions) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(ControllerSessions);
      }
      if (HasLinuxSessions) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(LinuxSessions);
      }
      if (HasMacosSessions) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(MacosSessions);
      }
      if (HasWindowsSessions) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(WindowsSessions);
      }
      if (HasTotalPlaytimePercentagex100) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(TotalPlaytimePercentagex100);
      }
      if (HasVrPlaytimePercentagex100) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(VrPlaytimePercentagex100);
      }
      if (HasDecplaytimePercentagex100) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(DecplaytimePercentagex100);
      }
      if (HasControllerPlaytimePercentagex100) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(ControllerPlaytimePercentagex100);
      }
      if (HasLinuxPlaytimePercentagex100) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(LinuxPlaytimePercentagex100);
      }
      if (HasMacosPlaytimePercentagex100) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(MacosPlaytimePercentagex100);
      }
      if (HasWindowsPlaytimePercentagex100) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(WindowsPlaytimePercentagex100);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTotalPlaytimeSeconds) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotalPlaytimeSeconds);
      }
      if (HasTotalSessions) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(TotalSessions);
      }
      if (HasVrSessions) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(VrSessions);
      }
      if (HasDecsessions) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(Decsessions);
      }
      if (HasControllerSessions) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(ControllerSessions);
      }
      if (HasLinuxSessions) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(LinuxSessions);
      }
      if (HasMacosSessions) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(MacosSessions);
      }
      if (HasWindowsSessions) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(WindowsSessions);
      }
      if (HasTotalPlaytimePercentagex100) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(TotalPlaytimePercentagex100);
      }
      if (HasVrPlaytimePercentagex100) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(VrPlaytimePercentagex100);
      }
      if (HasDecplaytimePercentagex100) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(DecplaytimePercentagex100);
      }
      if (HasControllerPlaytimePercentagex100) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(ControllerPlaytimePercentagex100);
      }
      if (HasLinuxPlaytimePercentagex100) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(LinuxPlaytimePercentagex100);
      }
      if (HasMacosPlaytimePercentagex100) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(MacosPlaytimePercentagex100);
      }
      if (HasWindowsPlaytimePercentagex100) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(WindowsPlaytimePercentagex100);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTotalPlaytimeSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalPlaytimeSeconds);
      }
      if (HasTotalSessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalSessions);
      }
      if (HasVrSessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(VrSessions);
      }
      if (HasDecsessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Decsessions);
      }
      if (HasControllerSessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ControllerSessions);
      }
      if (HasLinuxSessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LinuxSessions);
      }
      if (HasMacosSessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MacosSessions);
      }
      if (HasWindowsSessions) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WindowsSessions);
      }
      if (HasTotalPlaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalPlaytimePercentagex100);
      }
      if (HasVrPlaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(VrPlaytimePercentagex100);
      }
      if (HasDecplaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DecplaytimePercentagex100);
      }
      if (HasControllerPlaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ControllerPlaytimePercentagex100);
      }
      if (HasLinuxPlaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LinuxPlaytimePercentagex100);
      }
      if (HasMacosPlaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MacosPlaytimePercentagex100);
      }
      if (HasWindowsPlaytimePercentagex100) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WindowsPlaytimePercentagex100);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlaytimeStats other) {
      if (other == null) {
        return;
      }
      if (other.HasTotalPlaytimeSeconds) {
        TotalPlaytimeSeconds = other.TotalPlaytimeSeconds;
      }
      if (other.HasTotalSessions) {
        TotalSessions = other.TotalSessions;
      }
      if (other.HasVrSessions) {
        VrSessions = other.VrSessions;
      }
      if (other.HasDecsessions) {
        Decsessions = other.Decsessions;
      }
      if (other.HasControllerSessions) {
        ControllerSessions = other.ControllerSessions;
      }
      if (other.HasLinuxSessions) {
        LinuxSessions = other.LinuxSessions;
      }
      if (other.HasMacosSessions) {
        MacosSessions = other.MacosSessions;
      }
      if (other.HasWindowsSessions) {
        WindowsSessions = other.WindowsSessions;
      }
      if (other.HasTotalPlaytimePercentagex100) {
        TotalPlaytimePercentagex100 = other.TotalPlaytimePercentagex100;
      }
      if (other.HasVrPlaytimePercentagex100) {
        VrPlaytimePercentagex100 = other.VrPlaytimePercentagex100;
      }
      if (other.HasDecplaytimePercentagex100) {
        DecplaytimePercentagex100 = other.DecplaytimePercentagex100;
      }
      if (other.HasControllerPlaytimePercentagex100) {
        ControllerPlaytimePercentagex100 = other.ControllerPlaytimePercentagex100;
      }
      if (other.HasLinuxPlaytimePercentagex100) {
        LinuxPlaytimePercentagex100 = other.LinuxPlaytimePercentagex100;
      }
      if (other.HasMacosPlaytimePercentagex100) {
        MacosPlaytimePercentagex100 = other.MacosPlaytimePercentagex100;
      }
      if (other.HasWindowsPlaytimePercentagex100) {
        WindowsPlaytimePercentagex100 = other.WindowsPlaytimePercentagex100;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalPlaytimeSeconds = input.ReadUInt32();
            break;
          }
          case 160: {
            TotalSessions = input.ReadUInt32();
            break;
          }
          case 168: {
            VrSessions = input.ReadUInt32();
            break;
          }
          case 176: {
            Decsessions = input.ReadUInt32();
            break;
          }
          case 184: {
            ControllerSessions = input.ReadUInt32();
            break;
          }
          case 192: {
            LinuxSessions = input.ReadUInt32();
            break;
          }
          case 200: {
            MacosSessions = input.ReadUInt32();
            break;
          }
          case 208: {
            WindowsSessions = input.ReadUInt32();
            break;
          }
          case 216: {
            TotalPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 224: {
            VrPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 232: {
            DecplaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 240: {
            ControllerPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 248: {
            LinuxPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 256: {
            MacosPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 264: {
            WindowsPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalPlaytimeSeconds = input.ReadUInt32();
            break;
          }
          case 160: {
            TotalSessions = input.ReadUInt32();
            break;
          }
          case 168: {
            VrSessions = input.ReadUInt32();
            break;
          }
          case 176: {
            Decsessions = input.ReadUInt32();
            break;
          }
          case 184: {
            ControllerSessions = input.ReadUInt32();
            break;
          }
          case 192: {
            LinuxSessions = input.ReadUInt32();
            break;
          }
          case 200: {
            MacosSessions = input.ReadUInt32();
            break;
          }
          case 208: {
            WindowsSessions = input.ReadUInt32();
            break;
          }
          case 216: {
            TotalPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 224: {
            VrPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 232: {
            DecplaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 240: {
            ControllerPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 248: {
            LinuxPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 256: {
            MacosPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 264: {
            WindowsPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlaytimeStreak : pb::IMessage<CPlaytimeStreak>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlaytimeStreak> _parser = new pb::MessageParser<CPlaytimeStreak>(() => new CPlaytimeStreak());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlaytimeStreak> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStreak() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStreak(CPlaytimeStreak other) : this() {
      _hasBits0 = other._hasBits0;
      longestConsecutiveDays_ = other.longestConsecutiveDays_;
      rtimeStart_ = other.rtimeStart_;
      streagames_ = other.streagames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStreak Clone() {
      return new CPlaytimeStreak(this);
    }

    /// <summary>Field number for the "longest_consecutive_days" field.</summary>
    public const int LongestConsecutiveDaysFieldNumber = 1;
    private readonly static uint LongestConsecutiveDaysDefaultValue = 0;

    private uint longestConsecutiveDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LongestConsecutiveDays {
      get { if ((_hasBits0 & 1) != 0) { return longestConsecutiveDays_; } else { return LongestConsecutiveDaysDefaultValue; } }
      set {
        _hasBits0 |= 1;
        longestConsecutiveDays_ = value;
      }
    }
    /// <summary>Gets whether the "longest_consecutive_days" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLongestConsecutiveDays {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "longest_consecutive_days" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLongestConsecutiveDays() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rtime_start" field.</summary>
    public const int RtimeStartFieldNumber = 2;
    private readonly static uint RtimeStartDefaultValue = 0;

    private uint rtimeStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtimeStart {
      get { if ((_hasBits0 & 2) != 0) { return rtimeStart_; } else { return RtimeStartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rtimeStart_ = value;
      }
    }
    /// <summary>Gets whether the "rtime_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtimeStart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rtime_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtimeStart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "streagames" field.</summary>
    public const int StreagamesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame> _repeated_streagames_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame> streagames_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreakGame> Streagames {
      get { return streagames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlaytimeStreak);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlaytimeStreak other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LongestConsecutiveDays != other.LongestConsecutiveDays) return false;
      if (RtimeStart != other.RtimeStart) return false;
      if(!streagames_.Equals(other.streagames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLongestConsecutiveDays) hash ^= LongestConsecutiveDays.GetHashCode();
      if (HasRtimeStart) hash ^= RtimeStart.GetHashCode();
      hash ^= streagames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLongestConsecutiveDays) {
        output.WriteRawTag(8);
        output.WriteUInt32(LongestConsecutiveDays);
      }
      if (HasRtimeStart) {
        output.WriteRawTag(16);
        output.WriteUInt32(RtimeStart);
      }
      streagames_.WriteTo(output, _repeated_streagames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLongestConsecutiveDays) {
        output.WriteRawTag(8);
        output.WriteUInt32(LongestConsecutiveDays);
      }
      if (HasRtimeStart) {
        output.WriteRawTag(16);
        output.WriteUInt32(RtimeStart);
      }
      streagames_.WriteTo(ref output, _repeated_streagames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLongestConsecutiveDays) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LongestConsecutiveDays);
      }
      if (HasRtimeStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeStart);
      }
      size += streagames_.CalculateSize(_repeated_streagames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlaytimeStreak other) {
      if (other == null) {
        return;
      }
      if (other.HasLongestConsecutiveDays) {
        LongestConsecutiveDays = other.LongestConsecutiveDays;
      }
      if (other.HasRtimeStart) {
        RtimeStart = other.RtimeStart;
      }
      streagames_.Add(other.streagames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LongestConsecutiveDays = input.ReadUInt32();
            break;
          }
          case 16: {
            RtimeStart = input.ReadUInt32();
            break;
          }
          case 26: {
            streagames_.AddEntriesFrom(input, _repeated_streagames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LongestConsecutiveDays = input.ReadUInt32();
            break;
          }
          case 16: {
            RtimeStart = input.ReadUInt32();
            break;
          }
          case 26: {
            streagames_.AddEntriesFrom(ref input, _repeated_streagames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlaytimeStreakGame : pb::IMessage<CPlaytimeStreakGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlaytimeStreakGame> _parser = new pb::MessageParser<CPlaytimeStreakGame>(() => new CPlaytimeStreakGame());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlaytimeStreakGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStreakGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStreakGame(CPlaytimeStreakGame other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlaytimeStreakGame Clone() {
      return new CPlaytimeStreakGame(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlaytimeStreakGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlaytimeStreakGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlaytimeStreakGame other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRankingCategory : pb::IMessage<CRankingCategory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRankingCategory> _parser = new pb::MessageParser<CRankingCategory>(() => new CRankingCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRankingCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRankingCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRankingCategory(CRankingCategory other) : this() {
      category_ = other.category_;
      rankings_ = other.rankings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRankingCategory Clone() {
      return new CRankingCategory(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private readonly static string CategoryDefaultValue = "";

    private string category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Category {
      get { return category_ ?? CategoryDefaultValue; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "category" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCategory {
      get { return category_ != null; }
    }
    /// <summary>Clears the value of the "category" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCategory() {
      category_ = null;
    }

    /// <summary>Field number for the "rankings" field.</summary>
    public const int RankingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameRank> _repeated_rankings_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CGameRank.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRank> rankings_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRank>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameRank> Rankings {
      get { return rankings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRankingCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRankingCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if(!rankings_.Equals(other.rankings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCategory) hash ^= Category.GetHashCode();
      hash ^= rankings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCategory) {
        output.WriteRawTag(10);
        output.WriteString(Category);
      }
      rankings_.WriteTo(output, _repeated_rankings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCategory) {
        output.WriteRawTag(10);
        output.WriteString(Category);
      }
      rankings_.WriteTo(ref output, _repeated_rankings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCategory) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      size += rankings_.CalculateSize(_repeated_rankings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRankingCategory other) {
      if (other == null) {
        return;
      }
      if (other.HasCategory) {
        Category = other.Category;
      }
      rankings_.Add(other.rankings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Category = input.ReadString();
            break;
          }
          case 18: {
            rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Category = input.ReadString();
            break;
          }
          case 18: {
            rankings_.AddEntriesFrom(ref input, _repeated_rankings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetFriendsSharedYearInReview_Request : pb::IMessage<CSaleFeature_GetFriendsSharedYearInReview_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetFriendsSharedYearInReview_Request> _parser = new pb::MessageParser<CSaleFeature_GetFriendsSharedYearInReview_Request>(() => new CSaleFeature_GetFriendsSharedYearInReview_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetFriendsSharedYearInReview_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetFriendsSharedYearInReview_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetFriendsSharedYearInReview_Request(CSaleFeature_GetFriendsSharedYearInReview_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      returnPrivate_ = other.returnPrivate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetFriendsSharedYearInReview_Request Clone() {
      return new CSaleFeature_GetFriendsSharedYearInReview_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "return_private" field.</summary>
    public const int ReturnPrivateFieldNumber = 3;
    private readonly static bool ReturnPrivateDefaultValue = false;

    private bool returnPrivate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReturnPrivate {
      get { if ((_hasBits0 & 4) != 0) { return returnPrivate_; } else { return ReturnPrivateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        returnPrivate_ = value;
      }
    }
    /// <summary>Gets whether the "return_private" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReturnPrivate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "return_private" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReturnPrivate() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetFriendsSharedYearInReview_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetFriendsSharedYearInReview_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      if (ReturnPrivate != other.ReturnPrivate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasReturnPrivate) hash ^= ReturnPrivate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasReturnPrivate) {
        output.WriteRawTag(24);
        output.WriteBool(ReturnPrivate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasReturnPrivate) {
        output.WriteRawTag(24);
        output.WriteBool(ReturnPrivate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (HasReturnPrivate) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetFriendsSharedYearInReview_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasReturnPrivate) {
        ReturnPrivate = other.ReturnPrivate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            ReturnPrivate = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            ReturnPrivate = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetFriendsSharedYearInReview_Response : pb::IMessage<CSaleFeature_GetFriendsSharedYearInReview_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetFriendsSharedYearInReview_Response> _parser = new pb::MessageParser<CSaleFeature_GetFriendsSharedYearInReview_Response>(() => new CSaleFeature_GetFriendsSharedYearInReview_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetFriendsSharedYearInReview_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetFriendsSharedYearInReview_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetFriendsSharedYearInReview_Response(CSaleFeature_GetFriendsSharedYearInReview_Response other) : this() {
      _hasBits0 = other._hasBits0;
      friendShares_ = other.friendShares_.Clone();
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetFriendsSharedYearInReview_Response Clone() {
      return new CSaleFeature_GetFriendsSharedYearInReview_Response(this);
    }

    /// <summary>Field number for the "friend_shares" field.</summary>
    public const int FriendSharesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView> _repeated_friendShares_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView> friendShares_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CFriendSharedYearInView> FriendShares {
      get { return friendShares_; }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetFriendsSharedYearInReview_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetFriendsSharedYearInReview_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendShares_.Equals(other.friendShares_)) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendShares_.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      friendShares_.WriteTo(output, _repeated_friendShares_codec);
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      friendShares_.WriteTo(ref output, _repeated_friendShares_codec);
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += friendShares_.CalculateSize(_repeated_friendShares_codec);
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetFriendsSharedYearInReview_Response other) {
      if (other == null) {
        return;
      }
      friendShares_.Add(other.friendShares_);
      if (other.HasYear) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            friendShares_.AddEntriesFrom(input, _repeated_friendShares_codec);
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            friendShares_.AddEntriesFrom(ref input, _repeated_friendShares_codec);
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUpdateProcessingProgress_Request : pb::IMessage<CSaleFeature_GetUpdateProcessingProgress_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUpdateProcessingProgress_Request> _parser = new pb::MessageParser<CSaleFeature_GetUpdateProcessingProgress_Request>(() => new CSaleFeature_GetUpdateProcessingProgress_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUpdateProcessingProgress_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUpdateProcessingProgress_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUpdateProcessingProgress_Request(CSaleFeature_GetUpdateProcessingProgress_Request other) : this() {
      _hasBits0 = other._hasBits0;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUpdateProcessingProgress_Request Clone() {
      return new CSaleFeature_GetUpdateProcessingProgress_Request(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 1;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUpdateProcessingProgress_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUpdateProcessingProgress_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasYear) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUpdateProcessingProgress_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUpdateProcessingProgress_Response : pb::IMessage<CSaleFeature_GetUpdateProcessingProgress_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUpdateProcessingProgress_Response> _parser = new pb::MessageParser<CSaleFeature_GetUpdateProcessingProgress_Response>(() => new CSaleFeature_GetUpdateProcessingProgress_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUpdateProcessingProgress_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUpdateProcessingProgress_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUpdateProcessingProgress_Response(CSaleFeature_GetUpdateProcessingProgress_Response other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUpdateProcessingProgress_Response Clone() {
      return new CSaleFeature_GetUpdateProcessingProgress_Response(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress> results_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMonthlyProgress> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUpdateProcessingProgress_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUpdateProcessingProgress_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUpdateProcessingProgress_Response other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserActionData_Request : pb::IMessage<CSaleFeature_GetUserActionData_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserActionData_Request> _parser = new pb::MessageParser<CSaleFeature_GetUserActionData_Request>(() => new CSaleFeature_GetUserActionData_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserActionData_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserActionData_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserActionData_Request(CSaleFeature_GetUserActionData_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      gid_ = other.gid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserActionData_Request Clone() {
      return new CSaleFeature_GetUserActionData_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 2;
    private readonly static ulong GidDefaultValue = 0UL;

    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gid {
      get { if ((_hasBits0 & 2) != 0) { return gid_; } else { return GidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gid_ = value;
      }
    }
    /// <summary>Gets whether the "gid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserActionData_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserActionData_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Gid != other.Gid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasGid) hash ^= Gid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasGid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Gid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasGid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Gid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasGid) {
        size += 1 + 8;
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserActionData_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasGid) {
        Gid = other.Gid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            Gid = input.ReadFixed64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            Gid = input.ReadFixed64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserActionData_Response : pb::IMessage<CSaleFeature_GetUserActionData_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserActionData_Response> _parser = new pb::MessageParser<CSaleFeature_GetUserActionData_Response>(() => new CSaleFeature_GetUserActionData_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserActionData_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserActionData_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserActionData_Response(CSaleFeature_GetUserActionData_Response other) : this() {
      jsondata_ = other.jsondata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserActionData_Response Clone() {
      return new CSaleFeature_GetUserActionData_Response(this);
    }

    /// <summary>Field number for the "jsondata" field.</summary>
    public const int JsondataFieldNumber = 1;
    private readonly static string JsondataDefaultValue = "";

    private string jsondata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Jsondata {
      get { return jsondata_ ?? JsondataDefaultValue; }
      set {
        jsondata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jsondata" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJsondata {
      get { return jsondata_ != null; }
    }
    /// <summary>Clears the value of the "jsondata" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJsondata() {
      jsondata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserActionData_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserActionData_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Jsondata != other.Jsondata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasJsondata) hash ^= Jsondata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasJsondata) {
        output.WriteRawTag(10);
        output.WriteString(Jsondata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasJsondata) {
        output.WriteRawTag(10);
        output.WriteString(Jsondata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasJsondata) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jsondata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserActionData_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasJsondata) {
        Jsondata = other.Jsondata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Jsondata = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Jsondata = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserSharingPermissions_Request : pb::IMessage<CSaleFeature_GetUserSharingPermissions_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserSharingPermissions_Request> _parser = new pb::MessageParser<CSaleFeature_GetUserSharingPermissions_Request>(() => new CSaleFeature_GetUserSharingPermissions_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserSharingPermissions_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserSharingPermissions_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserSharingPermissions_Request(CSaleFeature_GetUserSharingPermissions_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserSharingPermissions_Request Clone() {
      return new CSaleFeature_GetUserSharingPermissions_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserSharingPermissions_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserSharingPermissions_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserSharingPermissions_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserSharingPermissions_Response : pb::IMessage<CSaleFeature_GetUserSharingPermissions_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserSharingPermissions_Response> _parser = new pb::MessageParser<CSaleFeature_GetUserSharingPermissions_Response>(() => new CSaleFeature_GetUserSharingPermissions_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserSharingPermissions_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserSharingPermissions_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserSharingPermissions_Response(CSaleFeature_GetUserSharingPermissions_Response other) : this() {
      _hasBits0 = other._hasBits0;
      privacyState_ = other.privacyState_;
      generatedValue_ = other.generatedValue_;
      steamid_ = other.steamid_;
      rtPrivacyUpdated_ = other.rtPrivacyUpdated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserSharingPermissions_Response Clone() {
      return new CSaleFeature_GetUserSharingPermissions_Response(this);
    }

    /// <summary>Field number for the "privacy_state" field.</summary>
    public const int PrivacyStateFieldNumber = 1;
    private readonly static int PrivacyStateDefaultValue = 0;

    private int privacyState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyState {
      get { if ((_hasBits0 & 1) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        privacyState_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "generated_value" field.</summary>
    public const int GeneratedValueFieldNumber = 2;
    private readonly static bool GeneratedValueDefaultValue = false;

    private bool generatedValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GeneratedValue {
      get { if ((_hasBits0 & 2) != 0) { return generatedValue_; } else { return GeneratedValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        generatedValue_ = value;
      }
    }
    /// <summary>Gets whether the "generated_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGeneratedValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "generated_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGeneratedValue() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 3;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rt_privacy_updated" field.</summary>
    public const int RtPrivacyUpdatedFieldNumber = 4;
    private readonly static uint RtPrivacyUpdatedDefaultValue = 0;

    private uint rtPrivacyUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RtPrivacyUpdated {
      get { if ((_hasBits0 & 8) != 0) { return rtPrivacyUpdated_; } else { return RtPrivacyUpdatedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rtPrivacyUpdated_ = value;
      }
    }
    /// <summary>Gets whether the "rt_privacy_updated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtPrivacyUpdated {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rt_privacy_updated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtPrivacyUpdated() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserSharingPermissions_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserSharingPermissions_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivacyState != other.PrivacyState) return false;
      if (GeneratedValue != other.GeneratedValue) return false;
      if (Steamid != other.Steamid) return false;
      if (RtPrivacyUpdated != other.RtPrivacyUpdated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
      if (HasGeneratedValue) hash ^= GeneratedValue.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasRtPrivacyUpdated) hash ^= RtPrivacyUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPrivacyState) {
        output.WriteRawTag(8);
        output.WriteInt32(PrivacyState);
      }
      if (HasGeneratedValue) {
        output.WriteRawTag(16);
        output.WriteBool(GeneratedValue);
      }
      if (HasSteamid) {
        output.WriteRawTag(25);
        output.WriteFixed64(Steamid);
      }
      if (HasRtPrivacyUpdated) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtPrivacyUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPrivacyState) {
        output.WriteRawTag(8);
        output.WriteInt32(PrivacyState);
      }
      if (HasGeneratedValue) {
        output.WriteRawTag(16);
        output.WriteBool(GeneratedValue);
      }
      if (HasSteamid) {
        output.WriteRawTag(25);
        output.WriteFixed64(Steamid);
      }
      if (HasRtPrivacyUpdated) {
        output.WriteRawTag(32);
        output.WriteUInt32(RtPrivacyUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPrivacyState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
      }
      if (HasGeneratedValue) {
        size += 1 + 1;
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasRtPrivacyUpdated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtPrivacyUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserSharingPermissions_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasPrivacyState) {
        PrivacyState = other.PrivacyState;
      }
      if (other.HasGeneratedValue) {
        GeneratedValue = other.GeneratedValue;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasRtPrivacyUpdated) {
        RtPrivacyUpdated = other.RtPrivacyUpdated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PrivacyState = input.ReadInt32();
            break;
          }
          case 16: {
            GeneratedValue = input.ReadBool();
            break;
          }
          case 25: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 32: {
            RtPrivacyUpdated = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PrivacyState = input.ReadInt32();
            break;
          }
          case 16: {
            GeneratedValue = input.ReadBool();
            break;
          }
          case 25: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 32: {
            RtPrivacyUpdated = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearAchievements_Request : pb::IMessage<CSaleFeature_GetUserYearAchievements_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearAchievements_Request> _parser = new pb::MessageParser<CSaleFeature_GetUserYearAchievements_Request>(() => new CSaleFeature_GetUserYearAchievements_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearAchievements_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearAchievements_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearAchievements_Request(CSaleFeature_GetUserYearAchievements_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      appids_ = other.appids_.Clone();
      totalOnly_ = other.totalOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearAchievements_Request Clone() {
      return new CSaleFeature_GetUserYearAchievements_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "appids" field.</summary>
    public const int AppidsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_appids_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Appids {
      get { return appids_; }
    }

    /// <summary>Field number for the "total_only" field.</summary>
    public const int TotalOnlyFieldNumber = 4;
    private readonly static bool TotalOnlyDefaultValue = false;

    private bool totalOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TotalOnly {
      get { if ((_hasBits0 & 4) != 0) { return totalOnly_; } else { return TotalOnlyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalOnly_ = value;
      }
    }
    /// <summary>Gets whether the "total_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalOnly {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalOnly() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearAchievements_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearAchievements_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      if(!appids_.Equals(other.appids_)) return false;
      if (TotalOnly != other.TotalOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      hash ^= appids_.GetHashCode();
      if (HasTotalOnly) hash ^= TotalOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      appids_.WriteTo(output, _repeated_appids_codec);
      if (HasTotalOnly) {
        output.WriteRawTag(32);
        output.WriteBool(TotalOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      appids_.WriteTo(ref output, _repeated_appids_codec);
      if (HasTotalOnly) {
        output.WriteRawTag(32);
        output.WriteBool(TotalOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      size += appids_.CalculateSize(_repeated_appids_codec);
      if (HasTotalOnly) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearAchievements_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      appids_.Add(other.appids_);
      if (other.HasTotalOnly) {
        TotalOnly = other.TotalOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            appids_.AddEntriesFrom(input, _repeated_appids_codec);
            break;
          }
          case 32: {
            TotalOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
            break;
          }
          case 32: {
            TotalOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearAchievements_Response : pb::IMessage<CSaleFeature_GetUserYearAchievements_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearAchievements_Response> _parser = new pb::MessageParser<CSaleFeature_GetUserYearAchievements_Response>(() => new CSaleFeature_GetUserYearAchievements_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearAchievements_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearAchievements_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearAchievements_Response(CSaleFeature_GetUserYearAchievements_Response other) : this() {
      _hasBits0 = other._hasBits0;
      gameAchievements_ = other.gameAchievements_.Clone();
      totalAchievements_ = other.totalAchievements_;
      totalRareAchievements_ = other.totalRareAchievements_;
      totalGamesWithAchievements_ = other.totalGamesWithAchievements_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearAchievements_Response Clone() {
      return new CSaleFeature_GetUserYearAchievements_Response(this);
    }

    /// <summary>Field number for the "game_achievements" field.</summary>
    public const int GameAchievementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameAchievements> _repeated_gameAchievements_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CGameAchievements.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameAchievements> gameAchievements_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameAchievements>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameAchievements> GameAchievements {
      get { return gameAchievements_; }
    }

    /// <summary>Field number for the "total_achievements" field.</summary>
    public const int TotalAchievementsFieldNumber = 2;
    private readonly static uint TotalAchievementsDefaultValue = 0;

    private uint totalAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalAchievements {
      get { if ((_hasBits0 & 1) != 0) { return totalAchievements_; } else { return TotalAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "total_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalAchievements {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalAchievements() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total_rare_achievements" field.</summary>
    public const int TotalRareAchievementsFieldNumber = 3;
    private readonly static uint TotalRareAchievementsDefaultValue = 0;

    private uint totalRareAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalRareAchievements {
      get { if ((_hasBits0 & 2) != 0) { return totalRareAchievements_; } else { return TotalRareAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalRareAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "total_rare_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalRareAchievements {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_rare_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalRareAchievements() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "total_games_with_achievements" field.</summary>
    public const int TotalGamesWithAchievementsFieldNumber = 4;
    private readonly static uint TotalGamesWithAchievementsDefaultValue = 0;

    private uint totalGamesWithAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalGamesWithAchievements {
      get { if ((_hasBits0 & 4) != 0) { return totalGamesWithAchievements_; } else { return TotalGamesWithAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalGamesWithAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "total_games_with_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalGamesWithAchievements {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_games_with_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalGamesWithAchievements() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearAchievements_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearAchievements_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameAchievements_.Equals(other.gameAchievements_)) return false;
      if (TotalAchievements != other.TotalAchievements) return false;
      if (TotalRareAchievements != other.TotalRareAchievements) return false;
      if (TotalGamesWithAchievements != other.TotalGamesWithAchievements) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameAchievements_.GetHashCode();
      if (HasTotalAchievements) hash ^= TotalAchievements.GetHashCode();
      if (HasTotalRareAchievements) hash ^= TotalRareAchievements.GetHashCode();
      if (HasTotalGamesWithAchievements) hash ^= TotalGamesWithAchievements.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameAchievements_.WriteTo(output, _repeated_gameAchievements_codec);
      if (HasTotalAchievements) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalAchievements);
      }
      if (HasTotalRareAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(TotalRareAchievements);
      }
      if (HasTotalGamesWithAchievements) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalGamesWithAchievements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameAchievements_.WriteTo(ref output, _repeated_gameAchievements_codec);
      if (HasTotalAchievements) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalAchievements);
      }
      if (HasTotalRareAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(TotalRareAchievements);
      }
      if (HasTotalGamesWithAchievements) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalGamesWithAchievements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameAchievements_.CalculateSize(_repeated_gameAchievements_codec);
      if (HasTotalAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalAchievements);
      }
      if (HasTotalRareAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalRareAchievements);
      }
      if (HasTotalGamesWithAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalGamesWithAchievements);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearAchievements_Response other) {
      if (other == null) {
        return;
      }
      gameAchievements_.Add(other.gameAchievements_);
      if (other.HasTotalAchievements) {
        TotalAchievements = other.TotalAchievements;
      }
      if (other.HasTotalRareAchievements) {
        TotalRareAchievements = other.TotalRareAchievements;
      }
      if (other.HasTotalGamesWithAchievements) {
        TotalGamesWithAchievements = other.TotalGamesWithAchievements;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameAchievements_.AddEntriesFrom(input, _repeated_gameAchievements_codec);
            break;
          }
          case 16: {
            TotalAchievements = input.ReadUInt32();
            break;
          }
          case 24: {
            TotalRareAchievements = input.ReadUInt32();
            break;
          }
          case 32: {
            TotalGamesWithAchievements = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameAchievements_.AddEntriesFrom(ref input, _repeated_gameAchievements_codec);
            break;
          }
          case 16: {
            TotalAchievements = input.ReadUInt32();
            break;
          }
          case 24: {
            TotalRareAchievements = input.ReadUInt32();
            break;
          }
          case 32: {
            TotalGamesWithAchievements = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearInReview_Request : pb::IMessage<CSaleFeature_GetUserYearInReview_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearInReview_Request> _parser = new pb::MessageParser<CSaleFeature_GetUserYearInReview_Request>(() => new CSaleFeature_GetUserYearInReview_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearInReview_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReview_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReview_Request(CSaleFeature_GetUserYearInReview_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      forceRegenerate_ = other.forceRegenerate_;
      accessSource_ = other.accessSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReview_Request Clone() {
      return new CSaleFeature_GetUserYearInReview_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "force_regenerate" field.</summary>
    public const int ForceRegenerateFieldNumber = 3;
    private readonly static bool ForceRegenerateDefaultValue = false;

    private bool forceRegenerate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceRegenerate {
      get { if ((_hasBits0 & 4) != 0) { return forceRegenerate_; } else { return ForceRegenerateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        forceRegenerate_ = value;
      }
    }
    /// <summary>Gets whether the "force_regenerate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceRegenerate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "force_regenerate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceRegenerate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "access_source" field.</summary>
    public const int AccessSourceFieldNumber = 4;
    private readonly static int AccessSourceDefaultValue = 0;

    private int accessSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccessSource {
      get { if ((_hasBits0 & 8) != 0) { return accessSource_; } else { return AccessSourceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        accessSource_ = value;
      }
    }
    /// <summary>Gets whether the "access_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessSource {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "access_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessSource() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearInReview_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearInReview_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      if (ForceRegenerate != other.ForceRegenerate) return false;
      if (AccessSource != other.AccessSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasForceRegenerate) hash ^= ForceRegenerate.GetHashCode();
      if (HasAccessSource) hash ^= AccessSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasForceRegenerate) {
        output.WriteRawTag(24);
        output.WriteBool(ForceRegenerate);
      }
      if (HasAccessSource) {
        output.WriteRawTag(32);
        output.WriteInt32(AccessSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasForceRegenerate) {
        output.WriteRawTag(24);
        output.WriteBool(ForceRegenerate);
      }
      if (HasAccessSource) {
        output.WriteRawTag(32);
        output.WriteInt32(AccessSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (HasForceRegenerate) {
        size += 1 + 1;
      }
      if (HasAccessSource) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccessSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearInReview_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasForceRegenerate) {
        ForceRegenerate = other.ForceRegenerate;
      }
      if (other.HasAccessSource) {
        AccessSource = other.AccessSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            ForceRegenerate = input.ReadBool();
            break;
          }
          case 32: {
            AccessSource = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            ForceRegenerate = input.ReadBool();
            break;
          }
          case 32: {
            AccessSource = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearInReview_Response : pb::IMessage<CSaleFeature_GetUserYearInReview_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearInReview_Response> _parser = new pb::MessageParser<CSaleFeature_GetUserYearInReview_Response>(() => new CSaleFeature_GetUserYearInReview_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearInReview_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReview_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReview_Response(CSaleFeature_GetUserYearInReview_Response other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      performanceStats_ = other.performanceStats_ != null ? other.performanceStats_.Clone() : null;
      percentiles_ = other.percentiles_ != null ? other.percentiles_.Clone() : null;
      distribution_ = other.distribution_ != null ? other.distribution_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReview_Response Clone() {
      return new CSaleFeature_GetUserYearInReview_Response(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "performance_stats" field.</summary>
    public const int PerformanceStatsFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats performanceStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats PerformanceStats {
      get { return performanceStats_; }
      set {
        performanceStats_ = value;
      }
    }

    /// <summary>Field number for the "percentiles" field.</summary>
    public const int PercentilesFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles percentiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles Percentiles {
      get { return percentiles_; }
      set {
        percentiles_ = value;
      }
    }

    /// <summary>Field number for the "distribution" field.</summary>
    public const int DistributionFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution distribution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution Distribution {
      get { return distribution_; }
      set {
        distribution_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearInReview_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearInReview_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(PerformanceStats, other.PerformanceStats)) return false;
      if (!object.Equals(Percentiles, other.Percentiles)) return false;
      if (!object.Equals(Distribution, other.Distribution)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (performanceStats_ != null) hash ^= PerformanceStats.GetHashCode();
      if (percentiles_ != null) hash ^= Percentiles.GetHashCode();
      if (distribution_ != null) hash ^= Distribution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (performanceStats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PerformanceStats);
      }
      if (percentiles_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Percentiles);
      }
      if (distribution_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Distribution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (performanceStats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PerformanceStats);
      }
      if (percentiles_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Percentiles);
      }
      if (distribution_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Distribution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (performanceStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PerformanceStats);
      }
      if (percentiles_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Percentiles);
      }
      if (distribution_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Distribution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearInReview_Response other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.performanceStats_ != null) {
        if (performanceStats_ == null) {
          PerformanceStats = new global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats();
        }
        PerformanceStats.MergeFrom(other.PerformanceStats);
      }
      if (other.percentiles_ != null) {
        if (percentiles_ == null) {
          Percentiles = new global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles();
        }
        Percentiles.MergeFrom(other.Percentiles);
      }
      if (other.distribution_ != null) {
        if (distribution_ == null) {
          Distribution = new global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution();
        }
        Distribution.MergeFrom(other.Distribution);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 18: {
            if (performanceStats_ == null) {
              PerformanceStats = new global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats();
            }
            input.ReadMessage(PerformanceStats);
            break;
          }
          case 26: {
            if (percentiles_ == null) {
              Percentiles = new global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles();
            }
            input.ReadMessage(Percentiles);
            break;
          }
          case 34: {
            if (distribution_ == null) {
              Distribution = new global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution();
            }
            input.ReadMessage(Distribution);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::OpenSteamworks.Protobuf.WebUI.CUserYearInReviewStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 18: {
            if (performanceStats_ == null) {
              PerformanceStats = new global::OpenSteamworks.Protobuf.WebUI.CYearInReviewPerformanceStats();
            }
            input.ReadMessage(PerformanceStats);
            break;
          }
          case 26: {
            if (percentiles_ == null) {
              Percentiles = new global::OpenSteamworks.Protobuf.WebUI.CGlobalPercentiles();
            }
            input.ReadMessage(Percentiles);
            break;
          }
          case 34: {
            if (distribution_ == null) {
              Distribution = new global::OpenSteamworks.Protobuf.WebUI.CGlobalPlaytimeDistribution();
            }
            input.ReadMessage(Distribution);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearInReviewShareImage_Request : pb::IMessage<CSaleFeature_GetUserYearInReviewShareImage_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Request> _parser = new pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Request>(() => new CSaleFeature_GetUserYearInReviewShareImage_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Request(CSaleFeature_GetUserYearInReviewShareImage_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Request Clone() {
      return new CSaleFeature_GetUserYearInReviewShareImage_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearInReviewShareImage_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearInReviewShareImage_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearInReviewShareImage_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearInReviewShareImage_Response : pb::IMessage<CSaleFeature_GetUserYearInReviewShareImage_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Response> _parser = new pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Response>(() => new CSaleFeature_GetUserYearInReviewShareImage_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Response(CSaleFeature_GetUserYearInReviewShareImage_Response other) : this() {
      images_ = other.images_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Response Clone() {
      return new CSaleFeature_GetUserYearInReviewShareImage_Response(this);
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image> _repeated_images_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image> images_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearInReviewShareImage_Response_Image> Images {
      get { return images_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearInReviewShareImage_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearInReviewShareImage_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!images_.Equals(other.images_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= images_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      images_.WriteTo(output, _repeated_images_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      images_.WriteTo(ref output, _repeated_images_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += images_.CalculateSize(_repeated_images_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearInReviewShareImage_Response other) {
      if (other == null) {
        return;
      }
      images_.Add(other.images_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            images_.AddEntriesFrom(ref input, _repeated_images_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearInReviewShareImage_Response_Image : pb::IMessage<CSaleFeature_GetUserYearInReviewShareImage_Response_Image>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Response_Image> _parser = new pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Response_Image>(() => new CSaleFeature_GetUserYearInReviewShareImage_Response_Image());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearInReviewShareImage_Response_Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Response_Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Response_Image(CSaleFeature_GetUserYearInReviewShareImage_Response_Image other) : this() {
      name_ = other.name_;
      urlPath_ = other.urlPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearInReviewShareImage_Response_Image Clone() {
      return new CSaleFeature_GetUserYearInReviewShareImage_Response_Image(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "url_path" field.</summary>
    public const int UrlPathFieldNumber = 2;
    private readonly static string UrlPathDefaultValue = "";

    private string urlPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UrlPath {
      get { return urlPath_ ?? UrlPathDefaultValue; }
      set {
        urlPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrlPath {
      get { return urlPath_ != null; }
    }
    /// <summary>Clears the value of the "url_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrlPath() {
      urlPath_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearInReviewShareImage_Response_Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearInReviewShareImage_Response_Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (UrlPath != other.UrlPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasUrlPath) hash ^= UrlPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasUrlPath) {
        output.WriteRawTag(18);
        output.WriteString(UrlPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasUrlPath) {
        output.WriteRawTag(18);
        output.WriteString(UrlPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasUrlPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearInReviewShareImage_Response_Image other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasUrlPath) {
        UrlPath = other.UrlPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            UrlPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            UrlPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearScreenshots_Request : pb::IMessage<CSaleFeature_GetUserYearScreenshots_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Request> _parser = new pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Request>(() => new CSaleFeature_GetUserYearScreenshots_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Request(CSaleFeature_GetUserYearScreenshots_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      appids_ = other.appids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Request Clone() {
      return new CSaleFeature_GetUserYearScreenshots_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "appids" field.</summary>
    public const int AppidsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_appids_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Appids {
      get { return appids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearScreenshots_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearScreenshots_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      if(!appids_.Equals(other.appids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      hash ^= appids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      appids_.WriteTo(output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      appids_.WriteTo(ref output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      size += appids_.CalculateSize(_repeated_appids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearScreenshots_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      appids_.Add(other.appids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            appids_.AddEntriesFrom(input, _repeated_appids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearScreenshots_Response : pb::IMessage<CSaleFeature_GetUserYearScreenshots_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response> _parser = new pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response>(() => new CSaleFeature_GetUserYearScreenshots_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response(CSaleFeature_GetUserYearScreenshots_Response other) : this() {
      apps_ = other.apps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response Clone() {
      return new CSaleFeature_GetUserYearScreenshots_Response(this);
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int AppsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp> apps_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp> Apps {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearScreenshots_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearScreenshots_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!apps_.Equals(other.apps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= apps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      apps_.WriteTo(output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      apps_.WriteTo(ref output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearScreenshots_Response other) {
      if (other == null) {
        return;
      }
      apps_.Add(other.apps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            apps_.AddEntriesFrom(ref input, _repeated_apps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearScreenshots_Response_Screenshot : pb::IMessage<CSaleFeature_GetUserYearScreenshots_Response_Screenshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response_Screenshot> _parser = new pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response_Screenshot>(() => new CSaleFeature_GetUserYearScreenshots_Response_Screenshot());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response_Screenshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response_Screenshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response_Screenshot(CSaleFeature_GetUserYearScreenshots_Response_Screenshot other) : this() {
      _hasBits0 = other._hasBits0;
      imageUrl_ = other.imageUrl_;
      previewUrl_ = other.previewUrl_;
      imageWidth_ = other.imageWidth_;
      imageHeight_ = other.imageHeight_;
      maybeInappropriateSex_ = other.maybeInappropriateSex_;
      maybeInappropriateViolence_ = other.maybeInappropriateViolence_;
      visibility_ = other.visibility_;
      spoilerTag_ = other.spoilerTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response_Screenshot Clone() {
      return new CSaleFeature_GetUserYearScreenshots_Response_Screenshot(this);
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 1;
    private readonly static string ImageUrlDefaultValue = "";

    private string imageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImageUrl {
      get { return imageUrl_ ?? ImageUrlDefaultValue; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageUrl {
      get { return imageUrl_ != null; }
    }
    /// <summary>Clears the value of the "image_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageUrl() {
      imageUrl_ = null;
    }

    /// <summary>Field number for the "preview_url" field.</summary>
    public const int PreviewUrlFieldNumber = 2;
    private readonly static string PreviewUrlDefaultValue = "";

    private string previewUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreviewUrl {
      get { return previewUrl_ ?? PreviewUrlDefaultValue; }
      set {
        previewUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "preview_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreviewUrl {
      get { return previewUrl_ != null; }
    }
    /// <summary>Clears the value of the "preview_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreviewUrl() {
      previewUrl_ = null;
    }

    /// <summary>Field number for the "image_width" field.</summary>
    public const int ImageWidthFieldNumber = 3;
    private readonly static uint ImageWidthDefaultValue = 0;

    private uint imageWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ImageWidth {
      get { if ((_hasBits0 & 1) != 0) { return imageWidth_; } else { return ImageWidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        imageWidth_ = value;
      }
    }
    /// <summary>Gets whether the "image_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "image_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "image_height" field.</summary>
    public const int ImageHeightFieldNumber = 4;
    private readonly static uint ImageHeightDefaultValue = 0;

    private uint imageHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ImageHeight {
      get { if ((_hasBits0 & 2) != 0) { return imageHeight_; } else { return ImageHeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        imageHeight_ = value;
      }
    }
    /// <summary>Gets whether the "image_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "image_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "maybe_inappropriate_sex" field.</summary>
    public const int MaybeInappropriateSexFieldNumber = 5;
    private readonly static bool MaybeInappropriateSexDefaultValue = false;

    private bool maybeInappropriateSex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaybeInappropriateSex {
      get { if ((_hasBits0 & 4) != 0) { return maybeInappropriateSex_; } else { return MaybeInappropriateSexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maybeInappropriateSex_ = value;
      }
    }
    /// <summary>Gets whether the "maybe_inappropriate_sex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaybeInappropriateSex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maybe_inappropriate_sex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaybeInappropriateSex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "maybe_inappropriate_violence" field.</summary>
    public const int MaybeInappropriateViolenceFieldNumber = 6;
    private readonly static bool MaybeInappropriateViolenceDefaultValue = false;

    private bool maybeInappropriateViolence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaybeInappropriateViolence {
      get { if ((_hasBits0 & 8) != 0) { return maybeInappropriateViolence_; } else { return MaybeInappropriateViolenceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        maybeInappropriateViolence_ = value;
      }
    }
    /// <summary>Gets whether the "maybe_inappropriate_violence" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaybeInappropriateViolence {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "maybe_inappropriate_violence" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaybeInappropriateViolence() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 7;
    private readonly static uint VisibilityDefaultValue = 0;

    private uint visibility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Visibility {
      get { if ((_hasBits0 & 16) != 0) { return visibility_; } else { return VisibilityDefaultValue; } }
      set {
        _hasBits0 |= 16;
        visibility_ = value;
      }
    }
    /// <summary>Gets whether the "visibility" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisibility {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "visibility" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisibility() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "spoiler_tag" field.</summary>
    public const int SpoilerTagFieldNumber = 8;
    private readonly static bool SpoilerTagDefaultValue = false;

    private bool spoilerTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SpoilerTag {
      get { if ((_hasBits0 & 32) != 0) { return spoilerTag_; } else { return SpoilerTagDefaultValue; } }
      set {
        _hasBits0 |= 32;
        spoilerTag_ = value;
      }
    }
    /// <summary>Gets whether the "spoiler_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpoilerTag {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "spoiler_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpoilerTag() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearScreenshots_Response_Screenshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearScreenshots_Response_Screenshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageUrl != other.ImageUrl) return false;
      if (PreviewUrl != other.PreviewUrl) return false;
      if (ImageWidth != other.ImageWidth) return false;
      if (ImageHeight != other.ImageHeight) return false;
      if (MaybeInappropriateSex != other.MaybeInappropriateSex) return false;
      if (MaybeInappropriateViolence != other.MaybeInappropriateViolence) return false;
      if (Visibility != other.Visibility) return false;
      if (SpoilerTag != other.SpoilerTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImageUrl) hash ^= ImageUrl.GetHashCode();
      if (HasPreviewUrl) hash ^= PreviewUrl.GetHashCode();
      if (HasImageWidth) hash ^= ImageWidth.GetHashCode();
      if (HasImageHeight) hash ^= ImageHeight.GetHashCode();
      if (HasMaybeInappropriateSex) hash ^= MaybeInappropriateSex.GetHashCode();
      if (HasMaybeInappropriateViolence) hash ^= MaybeInappropriateViolence.GetHashCode();
      if (HasVisibility) hash ^= Visibility.GetHashCode();
      if (HasSpoilerTag) hash ^= SpoilerTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasImageUrl) {
        output.WriteRawTag(10);
        output.WriteString(ImageUrl);
      }
      if (HasPreviewUrl) {
        output.WriteRawTag(18);
        output.WriteString(PreviewUrl);
      }
      if (HasImageWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(ImageWidth);
      }
      if (HasImageHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(ImageHeight);
      }
      if (HasMaybeInappropriateSex) {
        output.WriteRawTag(40);
        output.WriteBool(MaybeInappropriateSex);
      }
      if (HasMaybeInappropriateViolence) {
        output.WriteRawTag(48);
        output.WriteBool(MaybeInappropriateViolence);
      }
      if (HasVisibility) {
        output.WriteRawTag(56);
        output.WriteUInt32(Visibility);
      }
      if (HasSpoilerTag) {
        output.WriteRawTag(64);
        output.WriteBool(SpoilerTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasImageUrl) {
        output.WriteRawTag(10);
        output.WriteString(ImageUrl);
      }
      if (HasPreviewUrl) {
        output.WriteRawTag(18);
        output.WriteString(PreviewUrl);
      }
      if (HasImageWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(ImageWidth);
      }
      if (HasImageHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(ImageHeight);
      }
      if (HasMaybeInappropriateSex) {
        output.WriteRawTag(40);
        output.WriteBool(MaybeInappropriateSex);
      }
      if (HasMaybeInappropriateViolence) {
        output.WriteRawTag(48);
        output.WriteBool(MaybeInappropriateViolence);
      }
      if (HasVisibility) {
        output.WriteRawTag(56);
        output.WriteUInt32(Visibility);
      }
      if (HasSpoilerTag) {
        output.WriteRawTag(64);
        output.WriteBool(SpoilerTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (HasPreviewUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewUrl);
      }
      if (HasImageWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageWidth);
      }
      if (HasImageHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageHeight);
      }
      if (HasMaybeInappropriateSex) {
        size += 1 + 1;
      }
      if (HasMaybeInappropriateViolence) {
        size += 1 + 1;
      }
      if (HasVisibility) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Visibility);
      }
      if (HasSpoilerTag) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearScreenshots_Response_Screenshot other) {
      if (other == null) {
        return;
      }
      if (other.HasImageUrl) {
        ImageUrl = other.ImageUrl;
      }
      if (other.HasPreviewUrl) {
        PreviewUrl = other.PreviewUrl;
      }
      if (other.HasImageWidth) {
        ImageWidth = other.ImageWidth;
      }
      if (other.HasImageHeight) {
        ImageHeight = other.ImageHeight;
      }
      if (other.HasMaybeInappropriateSex) {
        MaybeInappropriateSex = other.MaybeInappropriateSex;
      }
      if (other.HasMaybeInappropriateViolence) {
        MaybeInappropriateViolence = other.MaybeInappropriateViolence;
      }
      if (other.HasVisibility) {
        Visibility = other.Visibility;
      }
      if (other.HasSpoilerTag) {
        SpoilerTag = other.SpoilerTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageUrl = input.ReadString();
            break;
          }
          case 18: {
            PreviewUrl = input.ReadString();
            break;
          }
          case 24: {
            ImageWidth = input.ReadUInt32();
            break;
          }
          case 32: {
            ImageHeight = input.ReadUInt32();
            break;
          }
          case 40: {
            MaybeInappropriateSex = input.ReadBool();
            break;
          }
          case 48: {
            MaybeInappropriateViolence = input.ReadBool();
            break;
          }
          case 56: {
            Visibility = input.ReadUInt32();
            break;
          }
          case 64: {
            SpoilerTag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ImageUrl = input.ReadString();
            break;
          }
          case 18: {
            PreviewUrl = input.ReadString();
            break;
          }
          case 24: {
            ImageWidth = input.ReadUInt32();
            break;
          }
          case 32: {
            ImageHeight = input.ReadUInt32();
            break;
          }
          case 40: {
            MaybeInappropriateSex = input.ReadBool();
            break;
          }
          case 48: {
            MaybeInappropriateViolence = input.ReadBool();
            break;
          }
          case 56: {
            Visibility = input.ReadUInt32();
            break;
          }
          case 64: {
            SpoilerTag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp : pb::IMessage<CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp> _parser = new pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp>(() => new CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp(CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      screenshots_ = other.screenshots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp Clone() {
      return new CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "screenshots" field.</summary>
    public const int ScreenshotsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot> _repeated_screenshots_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot> screenshots_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CSaleFeature_GetUserYearScreenshots_Response_Screenshot> Screenshots {
      get { return screenshots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if(!screenshots_.Equals(other.screenshots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      hash ^= screenshots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      screenshots_.WriteTo(output, _repeated_screenshots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      screenshots_.WriteTo(ref output, _repeated_screenshots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      size += screenshots_.CalculateSize(_repeated_screenshots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      screenshots_.Add(other.screenshots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            screenshots_.AddEntriesFrom(input, _repeated_screenshots_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            screenshots_.AddEntriesFrom(ref input, _repeated_screenshots_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_SetUserActionData_Request : pb::IMessage<CSaleFeature_SetUserActionData_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_SetUserActionData_Request> _parser = new pb::MessageParser<CSaleFeature_SetUserActionData_Request>(() => new CSaleFeature_SetUserActionData_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_SetUserActionData_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserActionData_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserActionData_Request(CSaleFeature_SetUserActionData_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      gid_ = other.gid_;
      type_ = other.type_;
      jsondata_ = other.jsondata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserActionData_Request Clone() {
      return new CSaleFeature_SetUserActionData_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 2;
    private readonly static ulong GidDefaultValue = 0UL;

    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gid {
      get { if ((_hasBits0 & 2) != 0) { return gid_; } else { return GidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gid_ = value;
      }
    }
    /// <summary>Gets whether the "gid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "jsondata" field.</summary>
    public const int JsondataFieldNumber = 4;
    private readonly static string JsondataDefaultValue = "";

    private string jsondata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Jsondata {
      get { return jsondata_ ?? JsondataDefaultValue; }
      set {
        jsondata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jsondata" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJsondata {
      get { return jsondata_ != null; }
    }
    /// <summary>Clears the value of the "jsondata" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJsondata() {
      jsondata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_SetUserActionData_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_SetUserActionData_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Gid != other.Gid) return false;
      if (Type != other.Type) return false;
      if (Jsondata != other.Jsondata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasGid) hash ^= Gid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasJsondata) hash ^= Jsondata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasGid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Gid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasJsondata) {
        output.WriteRawTag(34);
        output.WriteString(Jsondata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasGid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Gid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasJsondata) {
        output.WriteRawTag(34);
        output.WriteString(Jsondata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasGid) {
        size += 1 + 8;
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasJsondata) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jsondata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_SetUserActionData_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasGid) {
        Gid = other.Gid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasJsondata) {
        Jsondata = other.Jsondata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            Gid = input.ReadFixed64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Jsondata = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            Gid = input.ReadFixed64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Jsondata = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_SetUserActionData_Response : pb::IMessage<CSaleFeature_SetUserActionData_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_SetUserActionData_Response> _parser = new pb::MessageParser<CSaleFeature_SetUserActionData_Response>(() => new CSaleFeature_SetUserActionData_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_SetUserActionData_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserActionData_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserActionData_Response(CSaleFeature_SetUserActionData_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserActionData_Response Clone() {
      return new CSaleFeature_SetUserActionData_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_SetUserActionData_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_SetUserActionData_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_SetUserActionData_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_SetUserSharingPermissions_Request : pb::IMessage<CSaleFeature_SetUserSharingPermissions_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_SetUserSharingPermissions_Request> _parser = new pb::MessageParser<CSaleFeature_SetUserSharingPermissions_Request>(() => new CSaleFeature_SetUserSharingPermissions_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_SetUserSharingPermissions_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserSharingPermissions_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserSharingPermissions_Request(CSaleFeature_SetUserSharingPermissions_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      year_ = other.year_;
      privacyState_ = other.privacyState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserSharingPermissions_Request Clone() {
      return new CSaleFeature_SetUserSharingPermissions_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "privacy_state" field.</summary>
    public const int PrivacyStateFieldNumber = 3;
    private readonly static int PrivacyStateDefaultValue = 0;

    private int privacyState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyState {
      get { if ((_hasBits0 & 4) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        privacyState_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyState() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_SetUserSharingPermissions_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_SetUserSharingPermissions_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Year != other.Year) return false;
      if (PrivacyState != other.PrivacyState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasPrivacyState) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivacyState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasPrivacyState) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivacyState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (HasPrivacyState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_SetUserSharingPermissions_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasPrivacyState) {
        PrivacyState = other.PrivacyState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            PrivacyState = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            PrivacyState = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaleFeature_SetUserSharingPermissions_Response : pb::IMessage<CSaleFeature_SetUserSharingPermissions_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaleFeature_SetUserSharingPermissions_Response> _parser = new pb::MessageParser<CSaleFeature_SetUserSharingPermissions_Response>(() => new CSaleFeature_SetUserSharingPermissions_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaleFeature_SetUserSharingPermissions_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserSharingPermissions_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserSharingPermissions_Response(CSaleFeature_SetUserSharingPermissions_Response other) : this() {
      _hasBits0 = other._hasBits0;
      privacyState_ = other.privacyState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaleFeature_SetUserSharingPermissions_Response Clone() {
      return new CSaleFeature_SetUserSharingPermissions_Response(this);
    }

    /// <summary>Field number for the "privacy_state" field.</summary>
    public const int PrivacyStateFieldNumber = 1;
    private readonly static int PrivacyStateDefaultValue = 0;

    private int privacyState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyState {
      get { if ((_hasBits0 & 1) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        privacyState_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyState() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaleFeature_SetUserSharingPermissions_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaleFeature_SetUserSharingPermissions_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivacyState != other.PrivacyState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPrivacyState) {
        output.WriteRawTag(8);
        output.WriteInt32(PrivacyState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPrivacyState) {
        output.WriteRawTag(8);
        output.WriteInt32(PrivacyState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPrivacyState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaleFeature_SetUserSharingPermissions_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasPrivacyState) {
        PrivacyState = other.PrivacyState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PrivacyState = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PrivacyState = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSimpleGameSummary : pb::IMessage<CSimpleGameSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSimpleGameSummary> _parser = new pb::MessageParser<CSimpleGameSummary>(() => new CSimpleGameSummary());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSimpleGameSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSimpleGameSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSimpleGameSummary(CSimpleGameSummary other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      totalPlaytimePercentagex100_ = other.totalPlaytimePercentagex100_;
      relativePlaytimePercentagex100_ = other.relativePlaytimePercentagex100_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSimpleGameSummary Clone() {
      return new CSimpleGameSummary(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total_playtime_percentagex100" field.</summary>
    public const int TotalPlaytimePercentagex100FieldNumber = 2;
    private readonly static uint TotalPlaytimePercentagex100DefaultValue = 0;

    private uint totalPlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalPlaytimePercentagex100 {
      get { if ((_hasBits0 & 2) != 0) { return totalPlaytimePercentagex100_; } else { return TotalPlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalPlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "total_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlaytimePercentagex100 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlaytimePercentagex100() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "relative_playtime_percentagex100" field.</summary>
    public const int RelativePlaytimePercentagex100FieldNumber = 3;
    private readonly static uint RelativePlaytimePercentagex100DefaultValue = 0;

    private uint relativePlaytimePercentagex100_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RelativePlaytimePercentagex100 {
      get { if ((_hasBits0 & 4) != 0) { return relativePlaytimePercentagex100_; } else { return RelativePlaytimePercentagex100DefaultValue; } }
      set {
        _hasBits0 |= 4;
        relativePlaytimePercentagex100_ = value;
      }
    }
    /// <summary>Gets whether the "relative_playtime_percentagex100" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelativePlaytimePercentagex100 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "relative_playtime_percentagex100" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelativePlaytimePercentagex100() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSimpleGameSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSimpleGameSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (TotalPlaytimePercentagex100 != other.TotalPlaytimePercentagex100) return false;
      if (RelativePlaytimePercentagex100 != other.RelativePlaytimePercentagex100) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasTotalPlaytimePercentagex100) hash ^= TotalPlaytimePercentagex100.GetHashCode();
      if (HasRelativePlaytimePercentagex100) hash ^= RelativePlaytimePercentagex100.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasTotalPlaytimePercentagex100) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalPlaytimePercentagex100);
      }
      if (HasRelativePlaytimePercentagex100) {
        output.WriteRawTag(24);
        output.WriteUInt32(RelativePlaytimePercentagex100);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasTotalPlaytimePercentagex100) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalPlaytimePercentagex100);
      }
      if (HasRelativePlaytimePercentagex100) {
        output.WriteRawTag(24);
        output.WriteUInt32(RelativePlaytimePercentagex100);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasTotalPlaytimePercentagex100) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalPlaytimePercentagex100);
      }
      if (HasRelativePlaytimePercentagex100) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RelativePlaytimePercentagex100);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSimpleGameSummary other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasTotalPlaytimePercentagex100) {
        TotalPlaytimePercentagex100 = other.TotalPlaytimePercentagex100;
      }
      if (other.HasRelativePlaytimePercentagex100) {
        RelativePlaytimePercentagex100 = other.RelativePlaytimePercentagex100;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            TotalPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 24: {
            RelativePlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            TotalPlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
          case 24: {
            RelativePlaytimePercentagex100 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserPlaytimeStats : pb::IMessage<CUserPlaytimeStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserPlaytimeStats> _parser = new pb::MessageParser<CUserPlaytimeStats>(() => new CUserPlaytimeStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserPlaytimeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserPlaytimeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserPlaytimeStats(CUserPlaytimeStats other) : this() {
      _hasBits0 = other._hasBits0;
      totalStats_ = other.totalStats_ != null ? other.totalStats_.Clone() : null;
      games_ = other.games_.Clone();
      playtimeStreak_ = other.playtimeStreak_ != null ? other.playtimeStreak_.Clone() : null;
      months_ = other.months_.Clone();
      gameSummary_ = other.gameSummary_.Clone();
      demosPlayed_ = other.demosPlayed_;
      gameRankings_ = other.gameRankings_ != null ? other.gameRankings_.Clone() : null;
      playtestsPlayed_ = other.playtestsPlayed_;
      summaryStats_ = other.summaryStats_ != null ? other.summaryStats_.Clone() : null;
      substantial_ = other.substantial_;
      tagStats_ = other.tagStats_ != null ? other.tagStats_.Clone() : null;
      byNumbers_ = other.byNumbers_ != null ? other.byNumbers_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserPlaytimeStats Clone() {
      return new CUserPlaytimeStats(this);
    }

    /// <summary>Field number for the "total_stats" field.</summary>
    public const int TotalStatsFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats totalStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats TotalStats {
      get { return totalStats_; }
      set {
        totalStats_ = value;
      }
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats> _repeated_games_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats> games_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGamePlaytimeStats> Games {
      get { return games_; }
    }

    /// <summary>Field number for the "playtime_streak" field.</summary>
    public const int PlaytimeStreakFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak playtimeStreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak PlaytimeStreak {
      get { return playtimeStreak_; }
      set {
        playtimeStreak_ = value;
      }
    }

    /// <summary>Field number for the "months" field.</summary>
    public const int MonthsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats> _repeated_months_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats> months_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CMonthlyPlaytimeStats> Months {
      get { return months_; }
    }

    /// <summary>Field number for the "game_summary" field.</summary>
    public const int GameSummaryFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CGameSummary> _repeated_gameSummary_codec
        = pb::FieldCodec.ForMessage(50, global::OpenSteamworks.Protobuf.WebUI.CGameSummary.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameSummary> gameSummary_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CGameSummary> GameSummary {
      get { return gameSummary_; }
    }

    /// <summary>Field number for the "demos_played" field.</summary>
    public const int DemosPlayedFieldNumber = 7;
    private readonly static uint DemosPlayedDefaultValue = 0;

    private uint demosPlayed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DemosPlayed {
      get { if ((_hasBits0 & 1) != 0) { return demosPlayed_; } else { return DemosPlayedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        demosPlayed_ = value;
      }
    }
    /// <summary>Gets whether the "demos_played" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDemosPlayed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "demos_played" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDemosPlayed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_rankings" field.</summary>
    public const int GameRankingsFieldNumber = 8;
    private global::OpenSteamworks.Protobuf.WebUI.CGameRankings gameRankings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CGameRankings GameRankings {
      get { return gameRankings_; }
      set {
        gameRankings_ = value;
      }
    }

    /// <summary>Field number for the "playtests_played" field.</summary>
    public const int PlaytestsPlayedFieldNumber = 9;
    private readonly static uint PlaytestsPlayedDefaultValue = 0;

    private uint playtestsPlayed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlaytestsPlayed {
      get { if ((_hasBits0 & 2) != 0) { return playtestsPlayed_; } else { return PlaytestsPlayedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playtestsPlayed_ = value;
      }
    }
    /// <summary>Gets whether the "playtests_played" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaytestsPlayed {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playtests_played" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaytestsPlayed() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "summary_stats" field.</summary>
    public const int SummaryStatsFieldNumber = 10;
    private global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats summaryStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats SummaryStats {
      get { return summaryStats_; }
      set {
        summaryStats_ = value;
      }
    }

    /// <summary>Field number for the "substantial" field.</summary>
    public const int SubstantialFieldNumber = 11;
    private readonly static bool SubstantialDefaultValue = true;

    private bool substantial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Substantial {
      get { if ((_hasBits0 & 4) != 0) { return substantial_; } else { return SubstantialDefaultValue; } }
      set {
        _hasBits0 |= 4;
        substantial_ = value;
      }
    }
    /// <summary>Gets whether the "substantial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubstantial {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "substantial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubstantial() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "tag_stats" field.</summary>
    public const int TagStatsFieldNumber = 12;
    private global::OpenSteamworks.Protobuf.WebUI.CUserTagStats tagStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CUserTagStats TagStats {
      get { return tagStats_; }
      set {
        tagStats_ = value;
      }
    }

    /// <summary>Field number for the "by_numbers" field.</summary>
    public const int ByNumbersFieldNumber = 13;
    private global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers byNumbers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers ByNumbers {
      get { return byNumbers_; }
      set {
        byNumbers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserPlaytimeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserPlaytimeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TotalStats, other.TotalStats)) return false;
      if(!games_.Equals(other.games_)) return false;
      if (!object.Equals(PlaytimeStreak, other.PlaytimeStreak)) return false;
      if(!months_.Equals(other.months_)) return false;
      if(!gameSummary_.Equals(other.gameSummary_)) return false;
      if (DemosPlayed != other.DemosPlayed) return false;
      if (!object.Equals(GameRankings, other.GameRankings)) return false;
      if (PlaytestsPlayed != other.PlaytestsPlayed) return false;
      if (!object.Equals(SummaryStats, other.SummaryStats)) return false;
      if (Substantial != other.Substantial) return false;
      if (!object.Equals(TagStats, other.TagStats)) return false;
      if (!object.Equals(ByNumbers, other.ByNumbers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (totalStats_ != null) hash ^= TotalStats.GetHashCode();
      hash ^= games_.GetHashCode();
      if (playtimeStreak_ != null) hash ^= PlaytimeStreak.GetHashCode();
      hash ^= months_.GetHashCode();
      hash ^= gameSummary_.GetHashCode();
      if (HasDemosPlayed) hash ^= DemosPlayed.GetHashCode();
      if (gameRankings_ != null) hash ^= GameRankings.GetHashCode();
      if (HasPlaytestsPlayed) hash ^= PlaytestsPlayed.GetHashCode();
      if (summaryStats_ != null) hash ^= SummaryStats.GetHashCode();
      if (HasSubstantial) hash ^= Substantial.GetHashCode();
      if (tagStats_ != null) hash ^= TagStats.GetHashCode();
      if (byNumbers_ != null) hash ^= ByNumbers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (totalStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TotalStats);
      }
      games_.WriteTo(output, _repeated_games_codec);
      if (playtimeStreak_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStreak);
      }
      months_.WriteTo(output, _repeated_months_codec);
      gameSummary_.WriteTo(output, _repeated_gameSummary_codec);
      if (HasDemosPlayed) {
        output.WriteRawTag(56);
        output.WriteUInt32(DemosPlayed);
      }
      if (gameRankings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GameRankings);
      }
      if (HasPlaytestsPlayed) {
        output.WriteRawTag(72);
        output.WriteUInt32(PlaytestsPlayed);
      }
      if (summaryStats_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SummaryStats);
      }
      if (HasSubstantial) {
        output.WriteRawTag(88);
        output.WriteBool(Substantial);
      }
      if (tagStats_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TagStats);
      }
      if (byNumbers_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ByNumbers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (totalStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TotalStats);
      }
      games_.WriteTo(ref output, _repeated_games_codec);
      if (playtimeStreak_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStreak);
      }
      months_.WriteTo(ref output, _repeated_months_codec);
      gameSummary_.WriteTo(ref output, _repeated_gameSummary_codec);
      if (HasDemosPlayed) {
        output.WriteRawTag(56);
        output.WriteUInt32(DemosPlayed);
      }
      if (gameRankings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GameRankings);
      }
      if (HasPlaytestsPlayed) {
        output.WriteRawTag(72);
        output.WriteUInt32(PlaytestsPlayed);
      }
      if (summaryStats_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SummaryStats);
      }
      if (HasSubstantial) {
        output.WriteRawTag(88);
        output.WriteBool(Substantial);
      }
      if (tagStats_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TagStats);
      }
      if (byNumbers_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ByNumbers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (totalStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalStats);
      }
      size += games_.CalculateSize(_repeated_games_codec);
      if (playtimeStreak_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaytimeStreak);
      }
      size += months_.CalculateSize(_repeated_months_codec);
      size += gameSummary_.CalculateSize(_repeated_gameSummary_codec);
      if (HasDemosPlayed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DemosPlayed);
      }
      if (gameRankings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameRankings);
      }
      if (HasPlaytestsPlayed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlaytestsPlayed);
      }
      if (summaryStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SummaryStats);
      }
      if (HasSubstantial) {
        size += 1 + 1;
      }
      if (tagStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TagStats);
      }
      if (byNumbers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ByNumbers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserPlaytimeStats other) {
      if (other == null) {
        return;
      }
      if (other.totalStats_ != null) {
        if (totalStats_ == null) {
          TotalStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
        }
        TotalStats.MergeFrom(other.TotalStats);
      }
      games_.Add(other.games_);
      if (other.playtimeStreak_ != null) {
        if (playtimeStreak_ == null) {
          PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
        }
        PlaytimeStreak.MergeFrom(other.PlaytimeStreak);
      }
      months_.Add(other.months_);
      gameSummary_.Add(other.gameSummary_);
      if (other.HasDemosPlayed) {
        DemosPlayed = other.DemosPlayed;
      }
      if (other.gameRankings_ != null) {
        if (gameRankings_ == null) {
          GameRankings = new global::OpenSteamworks.Protobuf.WebUI.CGameRankings();
        }
        GameRankings.MergeFrom(other.GameRankings);
      }
      if (other.HasPlaytestsPlayed) {
        PlaytestsPlayed = other.PlaytestsPlayed;
      }
      if (other.summaryStats_ != null) {
        if (summaryStats_ == null) {
          SummaryStats = new global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats();
        }
        SummaryStats.MergeFrom(other.SummaryStats);
      }
      if (other.HasSubstantial) {
        Substantial = other.Substantial;
      }
      if (other.tagStats_ != null) {
        if (tagStats_ == null) {
          TagStats = new global::OpenSteamworks.Protobuf.WebUI.CUserTagStats();
        }
        TagStats.MergeFrom(other.TagStats);
      }
      if (other.byNumbers_ != null) {
        if (byNumbers_ == null) {
          ByNumbers = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers();
        }
        ByNumbers.MergeFrom(other.ByNumbers);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (totalStats_ == null) {
              TotalStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(TotalStats);
            break;
          }
          case 18: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
          case 26: {
            if (playtimeStreak_ == null) {
              PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
            }
            input.ReadMessage(PlaytimeStreak);
            break;
          }
          case 42: {
            months_.AddEntriesFrom(input, _repeated_months_codec);
            break;
          }
          case 50: {
            gameSummary_.AddEntriesFrom(input, _repeated_gameSummary_codec);
            break;
          }
          case 56: {
            DemosPlayed = input.ReadUInt32();
            break;
          }
          case 66: {
            if (gameRankings_ == null) {
              GameRankings = new global::OpenSteamworks.Protobuf.WebUI.CGameRankings();
            }
            input.ReadMessage(GameRankings);
            break;
          }
          case 72: {
            PlaytestsPlayed = input.ReadUInt32();
            break;
          }
          case 82: {
            if (summaryStats_ == null) {
              SummaryStats = new global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats();
            }
            input.ReadMessage(SummaryStats);
            break;
          }
          case 88: {
            Substantial = input.ReadBool();
            break;
          }
          case 98: {
            if (tagStats_ == null) {
              TagStats = new global::OpenSteamworks.Protobuf.WebUI.CUserTagStats();
            }
            input.ReadMessage(TagStats);
            break;
          }
          case 106: {
            if (byNumbers_ == null) {
              ByNumbers = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers();
            }
            input.ReadMessage(ByNumbers);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (totalStats_ == null) {
              TotalStats = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStats();
            }
            input.ReadMessage(TotalStats);
            break;
          }
          case 18: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
          case 26: {
            if (playtimeStreak_ == null) {
              PlaytimeStreak = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeStreak();
            }
            input.ReadMessage(PlaytimeStreak);
            break;
          }
          case 42: {
            months_.AddEntriesFrom(ref input, _repeated_months_codec);
            break;
          }
          case 50: {
            gameSummary_.AddEntriesFrom(ref input, _repeated_gameSummary_codec);
            break;
          }
          case 56: {
            DemosPlayed = input.ReadUInt32();
            break;
          }
          case 66: {
            if (gameRankings_ == null) {
              GameRankings = new global::OpenSteamworks.Protobuf.WebUI.CGameRankings();
            }
            input.ReadMessage(GameRankings);
            break;
          }
          case 72: {
            PlaytestsPlayed = input.ReadUInt32();
            break;
          }
          case 82: {
            if (summaryStats_ == null) {
              SummaryStats = new global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeSummaryStats();
            }
            input.ReadMessage(SummaryStats);
            break;
          }
          case 88: {
            Substantial = input.ReadBool();
            break;
          }
          case 98: {
            if (tagStats_ == null) {
              TagStats = new global::OpenSteamworks.Protobuf.WebUI.CUserTagStats();
            }
            input.ReadMessage(TagStats);
            break;
          }
          case 106: {
            if (byNumbers_ == null) {
              ByNumbers = new global::OpenSteamworks.Protobuf.WebUI.CPlaytimeByNumbers();
            }
            input.ReadMessage(ByNumbers);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserPlaytimeSummaryStats : pb::IMessage<CUserPlaytimeSummaryStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserPlaytimeSummaryStats> _parser = new pb::MessageParser<CUserPlaytimeSummaryStats>(() => new CUserPlaytimeSummaryStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserPlaytimeSummaryStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserPlaytimeSummaryStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserPlaytimeSummaryStats(CUserPlaytimeSummaryStats other) : this() {
      _hasBits0 = other._hasBits0;
      totalAchievements_ = other.totalAchievements_;
      totalGamesWithAchievements_ = other.totalGamesWithAchievements_;
      totalRareAchievements_ = other.totalRareAchievements_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserPlaytimeSummaryStats Clone() {
      return new CUserPlaytimeSummaryStats(this);
    }

    /// <summary>Field number for the "total_achievements" field.</summary>
    public const int TotalAchievementsFieldNumber = 2;
    private readonly static uint TotalAchievementsDefaultValue = 0;

    private uint totalAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalAchievements {
      get { if ((_hasBits0 & 1) != 0) { return totalAchievements_; } else { return TotalAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "total_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalAchievements {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalAchievements() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total_games_with_achievements" field.</summary>
    public const int TotalGamesWithAchievementsFieldNumber = 3;
    private readonly static uint TotalGamesWithAchievementsDefaultValue = 0;

    private uint totalGamesWithAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalGamesWithAchievements {
      get { if ((_hasBits0 & 2) != 0) { return totalGamesWithAchievements_; } else { return TotalGamesWithAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalGamesWithAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "total_games_with_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalGamesWithAchievements {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_games_with_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalGamesWithAchievements() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "total_rare_achievements" field.</summary>
    public const int TotalRareAchievementsFieldNumber = 4;
    private readonly static uint TotalRareAchievementsDefaultValue = 0;

    private uint totalRareAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalRareAchievements {
      get { if ((_hasBits0 & 4) != 0) { return totalRareAchievements_; } else { return TotalRareAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalRareAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "total_rare_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalRareAchievements {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_rare_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalRareAchievements() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserPlaytimeSummaryStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserPlaytimeSummaryStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalAchievements != other.TotalAchievements) return false;
      if (TotalGamesWithAchievements != other.TotalGamesWithAchievements) return false;
      if (TotalRareAchievements != other.TotalRareAchievements) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTotalAchievements) hash ^= TotalAchievements.GetHashCode();
      if (HasTotalGamesWithAchievements) hash ^= TotalGamesWithAchievements.GetHashCode();
      if (HasTotalRareAchievements) hash ^= TotalRareAchievements.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTotalAchievements) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalAchievements);
      }
      if (HasTotalGamesWithAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(TotalGamesWithAchievements);
      }
      if (HasTotalRareAchievements) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalRareAchievements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTotalAchievements) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalAchievements);
      }
      if (HasTotalGamesWithAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(TotalGamesWithAchievements);
      }
      if (HasTotalRareAchievements) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalRareAchievements);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTotalAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalAchievements);
      }
      if (HasTotalGamesWithAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalGamesWithAchievements);
      }
      if (HasTotalRareAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalRareAchievements);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserPlaytimeSummaryStats other) {
      if (other == null) {
        return;
      }
      if (other.HasTotalAchievements) {
        TotalAchievements = other.TotalAchievements;
      }
      if (other.HasTotalGamesWithAchievements) {
        TotalGamesWithAchievements = other.TotalGamesWithAchievements;
      }
      if (other.HasTotalRareAchievements) {
        TotalRareAchievements = other.TotalRareAchievements;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            TotalAchievements = input.ReadUInt32();
            break;
          }
          case 24: {
            TotalGamesWithAchievements = input.ReadUInt32();
            break;
          }
          case 32: {
            TotalRareAchievements = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            TotalAchievements = input.ReadUInt32();
            break;
          }
          case 24: {
            TotalGamesWithAchievements = input.ReadUInt32();
            break;
          }
          case 32: {
            TotalRareAchievements = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserTagStats : pb::IMessage<CUserTagStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserTagStats> _parser = new pb::MessageParser<CUserTagStats>(() => new CUserTagStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserTagStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserTagStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserTagStats(CUserTagStats other) : this() {
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserTagStats Clone() {
      return new CUserTagStats(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag> stats_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserTagStats_Tag> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserTagStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserTagStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserTagStats other) {
      if (other == null) {
        return;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserTagStats_Tag : pb::IMessage<CUserTagStats_Tag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserTagStats_Tag> _parser = new pb::MessageParser<CUserTagStats_Tag>(() => new CUserTagStats_Tag());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserTagStats_Tag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserTagStats_Tag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserTagStats_Tag(CUserTagStats_Tag other) : this() {
      _hasBits0 = other._hasBits0;
      tagId_ = other.tagId_;
      tagWeight_ = other.tagWeight_;
      tagWeightPreSelection_ = other.tagWeightPreSelection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserTagStats_Tag Clone() {
      return new CUserTagStats_Tag(this);
    }

    /// <summary>Field number for the "tag_id" field.</summary>
    public const int TagIdFieldNumber = 1;
    private readonly static uint TagIdDefaultValue = 0;

    private uint tagId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TagId {
      get { if ((_hasBits0 & 1) != 0) { return tagId_; } else { return TagIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tagId_ = value;
      }
    }
    /// <summary>Gets whether the "tag_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTagId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tag_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTagId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tag_weight" field.</summary>
    public const int TagWeightFieldNumber = 2;
    private readonly static float TagWeightDefaultValue = 0F;

    private float tagWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TagWeight {
      get { if ((_hasBits0 & 2) != 0) { return tagWeight_; } else { return TagWeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tagWeight_ = value;
      }
    }
    /// <summary>Gets whether the "tag_weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTagWeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tag_weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTagWeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tag_weight_pre_selection" field.</summary>
    public const int TagWeightPreSelectionFieldNumber = 3;
    private readonly static float TagWeightPreSelectionDefaultValue = 0F;

    private float tagWeightPreSelection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TagWeightPreSelection {
      get { if ((_hasBits0 & 4) != 0) { return tagWeightPreSelection_; } else { return TagWeightPreSelectionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tagWeightPreSelection_ = value;
      }
    }
    /// <summary>Gets whether the "tag_weight_pre_selection" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTagWeightPreSelection {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tag_weight_pre_selection" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTagWeightPreSelection() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserTagStats_Tag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserTagStats_Tag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TagId != other.TagId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TagWeight, other.TagWeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TagWeightPreSelection, other.TagWeightPreSelection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTagId) hash ^= TagId.GetHashCode();
      if (HasTagWeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TagWeight);
      if (HasTagWeightPreSelection) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TagWeightPreSelection);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTagId) {
        output.WriteRawTag(8);
        output.WriteUInt32(TagId);
      }
      if (HasTagWeight) {
        output.WriteRawTag(21);
        output.WriteFloat(TagWeight);
      }
      if (HasTagWeightPreSelection) {
        output.WriteRawTag(29);
        output.WriteFloat(TagWeightPreSelection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTagId) {
        output.WriteRawTag(8);
        output.WriteUInt32(TagId);
      }
      if (HasTagWeight) {
        output.WriteRawTag(21);
        output.WriteFloat(TagWeight);
      }
      if (HasTagWeightPreSelection) {
        output.WriteRawTag(29);
        output.WriteFloat(TagWeightPreSelection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTagId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TagId);
      }
      if (HasTagWeight) {
        size += 1 + 4;
      }
      if (HasTagWeightPreSelection) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserTagStats_Tag other) {
      if (other == null) {
        return;
      }
      if (other.HasTagId) {
        TagId = other.TagId;
      }
      if (other.HasTagWeight) {
        TagWeight = other.TagWeight;
      }
      if (other.HasTagWeightPreSelection) {
        TagWeightPreSelection = other.TagWeightPreSelection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TagId = input.ReadUInt32();
            break;
          }
          case 21: {
            TagWeight = input.ReadFloat();
            break;
          }
          case 29: {
            TagWeightPreSelection = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TagId = input.ReadUInt32();
            break;
          }
          case 21: {
            TagWeight = input.ReadFloat();
            break;
          }
          case 29: {
            TagWeightPreSelection = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserYearInReviewStats : pb::IMessage<CUserYearInReviewStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserYearInReviewStats> _parser = new pb::MessageParser<CUserYearInReviewStats>(() => new CUserYearInReviewStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserYearInReviewStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserYearInReviewStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserYearInReviewStats(CUserYearInReviewStats other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      year_ = other.year_;
      playtimeStats_ = other.playtimeStats_ != null ? other.playtimeStats_.Clone() : null;
      privacyState_ = other.privacyState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserYearInReviewStats Clone() {
      return new CUserYearInReviewStats(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "playtime_stats" field.</summary>
    public const int PlaytimeStatsFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats playtimeStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats PlaytimeStats {
      get { return playtimeStats_; }
      set {
        playtimeStats_ = value;
      }
    }

    /// <summary>Field number for the "privacy_state" field.</summary>
    public const int PrivacyStateFieldNumber = 4;
    private readonly static int PrivacyStateDefaultValue = 0;

    private int privacyState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyState {
      get { if ((_hasBits0 & 4) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        privacyState_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyState() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserYearInReviewStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserYearInReviewStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Year != other.Year) return false;
      if (!object.Equals(PlaytimeStats, other.PlaytimeStats)) return false;
      if (PrivacyState != other.PrivacyState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (playtimeStats_ != null) hash ^= PlaytimeStats.GetHashCode();
      if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (playtimeStats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStats);
      }
      if (HasPrivacyState) {
        output.WriteRawTag(32);
        output.WriteInt32(PrivacyState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (playtimeStats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlaytimeStats);
      }
      if (HasPrivacyState) {
        output.WriteRawTag(32);
        output.WriteInt32(PrivacyState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (playtimeStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaytimeStats);
      }
      if (HasPrivacyState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserYearInReviewStats other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.playtimeStats_ != null) {
        if (playtimeStats_ == null) {
          PlaytimeStats = new global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats();
        }
        PlaytimeStats.MergeFrom(other.PlaytimeStats);
      }
      if (other.HasPrivacyState) {
        PrivacyState = other.PrivacyState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26: {
            if (playtimeStats_ == null) {
              PlaytimeStats = new global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats();
            }
            input.ReadMessage(PlaytimeStats);
            break;
          }
          case 32: {
            PrivacyState = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 26: {
            if (playtimeStats_ == null) {
              PlaytimeStats = new global::OpenSteamworks.Protobuf.WebUI.CUserPlaytimeStats();
            }
            input.ReadMessage(PlaytimeStats);
            break;
          }
          case 32: {
            PrivacyState = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CYearInReviewPerformanceStats : pb::IMessage<CYearInReviewPerformanceStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CYearInReviewPerformanceStats> _parser = new pb::MessageParser<CYearInReviewPerformanceStats>(() => new CYearInReviewPerformanceStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CYearInReviewPerformanceStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceSalefeatureReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CYearInReviewPerformanceStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CYearInReviewPerformanceStats(CYearInReviewPerformanceStats other) : this() {
      _hasBits0 = other._hasBits0;
      fromDbo_ = other.fromDbo_;
      overallTimeMs_ = other.overallTimeMs_;
      dboLoadMs_ = other.dboLoadMs_;
      queryExecutionMs_ = other.queryExecutionMs_;
      messagePopulationMs_ = other.messagePopulationMs_;
      dboLocloadMs_ = other.dboLocloadMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CYearInReviewPerformanceStats Clone() {
      return new CYearInReviewPerformanceStats(this);
    }

    /// <summary>Field number for the "from_dbo" field.</summary>
    public const int FromDboFieldNumber = 1;
    private readonly static bool FromDboDefaultValue = false;

    private bool fromDbo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FromDbo {
      get { if ((_hasBits0 & 1) != 0) { return fromDbo_; } else { return FromDboDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fromDbo_ = value;
      }
    }
    /// <summary>Gets whether the "from_dbo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromDbo {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "from_dbo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromDbo() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "overall_time_ms" field.</summary>
    public const int OverallTimeMsFieldNumber = 2;
    private readonly static ulong OverallTimeMsDefaultValue = 0UL;

    private ulong overallTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OverallTimeMs {
      get { if ((_hasBits0 & 2) != 0) { return overallTimeMs_; } else { return OverallTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        overallTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "overall_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOverallTimeMs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "overall_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOverallTimeMs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dbo_load_ms" field.</summary>
    public const int DboLoadMsFieldNumber = 3;
    private readonly static ulong DboLoadMsDefaultValue = 0UL;

    private ulong dboLoadMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DboLoadMs {
      get { if ((_hasBits0 & 4) != 0) { return dboLoadMs_; } else { return DboLoadMsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dboLoadMs_ = value;
      }
    }
    /// <summary>Gets whether the "dbo_load_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDboLoadMs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "dbo_load_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDboLoadMs() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "query_execution_ms" field.</summary>
    public const int QueryExecutionMsFieldNumber = 4;
    private readonly static ulong QueryExecutionMsDefaultValue = 0UL;

    private ulong queryExecutionMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong QueryExecutionMs {
      get { if ((_hasBits0 & 8) != 0) { return queryExecutionMs_; } else { return QueryExecutionMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        queryExecutionMs_ = value;
      }
    }
    /// <summary>Gets whether the "query_execution_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQueryExecutionMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "query_execution_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQueryExecutionMs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "message_population_ms" field.</summary>
    public const int MessagePopulationMsFieldNumber = 5;
    private readonly static ulong MessagePopulationMsDefaultValue = 0UL;

    private ulong messagePopulationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MessagePopulationMs {
      get { if ((_hasBits0 & 16) != 0) { return messagePopulationMs_; } else { return MessagePopulationMsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        messagePopulationMs_ = value;
      }
    }
    /// <summary>Gets whether the "message_population_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessagePopulationMs {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "message_population_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessagePopulationMs() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "dbo_locload_ms" field.</summary>
    public const int DboLocloadMsFieldNumber = 6;
    private readonly static ulong DboLocloadMsDefaultValue = 0UL;

    private ulong dboLocloadMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DboLocloadMs {
      get { if ((_hasBits0 & 32) != 0) { return dboLocloadMs_; } else { return DboLocloadMsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        dboLocloadMs_ = value;
      }
    }
    /// <summary>Gets whether the "dbo_locload_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDboLocloadMs {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "dbo_locload_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDboLocloadMs() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CYearInReviewPerformanceStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CYearInReviewPerformanceStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromDbo != other.FromDbo) return false;
      if (OverallTimeMs != other.OverallTimeMs) return false;
      if (DboLoadMs != other.DboLoadMs) return false;
      if (QueryExecutionMs != other.QueryExecutionMs) return false;
      if (MessagePopulationMs != other.MessagePopulationMs) return false;
      if (DboLocloadMs != other.DboLocloadMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFromDbo) hash ^= FromDbo.GetHashCode();
      if (HasOverallTimeMs) hash ^= OverallTimeMs.GetHashCode();
      if (HasDboLoadMs) hash ^= DboLoadMs.GetHashCode();
      if (HasQueryExecutionMs) hash ^= QueryExecutionMs.GetHashCode();
      if (HasMessagePopulationMs) hash ^= MessagePopulationMs.GetHashCode();
      if (HasDboLocloadMs) hash ^= DboLocloadMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFromDbo) {
        output.WriteRawTag(8);
        output.WriteBool(FromDbo);
      }
      if (HasOverallTimeMs) {
        output.WriteRawTag(16);
        output.WriteUInt64(OverallTimeMs);
      }
      if (HasDboLoadMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(DboLoadMs);
      }
      if (HasQueryExecutionMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(QueryExecutionMs);
      }
      if (HasMessagePopulationMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(MessagePopulationMs);
      }
      if (HasDboLocloadMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(DboLocloadMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFromDbo) {
        output.WriteRawTag(8);
        output.WriteBool(FromDbo);
      }
      if (HasOverallTimeMs) {
        output.WriteRawTag(16);
        output.WriteUInt64(OverallTimeMs);
      }
      if (HasDboLoadMs) {
        output.WriteRawTag(24);
        output.WriteUInt64(DboLoadMs);
      }
      if (HasQueryExecutionMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(QueryExecutionMs);
      }
      if (HasMessagePopulationMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(MessagePopulationMs);
      }
      if (HasDboLocloadMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(DboLocloadMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFromDbo) {
        size += 1 + 1;
      }
      if (HasOverallTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OverallTimeMs);
      }
      if (HasDboLoadMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DboLoadMs);
      }
      if (HasQueryExecutionMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(QueryExecutionMs);
      }
      if (HasMessagePopulationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessagePopulationMs);
      }
      if (HasDboLocloadMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DboLocloadMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CYearInReviewPerformanceStats other) {
      if (other == null) {
        return;
      }
      if (other.HasFromDbo) {
        FromDbo = other.FromDbo;
      }
      if (other.HasOverallTimeMs) {
        OverallTimeMs = other.OverallTimeMs;
      }
      if (other.HasDboLoadMs) {
        DboLoadMs = other.DboLoadMs;
      }
      if (other.HasQueryExecutionMs) {
        QueryExecutionMs = other.QueryExecutionMs;
      }
      if (other.HasMessagePopulationMs) {
        MessagePopulationMs = other.MessagePopulationMs;
      }
      if (other.HasDboLocloadMs) {
        DboLocloadMs = other.DboLocloadMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromDbo = input.ReadBool();
            break;
          }
          case 16: {
            OverallTimeMs = input.ReadUInt64();
            break;
          }
          case 24: {
            DboLoadMs = input.ReadUInt64();
            break;
          }
          case 32: {
            QueryExecutionMs = input.ReadUInt64();
            break;
          }
          case 40: {
            MessagePopulationMs = input.ReadUInt64();
            break;
          }
          case 48: {
            DboLocloadMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FromDbo = input.ReadBool();
            break;
          }
          case 16: {
            OverallTimeMs = input.ReadUInt64();
            break;
          }
          case 24: {
            DboLoadMs = input.ReadUInt64();
            break;
          }
          case 32: {
            QueryExecutionMs = input.ReadUInt64();
            break;
          }
          case 40: {
            MessagePopulationMs = input.ReadUInt64();
            break;
          }
          case 48: {
            DboLocloadMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
