// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: webuimessages_sharedjscontext.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from webuimessages_sharedjscontext.proto</summary>
  public static partial class WebuimessagesSharedjscontextReflection {

    #region Descriptor
    /// <summary>File descriptor for webuimessages_sharedjscontext.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebuimessagesSharedjscontextReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiN3ZWJ1aW1lc3NhZ2VzX3NoYXJlZGpzY29udGV4dC5wcm90bxogZ29vZ2xl",
            "L3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8aC2VudW1zLnByb3RvGhhzdGVh",
            "bW1lc3NhZ2VzX2Jhc2UucHJvdG8aGHdlYnVpbWVzc2FnZXNfYmFzZS5wcm90",
            "byIzCjFDU2hhcmVkSlNDb250ZXh0X0dldERlc2lyZWRTdGVhbVVJV2luZG93",
            "c19SZXF1ZXN0ItIBChhDTXNnU3RlYW1VSUJyb3dzZXJXaW5kb3cSCgoCaWQY",
            "ASABKAUSCwoDcGlkGAIgASgFEhIKCmJyb3dzZXJfaWQYAyABKAUSEwoLd2lu",
            "ZG93X3R5cGUYBCABKAUSCQoBeBgFIAEoBRIJCgF5GAYgASgFEg0KBWFwcGlk",
            "GAcgASgEEhwKFHBhcmVudF93aW5kb3dfaGFuZGxlGAggASgEEhAKCGFwcF9u",
            "YW1lGAkgASgJEh8KF2dhbWVwYWR1aV92aWFfZ2FtZXNjb3BlGAogASgIImAK",
            "MkNTaGFyZWRKU0NvbnRleHRfR2V0RGVzaXJlZFN0ZWFtVUlXaW5kb3dzX1Jl",
            "c3BvbnNlEioKB3dpbmRvd3MYASADKAsyGS5DTXNnU3RlYW1VSUJyb3dzZXJX",
            "aW5kb3cynQEKD1NoYXJlZEpTQ29udGV4dBKDAQoYR2V0RGVzaXJlZFN0ZWFt",
            "VUlXaW5kb3dzEjIuQ1NoYXJlZEpTQ29udGV4dF9HZXREZXNpcmVkU3RlYW1V",
            "SVdpbmRvd3NfUmVxdWVzdBozLkNTaGFyZWRKU0NvbnRleHRfR2V0RGVzaXJl",
            "ZFN0ZWFtVUlXaW5kb3dzX1Jlc3BvbnNlGgSAlyIBQh9IAYABAaoCF09wZW5T",
            "dGVhbXdvcmtzLlByb3RvYnVm"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.EnumsReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, global::OpenSteamworks.Protobuf.WebuimessagesBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSharedJSContext_GetDesiredSteamUIWindows_Request), global::OpenSteamworks.Protobuf.CSharedJSContext_GetDesiredSteamUIWindows_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow), global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow.Parser, new[]{ "Id", "Pid", "BrowserId", "WindowType", "X", "Y", "Appid", "ParentWindowHandle", "AppName", "GamepaduiViaGamescope" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSharedJSContext_GetDesiredSteamUIWindows_Response), global::OpenSteamworks.Protobuf.CSharedJSContext_GetDesiredSteamUIWindows_Response.Parser, new[]{ "Windows" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSharedJSContext_GetDesiredSteamUIWindows_Request : pb::IMessage<CSharedJSContext_GetDesiredSteamUIWindows_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSharedJSContext_GetDesiredSteamUIWindows_Request> _parser = new pb::MessageParser<CSharedJSContext_GetDesiredSteamUIWindows_Request>(() => new CSharedJSContext_GetDesiredSteamUIWindows_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSharedJSContext_GetDesiredSteamUIWindows_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebuimessagesSharedjscontextReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSharedJSContext_GetDesiredSteamUIWindows_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSharedJSContext_GetDesiredSteamUIWindows_Request(CSharedJSContext_GetDesiredSteamUIWindows_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSharedJSContext_GetDesiredSteamUIWindows_Request Clone() {
      return new CSharedJSContext_GetDesiredSteamUIWindows_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSharedJSContext_GetDesiredSteamUIWindows_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSharedJSContext_GetDesiredSteamUIWindows_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSharedJSContext_GetDesiredSteamUIWindows_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgSteamUIBrowserWindow : pb::IMessage<CMsgSteamUIBrowserWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSteamUIBrowserWindow> _parser = new pb::MessageParser<CMsgSteamUIBrowserWindow>(() => new CMsgSteamUIBrowserWindow());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgSteamUIBrowserWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebuimessagesSharedjscontextReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamUIBrowserWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamUIBrowserWindow(CMsgSteamUIBrowserWindow other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      pid_ = other.pid_;
      browserId_ = other.browserId_;
      windowType_ = other.windowType_;
      x_ = other.x_;
      y_ = other.y_;
      appid_ = other.appid_;
      parentWindowHandle_ = other.parentWindowHandle_;
      appName_ = other.appName_;
      gamepaduiViaGamescope_ = other.gamepaduiViaGamescope_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgSteamUIBrowserWindow Clone() {
      return new CMsgSteamUIBrowserWindow(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 2;
    private readonly static int PidDefaultValue = 0;

    private int pid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pid {
      get { if ((_hasBits0 & 2) != 0) { return pid_; } else { return PidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pid_ = value;
      }
    }
    /// <summary>Gets whether the "pid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "browser_id" field.</summary>
    public const int BrowserIdFieldNumber = 3;
    private readonly static int BrowserIdDefaultValue = 0;

    private int browserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BrowserId {
      get { if ((_hasBits0 & 4) != 0) { return browserId_; } else { return BrowserIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        browserId_ = value;
      }
    }
    /// <summary>Gets whether the "browser_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "browser_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "window_type" field.</summary>
    public const int WindowTypeFieldNumber = 4;
    private readonly static int WindowTypeDefaultValue = 0;

    private int windowType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WindowType {
      get { if ((_hasBits0 & 8) != 0) { return windowType_; } else { return WindowTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        windowType_ = value;
      }
    }
    /// <summary>Gets whether the "window_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWindowType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "window_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWindowType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 5;
    private readonly static int XDefaultValue = 0;

    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { if ((_hasBits0 & 16) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 16;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 6;
    private readonly static int YDefaultValue = 0;

    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { if ((_hasBits0 & 32) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 32;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 7;
    private readonly static ulong AppidDefaultValue = 0UL;

    private ulong appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Appid {
      get { if ((_hasBits0 & 64) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 64;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "parent_window_handle" field.</summary>
    public const int ParentWindowHandleFieldNumber = 8;
    private readonly static ulong ParentWindowHandleDefaultValue = 0UL;

    private ulong parentWindowHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ParentWindowHandle {
      get { if ((_hasBits0 & 128) != 0) { return parentWindowHandle_; } else { return ParentWindowHandleDefaultValue; } }
      set {
        _hasBits0 |= 128;
        parentWindowHandle_ = value;
      }
    }
    /// <summary>Gets whether the "parent_window_handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasParentWindowHandle {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "parent_window_handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearParentWindowHandle() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 9;
    private readonly static string AppNameDefaultValue = "";

    private string appName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppName {
      get { return appName_ ?? AppNameDefaultValue; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "app_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppName {
      get { return appName_ != null; }
    }
    /// <summary>Clears the value of the "app_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppName() {
      appName_ = null;
    }

    /// <summary>Field number for the "gamepadui_via_gamescope" field.</summary>
    public const int GamepaduiViaGamescopeFieldNumber = 10;
    private readonly static bool GamepaduiViaGamescopeDefaultValue = false;

    private bool gamepaduiViaGamescope_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GamepaduiViaGamescope {
      get { if ((_hasBits0 & 256) != 0) { return gamepaduiViaGamescope_; } else { return GamepaduiViaGamescopeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        gamepaduiViaGamescope_ = value;
      }
    }
    /// <summary>Gets whether the "gamepadui_via_gamescope" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamepaduiViaGamescope {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "gamepadui_via_gamescope" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamepaduiViaGamescope() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgSteamUIBrowserWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgSteamUIBrowserWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Pid != other.Pid) return false;
      if (BrowserId != other.BrowserId) return false;
      if (WindowType != other.WindowType) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Appid != other.Appid) return false;
      if (ParentWindowHandle != other.ParentWindowHandle) return false;
      if (AppName != other.AppName) return false;
      if (GamepaduiViaGamescope != other.GamepaduiViaGamescope) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPid) hash ^= Pid.GetHashCode();
      if (HasBrowserId) hash ^= BrowserId.GetHashCode();
      if (HasWindowType) hash ^= WindowType.GetHashCode();
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasParentWindowHandle) hash ^= ParentWindowHandle.GetHashCode();
      if (HasAppName) hash ^= AppName.GetHashCode();
      if (HasGamepaduiViaGamescope) hash ^= GamepaduiViaGamescope.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPid) {
        output.WriteRawTag(16);
        output.WriteInt32(Pid);
      }
      if (HasBrowserId) {
        output.WriteRawTag(24);
        output.WriteInt32(BrowserId);
      }
      if (HasWindowType) {
        output.WriteRawTag(32);
        output.WriteInt32(WindowType);
      }
      if (HasX) {
        output.WriteRawTag(40);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(48);
        output.WriteInt32(Y);
      }
      if (HasAppid) {
        output.WriteRawTag(56);
        output.WriteUInt64(Appid);
      }
      if (HasParentWindowHandle) {
        output.WriteRawTag(64);
        output.WriteUInt64(ParentWindowHandle);
      }
      if (HasAppName) {
        output.WriteRawTag(74);
        output.WriteString(AppName);
      }
      if (HasGamepaduiViaGamescope) {
        output.WriteRawTag(80);
        output.WriteBool(GamepaduiViaGamescope);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasPid) {
        output.WriteRawTag(16);
        output.WriteInt32(Pid);
      }
      if (HasBrowserId) {
        output.WriteRawTag(24);
        output.WriteInt32(BrowserId);
      }
      if (HasWindowType) {
        output.WriteRawTag(32);
        output.WriteInt32(WindowType);
      }
      if (HasX) {
        output.WriteRawTag(40);
        output.WriteInt32(X);
      }
      if (HasY) {
        output.WriteRawTag(48);
        output.WriteInt32(Y);
      }
      if (HasAppid) {
        output.WriteRawTag(56);
        output.WriteUInt64(Appid);
      }
      if (HasParentWindowHandle) {
        output.WriteRawTag(64);
        output.WriteUInt64(ParentWindowHandle);
      }
      if (HasAppName) {
        output.WriteRawTag(74);
        output.WriteString(AppName);
      }
      if (HasGamepaduiViaGamescope) {
        output.WriteRawTag(80);
        output.WriteBool(GamepaduiViaGamescope);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasPid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pid);
      }
      if (HasBrowserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrowserId);
      }
      if (HasWindowType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WindowType);
      }
      if (HasX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (HasY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Appid);
      }
      if (HasParentWindowHandle) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParentWindowHandle);
      }
      if (HasAppName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (HasGamepaduiViaGamescope) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgSteamUIBrowserWindow other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPid) {
        Pid = other.Pid;
      }
      if (other.HasBrowserId) {
        BrowserId = other.BrowserId;
      }
      if (other.HasWindowType) {
        WindowType = other.WindowType;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasParentWindowHandle) {
        ParentWindowHandle = other.ParentWindowHandle;
      }
      if (other.HasAppName) {
        AppName = other.AppName;
      }
      if (other.HasGamepaduiViaGamescope) {
        GamepaduiViaGamescope = other.GamepaduiViaGamescope;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Pid = input.ReadInt32();
            break;
          }
          case 24: {
            BrowserId = input.ReadInt32();
            break;
          }
          case 32: {
            WindowType = input.ReadInt32();
            break;
          }
          case 40: {
            X = input.ReadInt32();
            break;
          }
          case 48: {
            Y = input.ReadInt32();
            break;
          }
          case 56: {
            Appid = input.ReadUInt64();
            break;
          }
          case 64: {
            ParentWindowHandle = input.ReadUInt64();
            break;
          }
          case 74: {
            AppName = input.ReadString();
            break;
          }
          case 80: {
            GamepaduiViaGamescope = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Pid = input.ReadInt32();
            break;
          }
          case 24: {
            BrowserId = input.ReadInt32();
            break;
          }
          case 32: {
            WindowType = input.ReadInt32();
            break;
          }
          case 40: {
            X = input.ReadInt32();
            break;
          }
          case 48: {
            Y = input.ReadInt32();
            break;
          }
          case 56: {
            Appid = input.ReadUInt64();
            break;
          }
          case 64: {
            ParentWindowHandle = input.ReadUInt64();
            break;
          }
          case 74: {
            AppName = input.ReadString();
            break;
          }
          case 80: {
            GamepaduiViaGamescope = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSharedJSContext_GetDesiredSteamUIWindows_Response : pb::IMessage<CSharedJSContext_GetDesiredSteamUIWindows_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSharedJSContext_GetDesiredSteamUIWindows_Response> _parser = new pb::MessageParser<CSharedJSContext_GetDesiredSteamUIWindows_Response>(() => new CSharedJSContext_GetDesiredSteamUIWindows_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSharedJSContext_GetDesiredSteamUIWindows_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebuimessagesSharedjscontextReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSharedJSContext_GetDesiredSteamUIWindows_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSharedJSContext_GetDesiredSteamUIWindows_Response(CSharedJSContext_GetDesiredSteamUIWindows_Response other) : this() {
      windows_ = other.windows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSharedJSContext_GetDesiredSteamUIWindows_Response Clone() {
      return new CSharedJSContext_GetDesiredSteamUIWindows_Response(this);
    }

    /// <summary>Field number for the "windows" field.</summary>
    public const int WindowsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow> _repeated_windows_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow> windows_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgSteamUIBrowserWindow> Windows {
      get { return windows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSharedJSContext_GetDesiredSteamUIWindows_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSharedJSContext_GetDesiredSteamUIWindows_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!windows_.Equals(other.windows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= windows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      windows_.WriteTo(output, _repeated_windows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      windows_.WriteTo(ref output, _repeated_windows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += windows_.CalculateSize(_repeated_windows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSharedJSContext_GetDesiredSteamUIWindows_Response other) {
      if (other == null) {
        return;
      }
      windows_.Add(other.windows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            windows_.AddEntriesFrom(input, _repeated_windows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            windows_.AddEntriesFrom(ref input, _repeated_windows_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
