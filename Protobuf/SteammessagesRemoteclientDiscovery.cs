// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_remoteclient_discovery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_remoteclient_discovery.proto</summary>
  public static partial class SteammessagesRemoteclientDiscoveryReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_remoteclient_discovery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesRemoteclientDiscoveryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipzdGVhbW1lc3NhZ2VzX3JlbW90ZWNsaWVudF9kaXNjb3ZlcnkucHJvdG8a",
            "IGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvIs0BCh9DTXNnUmVt",
            "b3RlQ2xpZW50QnJvYWRjYXN0SGVhZGVyEhEKCWNsaWVudF9pZBgBIAEoBBJQ",
            "Cghtc2dfdHlwZRgCIAEoDjIaLkVSZW1vdGVDbGllbnRCcm9hZGNhc3RNc2c6",
            "IkVSZW1vdGVDbGllbnRCcm9hZGNhc3RNc2dEaXNjb3ZlcnkSEwoLaW5zdGFu",
            "Y2VfaWQYAyABKAQSGgoSZGV2aWNlX2lkX09CU09MRVRFGAQgASgEEhQKDGRl",
            "dmljZV90b2tlbhgFIAEoDCKyBQofQ01zZ1JlbW90ZUNsaWVudEJyb2FkY2Fz",
            "dFN0YXR1cxIPCgd2ZXJzaW9uGAEgASgFEhMKC21pbl92ZXJzaW9uGAIgASgF",
            "EhQKDGNvbm5lY3RfcG9ydBgDIAEoDRIQCghob3N0bmFtZRgEIAEoCRIYChBl",
            "bmFibGVkX3NlcnZpY2VzGAYgASgNEhEKBm9zdHlwZRgHIAEoBToBMBIPCgdp",
            "czY0Yml0GAggASgIEjQKBXVzZXJzGAkgAygLMiUuQ01zZ1JlbW90ZUNsaWVu",
            "dEJyb2FkY2FzdFN0YXR1cy5Vc2VyEhEKCWV1bml2ZXJzZRgLIAEoBRIRCgl0",
            "aW1lc3RhbXAYDCABKA0SFQoNc2NyZWVuX2xvY2tlZBgNIAEoCBIVCg1nYW1l",
            "c19ydW5uaW5nGA4gASgIEhUKDW1hY19hZGRyZXNzZXMYDyADKAkSHwoXZG93",
            "bmxvYWRfbGFuX3BlZXJfZ3JvdXAYECABKA0SGwoTYnJvYWRjYXN0aW5nX2Fj",
            "dGl2ZRgRIAEoCBIRCgl2cl9hY3RpdmUYEiABKAgSGgoSY29udGVudF9jYWNo",
            "ZV9wb3J0GBMgASgNEhQKDGlwX2FkZHJlc3NlcxgUIAMoCRIZChFwdWJsaWNf",
            "aXBfYWRkcmVzcxgVIAEoCRIZChFyZW1vdGVwbGF5X2FjdGl2ZRgWIAEoCBIa",
            "ChJzdXBwb3J0ZWRfc2VydmljZXMYFyABKA0SEgoKc3RlYW1fZGVjaxgYIAEo",
            "CBIVCg1zdGVhbV92ZXJzaW9uGBkgASgEEjQKCnZyX2xpbmNhcHMYGiABKA4y",
            "DC5FVlJMaW5rQ2FwczoSRVZSTGlua0NhcHNVbmtub3duGiwKBFVzZXISDwoH",
            "c3RlYW1pZBgBIAEoBhITCgthdXRoX2tleV9pZBgCIAEoDSJJCiJDTXNnUmVt",
            "b3RlQ2xpZW50QnJvYWRjYXN0RGlzY292ZXJ5Eg8KB3NlcV9udW0YASABKA0S",
            "EgoKY2xpZW50X2lkcxgCIAMoBCJBCitDTXNnUmVtb3RlQ2xpZW50QnJvYWRj",
            "YXN0Q2xpZW50SUREZWNvbmZsaWN0EhIKCmNsaWVudF9pZHMYAiADKAQi3QMK",
            "JENNc2dSZW1vdGVEZXZpY2VBdXRob3JpemF0aW9uUmVxdWVzdBIUCgxkZXZp",
            "Y2VfdG9rZW4YASACKAwSEwoLZGV2aWNlX25hbWUYAiABKAkSGQoRZW5jcnlw",
            "dGVkX3JlcXVlc3QYAyACKAwSEAoIYXV0aF9rZXkYBCABKAwapQIKEUNLZXlF",
            "c2Nyb3dfVGlja2V0EhAKCHBhc3N3b3JkGAEgASgMEhIKCmlkZW50aWZpZXIY",
            "AiABKAQSDwoHcGF5bG9hZBgDIAEoDBIRCgl0aW1lc3RhbXAYBCABKA0SZAoF",
            "dXNhZ2UYBSABKA4yNS5DTXNnUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvblJl",
            "cXVlc3QuRUtleUVzY3Jvd1VzYWdlOh5FS2V5RXNjcm93VXNhZ2VTdHJlYW1p",
            "bmdEZXZpY2USEwoLZGV2aWNlX25hbWUYBiABKAkSFAoMZGV2aWNlX21vZGVs",
            "GAcgASgJEhUKDWRldmljZV9zZXJpYWwYCCABKAkSHgoWZGV2aWNlX3Byb3Zp",
            "c2lvbmluZ19pZBgJIAEoDSI1Cg9FS2V5RXNjcm93VXNhZ2USIgoeRUtleUVz",
            "Y3Jvd1VzYWdlU3RyZWFtaW5nRGV2aWNlEAAiLAoqQ01zZ1JlbW90ZURldmlj",
            "ZUF1dGhvcml6YXRpb25DYW5jZWxSZXF1ZXN0IrYBCiVDTXNnUmVtb3RlRGV2",
            "aWNlQXV0aG9yaXphdGlvblJlc3BvbnNlElQKBnJlc3VsdBgBIAIoDjIhLkVS",
            "ZW1vdGVEZXZpY2VBdXRob3JpemF0aW9uUmVzdWx0OiFFUmVtb3RlRGV2aWNl",
            "QXV0aG9yaXphdGlvblN1Y2Nlc3MSDwoHc3RlYW1pZBgCIAEoBhIQCghhdXRo",
            "X2tleRgDIAEoDBIUCgxkZXZpY2VfdG9rZW4YBCABKAwifgomQ01zZ1JlbW90",
            "ZURldmljZUF1dGhvcml6YXRpb25Db25maXJtZWQSVAoGcmVzdWx0GAEgAigO",
            "MiEuRVJlbW90ZURldmljZUF1dGhvcml6YXRpb25SZXN1bHQ6IUVSZW1vdGVE",
            "ZXZpY2VBdXRob3JpemF0aW9uU3VjY2VzcyKLBgogQ01zZ1JlbW90ZURldmlj",
            "ZVN0cmVhbWluZ1JlcXVlc3QSEgoKcmVxdWVzdF9pZBgBIAIoDRIcChRtYXhp",
            "bXVtX3Jlc29sdXRpb25feBgCIAEoBRIcChRtYXhpbXVtX3Jlc29sdXRpb25f",
            "eRgDIAEoBRIeChNhdWRpb19jaGFubmVsX2NvdW50GAQgASgFOgEyEhYKDmRl",
            "dmljZV92ZXJzaW9uGAUgASgJEhYKDnN0cmVhbV9kZXNrdG9wGAYgASgIEhQK",
            "DGRldmljZV90b2tlbhgHIAEoDBILCgNwaW4YCCABKAwSJAoWZW5hYmxlX3Zp",
            "ZGVvX3N0cmVhbWluZxgJIAEoCDoEdHJ1ZRIkChZlbmFibGVfYXVkaW9fc3Ry",
            "ZWFtaW5nGAogASgIOgR0cnVlEiQKFmVuYWJsZV9pbnB1dF9zdHJlYW1pbmcY",
            "CyABKAg6BHRydWUSEgoKbmV0d29ydGVzdBgMIAEoCBIRCgljbGllbnRfaWQY",
            "DSABKAQSLgoTc3VwcG9ydGVkX3RyYW5zcG9ydBgOIAMoDjIRLkVTdHJlYW1U",
            "cmFuc3BvcnQSEgoKcmVzdHJpY3RlZBgPIAEoCBJNCgtmb3JtX2ZhY3RvchgQ",
            "IAEoDjIYLkVTdHJlYW1EZXZpY2VGb3JtRmFjdG9yOh5FU3RyZWFtRGV2aWNl",
            "Rm9ybUZhY3RvclVua25vd24SFQoNZ2FtZXBhZF9jb3VudBgRIAEoBRJDCghn",
            "YW1lcGFkcxgSIAMoCzIxLkNNc2dSZW1vdGVEZXZpY2VTdHJlYW1pbmdSZXF1",
            "ZXN0LlJlc2VydmVkR2FtZXBhZBIOCgZnYW1laWQYEyABKAQSRAoQc3RyZWFt",
            "X2ludGVyZmFjZRgUIAEoDjIRLkVTdHJlYW1JbnRlcmZhY2U6F0VTdHJlYW1J",
            "bnRlcmZhY2VEZWZhdWx0GkYKD1Jlc2VydmVkR2FtZXBhZBIXCg9jb250cm9s",
            "bGVyX3R5cGUYASABKA0SGgoSY29udHJvbGxlcl9zdWJ0eXBlGAIgASgNIjwK",
            "JkNNc2dSZW1vdGVEZXZpY2VTdHJlYW1pbmdDYW5jZWxSZXF1ZXN0EhIKCnJl",
            "cXVlc3RfaWQYASACKA0iSQohQ01zZ1JlbW90ZURldmljZVN0cmVhbWluZ1By",
            "b2dyZXNzEhIKCnJlcXVlc3RfaWQYASACKA0SEAoIcHJvZ3Jlc3MYAiABKAIi",
            "kQIKIUNNc2dSZW1vdGVEZXZpY2VTdHJlYW1pbmdSZXNwb25zZRISCgpyZXF1",
            "ZXN0X2lkGAEgAigNEkwKBnJlc3VsdBgCIAIoDjIdLkVSZW1vdGVEZXZpY2VT",
            "dHJlYW1pbmdSZXN1bHQ6HUVSZW1vdGVEZXZpY2VTdHJlYW1pbmdTdWNjZXNz",
            "EgwKBHBvcnQYAyABKA0SHQoVZW5jcnlwdGVkX3Nlc3Npb25fa2V5GAQgASgM",
            "EjkKCXRyYW5zcG9ydBgGIAEoDjIRLkVTdHJlYW1UcmFuc3BvcnQ6E0VTdHJl",
            "YW1UcmFuc3BvcnRVRFASFAoMcmVsYXlfc2VydmVyGAcgASgJEgwKBGNlcnQY",
            "CCABKAkiXAocQ01zZ1JlbW90ZURldmljZVByb29mUmVxdWVzdBIRCgljaGFs",
            "bGVuZ2UYASACKAwSEgoKcmVxdWVzdF9pZBgCIAEoDRIVCg11cGRhdGVfc2Vj",
            "cmV0GAMgASgIIl0KHUNNc2dSZW1vdGVEZXZpY2VQcm9vZlJlc3BvbnNlEhAK",
            "CHJlc3BvbnNlGAEgAigMEhIKCnJlcXVlc3RfaWQYAiABKA0SFgoOdXBkYXRl",
            "ZF9zZWNyZXQYAyABKAgiRwolQ01zZ1JlbW90ZURldmljZVN0cmVhbVRyYW5z",
            "cG9ydFNpZ25hbBINCgV0b2tlbhgBIAEoDBIPCgdwYXlsb2FkGAIgASgMKt8E",
            "ChlFUmVtb3RlQ2xpZW50QnJvYWRjYXN0TXNnEiYKIkVSZW1vdGVDbGllbnRC",
            "cm9hZGNhc3RNc2dEaXNjb3ZlcnkQABIjCh9FUmVtb3RlQ2xpZW50QnJvYWRj",
            "YXN0TXNnU3RhdHVzEAESJAogRVJlbW90ZUNsaWVudEJyb2FkY2FzdE1zZ09m",
            "ZmxpbmUQAhIlCiFFUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvblJlcXVlc3QQ",
            "AxImCiJFUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvblJlc3BvbnNlEAQSIQod",
            "RVJlbW90ZURldmljZVN0cmVhbWluZ1JlcXVlc3QQBRIiCh5FUmVtb3RlRGV2",
            "aWNlU3RyZWFtaW5nUmVzcG9uc2UQBhIdChlFUmVtb3RlRGV2aWNlUHJvb2ZS",
            "ZXF1ZXN0EAcSHgoaRVJlbW90ZURldmljZVByb29mUmVzcG9uc2UQCBIrCidF",
            "UmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvbkNhbmNlbFJlcXVlc3QQCRInCiNF",
            "UmVtb3RlRGV2aWNlU3RyZWFtaW5nQ2FuY2VsUmVxdWVzdBAKEi8KK0VSZW1v",
            "dGVDbGllbnRCcm9hZGNhc3RNc2dDbGllbnRJRERlY29uZmxpY3QQCxImCiJF",
            "UmVtb3RlRGV2aWNlU3RyZWFtVHJhbnNwb3J0U2lnbmFsEAwSIgoeRVJlbW90",
            "ZURldmljZVN0cmVhbWluZ1Byb2dyZXNzEA0SJwojRVJlbW90ZURldmljZUF1",
            "dGhvcml6YXRpb25Db25maXJtZWQQDir0AQoURVJlbW90ZUNsaWVudFNlcnZp",
            "Y2USHAoYRVJlbW90ZUNsaWVudFNlcnZpY2VOb25lEAASJQohRVJlbW90ZUNs",
            "aWVudFNlcnZpY2VSZW1vdGVDb250cm9sEAESJQohRVJlbW90ZUNsaWVudFNl",
            "cnZpY2VHYW1lU3RyZWFtaW5nEAISIwofRVJlbW90ZUNsaWVudFNlcnZpY2VT",
            "aXRlTGljZW5zZRAEEiQKIEVSZW1vdGVDbGllbnRTZXJ2aWNlQ29udGVudENh",
            "Y2hlEAgSJQohRVJlbW90ZUNsaWVudFNlcnZpY2VDb250ZW50U2VydmVyEBAq",
            "hQEKC0VWUkxpbmtDYXBzEhYKEkVWUkxpbmtDYXBzVW5rbm93bhAAEhgKFEVW",
            "UkxpbmtDYXBzQXZhaWxhYmxlEAESHAoYRVZSTGlua0NhcHNVbmltcGxlbWVu",
            "dGVkEAISJgoiRVZSTGlua0NhcHNNaXNzaW5nSGFyZHdhcmVFbmNvZGluZxAD",
            "KoUDCiBFUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvblJlc3VsdBIlCiFFUmVt",
            "b3RlRGV2aWNlQXV0aG9yaXphdGlvblN1Y2Nlc3MQABIkCiBFUmVtb3RlRGV2",
            "aWNlQXV0aG9yaXphdGlvbkRlbmllZBABEikKJUVSZW1vdGVEZXZpY2VBdXRo",
            "b3JpemF0aW9uTm90TG9nZ2VkSW4QAhIlCiFFUmVtb3RlRGV2aWNlQXV0aG9y",
            "aXphdGlvbk9mZmxpbmUQAxIiCh5FUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlv",
            "bkJ1c3kQBBIoCiRFUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvbkluUHJvZ3Jl",
            "c3MQBRImCiJFUmVtb3RlRGV2aWNlQXV0aG9yaXphdGlvblRpbWVkT3V0EAYS",
            "JAogRVJlbW90ZURldmljZUF1dGhvcml6YXRpb25GYWlsZWQQBxImCiJFUmVt",
            "b3RlRGV2aWNlQXV0aG9yaXphdGlvbkNhbmNlbGVkEAgq7AEKF0VTdHJlYW1E",
            "ZXZpY2VGb3JtRmFjdG9yEiIKHkVTdHJlYW1EZXZpY2VGb3JtRmFjdG9yVW5r",
            "bm93bhAAEiAKHEVTdHJlYW1EZXZpY2VGb3JtRmFjdG9yUGhvbmUQARIhCh1F",
            "U3RyZWFtRGV2aWNlRm9ybUZhY3RvclRhYmxldBACEiMKH0VTdHJlYW1EZXZp",
            "Y2VGb3JtRmFjdG9yQ29tcHV0ZXIQAxIdChlFU3RyZWFtRGV2aWNlRm9ybUZh",
            "Y3RvclRWEAQSJAogRVN0cmVhbURldmljZUZvcm1GYWN0b3JWUkhlYWRzZXQQ",
            "BSrgAQoQRVN0cmVhbVRyYW5zcG9ydBIYChRFU3RyZWFtVHJhbnNwb3J0Tm9u",
            "ZRAAEhcKE0VTdHJlYW1UcmFuc3BvcnRVRFAQARIcChhFU3RyZWFtVHJhbnNw",
            "b3J0VURQUmVsYXkQAhIjCh9FU3RyZWFtVHJhbnNwb3J0V2ViUlRDX09CU09M",
            "RVRFEAMSFwoTRVN0cmVhbVRyYW5zcG9ydFNEUhAEEhsKF0VTdHJlYW1UcmFu",
            "c3BvcnRVRFBfU05TEAUSIAocRVN0cmVhbVRyYW5zcG9ydFVEUFJlbGF5X1NO",
            "UxAGKqoBChBFU3RyZWFtSW50ZXJmYWNlEhsKF0VTdHJlYW1JbnRlcmZhY2VE",
            "ZWZhdWx0EAASHwobRVN0cmVhbUludGVyZmFjZVJlY2VudEdhbWVzEAESHgoa",
            "RVN0cmVhbUludGVyZmFjZUJpZ1BpY3R1cmUQAhIbChdFU3RyZWFtSW50ZXJm",
            "YWNlRGVza3RvcBADEhsKF0VTdHJlYW1JbnRlcmZhY2VTdGVhbVZSEAQqmQUK",
            "HEVSZW1vdGVEZXZpY2VTdHJlYW1pbmdSZXN1bHQSIQodRVJlbW90ZURldmlj",
            "ZVN0cmVhbWluZ1N1Y2Nlc3MQABImCiJFUmVtb3RlRGV2aWNlU3RyZWFtaW5n",
            "VW5hdXRob3JpemVkEAESJgoiRVJlbW90ZURldmljZVN0cmVhbWluZ1NjcmVl",
            "bkxvY2tlZBACEiAKHEVSZW1vdGVEZXZpY2VTdHJlYW1pbmdGYWlsZWQQAxIe",
            "ChpFUmVtb3RlRGV2aWNlU3RyZWFtaW5nQnVzeRAEEiQKIEVSZW1vdGVEZXZp",
            "Y2VTdHJlYW1pbmdJblByb2dyZXNzEAUSIgoeRVJlbW90ZURldmljZVN0cmVh",
            "bWluZ0NhbmNlbGVkEAYSLQopRVJlbW90ZURldmljZVN0cmVhbWluZ0RyaXZl",
            "cnNOb3RJbnN0YWxsZWQQBxIiCh5FUmVtb3RlRGV2aWNlU3RyZWFtaW5nRGlz",
            "YWJsZWQQCBIsCihFUmVtb3RlRGV2aWNlU3RyZWFtaW5nQnJvYWRjYXN0aW5n",
            "QWN0aXZlEAkSIgoeRVJlbW90ZURldmljZVN0cmVhbWluZ1ZSQWN0aXZlEAoS",
            "JQohRVJlbW90ZURldmljZVN0cmVhbWluZ1BJTlJlcXVpcmVkEAsSLgoqRVJl",
            "bW90ZURldmljZVN0cmVhbWluZ1RyYW5zcG9ydFVuYXZhaWxhYmxlEAwSIwof",
            "RVJlbW90ZURldmljZVN0cmVhbWluZ0ludmlzaWJsZRANEioKJkVSZW1vdGVE",
            "ZXZpY2VTdHJlYW1pbmdHYW1lTGF1bmNoRmFpbGVkEA4SLQopRVJlbW90ZURl",
            "dmljZVN0cmVhbWluZ1N0ZWFtVlJOb3RJbnN0YWxsZWQQD0IcSAGqAhdPcGVu",
            "U3RlYW13b3Jrcy5Qcm90b2J1Zg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg), typeof(global::OpenSteamworks.Protobuf.ERemoteClientService), typeof(global::OpenSteamworks.Protobuf.EVRLinkCaps), typeof(global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult), typeof(global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor), typeof(global::OpenSteamworks.Protobuf.EStreamTransport), typeof(global::OpenSteamworks.Protobuf.EStreamInterface), typeof(global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastHeader), global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastHeader.Parser, new[]{ "ClientId", "MsgType", "InstanceId", "DeviceIdOBSOLETE", "DeviceToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus), global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Parser, new[]{ "Version", "MinVersion", "ConnectPort", "Hostname", "EnabledServices", "Ostype", "Is64Bit", "Users", "Euniverse", "Timestamp", "ScreenLocked", "GamesRunning", "MacAddresses", "DownloadLanPeerGroup", "BroadcastingActive", "VrActive", "ContentCachePort", "IpAddresses", "PublicIpAddress", "RemoteplayActive", "SupportedServices", "SteamDeck", "SteamVersion", "VrLincaps" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User), global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User.Parser, new[]{ "Steamid", "AuthKeyId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastDiscovery), global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastDiscovery.Parser, new[]{ "SeqNum", "ClientIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastClientIDDeconflict), global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastClientIDDeconflict.Parser, new[]{ "ClientIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Parser, new[]{ "DeviceToken", "DeviceName", "EncryptedRequest", "AuthKey" }, null, new[]{ typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.CKeyEscrow_Ticket), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.CKeyEscrow_Ticket.Parser, new[]{ "Password", "Identifier", "Payload", "Timestamp", "Usage", "DeviceName", "DeviceModel", "DeviceSerial", "DeviceProvisioningId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationCancelRequest), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationCancelRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationResponse), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationResponse.Parser, new[]{ "Result", "Steamid", "AuthKey", "DeviceToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationConfirmed), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationConfirmed.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Parser, new[]{ "RequestId", "MaximumResolutionX", "MaximumResolutionY", "AudioChannelCount", "DeviceVersion", "StreamDesktop", "DeviceToken", "Pin", "EnableVideoStreaming", "EnableAudioStreaming", "EnableInputStreaming", "Networtest", "ClientId", "SupportedTransport", "Restricted", "FormFactor", "GamepadCount", "Gamepads", "Gameid", "StreamInterface" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad.Parser, new[]{ "ControllerType", "ControllerSubtype" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingCancelRequest), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingCancelRequest.Parser, new[]{ "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingProgress), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingProgress.Parser, new[]{ "RequestId", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingResponse), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingResponse.Parser, new[]{ "RequestId", "Result", "Port", "EncryptedSessionKey", "Transport", "RelayServer", "Cert" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceProofRequest), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceProofRequest.Parser, new[]{ "Challenge", "RequestId", "UpdateSecret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceProofResponse), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceProofResponse.Parser, new[]{ "Response", "RequestId", "UpdatedSecret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamTransportSignal), global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamTransportSignal.Parser, new[]{ "Token", "Payload" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ERemoteClientBroadcastMsg {
    [pbr::OriginalName("ERemoteClientBroadcastMsgDiscovery")] Discovery = 0,
    [pbr::OriginalName("ERemoteClientBroadcastMsgStatus")] Status = 1,
    [pbr::OriginalName("ERemoteClientBroadcastMsgOffline")] Offline = 2,
    [pbr::OriginalName("ERemoteDeviceAuthorizationRequest")] EremoteDeviceAuthorizationRequest = 3,
    [pbr::OriginalName("ERemoteDeviceAuthorizationResponse")] EremoteDeviceAuthorizationResponse = 4,
    [pbr::OriginalName("ERemoteDeviceStreamingRequest")] EremoteDeviceStreamingRequest = 5,
    [pbr::OriginalName("ERemoteDeviceStreamingResponse")] EremoteDeviceStreamingResponse = 6,
    [pbr::OriginalName("ERemoteDeviceProofRequest")] EremoteDeviceProofRequest = 7,
    [pbr::OriginalName("ERemoteDeviceProofResponse")] EremoteDeviceProofResponse = 8,
    [pbr::OriginalName("ERemoteDeviceAuthorizationCancelRequest")] EremoteDeviceAuthorizationCancelRequest = 9,
    [pbr::OriginalName("ERemoteDeviceStreamingCancelRequest")] EremoteDeviceStreamingCancelRequest = 10,
    [pbr::OriginalName("ERemoteClientBroadcastMsgClientIDDeconflict")] ClientIddeconflict = 11,
    [pbr::OriginalName("ERemoteDeviceStreamTransportSignal")] EremoteDeviceStreamTransportSignal = 12,
    [pbr::OriginalName("ERemoteDeviceStreamingProgress")] EremoteDeviceStreamingProgress = 13,
    [pbr::OriginalName("ERemoteDeviceAuthorizationConfirmed")] EremoteDeviceAuthorizationConfirmed = 14,
  }

  public enum ERemoteClientService {
    [pbr::OriginalName("ERemoteClientServiceNone")] None = 0,
    [pbr::OriginalName("ERemoteClientServiceRemoteControl")] RemoteControl = 1,
    [pbr::OriginalName("ERemoteClientServiceGameStreaming")] GameStreaming = 2,
    [pbr::OriginalName("ERemoteClientServiceSiteLicense")] SiteLicense = 4,
    [pbr::OriginalName("ERemoteClientServiceContentCache")] ContentCache = 8,
    [pbr::OriginalName("ERemoteClientServiceContentServer")] ContentServer = 16,
  }

  public enum EVRLinkCaps {
    [pbr::OriginalName("EVRLinkCapsUnknown")] Unknown = 0,
    [pbr::OriginalName("EVRLinkCapsAvailable")] Available = 1,
    [pbr::OriginalName("EVRLinkCapsUnimplemented")] Unimplemented = 2,
    [pbr::OriginalName("EVRLinkCapsMissingHardwareEncoding")] MissingHardwareEncoding = 3,
  }

  public enum ERemoteDeviceAuthorizationResult {
    [pbr::OriginalName("ERemoteDeviceAuthorizationSuccess")] EremoteDeviceAuthorizationSuccess = 0,
    [pbr::OriginalName("ERemoteDeviceAuthorizationDenied")] EremoteDeviceAuthorizationDenied = 1,
    [pbr::OriginalName("ERemoteDeviceAuthorizationNotLoggedIn")] EremoteDeviceAuthorizationNotLoggedIn = 2,
    [pbr::OriginalName("ERemoteDeviceAuthorizationOffline")] EremoteDeviceAuthorizationOffline = 3,
    [pbr::OriginalName("ERemoteDeviceAuthorizationBusy")] EremoteDeviceAuthorizationBusy = 4,
    [pbr::OriginalName("ERemoteDeviceAuthorizationInProgress")] EremoteDeviceAuthorizationInProgress = 5,
    [pbr::OriginalName("ERemoteDeviceAuthorizationTimedOut")] EremoteDeviceAuthorizationTimedOut = 6,
    [pbr::OriginalName("ERemoteDeviceAuthorizationFailed")] EremoteDeviceAuthorizationFailed = 7,
    [pbr::OriginalName("ERemoteDeviceAuthorizationCanceled")] EremoteDeviceAuthorizationCanceled = 8,
  }

  public enum EStreamDeviceFormFactor {
    [pbr::OriginalName("EStreamDeviceFormFactorUnknown")] Unknown = 0,
    [pbr::OriginalName("EStreamDeviceFormFactorPhone")] Phone = 1,
    [pbr::OriginalName("EStreamDeviceFormFactorTablet")] Tablet = 2,
    [pbr::OriginalName("EStreamDeviceFormFactorComputer")] Computer = 3,
    [pbr::OriginalName("EStreamDeviceFormFactorTV")] Tv = 4,
    [pbr::OriginalName("EStreamDeviceFormFactorVRHeadset")] Vrheadset = 5,
  }

  public enum EStreamTransport {
    [pbr::OriginalName("EStreamTransportNone")] None = 0,
    [pbr::OriginalName("EStreamTransportUDP")] Udp = 1,
    [pbr::OriginalName("EStreamTransportUDPRelay")] Udprelay = 2,
    [pbr::OriginalName("EStreamTransportWebRTC_OBSOLETE")] WebRtcObsolete = 3,
    [pbr::OriginalName("EStreamTransportSDR")] Sdr = 4,
    [pbr::OriginalName("EStreamTransportUDP_SNS")] UdpSns = 5,
    [pbr::OriginalName("EStreamTransportUDPRelay_SNS")] UdprelaySns = 6,
  }

  public enum EStreamInterface {
    [pbr::OriginalName("EStreamInterfaceDefault")] Default = 0,
    [pbr::OriginalName("EStreamInterfaceRecentGames")] RecentGames = 1,
    [pbr::OriginalName("EStreamInterfaceBigPicture")] BigPicture = 2,
    [pbr::OriginalName("EStreamInterfaceDesktop")] Desktop = 3,
    [pbr::OriginalName("EStreamInterfaceSteamVR")] SteamVr = 4,
  }

  public enum ERemoteDeviceStreamingResult {
    [pbr::OriginalName("ERemoteDeviceStreamingSuccess")] EremoteDeviceStreamingSuccess = 0,
    [pbr::OriginalName("ERemoteDeviceStreamingUnauthorized")] EremoteDeviceStreamingUnauthorized = 1,
    [pbr::OriginalName("ERemoteDeviceStreamingScreenLocked")] EremoteDeviceStreamingScreenLocked = 2,
    [pbr::OriginalName("ERemoteDeviceStreamingFailed")] EremoteDeviceStreamingFailed = 3,
    [pbr::OriginalName("ERemoteDeviceStreamingBusy")] EremoteDeviceStreamingBusy = 4,
    [pbr::OriginalName("ERemoteDeviceStreamingInProgress")] EremoteDeviceStreamingInProgress = 5,
    [pbr::OriginalName("ERemoteDeviceStreamingCanceled")] EremoteDeviceStreamingCanceled = 6,
    [pbr::OriginalName("ERemoteDeviceStreamingDriversNotInstalled")] EremoteDeviceStreamingDriversNotInstalled = 7,
    [pbr::OriginalName("ERemoteDeviceStreamingDisabled")] EremoteDeviceStreamingDisabled = 8,
    [pbr::OriginalName("ERemoteDeviceStreamingBroadcastingActive")] EremoteDeviceStreamingBroadcastingActive = 9,
    [pbr::OriginalName("ERemoteDeviceStreamingVRActive")] EremoteDeviceStreamingVractive = 10,
    [pbr::OriginalName("ERemoteDeviceStreamingPINRequired")] EremoteDeviceStreamingPinrequired = 11,
    [pbr::OriginalName("ERemoteDeviceStreamingTransportUnavailable")] EremoteDeviceStreamingTransportUnavailable = 12,
    [pbr::OriginalName("ERemoteDeviceStreamingInvisible")] EremoteDeviceStreamingInvisible = 13,
    [pbr::OriginalName("ERemoteDeviceStreamingGameLaunchFailed")] EremoteDeviceStreamingGameLaunchFailed = 14,
    [pbr::OriginalName("ERemoteDeviceStreamingSteamVRNotInstalled")] EremoteDeviceStreamingSteamVrnotInstalled = 15,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteClientBroadcastHeader : pb::IMessage<CMsgRemoteClientBroadcastHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteClientBroadcastHeader> _parser = new pb::MessageParser<CMsgRemoteClientBroadcastHeader>(() => new CMsgRemoteClientBroadcastHeader());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteClientBroadcastHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastHeader(CMsgRemoteClientBroadcastHeader other) : this() {
      _hasBits0 = other._hasBits0;
      clientId_ = other.clientId_;
      msgType_ = other.msgType_;
      instanceId_ = other.instanceId_;
      deviceIdOBSOLETE_ = other.deviceIdOBSOLETE_;
      deviceToken_ = other.deviceToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastHeader Clone() {
      return new CMsgRemoteClientBroadcastHeader(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private readonly static ulong ClientIdDefaultValue = 0UL;

    private ulong clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClientId {
      get { if ((_hasBits0 & 1) != 0) { return clientId_; } else { return ClientIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clientId_ = value;
      }
    }
    /// <summary>Gets whether the "client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "client_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg MsgTypeDefaultValue = global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg.Discovery;

    private global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg msgType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg MsgType {
      get { if ((_hasBits0 & 2) != 0) { return msgType_; } else { return MsgTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        msgType_ = value;
      }
    }
    /// <summary>Gets whether the "msg_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "msg_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private readonly static ulong InstanceIdDefaultValue = 0UL;

    private ulong instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong InstanceId {
      get { if ((_hasBits0 & 4) != 0) { return instanceId_; } else { return InstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        instanceId_ = value;
      }
    }
    /// <summary>Gets whether the "instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstanceId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstanceId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "device_id_OBSOLETE" field.</summary>
    public const int DeviceIdOBSOLETEFieldNumber = 4;
    private readonly static ulong DeviceIdOBSOLETEDefaultValue = 0UL;

    private ulong deviceIdOBSOLETE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DeviceIdOBSOLETE {
      get { if ((_hasBits0 & 8) != 0) { return deviceIdOBSOLETE_; } else { return DeviceIdOBSOLETEDefaultValue; } }
      set {
        _hasBits0 |= 8;
        deviceIdOBSOLETE_ = value;
      }
    }
    /// <summary>Gets whether the "device_id_OBSOLETE" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceIdOBSOLETE {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "device_id_OBSOLETE" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceIdOBSOLETE() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "device_token" field.</summary>
    public const int DeviceTokenFieldNumber = 5;
    private readonly static pb::ByteString DeviceTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString deviceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DeviceToken {
      get { return deviceToken_ ?? DeviceTokenDefaultValue; }
      set {
        deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceToken {
      get { return deviceToken_ != null; }
    }
    /// <summary>Clears the value of the "device_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceToken() {
      deviceToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteClientBroadcastHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteClientBroadcastHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (MsgType != other.MsgType) return false;
      if (InstanceId != other.InstanceId) return false;
      if (DeviceIdOBSOLETE != other.DeviceIdOBSOLETE) return false;
      if (DeviceToken != other.DeviceToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClientId) hash ^= ClientId.GetHashCode();
      if (HasMsgType) hash ^= MsgType.GetHashCode();
      if (HasInstanceId) hash ^= InstanceId.GetHashCode();
      if (HasDeviceIdOBSOLETE) hash ^= DeviceIdOBSOLETE.GetHashCode();
      if (HasDeviceToken) hash ^= DeviceToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClientId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ClientId);
      }
      if (HasMsgType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MsgType);
      }
      if (HasInstanceId) {
        output.WriteRawTag(24);
        output.WriteUInt64(InstanceId);
      }
      if (HasDeviceIdOBSOLETE) {
        output.WriteRawTag(32);
        output.WriteUInt64(DeviceIdOBSOLETE);
      }
      if (HasDeviceToken) {
        output.WriteRawTag(42);
        output.WriteBytes(DeviceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClientId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ClientId);
      }
      if (HasMsgType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MsgType);
      }
      if (HasInstanceId) {
        output.WriteRawTag(24);
        output.WriteUInt64(InstanceId);
      }
      if (HasDeviceIdOBSOLETE) {
        output.WriteRawTag(32);
        output.WriteUInt64(DeviceIdOBSOLETE);
      }
      if (HasDeviceToken) {
        output.WriteRawTag(42);
        output.WriteBytes(DeviceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientId);
      }
      if (HasMsgType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (HasInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InstanceId);
      }
      if (HasDeviceIdOBSOLETE) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeviceIdOBSOLETE);
      }
      if (HasDeviceToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteClientBroadcastHeader other) {
      if (other == null) {
        return;
      }
      if (other.HasClientId) {
        ClientId = other.ClientId;
      }
      if (other.HasMsgType) {
        MsgType = other.MsgType;
      }
      if (other.HasInstanceId) {
        InstanceId = other.InstanceId;
      }
      if (other.HasDeviceIdOBSOLETE) {
        DeviceIdOBSOLETE = other.DeviceIdOBSOLETE;
      }
      if (other.HasDeviceToken) {
        DeviceToken = other.DeviceToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadUInt64();
            break;
          }
          case 16: {
            MsgType = (global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg) input.ReadEnum();
            break;
          }
          case 24: {
            InstanceId = input.ReadUInt64();
            break;
          }
          case 32: {
            DeviceIdOBSOLETE = input.ReadUInt64();
            break;
          }
          case 42: {
            DeviceToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadUInt64();
            break;
          }
          case 16: {
            MsgType = (global::OpenSteamworks.Protobuf.ERemoteClientBroadcastMsg) input.ReadEnum();
            break;
          }
          case 24: {
            InstanceId = input.ReadUInt64();
            break;
          }
          case 32: {
            DeviceIdOBSOLETE = input.ReadUInt64();
            break;
          }
          case 42: {
            DeviceToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteClientBroadcastStatus : pb::IMessage<CMsgRemoteClientBroadcastStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteClientBroadcastStatus> _parser = new pb::MessageParser<CMsgRemoteClientBroadcastStatus>(() => new CMsgRemoteClientBroadcastStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteClientBroadcastStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastStatus(CMsgRemoteClientBroadcastStatus other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      minVersion_ = other.minVersion_;
      connectPort_ = other.connectPort_;
      hostname_ = other.hostname_;
      enabledServices_ = other.enabledServices_;
      ostype_ = other.ostype_;
      is64Bit_ = other.is64Bit_;
      users_ = other.users_.Clone();
      euniverse_ = other.euniverse_;
      timestamp_ = other.timestamp_;
      screenLocked_ = other.screenLocked_;
      gamesRunning_ = other.gamesRunning_;
      macAddresses_ = other.macAddresses_.Clone();
      downloadLanPeerGroup_ = other.downloadLanPeerGroup_;
      broadcastingActive_ = other.broadcastingActive_;
      vrActive_ = other.vrActive_;
      contentCachePort_ = other.contentCachePort_;
      ipAddresses_ = other.ipAddresses_.Clone();
      publicIpAddress_ = other.publicIpAddress_;
      remoteplayActive_ = other.remoteplayActive_;
      supportedServices_ = other.supportedServices_;
      steamDeck_ = other.steamDeck_;
      steamVersion_ = other.steamVersion_;
      vrLincaps_ = other.vrLincaps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastStatus Clone() {
      return new CMsgRemoteClientBroadcastStatus(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_version" field.</summary>
    public const int MinVersionFieldNumber = 2;
    private readonly static int MinVersionDefaultValue = 0;

    private int minVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinVersion {
      get { if ((_hasBits0 & 2) != 0) { return minVersion_; } else { return MinVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minVersion_ = value;
      }
    }
    /// <summary>Gets whether the "min_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "connect_port" field.</summary>
    public const int ConnectPortFieldNumber = 3;
    private readonly static uint ConnectPortDefaultValue = 0;

    private uint connectPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConnectPort {
      get { if ((_hasBits0 & 4) != 0) { return connectPort_; } else { return ConnectPortDefaultValue; } }
      set {
        _hasBits0 |= 4;
        connectPort_ = value;
      }
    }
    /// <summary>Gets whether the "connect_port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectPort {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "connect_port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectPort() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 4;
    private readonly static string HostnameDefaultValue = "";

    private string hostname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hostname {
      get { return hostname_ ?? HostnameDefaultValue; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostname {
      get { return hostname_ != null; }
    }
    /// <summary>Clears the value of the "hostname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostname() {
      hostname_ = null;
    }

    /// <summary>Field number for the "enabled_services" field.</summary>
    public const int EnabledServicesFieldNumber = 6;
    private readonly static uint EnabledServicesDefaultValue = 0;

    private uint enabledServices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnabledServices {
      get { if ((_hasBits0 & 8) != 0) { return enabledServices_; } else { return EnabledServicesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        enabledServices_ = value;
      }
    }
    /// <summary>Gets whether the "enabled_services" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabledServices {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "enabled_services" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabledServices() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "ostype" field.</summary>
    public const int OstypeFieldNumber = 7;
    private readonly static int OstypeDefaultValue = 0;

    private int ostype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ostype {
      get { if ((_hasBits0 & 16) != 0) { return ostype_; } else { return OstypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ostype_ = value;
      }
    }
    /// <summary>Gets whether the "ostype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOstype {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ostype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOstype() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "is64bit" field.</summary>
    public const int Is64BitFieldNumber = 8;
    private readonly static bool Is64BitDefaultValue = false;

    private bool is64Bit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Is64Bit {
      get { if ((_hasBits0 & 32) != 0) { return is64Bit_; } else { return Is64BitDefaultValue; } }
      set {
        _hasBits0 |= 32;
        is64Bit_ = value;
      }
    }
    /// <summary>Gets whether the "is64bit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIs64Bit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "is64bit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIs64Bit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 9;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User> _repeated_users_codec
        = pb::FieldCodec.ForMessage(74, global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User> users_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Types.User> Users {
      get { return users_; }
    }

    /// <summary>Field number for the "euniverse" field.</summary>
    public const int EuniverseFieldNumber = 11;
    private readonly static int EuniverseDefaultValue = 0;

    private int euniverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Euniverse {
      get { if ((_hasBits0 & 64) != 0) { return euniverse_; } else { return EuniverseDefaultValue; } }
      set {
        _hasBits0 |= 64;
        euniverse_ = value;
      }
    }
    /// <summary>Gets whether the "euniverse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEuniverse {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "euniverse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEuniverse() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 12;
    private readonly static uint TimestampDefaultValue = 0;

    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Timestamp {
      get { if ((_hasBits0 & 128) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 128;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "screen_locked" field.</summary>
    public const int ScreenLockedFieldNumber = 13;
    private readonly static bool ScreenLockedDefaultValue = false;

    private bool screenLocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScreenLocked {
      get { if ((_hasBits0 & 256) != 0) { return screenLocked_; } else { return ScreenLockedDefaultValue; } }
      set {
        _hasBits0 |= 256;
        screenLocked_ = value;
      }
    }
    /// <summary>Gets whether the "screen_locked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScreenLocked {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "screen_locked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScreenLocked() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "games_running" field.</summary>
    public const int GamesRunningFieldNumber = 14;
    private readonly static bool GamesRunningDefaultValue = false;

    private bool gamesRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GamesRunning {
      get { if ((_hasBits0 & 512) != 0) { return gamesRunning_; } else { return GamesRunningDefaultValue; } }
      set {
        _hasBits0 |= 512;
        gamesRunning_ = value;
      }
    }
    /// <summary>Gets whether the "games_running" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesRunning {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "games_running" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesRunning() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "mac_addresses" field.</summary>
    public const int MacAddressesFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_macAddresses_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> macAddresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> MacAddresses {
      get { return macAddresses_; }
    }

    /// <summary>Field number for the "download_lan_peer_group" field.</summary>
    public const int DownloadLanPeerGroupFieldNumber = 16;
    private readonly static uint DownloadLanPeerGroupDefaultValue = 0;

    private uint downloadLanPeerGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DownloadLanPeerGroup {
      get { if ((_hasBits0 & 1024) != 0) { return downloadLanPeerGroup_; } else { return DownloadLanPeerGroupDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        downloadLanPeerGroup_ = value;
      }
    }
    /// <summary>Gets whether the "download_lan_peer_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDownloadLanPeerGroup {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "download_lan_peer_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDownloadLanPeerGroup() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "broadcasting_active" field.</summary>
    public const int BroadcastingActiveFieldNumber = 17;
    private readonly static bool BroadcastingActiveDefaultValue = false;

    private bool broadcastingActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BroadcastingActive {
      get { if ((_hasBits0 & 2048) != 0) { return broadcastingActive_; } else { return BroadcastingActiveDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        broadcastingActive_ = value;
      }
    }
    /// <summary>Gets whether the "broadcasting_active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBroadcastingActive {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "broadcasting_active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBroadcastingActive() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "vr_active" field.</summary>
    public const int VrActiveFieldNumber = 18;
    private readonly static bool VrActiveDefaultValue = false;

    private bool vrActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VrActive {
      get { if ((_hasBits0 & 4096) != 0) { return vrActive_; } else { return VrActiveDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        vrActive_ = value;
      }
    }
    /// <summary>Gets whether the "vr_active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVrActive {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "vr_active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVrActive() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "content_cache_port" field.</summary>
    public const int ContentCachePortFieldNumber = 19;
    private readonly static uint ContentCachePortDefaultValue = 0;

    private uint contentCachePort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ContentCachePort {
      get { if ((_hasBits0 & 8192) != 0) { return contentCachePort_; } else { return ContentCachePortDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        contentCachePort_ = value;
      }
    }
    /// <summary>Gets whether the "content_cache_port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContentCachePort {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "content_cache_port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContentCachePort() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "ip_addresses" field.</summary>
    public const int IpAddressesFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _repeated_ipAddresses_codec
        = pb::FieldCodec.ForString(162);
    private readonly pbc::RepeatedField<string> ipAddresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> IpAddresses {
      get { return ipAddresses_; }
    }

    /// <summary>Field number for the "public_ip_address" field.</summary>
    public const int PublicIpAddressFieldNumber = 21;
    private readonly static string PublicIpAddressDefaultValue = "";

    private string publicIpAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PublicIpAddress {
      get { return publicIpAddress_ ?? PublicIpAddressDefaultValue; }
      set {
        publicIpAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "public_ip_address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPublicIpAddress {
      get { return publicIpAddress_ != null; }
    }
    /// <summary>Clears the value of the "public_ip_address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPublicIpAddress() {
      publicIpAddress_ = null;
    }

    /// <summary>Field number for the "remoteplay_active" field.</summary>
    public const int RemoteplayActiveFieldNumber = 22;
    private readonly static bool RemoteplayActiveDefaultValue = false;

    private bool remoteplayActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RemoteplayActive {
      get { if ((_hasBits0 & 16384) != 0) { return remoteplayActive_; } else { return RemoteplayActiveDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        remoteplayActive_ = value;
      }
    }
    /// <summary>Gets whether the "remoteplay_active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoteplayActive {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "remoteplay_active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoteplayActive() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "supported_services" field.</summary>
    public const int SupportedServicesFieldNumber = 23;
    private readonly static uint SupportedServicesDefaultValue = 0;

    private uint supportedServices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SupportedServices {
      get { if ((_hasBits0 & 32768) != 0) { return supportedServices_; } else { return SupportedServicesDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        supportedServices_ = value;
      }
    }
    /// <summary>Gets whether the "supported_services" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSupportedServices {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "supported_services" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSupportedServices() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "steam_deck" field.</summary>
    public const int SteamDeckFieldNumber = 24;
    private readonly static bool SteamDeckDefaultValue = false;

    private bool steamDeck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SteamDeck {
      get { if ((_hasBits0 & 65536) != 0) { return steamDeck_; } else { return SteamDeckDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        steamDeck_ = value;
      }
    }
    /// <summary>Gets whether the "steam_deck" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamDeck {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "steam_deck" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamDeck() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "steam_version" field.</summary>
    public const int SteamVersionFieldNumber = 25;
    private readonly static ulong SteamVersionDefaultValue = 0UL;

    private ulong steamVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SteamVersion {
      get { if ((_hasBits0 & 131072) != 0) { return steamVersion_; } else { return SteamVersionDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        steamVersion_ = value;
      }
    }
    /// <summary>Gets whether the "steam_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamVersion {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "steam_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamVersion() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "vr_lincaps" field.</summary>
    public const int VrLincapsFieldNumber = 26;
    private readonly static global::OpenSteamworks.Protobuf.EVRLinkCaps VrLincapsDefaultValue = global::OpenSteamworks.Protobuf.EVRLinkCaps.Unknown;

    private global::OpenSteamworks.Protobuf.EVRLinkCaps vrLincaps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EVRLinkCaps VrLincaps {
      get { if ((_hasBits0 & 262144) != 0) { return vrLincaps_; } else { return VrLincapsDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        vrLincaps_ = value;
      }
    }
    /// <summary>Gets whether the "vr_lincaps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVrLincaps {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "vr_lincaps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVrLincaps() {
      _hasBits0 &= ~262144;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteClientBroadcastStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteClientBroadcastStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (MinVersion != other.MinVersion) return false;
      if (ConnectPort != other.ConnectPort) return false;
      if (Hostname != other.Hostname) return false;
      if (EnabledServices != other.EnabledServices) return false;
      if (Ostype != other.Ostype) return false;
      if (Is64Bit != other.Is64Bit) return false;
      if(!users_.Equals(other.users_)) return false;
      if (Euniverse != other.Euniverse) return false;
      if (Timestamp != other.Timestamp) return false;
      if (ScreenLocked != other.ScreenLocked) return false;
      if (GamesRunning != other.GamesRunning) return false;
      if(!macAddresses_.Equals(other.macAddresses_)) return false;
      if (DownloadLanPeerGroup != other.DownloadLanPeerGroup) return false;
      if (BroadcastingActive != other.BroadcastingActive) return false;
      if (VrActive != other.VrActive) return false;
      if (ContentCachePort != other.ContentCachePort) return false;
      if(!ipAddresses_.Equals(other.ipAddresses_)) return false;
      if (PublicIpAddress != other.PublicIpAddress) return false;
      if (RemoteplayActive != other.RemoteplayActive) return false;
      if (SupportedServices != other.SupportedServices) return false;
      if (SteamDeck != other.SteamDeck) return false;
      if (SteamVersion != other.SteamVersion) return false;
      if (VrLincaps != other.VrLincaps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasMinVersion) hash ^= MinVersion.GetHashCode();
      if (HasConnectPort) hash ^= ConnectPort.GetHashCode();
      if (HasHostname) hash ^= Hostname.GetHashCode();
      if (HasEnabledServices) hash ^= EnabledServices.GetHashCode();
      if (HasOstype) hash ^= Ostype.GetHashCode();
      if (HasIs64Bit) hash ^= Is64Bit.GetHashCode();
      hash ^= users_.GetHashCode();
      if (HasEuniverse) hash ^= Euniverse.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasScreenLocked) hash ^= ScreenLocked.GetHashCode();
      if (HasGamesRunning) hash ^= GamesRunning.GetHashCode();
      hash ^= macAddresses_.GetHashCode();
      if (HasDownloadLanPeerGroup) hash ^= DownloadLanPeerGroup.GetHashCode();
      if (HasBroadcastingActive) hash ^= BroadcastingActive.GetHashCode();
      if (HasVrActive) hash ^= VrActive.GetHashCode();
      if (HasContentCachePort) hash ^= ContentCachePort.GetHashCode();
      hash ^= ipAddresses_.GetHashCode();
      if (HasPublicIpAddress) hash ^= PublicIpAddress.GetHashCode();
      if (HasRemoteplayActive) hash ^= RemoteplayActive.GetHashCode();
      if (HasSupportedServices) hash ^= SupportedServices.GetHashCode();
      if (HasSteamDeck) hash ^= SteamDeck.GetHashCode();
      if (HasSteamVersion) hash ^= SteamVersion.GetHashCode();
      if (HasVrLincaps) hash ^= VrLincaps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (HasMinVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MinVersion);
      }
      if (HasConnectPort) {
        output.WriteRawTag(24);
        output.WriteUInt32(ConnectPort);
      }
      if (HasHostname) {
        output.WriteRawTag(34);
        output.WriteString(Hostname);
      }
      if (HasEnabledServices) {
        output.WriteRawTag(48);
        output.WriteUInt32(EnabledServices);
      }
      if (HasOstype) {
        output.WriteRawTag(56);
        output.WriteInt32(Ostype);
      }
      if (HasIs64Bit) {
        output.WriteRawTag(64);
        output.WriteBool(Is64Bit);
      }
      users_.WriteTo(output, _repeated_users_codec);
      if (HasEuniverse) {
        output.WriteRawTag(88);
        output.WriteInt32(Euniverse);
      }
      if (HasTimestamp) {
        output.WriteRawTag(96);
        output.WriteUInt32(Timestamp);
      }
      if (HasScreenLocked) {
        output.WriteRawTag(104);
        output.WriteBool(ScreenLocked);
      }
      if (HasGamesRunning) {
        output.WriteRawTag(112);
        output.WriteBool(GamesRunning);
      }
      macAddresses_.WriteTo(output, _repeated_macAddresses_codec);
      if (HasDownloadLanPeerGroup) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(DownloadLanPeerGroup);
      }
      if (HasBroadcastingActive) {
        output.WriteRawTag(136, 1);
        output.WriteBool(BroadcastingActive);
      }
      if (HasVrActive) {
        output.WriteRawTag(144, 1);
        output.WriteBool(VrActive);
      }
      if (HasContentCachePort) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(ContentCachePort);
      }
      ipAddresses_.WriteTo(output, _repeated_ipAddresses_codec);
      if (HasPublicIpAddress) {
        output.WriteRawTag(170, 1);
        output.WriteString(PublicIpAddress);
      }
      if (HasRemoteplayActive) {
        output.WriteRawTag(176, 1);
        output.WriteBool(RemoteplayActive);
      }
      if (HasSupportedServices) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(SupportedServices);
      }
      if (HasSteamDeck) {
        output.WriteRawTag(192, 1);
        output.WriteBool(SteamDeck);
      }
      if (HasSteamVersion) {
        output.WriteRawTag(200, 1);
        output.WriteUInt64(SteamVersion);
      }
      if (HasVrLincaps) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) VrLincaps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (HasMinVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MinVersion);
      }
      if (HasConnectPort) {
        output.WriteRawTag(24);
        output.WriteUInt32(ConnectPort);
      }
      if (HasHostname) {
        output.WriteRawTag(34);
        output.WriteString(Hostname);
      }
      if (HasEnabledServices) {
        output.WriteRawTag(48);
        output.WriteUInt32(EnabledServices);
      }
      if (HasOstype) {
        output.WriteRawTag(56);
        output.WriteInt32(Ostype);
      }
      if (HasIs64Bit) {
        output.WriteRawTag(64);
        output.WriteBool(Is64Bit);
      }
      users_.WriteTo(ref output, _repeated_users_codec);
      if (HasEuniverse) {
        output.WriteRawTag(88);
        output.WriteInt32(Euniverse);
      }
      if (HasTimestamp) {
        output.WriteRawTag(96);
        output.WriteUInt32(Timestamp);
      }
      if (HasScreenLocked) {
        output.WriteRawTag(104);
        output.WriteBool(ScreenLocked);
      }
      if (HasGamesRunning) {
        output.WriteRawTag(112);
        output.WriteBool(GamesRunning);
      }
      macAddresses_.WriteTo(ref output, _repeated_macAddresses_codec);
      if (HasDownloadLanPeerGroup) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(DownloadLanPeerGroup);
      }
      if (HasBroadcastingActive) {
        output.WriteRawTag(136, 1);
        output.WriteBool(BroadcastingActive);
      }
      if (HasVrActive) {
        output.WriteRawTag(144, 1);
        output.WriteBool(VrActive);
      }
      if (HasContentCachePort) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(ContentCachePort);
      }
      ipAddresses_.WriteTo(ref output, _repeated_ipAddresses_codec);
      if (HasPublicIpAddress) {
        output.WriteRawTag(170, 1);
        output.WriteString(PublicIpAddress);
      }
      if (HasRemoteplayActive) {
        output.WriteRawTag(176, 1);
        output.WriteBool(RemoteplayActive);
      }
      if (HasSupportedServices) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(SupportedServices);
      }
      if (HasSteamDeck) {
        output.WriteRawTag(192, 1);
        output.WriteBool(SteamDeck);
      }
      if (HasSteamVersion) {
        output.WriteRawTag(200, 1);
        output.WriteUInt64(SteamVersion);
      }
      if (HasVrLincaps) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) VrLincaps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (HasMinVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinVersion);
      }
      if (HasConnectPort) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectPort);
      }
      if (HasHostname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      if (HasEnabledServices) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnabledServices);
      }
      if (HasOstype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ostype);
      }
      if (HasIs64Bit) {
        size += 1 + 1;
      }
      size += users_.CalculateSize(_repeated_users_codec);
      if (HasEuniverse) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Euniverse);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      if (HasScreenLocked) {
        size += 1 + 1;
      }
      if (HasGamesRunning) {
        size += 1 + 1;
      }
      size += macAddresses_.CalculateSize(_repeated_macAddresses_codec);
      if (HasDownloadLanPeerGroup) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DownloadLanPeerGroup);
      }
      if (HasBroadcastingActive) {
        size += 2 + 1;
      }
      if (HasVrActive) {
        size += 2 + 1;
      }
      if (HasContentCachePort) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ContentCachePort);
      }
      size += ipAddresses_.CalculateSize(_repeated_ipAddresses_codec);
      if (HasPublicIpAddress) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PublicIpAddress);
      }
      if (HasRemoteplayActive) {
        size += 2 + 1;
      }
      if (HasSupportedServices) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SupportedServices);
      }
      if (HasSteamDeck) {
        size += 2 + 1;
      }
      if (HasSteamVersion) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(SteamVersion);
      }
      if (HasVrLincaps) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VrLincaps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteClientBroadcastStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasMinVersion) {
        MinVersion = other.MinVersion;
      }
      if (other.HasConnectPort) {
        ConnectPort = other.ConnectPort;
      }
      if (other.HasHostname) {
        Hostname = other.Hostname;
      }
      if (other.HasEnabledServices) {
        EnabledServices = other.EnabledServices;
      }
      if (other.HasOstype) {
        Ostype = other.Ostype;
      }
      if (other.HasIs64Bit) {
        Is64Bit = other.Is64Bit;
      }
      users_.Add(other.users_);
      if (other.HasEuniverse) {
        Euniverse = other.Euniverse;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasScreenLocked) {
        ScreenLocked = other.ScreenLocked;
      }
      if (other.HasGamesRunning) {
        GamesRunning = other.GamesRunning;
      }
      macAddresses_.Add(other.macAddresses_);
      if (other.HasDownloadLanPeerGroup) {
        DownloadLanPeerGroup = other.DownloadLanPeerGroup;
      }
      if (other.HasBroadcastingActive) {
        BroadcastingActive = other.BroadcastingActive;
      }
      if (other.HasVrActive) {
        VrActive = other.VrActive;
      }
      if (other.HasContentCachePort) {
        ContentCachePort = other.ContentCachePort;
      }
      ipAddresses_.Add(other.ipAddresses_);
      if (other.HasPublicIpAddress) {
        PublicIpAddress = other.PublicIpAddress;
      }
      if (other.HasRemoteplayActive) {
        RemoteplayActive = other.RemoteplayActive;
      }
      if (other.HasSupportedServices) {
        SupportedServices = other.SupportedServices;
      }
      if (other.HasSteamDeck) {
        SteamDeck = other.SteamDeck;
      }
      if (other.HasSteamVersion) {
        SteamVersion = other.SteamVersion;
      }
      if (other.HasVrLincaps) {
        VrLincaps = other.VrLincaps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            MinVersion = input.ReadInt32();
            break;
          }
          case 24: {
            ConnectPort = input.ReadUInt32();
            break;
          }
          case 34: {
            Hostname = input.ReadString();
            break;
          }
          case 48: {
            EnabledServices = input.ReadUInt32();
            break;
          }
          case 56: {
            Ostype = input.ReadInt32();
            break;
          }
          case 64: {
            Is64Bit = input.ReadBool();
            break;
          }
          case 74: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
          case 88: {
            Euniverse = input.ReadInt32();
            break;
          }
          case 96: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 104: {
            ScreenLocked = input.ReadBool();
            break;
          }
          case 112: {
            GamesRunning = input.ReadBool();
            break;
          }
          case 122: {
            macAddresses_.AddEntriesFrom(input, _repeated_macAddresses_codec);
            break;
          }
          case 128: {
            DownloadLanPeerGroup = input.ReadUInt32();
            break;
          }
          case 136: {
            BroadcastingActive = input.ReadBool();
            break;
          }
          case 144: {
            VrActive = input.ReadBool();
            break;
          }
          case 152: {
            ContentCachePort = input.ReadUInt32();
            break;
          }
          case 162: {
            ipAddresses_.AddEntriesFrom(input, _repeated_ipAddresses_codec);
            break;
          }
          case 170: {
            PublicIpAddress = input.ReadString();
            break;
          }
          case 176: {
            RemoteplayActive = input.ReadBool();
            break;
          }
          case 184: {
            SupportedServices = input.ReadUInt32();
            break;
          }
          case 192: {
            SteamDeck = input.ReadBool();
            break;
          }
          case 200: {
            SteamVersion = input.ReadUInt64();
            break;
          }
          case 208: {
            VrLincaps = (global::OpenSteamworks.Protobuf.EVRLinkCaps) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            MinVersion = input.ReadInt32();
            break;
          }
          case 24: {
            ConnectPort = input.ReadUInt32();
            break;
          }
          case 34: {
            Hostname = input.ReadString();
            break;
          }
          case 48: {
            EnabledServices = input.ReadUInt32();
            break;
          }
          case 56: {
            Ostype = input.ReadInt32();
            break;
          }
          case 64: {
            Is64Bit = input.ReadBool();
            break;
          }
          case 74: {
            users_.AddEntriesFrom(ref input, _repeated_users_codec);
            break;
          }
          case 88: {
            Euniverse = input.ReadInt32();
            break;
          }
          case 96: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 104: {
            ScreenLocked = input.ReadBool();
            break;
          }
          case 112: {
            GamesRunning = input.ReadBool();
            break;
          }
          case 122: {
            macAddresses_.AddEntriesFrom(ref input, _repeated_macAddresses_codec);
            break;
          }
          case 128: {
            DownloadLanPeerGroup = input.ReadUInt32();
            break;
          }
          case 136: {
            BroadcastingActive = input.ReadBool();
            break;
          }
          case 144: {
            VrActive = input.ReadBool();
            break;
          }
          case 152: {
            ContentCachePort = input.ReadUInt32();
            break;
          }
          case 162: {
            ipAddresses_.AddEntriesFrom(ref input, _repeated_ipAddresses_codec);
            break;
          }
          case 170: {
            PublicIpAddress = input.ReadString();
            break;
          }
          case 176: {
            RemoteplayActive = input.ReadBool();
            break;
          }
          case 184: {
            SupportedServices = input.ReadUInt32();
            break;
          }
          case 192: {
            SteamDeck = input.ReadBool();
            break;
          }
          case 200: {
            SteamVersion = input.ReadUInt64();
            break;
          }
          case 208: {
            VrLincaps = (global::OpenSteamworks.Protobuf.EVRLinkCaps) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgRemoteClientBroadcastStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class User : pb::IMessage<User>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgRemoteClientBroadcastStatus.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public User() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public User(User other) : this() {
          _hasBits0 = other._hasBits0;
          steamid_ = other.steamid_;
          authKeyId_ = other.authKeyId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public User Clone() {
          return new User(this);
        }

        /// <summary>Field number for the "steamid" field.</summary>
        public const int SteamidFieldNumber = 1;
        private readonly static ulong SteamidDefaultValue = 0UL;

        private ulong steamid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Steamid {
          get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            steamid_ = value;
          }
        }
        /// <summary>Gets whether the "steamid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSteamid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "steamid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSteamid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "auth_key_id" field.</summary>
        public const int AuthKeyIdFieldNumber = 2;
        private readonly static uint AuthKeyIdDefaultValue = 0;

        private uint authKeyId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint AuthKeyId {
          get { if ((_hasBits0 & 2) != 0) { return authKeyId_; } else { return AuthKeyIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            authKeyId_ = value;
          }
        }
        /// <summary>Gets whether the "auth_key_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAuthKeyId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "auth_key_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAuthKeyId() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(User other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Steamid != other.Steamid) return false;
          if (AuthKeyId != other.AuthKeyId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSteamid) hash ^= Steamid.GetHashCode();
          if (HasAuthKeyId) hash ^= AuthKeyId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSteamid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Steamid);
          }
          if (HasAuthKeyId) {
            output.WriteRawTag(16);
            output.WriteUInt32(AuthKeyId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSteamid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Steamid);
          }
          if (HasAuthKeyId) {
            output.WriteRawTag(16);
            output.WriteUInt32(AuthKeyId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSteamid) {
            size += 1 + 8;
          }
          if (HasAuthKeyId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuthKeyId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(User other) {
          if (other == null) {
            return;
          }
          if (other.HasSteamid) {
            Steamid = other.Steamid;
          }
          if (other.HasAuthKeyId) {
            AuthKeyId = other.AuthKeyId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Steamid = input.ReadFixed64();
                break;
              }
              case 16: {
                AuthKeyId = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Steamid = input.ReadFixed64();
                break;
              }
              case 16: {
                AuthKeyId = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteClientBroadcastDiscovery : pb::IMessage<CMsgRemoteClientBroadcastDiscovery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteClientBroadcastDiscovery> _parser = new pb::MessageParser<CMsgRemoteClientBroadcastDiscovery>(() => new CMsgRemoteClientBroadcastDiscovery());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteClientBroadcastDiscovery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastDiscovery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastDiscovery(CMsgRemoteClientBroadcastDiscovery other) : this() {
      _hasBits0 = other._hasBits0;
      seqNum_ = other.seqNum_;
      clientIds_ = other.clientIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastDiscovery Clone() {
      return new CMsgRemoteClientBroadcastDiscovery(this);
    }

    /// <summary>Field number for the "seq_num" field.</summary>
    public const int SeqNumFieldNumber = 1;
    private readonly static uint SeqNumDefaultValue = 0;

    private uint seqNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SeqNum {
      get { if ((_hasBits0 & 1) != 0) { return seqNum_; } else { return SeqNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seqNum_ = value;
      }
    }
    /// <summary>Gets whether the "seq_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeqNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seq_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeqNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_ids" field.</summary>
    public const int ClientIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_clientIds_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> clientIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> ClientIds {
      get { return clientIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteClientBroadcastDiscovery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteClientBroadcastDiscovery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeqNum != other.SeqNum) return false;
      if(!clientIds_.Equals(other.clientIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeqNum) hash ^= SeqNum.GetHashCode();
      hash ^= clientIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeqNum) {
        output.WriteRawTag(8);
        output.WriteUInt32(SeqNum);
      }
      clientIds_.WriteTo(output, _repeated_clientIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeqNum) {
        output.WriteRawTag(8);
        output.WriteUInt32(SeqNum);
      }
      clientIds_.WriteTo(ref output, _repeated_clientIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeqNum) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeqNum);
      }
      size += clientIds_.CalculateSize(_repeated_clientIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteClientBroadcastDiscovery other) {
      if (other == null) {
        return;
      }
      if (other.HasSeqNum) {
        SeqNum = other.SeqNum;
      }
      clientIds_.Add(other.clientIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SeqNum = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            clientIds_.AddEntriesFrom(input, _repeated_clientIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SeqNum = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            clientIds_.AddEntriesFrom(ref input, _repeated_clientIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteClientBroadcastClientIDDeconflict : pb::IMessage<CMsgRemoteClientBroadcastClientIDDeconflict>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteClientBroadcastClientIDDeconflict> _parser = new pb::MessageParser<CMsgRemoteClientBroadcastClientIDDeconflict>(() => new CMsgRemoteClientBroadcastClientIDDeconflict());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteClientBroadcastClientIDDeconflict> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastClientIDDeconflict() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastClientIDDeconflict(CMsgRemoteClientBroadcastClientIDDeconflict other) : this() {
      clientIds_ = other.clientIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteClientBroadcastClientIDDeconflict Clone() {
      return new CMsgRemoteClientBroadcastClientIDDeconflict(this);
    }

    /// <summary>Field number for the "client_ids" field.</summary>
    public const int ClientIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_clientIds_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> clientIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> ClientIds {
      get { return clientIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteClientBroadcastClientIDDeconflict);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteClientBroadcastClientIDDeconflict other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clientIds_.Equals(other.clientIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clientIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      clientIds_.WriteTo(output, _repeated_clientIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      clientIds_.WriteTo(ref output, _repeated_clientIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += clientIds_.CalculateSize(_repeated_clientIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteClientBroadcastClientIDDeconflict other) {
      if (other == null) {
        return;
      }
      clientIds_.Add(other.clientIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18:
          case 16: {
            clientIds_.AddEntriesFrom(input, _repeated_clientIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18:
          case 16: {
            clientIds_.AddEntriesFrom(ref input, _repeated_clientIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceAuthorizationRequest : pb::IMessage<CMsgRemoteDeviceAuthorizationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceAuthorizationRequest> _parser = new pb::MessageParser<CMsgRemoteDeviceAuthorizationRequest>(() => new CMsgRemoteDeviceAuthorizationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceAuthorizationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationRequest(CMsgRemoteDeviceAuthorizationRequest other) : this() {
      deviceToken_ = other.deviceToken_;
      deviceName_ = other.deviceName_;
      encryptedRequest_ = other.encryptedRequest_;
      authKey_ = other.authKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationRequest Clone() {
      return new CMsgRemoteDeviceAuthorizationRequest(this);
    }

    /// <summary>Field number for the "device_token" field.</summary>
    public const int DeviceTokenFieldNumber = 1;
    private readonly static pb::ByteString DeviceTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString deviceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DeviceToken {
      get { return deviceToken_ ?? DeviceTokenDefaultValue; }
      set {
        deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceToken {
      get { return deviceToken_ != null; }
    }
    /// <summary>Clears the value of the "device_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceToken() {
      deviceToken_ = null;
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 2;
    private readonly static string DeviceNameDefaultValue = "";

    private string deviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_ ?? DeviceNameDefaultValue; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceName {
      get { return deviceName_ != null; }
    }
    /// <summary>Clears the value of the "device_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceName() {
      deviceName_ = null;
    }

    /// <summary>Field number for the "encrypted_request" field.</summary>
    public const int EncryptedRequestFieldNumber = 3;
    private readonly static pb::ByteString EncryptedRequestDefaultValue = pb::ByteString.Empty;

    private pb::ByteString encryptedRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EncryptedRequest {
      get { return encryptedRequest_ ?? EncryptedRequestDefaultValue; }
      set {
        encryptedRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encrypted_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncryptedRequest {
      get { return encryptedRequest_ != null; }
    }
    /// <summary>Clears the value of the "encrypted_request" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncryptedRequest() {
      encryptedRequest_ = null;
    }

    /// <summary>Field number for the "auth_key" field.</summary>
    public const int AuthKeyFieldNumber = 4;
    private readonly static pb::ByteString AuthKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString authKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AuthKey {
      get { return authKey_ ?? AuthKeyDefaultValue; }
      set {
        authKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "auth_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthKey {
      get { return authKey_ != null; }
    }
    /// <summary>Clears the value of the "auth_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthKey() {
      authKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceAuthorizationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceAuthorizationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceToken != other.DeviceToken) return false;
      if (DeviceName != other.DeviceName) return false;
      if (EncryptedRequest != other.EncryptedRequest) return false;
      if (AuthKey != other.AuthKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeviceToken) hash ^= DeviceToken.GetHashCode();
      if (HasDeviceName) hash ^= DeviceName.GetHashCode();
      if (HasEncryptedRequest) hash ^= EncryptedRequest.GetHashCode();
      if (HasAuthKey) hash ^= AuthKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeviceToken) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceToken);
      }
      if (HasDeviceName) {
        output.WriteRawTag(18);
        output.WriteString(DeviceName);
      }
      if (HasEncryptedRequest) {
        output.WriteRawTag(26);
        output.WriteBytes(EncryptedRequest);
      }
      if (HasAuthKey) {
        output.WriteRawTag(34);
        output.WriteBytes(AuthKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeviceToken) {
        output.WriteRawTag(10);
        output.WriteBytes(DeviceToken);
      }
      if (HasDeviceName) {
        output.WriteRawTag(18);
        output.WriteString(DeviceName);
      }
      if (HasEncryptedRequest) {
        output.WriteRawTag(26);
        output.WriteBytes(EncryptedRequest);
      }
      if (HasAuthKey) {
        output.WriteRawTag(34);
        output.WriteBytes(AuthKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDeviceToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceToken);
      }
      if (HasDeviceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (HasEncryptedRequest) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedRequest);
      }
      if (HasAuthKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceAuthorizationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasDeviceToken) {
        DeviceToken = other.DeviceToken;
      }
      if (other.HasDeviceName) {
        DeviceName = other.DeviceName;
      }
      if (other.HasEncryptedRequest) {
        EncryptedRequest = other.EncryptedRequest;
      }
      if (other.HasAuthKey) {
        AuthKey = other.AuthKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceToken = input.ReadBytes();
            break;
          }
          case 18: {
            DeviceName = input.ReadString();
            break;
          }
          case 26: {
            EncryptedRequest = input.ReadBytes();
            break;
          }
          case 34: {
            AuthKey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceToken = input.ReadBytes();
            break;
          }
          case 18: {
            DeviceName = input.ReadString();
            break;
          }
          case 26: {
            EncryptedRequest = input.ReadBytes();
            break;
          }
          case 34: {
            AuthKey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgRemoteDeviceAuthorizationRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum EKeyEscrowUsage {
        [pbr::OriginalName("EKeyEscrowUsageStreamingDevice")] StreamingDevice = 0,
      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class CKeyEscrow_Ticket : pb::IMessage<CKeyEscrow_Ticket>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CKeyEscrow_Ticket> _parser = new pb::MessageParser<CKeyEscrow_Ticket>(() => new CKeyEscrow_Ticket());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CKeyEscrow_Ticket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CKeyEscrow_Ticket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CKeyEscrow_Ticket(CKeyEscrow_Ticket other) : this() {
          _hasBits0 = other._hasBits0;
          password_ = other.password_;
          identifier_ = other.identifier_;
          payload_ = other.payload_;
          timestamp_ = other.timestamp_;
          usage_ = other.usage_;
          deviceName_ = other.deviceName_;
          deviceModel_ = other.deviceModel_;
          deviceSerial_ = other.deviceSerial_;
          deviceProvisioningId_ = other.deviceProvisioningId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CKeyEscrow_Ticket Clone() {
          return new CKeyEscrow_Ticket(this);
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 1;
        private readonly static pb::ByteString PasswordDefaultValue = pb::ByteString.Empty;

        private pb::ByteString password_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Password {
          get { return password_ ?? PasswordDefaultValue; }
          set {
            password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "password" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPassword {
          get { return password_ != null; }
        }
        /// <summary>Clears the value of the "password" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPassword() {
          password_ = null;
        }

        /// <summary>Field number for the "identifier" field.</summary>
        public const int IdentifierFieldNumber = 2;
        private readonly static ulong IdentifierDefaultValue = 0UL;

        private ulong identifier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Identifier {
          get { if ((_hasBits0 & 1) != 0) { return identifier_; } else { return IdentifierDefaultValue; } }
          set {
            _hasBits0 |= 1;
            identifier_ = value;
          }
        }
        /// <summary>Gets whether the "identifier" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIdentifier {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "identifier" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIdentifier() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "payload" field.</summary>
        public const int PayloadFieldNumber = 3;
        private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

        private pb::ByteString payload_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Payload {
          get { return payload_ ?? PayloadDefaultValue; }
          set {
            payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "payload" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPayload {
          get { return payload_ != null; }
        }
        /// <summary>Clears the value of the "payload" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload() {
          payload_ = null;
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 4;
        private readonly static uint TimestampDefaultValue = 0;

        private uint timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Timestamp {
          get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
          set {
            _hasBits0 |= 2;
            timestamp_ = value;
          }
        }
        /// <summary>Gets whether the "timestamp" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimestamp {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "timestamp" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimestamp() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "usage" field.</summary>
        public const int UsageFieldNumber = 5;
        private readonly static global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage UsageDefaultValue = global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage.StreamingDevice;

        private global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage usage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage Usage {
          get { if ((_hasBits0 & 4) != 0) { return usage_; } else { return UsageDefaultValue; } }
          set {
            _hasBits0 |= 4;
            usage_ = value;
          }
        }
        /// <summary>Gets whether the "usage" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUsage {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "usage" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUsage() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 6;
        private readonly static string DeviceNameDefaultValue = "";

        private string deviceName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DeviceName {
          get { return deviceName_ ?? DeviceNameDefaultValue; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "device_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeviceName {
          get { return deviceName_ != null; }
        }
        /// <summary>Clears the value of the "device_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeviceName() {
          deviceName_ = null;
        }

        /// <summary>Field number for the "device_model" field.</summary>
        public const int DeviceModelFieldNumber = 7;
        private readonly static string DeviceModelDefaultValue = "";

        private string deviceModel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DeviceModel {
          get { return deviceModel_ ?? DeviceModelDefaultValue; }
          set {
            deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "device_model" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeviceModel {
          get { return deviceModel_ != null; }
        }
        /// <summary>Clears the value of the "device_model" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeviceModel() {
          deviceModel_ = null;
        }

        /// <summary>Field number for the "device_serial" field.</summary>
        public const int DeviceSerialFieldNumber = 8;
        private readonly static string DeviceSerialDefaultValue = "";

        private string deviceSerial_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DeviceSerial {
          get { return deviceSerial_ ?? DeviceSerialDefaultValue; }
          set {
            deviceSerial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "device_serial" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeviceSerial {
          get { return deviceSerial_ != null; }
        }
        /// <summary>Clears the value of the "device_serial" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeviceSerial() {
          deviceSerial_ = null;
        }

        /// <summary>Field number for the "device_provisioning_id" field.</summary>
        public const int DeviceProvisioningIdFieldNumber = 9;
        private readonly static uint DeviceProvisioningIdDefaultValue = 0;

        private uint deviceProvisioningId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint DeviceProvisioningId {
          get { if ((_hasBits0 & 8) != 0) { return deviceProvisioningId_; } else { return DeviceProvisioningIdDefaultValue; } }
          set {
            _hasBits0 |= 8;
            deviceProvisioningId_ = value;
          }
        }
        /// <summary>Gets whether the "device_provisioning_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeviceProvisioningId {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "device_provisioning_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeviceProvisioningId() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CKeyEscrow_Ticket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CKeyEscrow_Ticket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Password != other.Password) return false;
          if (Identifier != other.Identifier) return false;
          if (Payload != other.Payload) return false;
          if (Timestamp != other.Timestamp) return false;
          if (Usage != other.Usage) return false;
          if (DeviceName != other.DeviceName) return false;
          if (DeviceModel != other.DeviceModel) return false;
          if (DeviceSerial != other.DeviceSerial) return false;
          if (DeviceProvisioningId != other.DeviceProvisioningId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPassword) hash ^= Password.GetHashCode();
          if (HasIdentifier) hash ^= Identifier.GetHashCode();
          if (HasPayload) hash ^= Payload.GetHashCode();
          if (HasTimestamp) hash ^= Timestamp.GetHashCode();
          if (HasUsage) hash ^= Usage.GetHashCode();
          if (HasDeviceName) hash ^= DeviceName.GetHashCode();
          if (HasDeviceModel) hash ^= DeviceModel.GetHashCode();
          if (HasDeviceSerial) hash ^= DeviceSerial.GetHashCode();
          if (HasDeviceProvisioningId) hash ^= DeviceProvisioningId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPassword) {
            output.WriteRawTag(10);
            output.WriteBytes(Password);
          }
          if (HasIdentifier) {
            output.WriteRawTag(16);
            output.WriteUInt64(Identifier);
          }
          if (HasPayload) {
            output.WriteRawTag(26);
            output.WriteBytes(Payload);
          }
          if (HasTimestamp) {
            output.WriteRawTag(32);
            output.WriteUInt32(Timestamp);
          }
          if (HasUsage) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Usage);
          }
          if (HasDeviceName) {
            output.WriteRawTag(50);
            output.WriteString(DeviceName);
          }
          if (HasDeviceModel) {
            output.WriteRawTag(58);
            output.WriteString(DeviceModel);
          }
          if (HasDeviceSerial) {
            output.WriteRawTag(66);
            output.WriteString(DeviceSerial);
          }
          if (HasDeviceProvisioningId) {
            output.WriteRawTag(72);
            output.WriteUInt32(DeviceProvisioningId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPassword) {
            output.WriteRawTag(10);
            output.WriteBytes(Password);
          }
          if (HasIdentifier) {
            output.WriteRawTag(16);
            output.WriteUInt64(Identifier);
          }
          if (HasPayload) {
            output.WriteRawTag(26);
            output.WriteBytes(Payload);
          }
          if (HasTimestamp) {
            output.WriteRawTag(32);
            output.WriteUInt32(Timestamp);
          }
          if (HasUsage) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Usage);
          }
          if (HasDeviceName) {
            output.WriteRawTag(50);
            output.WriteString(DeviceName);
          }
          if (HasDeviceModel) {
            output.WriteRawTag(58);
            output.WriteString(DeviceModel);
          }
          if (HasDeviceSerial) {
            output.WriteRawTag(66);
            output.WriteString(DeviceSerial);
          }
          if (HasDeviceProvisioningId) {
            output.WriteRawTag(72);
            output.WriteUInt32(DeviceProvisioningId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPassword) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Password);
          }
          if (HasIdentifier) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Identifier);
          }
          if (HasPayload) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
          }
          if (HasTimestamp) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
          }
          if (HasUsage) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Usage);
          }
          if (HasDeviceName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          if (HasDeviceModel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
          }
          if (HasDeviceSerial) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceSerial);
          }
          if (HasDeviceProvisioningId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceProvisioningId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CKeyEscrow_Ticket other) {
          if (other == null) {
            return;
          }
          if (other.HasPassword) {
            Password = other.Password;
          }
          if (other.HasIdentifier) {
            Identifier = other.Identifier;
          }
          if (other.HasPayload) {
            Payload = other.Payload;
          }
          if (other.HasTimestamp) {
            Timestamp = other.Timestamp;
          }
          if (other.HasUsage) {
            Usage = other.Usage;
          }
          if (other.HasDeviceName) {
            DeviceName = other.DeviceName;
          }
          if (other.HasDeviceModel) {
            DeviceModel = other.DeviceModel;
          }
          if (other.HasDeviceSerial) {
            DeviceSerial = other.DeviceSerial;
          }
          if (other.HasDeviceProvisioningId) {
            DeviceProvisioningId = other.DeviceProvisioningId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Password = input.ReadBytes();
                break;
              }
              case 16: {
                Identifier = input.ReadUInt64();
                break;
              }
              case 26: {
                Payload = input.ReadBytes();
                break;
              }
              case 32: {
                Timestamp = input.ReadUInt32();
                break;
              }
              case 40: {
                Usage = (global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage) input.ReadEnum();
                break;
              }
              case 50: {
                DeviceName = input.ReadString();
                break;
              }
              case 58: {
                DeviceModel = input.ReadString();
                break;
              }
              case 66: {
                DeviceSerial = input.ReadString();
                break;
              }
              case 72: {
                DeviceProvisioningId = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Password = input.ReadBytes();
                break;
              }
              case 16: {
                Identifier = input.ReadUInt64();
                break;
              }
              case 26: {
                Payload = input.ReadBytes();
                break;
              }
              case 32: {
                Timestamp = input.ReadUInt32();
                break;
              }
              case 40: {
                Usage = (global::OpenSteamworks.Protobuf.CMsgRemoteDeviceAuthorizationRequest.Types.EKeyEscrowUsage) input.ReadEnum();
                break;
              }
              case 50: {
                DeviceName = input.ReadString();
                break;
              }
              case 58: {
                DeviceModel = input.ReadString();
                break;
              }
              case 66: {
                DeviceSerial = input.ReadString();
                break;
              }
              case 72: {
                DeviceProvisioningId = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceAuthorizationCancelRequest : pb::IMessage<CMsgRemoteDeviceAuthorizationCancelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceAuthorizationCancelRequest> _parser = new pb::MessageParser<CMsgRemoteDeviceAuthorizationCancelRequest>(() => new CMsgRemoteDeviceAuthorizationCancelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceAuthorizationCancelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationCancelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationCancelRequest(CMsgRemoteDeviceAuthorizationCancelRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationCancelRequest Clone() {
      return new CMsgRemoteDeviceAuthorizationCancelRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceAuthorizationCancelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceAuthorizationCancelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceAuthorizationCancelRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceAuthorizationResponse : pb::IMessage<CMsgRemoteDeviceAuthorizationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceAuthorizationResponse> _parser = new pb::MessageParser<CMsgRemoteDeviceAuthorizationResponse>(() => new CMsgRemoteDeviceAuthorizationResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceAuthorizationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationResponse(CMsgRemoteDeviceAuthorizationResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      steamid_ = other.steamid_;
      authKey_ = other.authKey_;
      deviceToken_ = other.deviceToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationResponse Clone() {
      return new CMsgRemoteDeviceAuthorizationResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult ResultDefaultValue = global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult.EremoteDeviceAuthorizationSuccess;

    private global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 2;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "auth_key" field.</summary>
    public const int AuthKeyFieldNumber = 3;
    private readonly static pb::ByteString AuthKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString authKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AuthKey {
      get { return authKey_ ?? AuthKeyDefaultValue; }
      set {
        authKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "auth_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthKey {
      get { return authKey_ != null; }
    }
    /// <summary>Clears the value of the "auth_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthKey() {
      authKey_ = null;
    }

    /// <summary>Field number for the "device_token" field.</summary>
    public const int DeviceTokenFieldNumber = 4;
    private readonly static pb::ByteString DeviceTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString deviceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DeviceToken {
      get { return deviceToken_ ?? DeviceTokenDefaultValue; }
      set {
        deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceToken {
      get { return deviceToken_ != null; }
    }
    /// <summary>Clears the value of the "device_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceToken() {
      deviceToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceAuthorizationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceAuthorizationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Steamid != other.Steamid) return false;
      if (AuthKey != other.AuthKey) return false;
      if (DeviceToken != other.DeviceToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasAuthKey) hash ^= AuthKey.GetHashCode();
      if (HasDeviceToken) hash ^= DeviceToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (HasAuthKey) {
        output.WriteRawTag(26);
        output.WriteBytes(AuthKey);
      }
      if (HasDeviceToken) {
        output.WriteRawTag(34);
        output.WriteBytes(DeviceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (HasAuthKey) {
        output.WriteRawTag(26);
        output.WriteBytes(AuthKey);
      }
      if (HasDeviceToken) {
        output.WriteRawTag(34);
        output.WriteBytes(DeviceToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasAuthKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthKey);
      }
      if (HasDeviceToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceAuthorizationResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAuthKey) {
        AuthKey = other.AuthKey;
      }
      if (other.HasDeviceToken) {
        DeviceToken = other.DeviceToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult) input.ReadEnum();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 26: {
            AuthKey = input.ReadBytes();
            break;
          }
          case 34: {
            DeviceToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult) input.ReadEnum();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 26: {
            AuthKey = input.ReadBytes();
            break;
          }
          case 34: {
            DeviceToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceAuthorizationConfirmed : pb::IMessage<CMsgRemoteDeviceAuthorizationConfirmed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceAuthorizationConfirmed> _parser = new pb::MessageParser<CMsgRemoteDeviceAuthorizationConfirmed>(() => new CMsgRemoteDeviceAuthorizationConfirmed());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceAuthorizationConfirmed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationConfirmed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationConfirmed(CMsgRemoteDeviceAuthorizationConfirmed other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceAuthorizationConfirmed Clone() {
      return new CMsgRemoteDeviceAuthorizationConfirmed(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult ResultDefaultValue = global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult.EremoteDeviceAuthorizationSuccess;

    private global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceAuthorizationConfirmed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceAuthorizationConfirmed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceAuthorizationConfirmed other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::OpenSteamworks.Protobuf.ERemoteDeviceAuthorizationResult) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceStreamingRequest : pb::IMessage<CMsgRemoteDeviceStreamingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceStreamingRequest> _parser = new pb::MessageParser<CMsgRemoteDeviceStreamingRequest>(() => new CMsgRemoteDeviceStreamingRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceStreamingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingRequest(CMsgRemoteDeviceStreamingRequest other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      maximumResolutionX_ = other.maximumResolutionX_;
      maximumResolutionY_ = other.maximumResolutionY_;
      audioChannelCount_ = other.audioChannelCount_;
      deviceVersion_ = other.deviceVersion_;
      streamDesktop_ = other.streamDesktop_;
      deviceToken_ = other.deviceToken_;
      pin_ = other.pin_;
      enableVideoStreaming_ = other.enableVideoStreaming_;
      enableAudioStreaming_ = other.enableAudioStreaming_;
      enableInputStreaming_ = other.enableInputStreaming_;
      networtest_ = other.networtest_;
      clientId_ = other.clientId_;
      supportedTransport_ = other.supportedTransport_.Clone();
      restricted_ = other.restricted_;
      formFactor_ = other.formFactor_;
      gamepadCount_ = other.gamepadCount_;
      gamepads_ = other.gamepads_.Clone();
      gameid_ = other.gameid_;
      streamInterface_ = other.streamInterface_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingRequest Clone() {
      return new CMsgRemoteDeviceStreamingRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "maximum_resolution_x" field.</summary>
    public const int MaximumResolutionXFieldNumber = 2;
    private readonly static int MaximumResolutionXDefaultValue = 0;

    private int maximumResolutionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaximumResolutionX {
      get { if ((_hasBits0 & 2) != 0) { return maximumResolutionX_; } else { return MaximumResolutionXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maximumResolutionX_ = value;
      }
    }
    /// <summary>Gets whether the "maximum_resolution_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaximumResolutionX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "maximum_resolution_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaximumResolutionX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "maximum_resolution_y" field.</summary>
    public const int MaximumResolutionYFieldNumber = 3;
    private readonly static int MaximumResolutionYDefaultValue = 0;

    private int maximumResolutionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaximumResolutionY {
      get { if ((_hasBits0 & 4) != 0) { return maximumResolutionY_; } else { return MaximumResolutionYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maximumResolutionY_ = value;
      }
    }
    /// <summary>Gets whether the "maximum_resolution_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaximumResolutionY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maximum_resolution_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaximumResolutionY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "audio_channel_count" field.</summary>
    public const int AudioChannelCountFieldNumber = 4;
    private readonly static int AudioChannelCountDefaultValue = 2;

    private int audioChannelCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AudioChannelCount {
      get { if ((_hasBits0 & 8) != 0) { return audioChannelCount_; } else { return AudioChannelCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        audioChannelCount_ = value;
      }
    }
    /// <summary>Gets whether the "audio_channel_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioChannelCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "audio_channel_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioChannelCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "device_version" field.</summary>
    public const int DeviceVersionFieldNumber = 5;
    private readonly static string DeviceVersionDefaultValue = "";

    private string deviceVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceVersion {
      get { return deviceVersion_ ?? DeviceVersionDefaultValue; }
      set {
        deviceVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceVersion {
      get { return deviceVersion_ != null; }
    }
    /// <summary>Clears the value of the "device_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceVersion() {
      deviceVersion_ = null;
    }

    /// <summary>Field number for the "stream_desktop" field.</summary>
    public const int StreamDesktopFieldNumber = 6;
    private readonly static bool StreamDesktopDefaultValue = false;

    private bool streamDesktop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StreamDesktop {
      get { if ((_hasBits0 & 16) != 0) { return streamDesktop_; } else { return StreamDesktopDefaultValue; } }
      set {
        _hasBits0 |= 16;
        streamDesktop_ = value;
      }
    }
    /// <summary>Gets whether the "stream_desktop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamDesktop {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "stream_desktop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamDesktop() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "device_token" field.</summary>
    public const int DeviceTokenFieldNumber = 7;
    private readonly static pb::ByteString DeviceTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString deviceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DeviceToken {
      get { return deviceToken_ ?? DeviceTokenDefaultValue; }
      set {
        deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceToken {
      get { return deviceToken_ != null; }
    }
    /// <summary>Clears the value of the "device_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceToken() {
      deviceToken_ = null;
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 8;
    private readonly static pb::ByteString PinDefaultValue = pb::ByteString.Empty;

    private pb::ByteString pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Pin {
      get { return pin_ ?? PinDefaultValue; }
      set {
        pin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPin {
      get { return pin_ != null; }
    }
    /// <summary>Clears the value of the "pin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPin() {
      pin_ = null;
    }

    /// <summary>Field number for the "enable_video_streaming" field.</summary>
    public const int EnableVideoStreamingFieldNumber = 9;
    private readonly static bool EnableVideoStreamingDefaultValue = true;

    private bool enableVideoStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableVideoStreaming {
      get { if ((_hasBits0 & 32) != 0) { return enableVideoStreaming_; } else { return EnableVideoStreamingDefaultValue; } }
      set {
        _hasBits0 |= 32;
        enableVideoStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_video_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableVideoStreaming {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "enable_video_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableVideoStreaming() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "enable_audio_streaming" field.</summary>
    public const int EnableAudioStreamingFieldNumber = 10;
    private readonly static bool EnableAudioStreamingDefaultValue = true;

    private bool enableAudioStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableAudioStreaming {
      get { if ((_hasBits0 & 64) != 0) { return enableAudioStreaming_; } else { return EnableAudioStreamingDefaultValue; } }
      set {
        _hasBits0 |= 64;
        enableAudioStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_audio_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableAudioStreaming {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "enable_audio_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableAudioStreaming() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "enable_input_streaming" field.</summary>
    public const int EnableInputStreamingFieldNumber = 11;
    private readonly static bool EnableInputStreamingDefaultValue = true;

    private bool enableInputStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableInputStreaming {
      get { if ((_hasBits0 & 128) != 0) { return enableInputStreaming_; } else { return EnableInputStreamingDefaultValue; } }
      set {
        _hasBits0 |= 128;
        enableInputStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_input_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableInputStreaming {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "enable_input_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableInputStreaming() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "networtest" field.</summary>
    public const int NetwortestFieldNumber = 12;
    private readonly static bool NetwortestDefaultValue = false;

    private bool networtest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Networtest {
      get { if ((_hasBits0 & 256) != 0) { return networtest_; } else { return NetwortestDefaultValue; } }
      set {
        _hasBits0 |= 256;
        networtest_ = value;
      }
    }
    /// <summary>Gets whether the "networtest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNetwortest {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "networtest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNetwortest() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 13;
    private readonly static ulong ClientIdDefaultValue = 0UL;

    private ulong clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClientId {
      get { if ((_hasBits0 & 512) != 0) { return clientId_; } else { return ClientIdDefaultValue; } }
      set {
        _hasBits0 |= 512;
        clientId_ = value;
      }
    }
    /// <summary>Gets whether the "client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientId {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "client_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientId() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "supported_transport" field.</summary>
    public const int SupportedTransportFieldNumber = 14;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.EStreamTransport> _repeated_supportedTransport_codec
        = pb::FieldCodec.ForEnum(112, x => (int) x, x => (global::OpenSteamworks.Protobuf.EStreamTransport) x);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamTransport> supportedTransport_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamTransport>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamTransport> SupportedTransport {
      get { return supportedTransport_; }
    }

    /// <summary>Field number for the "restricted" field.</summary>
    public const int RestrictedFieldNumber = 15;
    private readonly static bool RestrictedDefaultValue = false;

    private bool restricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Restricted {
      get { if ((_hasBits0 & 1024) != 0) { return restricted_; } else { return RestrictedDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        restricted_ = value;
      }
    }
    /// <summary>Gets whether the "restricted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRestricted {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "restricted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRestricted() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "form_factor" field.</summary>
    public const int FormFactorFieldNumber = 16;
    private readonly static global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor FormFactorDefaultValue = global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor.Unknown;

    private global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor formFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor FormFactor {
      get { if ((_hasBits0 & 2048) != 0) { return formFactor_; } else { return FormFactorDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        formFactor_ = value;
      }
    }
    /// <summary>Gets whether the "form_factor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormFactor {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "form_factor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormFactor() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "gamepad_count" field.</summary>
    public const int GamepadCountFieldNumber = 17;
    private readonly static int GamepadCountDefaultValue = 0;

    private int gamepadCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GamepadCount {
      get { if ((_hasBits0 & 4096) != 0) { return gamepadCount_; } else { return GamepadCountDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        gamepadCount_ = value;
      }
    }
    /// <summary>Gets whether the "gamepad_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamepadCount {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "gamepad_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamepadCount() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "gamepads" field.</summary>
    public const int GamepadsFieldNumber = 18;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad> _repeated_gamepads_codec
        = pb::FieldCodec.ForMessage(146, global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad> gamepads_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Types.ReservedGamepad> Gamepads {
      get { return gamepads_; }
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 19;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 8192) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "stream_interface" field.</summary>
    public const int StreamInterfaceFieldNumber = 20;
    private readonly static global::OpenSteamworks.Protobuf.EStreamInterface StreamInterfaceDefaultValue = global::OpenSteamworks.Protobuf.EStreamInterface.Default;

    private global::OpenSteamworks.Protobuf.EStreamInterface streamInterface_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamInterface StreamInterface {
      get { if ((_hasBits0 & 16384) != 0) { return streamInterface_; } else { return StreamInterfaceDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        streamInterface_ = value;
      }
    }
    /// <summary>Gets whether the "stream_interface" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStreamInterface {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "stream_interface" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamInterface() {
      _hasBits0 &= ~16384;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceStreamingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceStreamingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (MaximumResolutionX != other.MaximumResolutionX) return false;
      if (MaximumResolutionY != other.MaximumResolutionY) return false;
      if (AudioChannelCount != other.AudioChannelCount) return false;
      if (DeviceVersion != other.DeviceVersion) return false;
      if (StreamDesktop != other.StreamDesktop) return false;
      if (DeviceToken != other.DeviceToken) return false;
      if (Pin != other.Pin) return false;
      if (EnableVideoStreaming != other.EnableVideoStreaming) return false;
      if (EnableAudioStreaming != other.EnableAudioStreaming) return false;
      if (EnableInputStreaming != other.EnableInputStreaming) return false;
      if (Networtest != other.Networtest) return false;
      if (ClientId != other.ClientId) return false;
      if(!supportedTransport_.Equals(other.supportedTransport_)) return false;
      if (Restricted != other.Restricted) return false;
      if (FormFactor != other.FormFactor) return false;
      if (GamepadCount != other.GamepadCount) return false;
      if(!gamepads_.Equals(other.gamepads_)) return false;
      if (Gameid != other.Gameid) return false;
      if (StreamInterface != other.StreamInterface) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasMaximumResolutionX) hash ^= MaximumResolutionX.GetHashCode();
      if (HasMaximumResolutionY) hash ^= MaximumResolutionY.GetHashCode();
      if (HasAudioChannelCount) hash ^= AudioChannelCount.GetHashCode();
      if (HasDeviceVersion) hash ^= DeviceVersion.GetHashCode();
      if (HasStreamDesktop) hash ^= StreamDesktop.GetHashCode();
      if (HasDeviceToken) hash ^= DeviceToken.GetHashCode();
      if (HasPin) hash ^= Pin.GetHashCode();
      if (HasEnableVideoStreaming) hash ^= EnableVideoStreaming.GetHashCode();
      if (HasEnableAudioStreaming) hash ^= EnableAudioStreaming.GetHashCode();
      if (HasEnableInputStreaming) hash ^= EnableInputStreaming.GetHashCode();
      if (HasNetwortest) hash ^= Networtest.GetHashCode();
      if (HasClientId) hash ^= ClientId.GetHashCode();
      hash ^= supportedTransport_.GetHashCode();
      if (HasRestricted) hash ^= Restricted.GetHashCode();
      if (HasFormFactor) hash ^= FormFactor.GetHashCode();
      if (HasGamepadCount) hash ^= GamepadCount.GetHashCode();
      hash ^= gamepads_.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (HasStreamInterface) hash ^= StreamInterface.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasMaximumResolutionX) {
        output.WriteRawTag(16);
        output.WriteInt32(MaximumResolutionX);
      }
      if (HasMaximumResolutionY) {
        output.WriteRawTag(24);
        output.WriteInt32(MaximumResolutionY);
      }
      if (HasAudioChannelCount) {
        output.WriteRawTag(32);
        output.WriteInt32(AudioChannelCount);
      }
      if (HasDeviceVersion) {
        output.WriteRawTag(42);
        output.WriteString(DeviceVersion);
      }
      if (HasStreamDesktop) {
        output.WriteRawTag(48);
        output.WriteBool(StreamDesktop);
      }
      if (HasDeviceToken) {
        output.WriteRawTag(58);
        output.WriteBytes(DeviceToken);
      }
      if (HasPin) {
        output.WriteRawTag(66);
        output.WriteBytes(Pin);
      }
      if (HasEnableVideoStreaming) {
        output.WriteRawTag(72);
        output.WriteBool(EnableVideoStreaming);
      }
      if (HasEnableAudioStreaming) {
        output.WriteRawTag(80);
        output.WriteBool(EnableAudioStreaming);
      }
      if (HasEnableInputStreaming) {
        output.WriteRawTag(88);
        output.WriteBool(EnableInputStreaming);
      }
      if (HasNetwortest) {
        output.WriteRawTag(96);
        output.WriteBool(Networtest);
      }
      if (HasClientId) {
        output.WriteRawTag(104);
        output.WriteUInt64(ClientId);
      }
      supportedTransport_.WriteTo(output, _repeated_supportedTransport_codec);
      if (HasRestricted) {
        output.WriteRawTag(120);
        output.WriteBool(Restricted);
      }
      if (HasFormFactor) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) FormFactor);
      }
      if (HasGamepadCount) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(GamepadCount);
      }
      gamepads_.WriteTo(output, _repeated_gamepads_codec);
      if (HasGameid) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(Gameid);
      }
      if (HasStreamInterface) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) StreamInterface);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasMaximumResolutionX) {
        output.WriteRawTag(16);
        output.WriteInt32(MaximumResolutionX);
      }
      if (HasMaximumResolutionY) {
        output.WriteRawTag(24);
        output.WriteInt32(MaximumResolutionY);
      }
      if (HasAudioChannelCount) {
        output.WriteRawTag(32);
        output.WriteInt32(AudioChannelCount);
      }
      if (HasDeviceVersion) {
        output.WriteRawTag(42);
        output.WriteString(DeviceVersion);
      }
      if (HasStreamDesktop) {
        output.WriteRawTag(48);
        output.WriteBool(StreamDesktop);
      }
      if (HasDeviceToken) {
        output.WriteRawTag(58);
        output.WriteBytes(DeviceToken);
      }
      if (HasPin) {
        output.WriteRawTag(66);
        output.WriteBytes(Pin);
      }
      if (HasEnableVideoStreaming) {
        output.WriteRawTag(72);
        output.WriteBool(EnableVideoStreaming);
      }
      if (HasEnableAudioStreaming) {
        output.WriteRawTag(80);
        output.WriteBool(EnableAudioStreaming);
      }
      if (HasEnableInputStreaming) {
        output.WriteRawTag(88);
        output.WriteBool(EnableInputStreaming);
      }
      if (HasNetwortest) {
        output.WriteRawTag(96);
        output.WriteBool(Networtest);
      }
      if (HasClientId) {
        output.WriteRawTag(104);
        output.WriteUInt64(ClientId);
      }
      supportedTransport_.WriteTo(ref output, _repeated_supportedTransport_codec);
      if (HasRestricted) {
        output.WriteRawTag(120);
        output.WriteBool(Restricted);
      }
      if (HasFormFactor) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) FormFactor);
      }
      if (HasGamepadCount) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(GamepadCount);
      }
      gamepads_.WriteTo(ref output, _repeated_gamepads_codec);
      if (HasGameid) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(Gameid);
      }
      if (HasStreamInterface) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) StreamInterface);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasMaximumResolutionX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumResolutionX);
      }
      if (HasMaximumResolutionY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumResolutionY);
      }
      if (HasAudioChannelCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudioChannelCount);
      }
      if (HasDeviceVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceVersion);
      }
      if (HasStreamDesktop) {
        size += 1 + 1;
      }
      if (HasDeviceToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceToken);
      }
      if (HasPin) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pin);
      }
      if (HasEnableVideoStreaming) {
        size += 1 + 1;
      }
      if (HasEnableAudioStreaming) {
        size += 1 + 1;
      }
      if (HasEnableInputStreaming) {
        size += 1 + 1;
      }
      if (HasNetwortest) {
        size += 1 + 1;
      }
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientId);
      }
      size += supportedTransport_.CalculateSize(_repeated_supportedTransport_codec);
      if (HasRestricted) {
        size += 1 + 1;
      }
      if (HasFormFactor) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FormFactor);
      }
      if (HasGamepadCount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GamepadCount);
      }
      size += gamepads_.CalculateSize(_repeated_gamepads_codec);
      if (HasGameid) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Gameid);
      }
      if (HasStreamInterface) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StreamInterface);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceStreamingRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasMaximumResolutionX) {
        MaximumResolutionX = other.MaximumResolutionX;
      }
      if (other.HasMaximumResolutionY) {
        MaximumResolutionY = other.MaximumResolutionY;
      }
      if (other.HasAudioChannelCount) {
        AudioChannelCount = other.AudioChannelCount;
      }
      if (other.HasDeviceVersion) {
        DeviceVersion = other.DeviceVersion;
      }
      if (other.HasStreamDesktop) {
        StreamDesktop = other.StreamDesktop;
      }
      if (other.HasDeviceToken) {
        DeviceToken = other.DeviceToken;
      }
      if (other.HasPin) {
        Pin = other.Pin;
      }
      if (other.HasEnableVideoStreaming) {
        EnableVideoStreaming = other.EnableVideoStreaming;
      }
      if (other.HasEnableAudioStreaming) {
        EnableAudioStreaming = other.EnableAudioStreaming;
      }
      if (other.HasEnableInputStreaming) {
        EnableInputStreaming = other.EnableInputStreaming;
      }
      if (other.HasNetwortest) {
        Networtest = other.Networtest;
      }
      if (other.HasClientId) {
        ClientId = other.ClientId;
      }
      supportedTransport_.Add(other.supportedTransport_);
      if (other.HasRestricted) {
        Restricted = other.Restricted;
      }
      if (other.HasFormFactor) {
        FormFactor = other.FormFactor;
      }
      if (other.HasGamepadCount) {
        GamepadCount = other.GamepadCount;
      }
      gamepads_.Add(other.gamepads_);
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      if (other.HasStreamInterface) {
        StreamInterface = other.StreamInterface;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            MaximumResolutionX = input.ReadInt32();
            break;
          }
          case 24: {
            MaximumResolutionY = input.ReadInt32();
            break;
          }
          case 32: {
            AudioChannelCount = input.ReadInt32();
            break;
          }
          case 42: {
            DeviceVersion = input.ReadString();
            break;
          }
          case 48: {
            StreamDesktop = input.ReadBool();
            break;
          }
          case 58: {
            DeviceToken = input.ReadBytes();
            break;
          }
          case 66: {
            Pin = input.ReadBytes();
            break;
          }
          case 72: {
            EnableVideoStreaming = input.ReadBool();
            break;
          }
          case 80: {
            EnableAudioStreaming = input.ReadBool();
            break;
          }
          case 88: {
            EnableInputStreaming = input.ReadBool();
            break;
          }
          case 96: {
            Networtest = input.ReadBool();
            break;
          }
          case 104: {
            ClientId = input.ReadUInt64();
            break;
          }
          case 114:
          case 112: {
            supportedTransport_.AddEntriesFrom(input, _repeated_supportedTransport_codec);
            break;
          }
          case 120: {
            Restricted = input.ReadBool();
            break;
          }
          case 128: {
            FormFactor = (global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor) input.ReadEnum();
            break;
          }
          case 136: {
            GamepadCount = input.ReadInt32();
            break;
          }
          case 146: {
            gamepads_.AddEntriesFrom(input, _repeated_gamepads_codec);
            break;
          }
          case 152: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 160: {
            StreamInterface = (global::OpenSteamworks.Protobuf.EStreamInterface) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            MaximumResolutionX = input.ReadInt32();
            break;
          }
          case 24: {
            MaximumResolutionY = input.ReadInt32();
            break;
          }
          case 32: {
            AudioChannelCount = input.ReadInt32();
            break;
          }
          case 42: {
            DeviceVersion = input.ReadString();
            break;
          }
          case 48: {
            StreamDesktop = input.ReadBool();
            break;
          }
          case 58: {
            DeviceToken = input.ReadBytes();
            break;
          }
          case 66: {
            Pin = input.ReadBytes();
            break;
          }
          case 72: {
            EnableVideoStreaming = input.ReadBool();
            break;
          }
          case 80: {
            EnableAudioStreaming = input.ReadBool();
            break;
          }
          case 88: {
            EnableInputStreaming = input.ReadBool();
            break;
          }
          case 96: {
            Networtest = input.ReadBool();
            break;
          }
          case 104: {
            ClientId = input.ReadUInt64();
            break;
          }
          case 114:
          case 112: {
            supportedTransport_.AddEntriesFrom(ref input, _repeated_supportedTransport_codec);
            break;
          }
          case 120: {
            Restricted = input.ReadBool();
            break;
          }
          case 128: {
            FormFactor = (global::OpenSteamworks.Protobuf.EStreamDeviceFormFactor) input.ReadEnum();
            break;
          }
          case 136: {
            GamepadCount = input.ReadInt32();
            break;
          }
          case 146: {
            gamepads_.AddEntriesFrom(ref input, _repeated_gamepads_codec);
            break;
          }
          case 152: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 160: {
            StreamInterface = (global::OpenSteamworks.Protobuf.EStreamInterface) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgRemoteDeviceStreamingRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ReservedGamepad : pb::IMessage<ReservedGamepad>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReservedGamepad> _parser = new pb::MessageParser<ReservedGamepad>(() => new ReservedGamepad());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ReservedGamepad> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgRemoteDeviceStreamingRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReservedGamepad() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReservedGamepad(ReservedGamepad other) : this() {
          _hasBits0 = other._hasBits0;
          controllerType_ = other.controllerType_;
          controllerSubtype_ = other.controllerSubtype_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReservedGamepad Clone() {
          return new ReservedGamepad(this);
        }

        /// <summary>Field number for the "controller_type" field.</summary>
        public const int ControllerTypeFieldNumber = 1;
        private readonly static uint ControllerTypeDefaultValue = 0;

        private uint controllerType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ControllerType {
          get { if ((_hasBits0 & 1) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            controllerType_ = value;
          }
        }
        /// <summary>Gets whether the "controller_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "controller_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "controller_subtype" field.</summary>
        public const int ControllerSubtypeFieldNumber = 2;
        private readonly static uint ControllerSubtypeDefaultValue = 0;

        private uint controllerSubtype_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ControllerSubtype {
          get { if ((_hasBits0 & 2) != 0) { return controllerSubtype_; } else { return ControllerSubtypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            controllerSubtype_ = value;
          }
        }
        /// <summary>Gets whether the "controller_subtype" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerSubtype {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "controller_subtype" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerSubtype() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ReservedGamepad);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ReservedGamepad other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ControllerType != other.ControllerType) return false;
          if (ControllerSubtype != other.ControllerSubtype) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasControllerType) hash ^= ControllerType.GetHashCode();
          if (HasControllerSubtype) hash ^= ControllerSubtype.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasControllerType) {
            output.WriteRawTag(8);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerSubtype) {
            output.WriteRawTag(16);
            output.WriteUInt32(ControllerSubtype);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasControllerType) {
            output.WriteRawTag(8);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerSubtype) {
            output.WriteRawTag(16);
            output.WriteUInt32(ControllerSubtype);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasControllerType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerType);
          }
          if (HasControllerSubtype) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerSubtype);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ReservedGamepad other) {
          if (other == null) {
            return;
          }
          if (other.HasControllerType) {
            ControllerType = other.ControllerType;
          }
          if (other.HasControllerSubtype) {
            ControllerSubtype = other.ControllerSubtype;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 16: {
                ControllerSubtype = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 16: {
                ControllerSubtype = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceStreamingCancelRequest : pb::IMessage<CMsgRemoteDeviceStreamingCancelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceStreamingCancelRequest> _parser = new pb::MessageParser<CMsgRemoteDeviceStreamingCancelRequest>(() => new CMsgRemoteDeviceStreamingCancelRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceStreamingCancelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingCancelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingCancelRequest(CMsgRemoteDeviceStreamingCancelRequest other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingCancelRequest Clone() {
      return new CMsgRemoteDeviceStreamingCancelRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceStreamingCancelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceStreamingCancelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceStreamingCancelRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceStreamingProgress : pb::IMessage<CMsgRemoteDeviceStreamingProgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceStreamingProgress> _parser = new pb::MessageParser<CMsgRemoteDeviceStreamingProgress>(() => new CMsgRemoteDeviceStreamingProgress());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceStreamingProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingProgress(CMsgRemoteDeviceStreamingProgress other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingProgress Clone() {
      return new CMsgRemoteDeviceStreamingProgress(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private readonly static float ProgressDefaultValue = 0F;

    private float progress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Progress {
      get { if ((_hasBits0 & 2) != 0) { return progress_; } else { return ProgressDefaultValue; } }
      set {
        _hasBits0 |= 2;
        progress_ = value;
      }
    }
    /// <summary>Gets whether the "progress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProgress {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "progress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProgress() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceStreamingProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceStreamingProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasProgress) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasProgress) {
        output.WriteRawTag(21);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasProgress) {
        output.WriteRawTag(21);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasProgress) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceStreamingProgress other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasProgress) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 21: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 21: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceStreamingResponse : pb::IMessage<CMsgRemoteDeviceStreamingResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceStreamingResponse> _parser = new pb::MessageParser<CMsgRemoteDeviceStreamingResponse>(() => new CMsgRemoteDeviceStreamingResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceStreamingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingResponse(CMsgRemoteDeviceStreamingResponse other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      result_ = other.result_;
      port_ = other.port_;
      encryptedSessionKey_ = other.encryptedSessionKey_;
      transport_ = other.transport_;
      relayServer_ = other.relayServer_;
      cert_ = other.cert_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamingResponse Clone() {
      return new CMsgRemoteDeviceStreamingResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult ResultDefaultValue = global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult.EremoteDeviceStreamingSuccess;

    private global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult Result {
      get { if ((_hasBits0 & 2) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 2;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private readonly static uint PortDefaultValue = 0;

    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Port {
      get { if ((_hasBits0 & 4) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 4;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPort {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPort() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "encrypted_session_key" field.</summary>
    public const int EncryptedSessionKeyFieldNumber = 4;
    private readonly static pb::ByteString EncryptedSessionKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString encryptedSessionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EncryptedSessionKey {
      get { return encryptedSessionKey_ ?? EncryptedSessionKeyDefaultValue; }
      set {
        encryptedSessionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encrypted_session_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncryptedSessionKey {
      get { return encryptedSessionKey_ != null; }
    }
    /// <summary>Clears the value of the "encrypted_session_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncryptedSessionKey() {
      encryptedSessionKey_ = null;
    }

    /// <summary>Field number for the "transport" field.</summary>
    public const int TransportFieldNumber = 6;
    private readonly static global::OpenSteamworks.Protobuf.EStreamTransport TransportDefaultValue = global::OpenSteamworks.Protobuf.EStreamTransport.Udp;

    private global::OpenSteamworks.Protobuf.EStreamTransport transport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamTransport Transport {
      get { if ((_hasBits0 & 8) != 0) { return transport_; } else { return TransportDefaultValue; } }
      set {
        _hasBits0 |= 8;
        transport_ = value;
      }
    }
    /// <summary>Gets whether the "transport" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTransport {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "transport" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransport() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "relay_server" field.</summary>
    public const int RelayServerFieldNumber = 7;
    private readonly static string RelayServerDefaultValue = "";

    private string relayServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelayServer {
      get { return relayServer_ ?? RelayServerDefaultValue; }
      set {
        relayServer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "relay_server" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelayServer {
      get { return relayServer_ != null; }
    }
    /// <summary>Clears the value of the "relay_server" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelayServer() {
      relayServer_ = null;
    }

    /// <summary>Field number for the "cert" field.</summary>
    public const int CertFieldNumber = 8;
    private readonly static string CertDefaultValue = "";

    private string cert_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cert {
      get { return cert_ ?? CertDefaultValue; }
      set {
        cert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cert" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCert {
      get { return cert_ != null; }
    }
    /// <summary>Clears the value of the "cert" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCert() {
      cert_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceStreamingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceStreamingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Result != other.Result) return false;
      if (Port != other.Port) return false;
      if (EncryptedSessionKey != other.EncryptedSessionKey) return false;
      if (Transport != other.Transport) return false;
      if (RelayServer != other.RelayServer) return false;
      if (Cert != other.Cert) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasEncryptedSessionKey) hash ^= EncryptedSessionKey.GetHashCode();
      if (HasTransport) hash ^= Transport.GetHashCode();
      if (HasRelayServer) hash ^= RelayServer.GetHashCode();
      if (HasCert) hash ^= Cert.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasPort) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (HasEncryptedSessionKey) {
        output.WriteRawTag(34);
        output.WriteBytes(EncryptedSessionKey);
      }
      if (HasTransport) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Transport);
      }
      if (HasRelayServer) {
        output.WriteRawTag(58);
        output.WriteString(RelayServer);
      }
      if (HasCert) {
        output.WriteRawTag(66);
        output.WriteString(Cert);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasPort) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (HasEncryptedSessionKey) {
        output.WriteRawTag(34);
        output.WriteBytes(EncryptedSessionKey);
      }
      if (HasTransport) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Transport);
      }
      if (HasRelayServer) {
        output.WriteRawTag(58);
        output.WriteString(RelayServer);
      }
      if (HasCert) {
        output.WriteRawTag(66);
        output.WriteString(Cert);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (HasEncryptedSessionKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedSessionKey);
      }
      if (HasTransport) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Transport);
      }
      if (HasRelayServer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelayServer);
      }
      if (HasCert) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cert);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceStreamingResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasEncryptedSessionKey) {
        EncryptedSessionKey = other.EncryptedSessionKey;
      }
      if (other.HasTransport) {
        Transport = other.Transport;
      }
      if (other.HasRelayServer) {
        RelayServer = other.RelayServer;
      }
      if (other.HasCert) {
        Cert = other.Cert;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            Result = (global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult) input.ReadEnum();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
          case 34: {
            EncryptedSessionKey = input.ReadBytes();
            break;
          }
          case 48: {
            Transport = (global::OpenSteamworks.Protobuf.EStreamTransport) input.ReadEnum();
            break;
          }
          case 58: {
            RelayServer = input.ReadString();
            break;
          }
          case 66: {
            Cert = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            Result = (global::OpenSteamworks.Protobuf.ERemoteDeviceStreamingResult) input.ReadEnum();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
          case 34: {
            EncryptedSessionKey = input.ReadBytes();
            break;
          }
          case 48: {
            Transport = (global::OpenSteamworks.Protobuf.EStreamTransport) input.ReadEnum();
            break;
          }
          case 58: {
            RelayServer = input.ReadString();
            break;
          }
          case 66: {
            Cert = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceProofRequest : pb::IMessage<CMsgRemoteDeviceProofRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceProofRequest> _parser = new pb::MessageParser<CMsgRemoteDeviceProofRequest>(() => new CMsgRemoteDeviceProofRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceProofRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceProofRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceProofRequest(CMsgRemoteDeviceProofRequest other) : this() {
      _hasBits0 = other._hasBits0;
      challenge_ = other.challenge_;
      requestId_ = other.requestId_;
      updateSecret_ = other.updateSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceProofRequest Clone() {
      return new CMsgRemoteDeviceProofRequest(this);
    }

    /// <summary>Field number for the "challenge" field.</summary>
    public const int ChallengeFieldNumber = 1;
    private readonly static pb::ByteString ChallengeDefaultValue = pb::ByteString.Empty;

    private pb::ByteString challenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Challenge {
      get { return challenge_ ?? ChallengeDefaultValue; }
      set {
        challenge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "challenge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChallenge {
      get { return challenge_ != null; }
    }
    /// <summary>Clears the value of the "challenge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChallenge() {
      challenge_ = null;
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "update_secret" field.</summary>
    public const int UpdateSecretFieldNumber = 3;
    private readonly static bool UpdateSecretDefaultValue = false;

    private bool updateSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpdateSecret {
      get { if ((_hasBits0 & 2) != 0) { return updateSecret_; } else { return UpdateSecretDefaultValue; } }
      set {
        _hasBits0 |= 2;
        updateSecret_ = value;
      }
    }
    /// <summary>Gets whether the "update_secret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpdateSecret {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "update_secret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpdateSecret() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceProofRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceProofRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Challenge != other.Challenge) return false;
      if (RequestId != other.RequestId) return false;
      if (UpdateSecret != other.UpdateSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChallenge) hash ^= Challenge.GetHashCode();
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasUpdateSecret) hash ^= UpdateSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChallenge) {
        output.WriteRawTag(10);
        output.WriteBytes(Challenge);
      }
      if (HasRequestId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequestId);
      }
      if (HasUpdateSecret) {
        output.WriteRawTag(24);
        output.WriteBool(UpdateSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChallenge) {
        output.WriteRawTag(10);
        output.WriteBytes(Challenge);
      }
      if (HasRequestId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequestId);
      }
      if (HasUpdateSecret) {
        output.WriteRawTag(24);
        output.WriteBool(UpdateSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChallenge) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Challenge);
      }
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasUpdateSecret) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceProofRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasChallenge) {
        Challenge = other.Challenge;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasUpdateSecret) {
        UpdateSecret = other.UpdateSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Challenge = input.ReadBytes();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 24: {
            UpdateSecret = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Challenge = input.ReadBytes();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 24: {
            UpdateSecret = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceProofResponse : pb::IMessage<CMsgRemoteDeviceProofResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceProofResponse> _parser = new pb::MessageParser<CMsgRemoteDeviceProofResponse>(() => new CMsgRemoteDeviceProofResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceProofResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceProofResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceProofResponse(CMsgRemoteDeviceProofResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      requestId_ = other.requestId_;
      updatedSecret_ = other.updatedSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceProofResponse Clone() {
      return new CMsgRemoteDeviceProofResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static pb::ByteString ResponseDefaultValue = pb::ByteString.Empty;

    private pb::ByteString response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Response {
      get { return response_ ?? ResponseDefaultValue; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResponse {
      get { return response_ != null; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResponse() {
      response_ = null;
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "updated_secret" field.</summary>
    public const int UpdatedSecretFieldNumber = 3;
    private readonly static bool UpdatedSecretDefaultValue = false;

    private bool updatedSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UpdatedSecret {
      get { if ((_hasBits0 & 2) != 0) { return updatedSecret_; } else { return UpdatedSecretDefaultValue; } }
      set {
        _hasBits0 |= 2;
        updatedSecret_ = value;
      }
    }
    /// <summary>Gets whether the "updated_secret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpdatedSecret {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "updated_secret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpdatedSecret() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceProofResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceProofResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (RequestId != other.RequestId) return false;
      if (UpdatedSecret != other.UpdatedSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasUpdatedSecret) hash ^= UpdatedSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(10);
        output.WriteBytes(Response);
      }
      if (HasRequestId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequestId);
      }
      if (HasUpdatedSecret) {
        output.WriteRawTag(24);
        output.WriteBool(UpdatedSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(10);
        output.WriteBytes(Response);
      }
      if (HasRequestId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequestId);
      }
      if (HasUpdatedSecret) {
        output.WriteRawTag(24);
        output.WriteBool(UpdatedSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Response);
      }
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasUpdatedSecret) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceProofResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasUpdatedSecret) {
        UpdatedSecret = other.UpdatedSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Response = input.ReadBytes();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 24: {
            UpdatedSecret = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Response = input.ReadBytes();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 24: {
            UpdatedSecret = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgRemoteDeviceStreamTransportSignal : pb::IMessage<CMsgRemoteDeviceStreamTransportSignal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRemoteDeviceStreamTransportSignal> _parser = new pb::MessageParser<CMsgRemoteDeviceStreamTransportSignal>(() => new CMsgRemoteDeviceStreamTransportSignal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgRemoteDeviceStreamTransportSignal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteclientDiscoveryReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamTransportSignal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamTransportSignal(CMsgRemoteDeviceStreamTransportSignal other) : this() {
      token_ = other.token_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgRemoteDeviceStreamTransportSignal Clone() {
      return new CMsgRemoteDeviceStreamTransportSignal(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

    private pb::ByteString payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_ ?? PayloadDefaultValue; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "payload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayload {
      get { return payload_ != null; }
    }
    /// <summary>Clears the value of the "payload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgRemoteDeviceStreamTransportSignal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgRemoteDeviceStreamTransportSignal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasPayload) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (HasPayload) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (HasPayload) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (HasPayload) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgRemoteDeviceStreamTransportSignal other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasPayload) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
