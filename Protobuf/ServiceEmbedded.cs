// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_embedded.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_embedded.proto</summary>
  public static partial class ServiceEmbeddedReflection {

    #region Descriptor
    /// <summary>File descriptor for service_embedded.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceEmbeddedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZzZXJ2aWNlX2VtYmVkZGVkLnByb3RvGiBnb29nbGUvcHJvdG9idWYvZGVz",
            "Y3JpcHRvci5wcm90byJ3Ci5DRW1iZWRkZWRDbGllbnRfQXV0aG9yaXplQ3Vy",
            "cmVudERldmljZV9SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYSDQoFYXBwaWQY",
            "AiABKA0SEwoLZGV2aWNlX2luZm8YAyABKAkSEAoIZGV2aWNlaWQYBCABKA0i",
            "YQooQ0VtYmVkZGVkQ2xpZW50X0F1dGhvcml6ZURldmljZV9SZXNwb25zZRIO",
            "CgZyZXN1bHQYASABKA0SJQoFdG9rZW4YAiABKAsyFi5DRW1iZWRkZWRDbGll",
            "bnRfVG9rZW4iYAoVQ0VtYmVkZGVkQ2xpZW50X1Rva2VuEg8KB3N0ZWFtaWQY",
            "ASABKAYSFAoMY2xpZW50X3Rva2VuGAIgASgMEg4KBmV4cGlyeRgDIAEoDRIQ",
            "CghkZXZpY2VpZBgEIAEoDTKGAQoORW1iZWRkZWRDbGllbnQSdAoWQXV0aG9y",
            "aXplQ3VycmVudERldmljZRIvLkNFbWJlZGRlZENsaWVudF9BdXRob3JpemVD",
            "dXJyZW50RGV2aWNlX1JlcXVlc3QaKS5DRW1iZWRkZWRDbGllbnRfQXV0aG9y",
            "aXplRGV2aWNlX1Jlc3BvbnNlQiCqAh1PcGVuU3RlYW13b3Jrcy5Qcm90b2J1",
            "Zi5XZWJVSQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_AuthorizeCurrentDevice_Request), global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_AuthorizeCurrentDevice_Request.Parser, new[]{ "Steamid", "Appid", "DeviceInfo", "Deviceid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_AuthorizeDevice_Response), global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_AuthorizeDevice_Response.Parser, new[]{ "Result", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token), global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token.Parser, new[]{ "Steamid", "ClientToken", "Expiry", "Deviceid" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CEmbeddedClient_AuthorizeCurrentDevice_Request : pb::IMessage<CEmbeddedClient_AuthorizeCurrentDevice_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CEmbeddedClient_AuthorizeCurrentDevice_Request> _parser = new pb::MessageParser<CEmbeddedClient_AuthorizeCurrentDevice_Request>(() => new CEmbeddedClient_AuthorizeCurrentDevice_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CEmbeddedClient_AuthorizeCurrentDevice_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceEmbeddedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_AuthorizeCurrentDevice_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_AuthorizeCurrentDevice_Request(CEmbeddedClient_AuthorizeCurrentDevice_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      appid_ = other.appid_;
      deviceInfo_ = other.deviceInfo_;
      deviceid_ = other.deviceid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_AuthorizeCurrentDevice_Request Clone() {
      return new CEmbeddedClient_AuthorizeCurrentDevice_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 3;
    private readonly static string DeviceInfoDefaultValue = "";

    private string deviceInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceInfo {
      get { return deviceInfo_ ?? DeviceInfoDefaultValue; }
      set {
        deviceInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceInfo {
      get { return deviceInfo_ != null; }
    }
    /// <summary>Clears the value of the "device_info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceInfo() {
      deviceInfo_ = null;
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 4;
    private readonly static uint DeviceidDefaultValue = 0;

    private uint deviceid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Deviceid {
      get { if ((_hasBits0 & 4) != 0) { return deviceid_; } else { return DeviceidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        deviceid_ = value;
      }
    }
    /// <summary>Gets whether the "deviceid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "deviceid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CEmbeddedClient_AuthorizeCurrentDevice_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CEmbeddedClient_AuthorizeCurrentDevice_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Appid != other.Appid) return false;
      if (DeviceInfo != other.DeviceInfo) return false;
      if (Deviceid != other.Deviceid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasDeviceInfo) hash ^= DeviceInfo.GetHashCode();
      if (HasDeviceid) hash ^= Deviceid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasDeviceInfo) {
        output.WriteRawTag(26);
        output.WriteString(DeviceInfo);
      }
      if (HasDeviceid) {
        output.WriteRawTag(32);
        output.WriteUInt32(Deviceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasDeviceInfo) {
        output.WriteRawTag(26);
        output.WriteString(DeviceInfo);
      }
      if (HasDeviceid) {
        output.WriteRawTag(32);
        output.WriteUInt32(Deviceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasDeviceInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceInfo);
      }
      if (HasDeviceid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deviceid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CEmbeddedClient_AuthorizeCurrentDevice_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasDeviceInfo) {
        DeviceInfo = other.DeviceInfo;
      }
      if (other.HasDeviceid) {
        Deviceid = other.Deviceid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 26: {
            DeviceInfo = input.ReadString();
            break;
          }
          case 32: {
            Deviceid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 26: {
            DeviceInfo = input.ReadString();
            break;
          }
          case 32: {
            Deviceid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CEmbeddedClient_AuthorizeDevice_Response : pb::IMessage<CEmbeddedClient_AuthorizeDevice_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CEmbeddedClient_AuthorizeDevice_Response> _parser = new pb::MessageParser<CEmbeddedClient_AuthorizeDevice_Response>(() => new CEmbeddedClient_AuthorizeDevice_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CEmbeddedClient_AuthorizeDevice_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceEmbeddedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_AuthorizeDevice_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_AuthorizeDevice_Response(CEmbeddedClient_AuthorizeDevice_Response other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      token_ = other.token_ != null ? other.token_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_AuthorizeDevice_Response Clone() {
      return new CEmbeddedClient_AuthorizeDevice_Response(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static uint ResultDefaultValue = 0;

    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CEmbeddedClient_AuthorizeDevice_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CEmbeddedClient_AuthorizeDevice_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Token, other.Token)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (token_ != null) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Result);
      }
      if (token_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Result);
      }
      if (token_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Result);
      }
      if (token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CEmbeddedClient_AuthorizeDevice_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.token_ != null) {
        if (token_ == null) {
          Token = new global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token();
        }
        Token.MergeFrom(other.Token);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadUInt32();
            break;
          }
          case 18: {
            if (token_ == null) {
              Token = new global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token();
            }
            input.ReadMessage(Token);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadUInt32();
            break;
          }
          case 18: {
            if (token_ == null) {
              Token = new global::OpenSteamworks.Protobuf.WebUI.CEmbeddedClient_Token();
            }
            input.ReadMessage(Token);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CEmbeddedClient_Token : pb::IMessage<CEmbeddedClient_Token>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CEmbeddedClient_Token> _parser = new pb::MessageParser<CEmbeddedClient_Token>(() => new CEmbeddedClient_Token());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CEmbeddedClient_Token> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceEmbeddedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_Token() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_Token(CEmbeddedClient_Token other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      clientToken_ = other.clientToken_;
      expiry_ = other.expiry_;
      deviceid_ = other.deviceid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEmbeddedClient_Token Clone() {
      return new CEmbeddedClient_Token(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_token" field.</summary>
    public const int ClientTokenFieldNumber = 2;
    private readonly static pb::ByteString ClientTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString clientToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ClientToken {
      get { return clientToken_ ?? ClientTokenDefaultValue; }
      set {
        clientToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientToken {
      get { return clientToken_ != null; }
    }
    /// <summary>Clears the value of the "client_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientToken() {
      clientToken_ = null;
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 3;
    private readonly static uint ExpiryDefaultValue = 0;

    private uint expiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Expiry {
      get { if ((_hasBits0 & 2) != 0) { return expiry_; } else { return ExpiryDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expiry_ = value;
      }
    }
    /// <summary>Gets whether the "expiry" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpiry {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiry" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpiry() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 4;
    private readonly static uint DeviceidDefaultValue = 0;

    private uint deviceid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Deviceid {
      get { if ((_hasBits0 & 4) != 0) { return deviceid_; } else { return DeviceidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        deviceid_ = value;
      }
    }
    /// <summary>Gets whether the "deviceid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "deviceid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CEmbeddedClient_Token);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CEmbeddedClient_Token other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (ClientToken != other.ClientToken) return false;
      if (Expiry != other.Expiry) return false;
      if (Deviceid != other.Deviceid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasClientToken) hash ^= ClientToken.GetHashCode();
      if (HasExpiry) hash ^= Expiry.GetHashCode();
      if (HasDeviceid) hash ^= Deviceid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasClientToken) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientToken);
      }
      if (HasExpiry) {
        output.WriteRawTag(24);
        output.WriteUInt32(Expiry);
      }
      if (HasDeviceid) {
        output.WriteRawTag(32);
        output.WriteUInt32(Deviceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasClientToken) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientToken);
      }
      if (HasExpiry) {
        output.WriteRawTag(24);
        output.WriteUInt32(Expiry);
      }
      if (HasDeviceid) {
        output.WriteRawTag(32);
        output.WriteUInt32(Deviceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasClientToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientToken);
      }
      if (HasExpiry) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expiry);
      }
      if (HasDeviceid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deviceid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CEmbeddedClient_Token other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasClientToken) {
        ClientToken = other.ClientToken;
      }
      if (other.HasExpiry) {
        Expiry = other.Expiry;
      }
      if (other.HasDeviceid) {
        Deviceid = other.Deviceid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            ClientToken = input.ReadBytes();
            break;
          }
          case 24: {
            Expiry = input.ReadUInt32();
            break;
          }
          case 32: {
            Deviceid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            ClientToken = input.ReadBytes();
            break;
          }
          case 24: {
            Expiry = input.ReadUInt32();
            break;
          }
          case 32: {
            Deviceid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
