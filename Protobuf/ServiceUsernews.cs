// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_usernews.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_usernews.proto</summary>
  public static partial class ServiceUsernewsReflection {

    #region Descriptor
    /// <summary>File descriptor for service_usernews.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceUsernewsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZzZXJ2aWNlX3VzZXJuZXdzLnByb3RvGiBnb29nbGUvcHJvdG9idWYvZGVz",
            "Y3JpcHRvci5wcm90byKxAgoPQ1VzZXJOZXdzX0V2ZW50EhEKCWV2ZW50dHlw",
            "ZRgBIAEoDRIRCglldmVudHRpbWUYAiABKA0SFQoNc3RlYW1pZF9hY3RvchgD",
            "IAEoBhIWCg5zdGVhbWlkX3RhcmdldBgEIAEoBhIOCgZnYW1laWQYBSABKAYS",
            "EQoJcGFja2FnZWlkGAYgASgNEhIKCnNob3J0Y3V0aWQYByABKA0SGQoRYWNo",
            "aWV2ZW1lbnRfbmFtZXMYCCADKAkSFAoMY2xhbl9ldmVudGlkGAkgASgGEhsK",
            "E2NsYW5fYW5ub3VuY2VtZW50aWQYCiABKAYSFwoPcHVibGlzaGVkZmlsZWlk",
            "GAsgASgGEhsKE2V2ZW50X2xhc3RfbW9kX3RpbWUYDCABKA0SDgoGYXBwaWRz",
            "GA0gAygNIlcKKENVc2VyTmV3c19HZXRBcHBEZXRhaWxzU3BvdGxpZ2h0X1Jl",
            "cXVlc3QSDQoFYXBwaWQYASABKA0SHAoUaW5jbHVkZV9hbHJlYWR5X3NlZW4Y",
            "AiABKAgidQopQ1VzZXJOZXdzX0dldEFwcERldGFpbHNTcG90bGlnaHRfUmVz",
            "cG9uc2USSAoGZXZlbnRzGAEgAygLMjguQ1VzZXJOZXdzX0dldEFwcERldGFp",
            "bHNTcG90bGlnaHRfUmVzcG9uc2VfRmVhdHVyZWRFdmVudCK9AQo3Q1VzZXJO",
            "ZXdzX0dldEFwcERldGFpbHNTcG90bGlnaHRfUmVzcG9uc2VfRmVhdHVyZWRF",
            "dmVudBISCgpldmVudF90eXBlGAEgASgNEhIKCmV2ZW50X3RpbWUYAiABKA0S",
            "DwoHY2xhbl9pZBgDIAEoBhIbChNjbGFuX2Fubm91bmNlbWVudGlkGAQgASgG",
            "Eg0KBWFwcGlkGAUgASgNEh0KFXJ0aW1lMzJfbGFzdF9tb2RpZmllZBgGIAEo",
            "DSKOAQodQ1VzZXJOZXdzX0dldFVzZXJOZXdzX1JlcXVlc3QSDQoFY291bnQY",
            "ASABKA0SEQoJc3RhcnR0aW1lGAIgASgNEg8KB2VuZHRpbWUYAyABKA0SEAoI",
            "bGFuZ3VhZ2UYBCABKAkSEwoLZmlsdGVyZmxhZ3MYBSABKA0SEwoLZmlsdGVy",
            "YXBwaWQYBiABKA0ihAEKHkNVc2VyTmV3c19HZXRVc2VyTmV3c19SZXNwb25z",
            "ZRIeCgRuZXdzGAEgAygLMhAuQ1VzZXJOZXdzX0V2ZW50EkIKGGFjaGlldmVt",
            "ZW50X2Rpc3BsYXlfZGF0YRgCIAMoCzIgLkNVc2VyTmV3c0FjaGlldmVtZW50",
            "RGlzcGxheURhdGEidQofQ1VzZXJOZXdzQWNoaWV2ZW1lbnREaXNwbGF5RGF0",
            "YRINCgVhcHBpZBgBIAEoDRJDCgxhY2hpZXZlbWVudHMYAiADKAsyLS5DVXNl",
            "ck5ld3NBY2hpZXZlbWVudERpc3BsYXlEYXRhX0NBY2hpZXZlbWVudCKjAQos",
            "Q1VzZXJOZXdzQWNoaWV2ZW1lbnREaXNwbGF5RGF0YV9DQWNoaWV2ZW1lbnQS",
            "DAoEbmFtZRgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSGwoTZGlzcGxh",
            "eV9kZXNjcmlwdGlvbhgDIAEoCRIMCgRpY29uGAQgASgJEhQKDHVubG9ja2Vk",
            "X3BjdBgFIAEoAhIOCgZoaWRkZW4YBiABKAgyywEKCFVzZXJOZXdzEm8KFkdl",
            "dEFwcERldGFpbHNTcG90bGlnaHQSKS5DVXNlck5ld3NfR2V0QXBwRGV0YWls",
            "c1Nwb3RsaWdodF9SZXF1ZXN0GiouQ1VzZXJOZXdzX0dldEFwcERldGFpbHNT",
            "cG90bGlnaHRfUmVzcG9uc2USTgoLR2V0VXNlck5ld3MSHi5DVXNlck5ld3Nf",
            "R2V0VXNlck5ld3NfUmVxdWVzdBofLkNVc2VyTmV3c19HZXRVc2VyTmV3c19S",
            "ZXNwb25zZUIgqgIdT3BlblN0ZWFtd29ya3MuUHJvdG9idWYuV2ViVUk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event), global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event.Parser, new[]{ "Eventtype", "Eventtime", "SteamidActor", "SteamidTarget", "Gameid", "Packageid", "Shortcutid", "AchievementNames", "ClanEventid", "ClanAnnouncementid", "Publishedfileid", "EventLastModTime", "Appids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Request), global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Request.Parser, new[]{ "Appid", "IncludeAlreadySeen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response), global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response.Parser, new[]{ "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent), global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent.Parser, new[]{ "EventType", "EventTime", "ClanId", "ClanAnnouncementid", "Appid", "Rtime32LastModified" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetUserNews_Request), global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetUserNews_Request.Parser, new[]{ "Count", "Starttime", "Endtime", "Language", "Filterflags", "Filterappid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetUserNews_Response), global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetUserNews_Response.Parser, new[]{ "News", "AchievementDisplayData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData), global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData.Parser, new[]{ "Appid", "Achievements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement), global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement.Parser, new[]{ "Name", "DisplayName", "DisplayDescription", "Icon", "UnlockedPct", "Hidden" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNews_Event : pb::IMessage<CUserNews_Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNews_Event> _parser = new pb::MessageParser<CUserNews_Event>(() => new CUserNews_Event());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNews_Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_Event(CUserNews_Event other) : this() {
      _hasBits0 = other._hasBits0;
      eventtype_ = other.eventtype_;
      eventtime_ = other.eventtime_;
      steamidActor_ = other.steamidActor_;
      steamidTarget_ = other.steamidTarget_;
      gameid_ = other.gameid_;
      packageid_ = other.packageid_;
      shortcutid_ = other.shortcutid_;
      achievementNames_ = other.achievementNames_.Clone();
      clanEventid_ = other.clanEventid_;
      clanAnnouncementid_ = other.clanAnnouncementid_;
      publishedfileid_ = other.publishedfileid_;
      eventLastModTime_ = other.eventLastModTime_;
      appids_ = other.appids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_Event Clone() {
      return new CUserNews_Event(this);
    }

    /// <summary>Field number for the "eventtype" field.</summary>
    public const int EventtypeFieldNumber = 1;
    private readonly static uint EventtypeDefaultValue = 0;

    private uint eventtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Eventtype {
      get { if ((_hasBits0 & 1) != 0) { return eventtype_; } else { return EventtypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        eventtype_ = value;
      }
    }
    /// <summary>Gets whether the "eventtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventtype {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "eventtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventtype() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "eventtime" field.</summary>
    public const int EventtimeFieldNumber = 2;
    private readonly static uint EventtimeDefaultValue = 0;

    private uint eventtime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Eventtime {
      get { if ((_hasBits0 & 2) != 0) { return eventtime_; } else { return EventtimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        eventtime_ = value;
      }
    }
    /// <summary>Gets whether the "eventtime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventtime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "eventtime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventtime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "steamid_actor" field.</summary>
    public const int SteamidActorFieldNumber = 3;
    private readonly static ulong SteamidActorDefaultValue = 0UL;

    private ulong steamidActor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SteamidActor {
      get { if ((_hasBits0 & 4) != 0) { return steamidActor_; } else { return SteamidActorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        steamidActor_ = value;
      }
    }
    /// <summary>Gets whether the "steamid_actor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamidActor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "steamid_actor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamidActor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "steamid_target" field.</summary>
    public const int SteamidTargetFieldNumber = 4;
    private readonly static ulong SteamidTargetDefaultValue = 0UL;

    private ulong steamidTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SteamidTarget {
      get { if ((_hasBits0 & 8) != 0) { return steamidTarget_; } else { return SteamidTargetDefaultValue; } }
      set {
        _hasBits0 |= 8;
        steamidTarget_ = value;
      }
    }
    /// <summary>Gets whether the "steamid_target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamidTarget {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "steamid_target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamidTarget() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 5;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 16) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "packageid" field.</summary>
    public const int PackageidFieldNumber = 6;
    private readonly static uint PackageidDefaultValue = 0;

    private uint packageid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Packageid {
      get { if ((_hasBits0 & 32) != 0) { return packageid_; } else { return PackageidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        packageid_ = value;
      }
    }
    /// <summary>Gets whether the "packageid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPackageid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "packageid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPackageid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "shortcutid" field.</summary>
    public const int ShortcutidFieldNumber = 7;
    private readonly static uint ShortcutidDefaultValue = 0;

    private uint shortcutid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Shortcutid {
      get { if ((_hasBits0 & 64) != 0) { return shortcutid_; } else { return ShortcutidDefaultValue; } }
      set {
        _hasBits0 |= 64;
        shortcutid_ = value;
      }
    }
    /// <summary>Gets whether the "shortcutid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShortcutid {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "shortcutid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShortcutid() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "achievement_names" field.</summary>
    public const int AchievementNamesFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_achievementNames_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> achievementNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AchievementNames {
      get { return achievementNames_; }
    }

    /// <summary>Field number for the "clan_eventid" field.</summary>
    public const int ClanEventidFieldNumber = 9;
    private readonly static ulong ClanEventidDefaultValue = 0UL;

    private ulong clanEventid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClanEventid {
      get { if ((_hasBits0 & 128) != 0) { return clanEventid_; } else { return ClanEventidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        clanEventid_ = value;
      }
    }
    /// <summary>Gets whether the "clan_eventid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClanEventid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "clan_eventid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClanEventid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "clan_announcementid" field.</summary>
    public const int ClanAnnouncementidFieldNumber = 10;
    private readonly static ulong ClanAnnouncementidDefaultValue = 0UL;

    private ulong clanAnnouncementid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClanAnnouncementid {
      get { if ((_hasBits0 & 256) != 0) { return clanAnnouncementid_; } else { return ClanAnnouncementidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        clanAnnouncementid_ = value;
      }
    }
    /// <summary>Gets whether the "clan_announcementid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClanAnnouncementid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "clan_announcementid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClanAnnouncementid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "publishedfileid" field.</summary>
    public const int PublishedfileidFieldNumber = 11;
    private readonly static ulong PublishedfileidDefaultValue = 0UL;

    private ulong publishedfileid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Publishedfileid {
      get { if ((_hasBits0 & 512) != 0) { return publishedfileid_; } else { return PublishedfileidDefaultValue; } }
      set {
        _hasBits0 |= 512;
        publishedfileid_ = value;
      }
    }
    /// <summary>Gets whether the "publishedfileid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPublishedfileid {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "publishedfileid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPublishedfileid() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "event_last_mod_time" field.</summary>
    public const int EventLastModTimeFieldNumber = 12;
    private readonly static uint EventLastModTimeDefaultValue = 0;

    private uint eventLastModTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventLastModTime {
      get { if ((_hasBits0 & 1024) != 0) { return eventLastModTime_; } else { return EventLastModTimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        eventLastModTime_ = value;
      }
    }
    /// <summary>Gets whether the "event_last_mod_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventLastModTime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "event_last_mod_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventLastModTime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "appids" field.</summary>
    public const int AppidsFieldNumber = 13;
    private static readonly pb::FieldCodec<uint> _repeated_appids_codec
        = pb::FieldCodec.ForUInt32(104);
    private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Appids {
      get { return appids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNews_Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNews_Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eventtype != other.Eventtype) return false;
      if (Eventtime != other.Eventtime) return false;
      if (SteamidActor != other.SteamidActor) return false;
      if (SteamidTarget != other.SteamidTarget) return false;
      if (Gameid != other.Gameid) return false;
      if (Packageid != other.Packageid) return false;
      if (Shortcutid != other.Shortcutid) return false;
      if(!achievementNames_.Equals(other.achievementNames_)) return false;
      if (ClanEventid != other.ClanEventid) return false;
      if (ClanAnnouncementid != other.ClanAnnouncementid) return false;
      if (Publishedfileid != other.Publishedfileid) return false;
      if (EventLastModTime != other.EventLastModTime) return false;
      if(!appids_.Equals(other.appids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEventtype) hash ^= Eventtype.GetHashCode();
      if (HasEventtime) hash ^= Eventtime.GetHashCode();
      if (HasSteamidActor) hash ^= SteamidActor.GetHashCode();
      if (HasSteamidTarget) hash ^= SteamidTarget.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (HasPackageid) hash ^= Packageid.GetHashCode();
      if (HasShortcutid) hash ^= Shortcutid.GetHashCode();
      hash ^= achievementNames_.GetHashCode();
      if (HasClanEventid) hash ^= ClanEventid.GetHashCode();
      if (HasClanAnnouncementid) hash ^= ClanAnnouncementid.GetHashCode();
      if (HasPublishedfileid) hash ^= Publishedfileid.GetHashCode();
      if (HasEventLastModTime) hash ^= EventLastModTime.GetHashCode();
      hash ^= appids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEventtype) {
        output.WriteRawTag(8);
        output.WriteUInt32(Eventtype);
      }
      if (HasEventtime) {
        output.WriteRawTag(16);
        output.WriteUInt32(Eventtime);
      }
      if (HasSteamidActor) {
        output.WriteRawTag(25);
        output.WriteFixed64(SteamidActor);
      }
      if (HasSteamidTarget) {
        output.WriteRawTag(33);
        output.WriteFixed64(SteamidTarget);
      }
      if (HasGameid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Gameid);
      }
      if (HasPackageid) {
        output.WriteRawTag(48);
        output.WriteUInt32(Packageid);
      }
      if (HasShortcutid) {
        output.WriteRawTag(56);
        output.WriteUInt32(Shortcutid);
      }
      achievementNames_.WriteTo(output, _repeated_achievementNames_codec);
      if (HasClanEventid) {
        output.WriteRawTag(73);
        output.WriteFixed64(ClanEventid);
      }
      if (HasClanAnnouncementid) {
        output.WriteRawTag(81);
        output.WriteFixed64(ClanAnnouncementid);
      }
      if (HasPublishedfileid) {
        output.WriteRawTag(89);
        output.WriteFixed64(Publishedfileid);
      }
      if (HasEventLastModTime) {
        output.WriteRawTag(96);
        output.WriteUInt32(EventLastModTime);
      }
      appids_.WriteTo(output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEventtype) {
        output.WriteRawTag(8);
        output.WriteUInt32(Eventtype);
      }
      if (HasEventtime) {
        output.WriteRawTag(16);
        output.WriteUInt32(Eventtime);
      }
      if (HasSteamidActor) {
        output.WriteRawTag(25);
        output.WriteFixed64(SteamidActor);
      }
      if (HasSteamidTarget) {
        output.WriteRawTag(33);
        output.WriteFixed64(SteamidTarget);
      }
      if (HasGameid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Gameid);
      }
      if (HasPackageid) {
        output.WriteRawTag(48);
        output.WriteUInt32(Packageid);
      }
      if (HasShortcutid) {
        output.WriteRawTag(56);
        output.WriteUInt32(Shortcutid);
      }
      achievementNames_.WriteTo(ref output, _repeated_achievementNames_codec);
      if (HasClanEventid) {
        output.WriteRawTag(73);
        output.WriteFixed64(ClanEventid);
      }
      if (HasClanAnnouncementid) {
        output.WriteRawTag(81);
        output.WriteFixed64(ClanAnnouncementid);
      }
      if (HasPublishedfileid) {
        output.WriteRawTag(89);
        output.WriteFixed64(Publishedfileid);
      }
      if (HasEventLastModTime) {
        output.WriteRawTag(96);
        output.WriteUInt32(EventLastModTime);
      }
      appids_.WriteTo(ref output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEventtype) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eventtype);
      }
      if (HasEventtime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eventtime);
      }
      if (HasSteamidActor) {
        size += 1 + 8;
      }
      if (HasSteamidTarget) {
        size += 1 + 8;
      }
      if (HasGameid) {
        size += 1 + 8;
      }
      if (HasPackageid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Packageid);
      }
      if (HasShortcutid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Shortcutid);
      }
      size += achievementNames_.CalculateSize(_repeated_achievementNames_codec);
      if (HasClanEventid) {
        size += 1 + 8;
      }
      if (HasClanAnnouncementid) {
        size += 1 + 8;
      }
      if (HasPublishedfileid) {
        size += 1 + 8;
      }
      if (HasEventLastModTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventLastModTime);
      }
      size += appids_.CalculateSize(_repeated_appids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNews_Event other) {
      if (other == null) {
        return;
      }
      if (other.HasEventtype) {
        Eventtype = other.Eventtype;
      }
      if (other.HasEventtime) {
        Eventtime = other.Eventtime;
      }
      if (other.HasSteamidActor) {
        SteamidActor = other.SteamidActor;
      }
      if (other.HasSteamidTarget) {
        SteamidTarget = other.SteamidTarget;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      if (other.HasPackageid) {
        Packageid = other.Packageid;
      }
      if (other.HasShortcutid) {
        Shortcutid = other.Shortcutid;
      }
      achievementNames_.Add(other.achievementNames_);
      if (other.HasClanEventid) {
        ClanEventid = other.ClanEventid;
      }
      if (other.HasClanAnnouncementid) {
        ClanAnnouncementid = other.ClanAnnouncementid;
      }
      if (other.HasPublishedfileid) {
        Publishedfileid = other.Publishedfileid;
      }
      if (other.HasEventLastModTime) {
        EventLastModTime = other.EventLastModTime;
      }
      appids_.Add(other.appids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eventtype = input.ReadUInt32();
            break;
          }
          case 16: {
            Eventtime = input.ReadUInt32();
            break;
          }
          case 25: {
            SteamidActor = input.ReadFixed64();
            break;
          }
          case 33: {
            SteamidTarget = input.ReadFixed64();
            break;
          }
          case 41: {
            Gameid = input.ReadFixed64();
            break;
          }
          case 48: {
            Packageid = input.ReadUInt32();
            break;
          }
          case 56: {
            Shortcutid = input.ReadUInt32();
            break;
          }
          case 66: {
            achievementNames_.AddEntriesFrom(input, _repeated_achievementNames_codec);
            break;
          }
          case 73: {
            ClanEventid = input.ReadFixed64();
            break;
          }
          case 81: {
            ClanAnnouncementid = input.ReadFixed64();
            break;
          }
          case 89: {
            Publishedfileid = input.ReadFixed64();
            break;
          }
          case 96: {
            EventLastModTime = input.ReadUInt32();
            break;
          }
          case 106:
          case 104: {
            appids_.AddEntriesFrom(input, _repeated_appids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eventtype = input.ReadUInt32();
            break;
          }
          case 16: {
            Eventtime = input.ReadUInt32();
            break;
          }
          case 25: {
            SteamidActor = input.ReadFixed64();
            break;
          }
          case 33: {
            SteamidTarget = input.ReadFixed64();
            break;
          }
          case 41: {
            Gameid = input.ReadFixed64();
            break;
          }
          case 48: {
            Packageid = input.ReadUInt32();
            break;
          }
          case 56: {
            Shortcutid = input.ReadUInt32();
            break;
          }
          case 66: {
            achievementNames_.AddEntriesFrom(ref input, _repeated_achievementNames_codec);
            break;
          }
          case 73: {
            ClanEventid = input.ReadFixed64();
            break;
          }
          case 81: {
            ClanAnnouncementid = input.ReadFixed64();
            break;
          }
          case 89: {
            Publishedfileid = input.ReadFixed64();
            break;
          }
          case 96: {
            EventLastModTime = input.ReadUInt32();
            break;
          }
          case 106:
          case 104: {
            appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNews_GetAppDetailsSpotlight_Request : pb::IMessage<CUserNews_GetAppDetailsSpotlight_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Request> _parser = new pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Request>(() => new CUserNews_GetAppDetailsSpotlight_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Request(CUserNews_GetAppDetailsSpotlight_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      includeAlreadySeen_ = other.includeAlreadySeen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Request Clone() {
      return new CUserNews_GetAppDetailsSpotlight_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "include_already_seen" field.</summary>
    public const int IncludeAlreadySeenFieldNumber = 2;
    private readonly static bool IncludeAlreadySeenDefaultValue = false;

    private bool includeAlreadySeen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeAlreadySeen {
      get { if ((_hasBits0 & 2) != 0) { return includeAlreadySeen_; } else { return IncludeAlreadySeenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        includeAlreadySeen_ = value;
      }
    }
    /// <summary>Gets whether the "include_already_seen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeAlreadySeen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "include_already_seen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeAlreadySeen() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNews_GetAppDetailsSpotlight_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNews_GetAppDetailsSpotlight_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (IncludeAlreadySeen != other.IncludeAlreadySeen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasIncludeAlreadySeen) hash ^= IncludeAlreadySeen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIncludeAlreadySeen) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeAlreadySeen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIncludeAlreadySeen) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeAlreadySeen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasIncludeAlreadySeen) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNews_GetAppDetailsSpotlight_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasIncludeAlreadySeen) {
        IncludeAlreadySeen = other.IncludeAlreadySeen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            IncludeAlreadySeen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            IncludeAlreadySeen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNews_GetAppDetailsSpotlight_Response : pb::IMessage<CUserNews_GetAppDetailsSpotlight_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Response> _parser = new pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Response>(() => new CUserNews_GetAppDetailsSpotlight_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Response(CUserNews_GetAppDetailsSpotlight_Response other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Response Clone() {
      return new CUserNews_GetAppDetailsSpotlight_Response(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent> events_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNews_GetAppDetailsSpotlight_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNews_GetAppDetailsSpotlight_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      events_.WriteTo(ref output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNews_GetAppDetailsSpotlight_Response other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent : pb::IMessage<CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent> _parser = new pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent>(() => new CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent(CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent other) : this() {
      _hasBits0 = other._hasBits0;
      eventType_ = other.eventType_;
      eventTime_ = other.eventTime_;
      clanId_ = other.clanId_;
      clanAnnouncementid_ = other.clanAnnouncementid_;
      appid_ = other.appid_;
      rtime32LastModified_ = other.rtime32LastModified_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent Clone() {
      return new CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent(this);
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private readonly static uint EventTypeDefaultValue = 0;

    private uint eventType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventType {
      get { if ((_hasBits0 & 1) != 0) { return eventType_; } else { return EventTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        eventType_ = value;
      }
    }
    /// <summary>Gets whether the "event_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "event_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "event_time" field.</summary>
    public const int EventTimeFieldNumber = 2;
    private readonly static uint EventTimeDefaultValue = 0;

    private uint eventTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventTime {
      get { if ((_hasBits0 & 2) != 0) { return eventTime_; } else { return EventTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        eventTime_ = value;
      }
    }
    /// <summary>Gets whether the "event_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "event_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clan_id" field.</summary>
    public const int ClanIdFieldNumber = 3;
    private readonly static ulong ClanIdDefaultValue = 0UL;

    private ulong clanId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClanId {
      get { if ((_hasBits0 & 4) != 0) { return clanId_; } else { return ClanIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clanId_ = value;
      }
    }
    /// <summary>Gets whether the "clan_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClanId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clan_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClanId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clan_announcementid" field.</summary>
    public const int ClanAnnouncementidFieldNumber = 4;
    private readonly static ulong ClanAnnouncementidDefaultValue = 0UL;

    private ulong clanAnnouncementid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClanAnnouncementid {
      get { if ((_hasBits0 & 8) != 0) { return clanAnnouncementid_; } else { return ClanAnnouncementidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clanAnnouncementid_ = value;
      }
    }
    /// <summary>Gets whether the "clan_announcementid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClanAnnouncementid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clan_announcementid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClanAnnouncementid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 5;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 16) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "rtime32_last_modified" field.</summary>
    public const int Rtime32LastModifiedFieldNumber = 6;
    private readonly static uint Rtime32LastModifiedDefaultValue = 0;

    private uint rtime32LastModified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rtime32LastModified {
      get { if ((_hasBits0 & 32) != 0) { return rtime32LastModified_; } else { return Rtime32LastModifiedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        rtime32LastModified_ = value;
      }
    }
    /// <summary>Gets whether the "rtime32_last_modified" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRtime32LastModified {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "rtime32_last_modified" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRtime32LastModified() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (EventTime != other.EventTime) return false;
      if (ClanId != other.ClanId) return false;
      if (ClanAnnouncementid != other.ClanAnnouncementid) return false;
      if (Appid != other.Appid) return false;
      if (Rtime32LastModified != other.Rtime32LastModified) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEventType) hash ^= EventType.GetHashCode();
      if (HasEventTime) hash ^= EventTime.GetHashCode();
      if (HasClanId) hash ^= ClanId.GetHashCode();
      if (HasClanAnnouncementid) hash ^= ClanAnnouncementid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasRtime32LastModified) hash ^= Rtime32LastModified.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEventType) {
        output.WriteRawTag(8);
        output.WriteUInt32(EventType);
      }
      if (HasEventTime) {
        output.WriteRawTag(16);
        output.WriteUInt32(EventTime);
      }
      if (HasClanId) {
        output.WriteRawTag(25);
        output.WriteFixed64(ClanId);
      }
      if (HasClanAnnouncementid) {
        output.WriteRawTag(33);
        output.WriteFixed64(ClanAnnouncementid);
      }
      if (HasAppid) {
        output.WriteRawTag(40);
        output.WriteUInt32(Appid);
      }
      if (HasRtime32LastModified) {
        output.WriteRawTag(48);
        output.WriteUInt32(Rtime32LastModified);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEventType) {
        output.WriteRawTag(8);
        output.WriteUInt32(EventType);
      }
      if (HasEventTime) {
        output.WriteRawTag(16);
        output.WriteUInt32(EventTime);
      }
      if (HasClanId) {
        output.WriteRawTag(25);
        output.WriteFixed64(ClanId);
      }
      if (HasClanAnnouncementid) {
        output.WriteRawTag(33);
        output.WriteFixed64(ClanAnnouncementid);
      }
      if (HasAppid) {
        output.WriteRawTag(40);
        output.WriteUInt32(Appid);
      }
      if (HasRtime32LastModified) {
        output.WriteRawTag(48);
        output.WriteUInt32(Rtime32LastModified);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEventType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventType);
      }
      if (HasEventTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventTime);
      }
      if (HasClanId) {
        size += 1 + 8;
      }
      if (HasClanAnnouncementid) {
        size += 1 + 8;
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasRtime32LastModified) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32LastModified);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasEventType) {
        EventType = other.EventType;
      }
      if (other.HasEventTime) {
        EventTime = other.EventTime;
      }
      if (other.HasClanId) {
        ClanId = other.ClanId;
      }
      if (other.HasClanAnnouncementid) {
        ClanAnnouncementid = other.ClanAnnouncementid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasRtime32LastModified) {
        Rtime32LastModified = other.Rtime32LastModified;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = input.ReadUInt32();
            break;
          }
          case 16: {
            EventTime = input.ReadUInt32();
            break;
          }
          case 25: {
            ClanId = input.ReadFixed64();
            break;
          }
          case 33: {
            ClanAnnouncementid = input.ReadFixed64();
            break;
          }
          case 40: {
            Appid = input.ReadUInt32();
            break;
          }
          case 48: {
            Rtime32LastModified = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EventType = input.ReadUInt32();
            break;
          }
          case 16: {
            EventTime = input.ReadUInt32();
            break;
          }
          case 25: {
            ClanId = input.ReadFixed64();
            break;
          }
          case 33: {
            ClanAnnouncementid = input.ReadFixed64();
            break;
          }
          case 40: {
            Appid = input.ReadUInt32();
            break;
          }
          case 48: {
            Rtime32LastModified = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNews_GetUserNews_Request : pb::IMessage<CUserNews_GetUserNews_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNews_GetUserNews_Request> _parser = new pb::MessageParser<CUserNews_GetUserNews_Request>(() => new CUserNews_GetUserNews_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNews_GetUserNews_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetUserNews_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetUserNews_Request(CUserNews_GetUserNews_Request other) : this() {
      _hasBits0 = other._hasBits0;
      count_ = other.count_;
      starttime_ = other.starttime_;
      endtime_ = other.endtime_;
      language_ = other.language_;
      filterflags_ = other.filterflags_;
      filterappid_ = other.filterappid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetUserNews_Request Clone() {
      return new CUserNews_GetUserNews_Request(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private readonly static uint CountDefaultValue = 0;

    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "starttime" field.</summary>
    public const int StarttimeFieldNumber = 2;
    private readonly static uint StarttimeDefaultValue = 0;

    private uint starttime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Starttime {
      get { if ((_hasBits0 & 2) != 0) { return starttime_; } else { return StarttimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        starttime_ = value;
      }
    }
    /// <summary>Gets whether the "starttime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStarttime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "starttime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStarttime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "endtime" field.</summary>
    public const int EndtimeFieldNumber = 3;
    private readonly static uint EndtimeDefaultValue = 0;

    private uint endtime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Endtime {
      get { if ((_hasBits0 & 4) != 0) { return endtime_; } else { return EndtimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        endtime_ = value;
      }
    }
    /// <summary>Gets whether the "endtime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndtime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "endtime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndtime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 4;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    /// <summary>Field number for the "filterflags" field.</summary>
    public const int FilterflagsFieldNumber = 5;
    private readonly static uint FilterflagsDefaultValue = 0;

    private uint filterflags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Filterflags {
      get { if ((_hasBits0 & 8) != 0) { return filterflags_; } else { return FilterflagsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        filterflags_ = value;
      }
    }
    /// <summary>Gets whether the "filterflags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilterflags {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "filterflags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilterflags() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "filterappid" field.</summary>
    public const int FilterappidFieldNumber = 6;
    private readonly static uint FilterappidDefaultValue = 0;

    private uint filterappid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Filterappid {
      get { if ((_hasBits0 & 16) != 0) { return filterappid_; } else { return FilterappidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        filterappid_ = value;
      }
    }
    /// <summary>Gets whether the "filterappid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilterappid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "filterappid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilterappid() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNews_GetUserNews_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNews_GetUserNews_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (Starttime != other.Starttime) return false;
      if (Endtime != other.Endtime) return false;
      if (Language != other.Language) return false;
      if (Filterflags != other.Filterflags) return false;
      if (Filterappid != other.Filterappid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasStarttime) hash ^= Starttime.GetHashCode();
      if (HasEndtime) hash ^= Endtime.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (HasFilterflags) hash ^= Filterflags.GetHashCode();
      if (HasFilterappid) hash ^= Filterappid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(Count);
      }
      if (HasStarttime) {
        output.WriteRawTag(16);
        output.WriteUInt32(Starttime);
      }
      if (HasEndtime) {
        output.WriteRawTag(24);
        output.WriteUInt32(Endtime);
      }
      if (HasLanguage) {
        output.WriteRawTag(34);
        output.WriteString(Language);
      }
      if (HasFilterflags) {
        output.WriteRawTag(40);
        output.WriteUInt32(Filterflags);
      }
      if (HasFilterappid) {
        output.WriteRawTag(48);
        output.WriteUInt32(Filterappid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(Count);
      }
      if (HasStarttime) {
        output.WriteRawTag(16);
        output.WriteUInt32(Starttime);
      }
      if (HasEndtime) {
        output.WriteRawTag(24);
        output.WriteUInt32(Endtime);
      }
      if (HasLanguage) {
        output.WriteRawTag(34);
        output.WriteString(Language);
      }
      if (HasFilterflags) {
        output.WriteRawTag(40);
        output.WriteUInt32(Filterflags);
      }
      if (HasFilterappid) {
        output.WriteRawTag(48);
        output.WriteUInt32(Filterappid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (HasStarttime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Starttime);
      }
      if (HasEndtime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Endtime);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (HasFilterflags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Filterflags);
      }
      if (HasFilterappid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Filterappid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNews_GetUserNews_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasStarttime) {
        Starttime = other.Starttime;
      }
      if (other.HasEndtime) {
        Endtime = other.Endtime;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      if (other.HasFilterflags) {
        Filterflags = other.Filterflags;
      }
      if (other.HasFilterappid) {
        Filterappid = other.Filterappid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadUInt32();
            break;
          }
          case 16: {
            Starttime = input.ReadUInt32();
            break;
          }
          case 24: {
            Endtime = input.ReadUInt32();
            break;
          }
          case 34: {
            Language = input.ReadString();
            break;
          }
          case 40: {
            Filterflags = input.ReadUInt32();
            break;
          }
          case 48: {
            Filterappid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadUInt32();
            break;
          }
          case 16: {
            Starttime = input.ReadUInt32();
            break;
          }
          case 24: {
            Endtime = input.ReadUInt32();
            break;
          }
          case 34: {
            Language = input.ReadString();
            break;
          }
          case 40: {
            Filterflags = input.ReadUInt32();
            break;
          }
          case 48: {
            Filterappid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNews_GetUserNews_Response : pb::IMessage<CUserNews_GetUserNews_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNews_GetUserNews_Response> _parser = new pb::MessageParser<CUserNews_GetUserNews_Response>(() => new CUserNews_GetUserNews_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNews_GetUserNews_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetUserNews_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetUserNews_Response(CUserNews_GetUserNews_Response other) : this() {
      news_ = other.news_.Clone();
      achievementDisplayData_ = other.achievementDisplayData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNews_GetUserNews_Response Clone() {
      return new CUserNews_GetUserNews_Response(this);
    }

    /// <summary>Field number for the "news" field.</summary>
    public const int NewsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event> _repeated_news_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event> news_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNews_Event> News {
      get { return news_; }
    }

    /// <summary>Field number for the "achievement_display_data" field.</summary>
    public const int AchievementDisplayDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData> _repeated_achievementDisplayData_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData> achievementDisplayData_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData> AchievementDisplayData {
      get { return achievementDisplayData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNews_GetUserNews_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNews_GetUserNews_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!news_.Equals(other.news_)) return false;
      if(!achievementDisplayData_.Equals(other.achievementDisplayData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= news_.GetHashCode();
      hash ^= achievementDisplayData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      news_.WriteTo(output, _repeated_news_codec);
      achievementDisplayData_.WriteTo(output, _repeated_achievementDisplayData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      news_.WriteTo(ref output, _repeated_news_codec);
      achievementDisplayData_.WriteTo(ref output, _repeated_achievementDisplayData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += news_.CalculateSize(_repeated_news_codec);
      size += achievementDisplayData_.CalculateSize(_repeated_achievementDisplayData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNews_GetUserNews_Response other) {
      if (other == null) {
        return;
      }
      news_.Add(other.news_);
      achievementDisplayData_.Add(other.achievementDisplayData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            news_.AddEntriesFrom(input, _repeated_news_codec);
            break;
          }
          case 18: {
            achievementDisplayData_.AddEntriesFrom(input, _repeated_achievementDisplayData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            news_.AddEntriesFrom(ref input, _repeated_news_codec);
            break;
          }
          case 18: {
            achievementDisplayData_.AddEntriesFrom(ref input, _repeated_achievementDisplayData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNewsAchievementDisplayData : pb::IMessage<CUserNewsAchievementDisplayData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNewsAchievementDisplayData> _parser = new pb::MessageParser<CUserNewsAchievementDisplayData>(() => new CUserNewsAchievementDisplayData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNewsAchievementDisplayData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNewsAchievementDisplayData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNewsAchievementDisplayData(CUserNewsAchievementDisplayData other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      achievements_ = other.achievements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNewsAchievementDisplayData Clone() {
      return new CUserNewsAchievementDisplayData(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "achievements" field.</summary>
    public const int AchievementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement> _repeated_achievements_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement> achievements_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CUserNewsAchievementDisplayData_CAchievement> Achievements {
      get { return achievements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNewsAchievementDisplayData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNewsAchievementDisplayData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if(!achievements_.Equals(other.achievements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      hash ^= achievements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      achievements_.WriteTo(output, _repeated_achievements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      achievements_.WriteTo(ref output, _repeated_achievements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      size += achievements_.CalculateSize(_repeated_achievements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNewsAchievementDisplayData other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      achievements_.Add(other.achievements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            achievements_.AddEntriesFrom(input, _repeated_achievements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            achievements_.AddEntriesFrom(ref input, _repeated_achievements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CUserNewsAchievementDisplayData_CAchievement : pb::IMessage<CUserNewsAchievementDisplayData_CAchievement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CUserNewsAchievementDisplayData_CAchievement> _parser = new pb::MessageParser<CUserNewsAchievementDisplayData_CAchievement>(() => new CUserNewsAchievementDisplayData_CAchievement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CUserNewsAchievementDisplayData_CAchievement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceUsernewsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNewsAchievementDisplayData_CAchievement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNewsAchievementDisplayData_CAchievement(CUserNewsAchievementDisplayData_CAchievement other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      displayName_ = other.displayName_;
      displayDescription_ = other.displayDescription_;
      icon_ = other.icon_;
      unlockedPct_ = other.unlockedPct_;
      hidden_ = other.hidden_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CUserNewsAchievementDisplayData_CAchievement Clone() {
      return new CUserNewsAchievementDisplayData_CAchievement(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "display_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "display_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "display_description" field.</summary>
    public const int DisplayDescriptionFieldNumber = 3;
    private readonly static string DisplayDescriptionDefaultValue = "";

    private string displayDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayDescription {
      get { return displayDescription_ ?? DisplayDescriptionDefaultValue; }
      set {
        displayDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "display_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayDescription {
      get { return displayDescription_ != null; }
    }
    /// <summary>Clears the value of the "display_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayDescription() {
      displayDescription_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "unlocked_pct" field.</summary>
    public const int UnlockedPctFieldNumber = 5;
    private readonly static float UnlockedPctDefaultValue = 0F;

    private float unlockedPct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UnlockedPct {
      get { if ((_hasBits0 & 1) != 0) { return unlockedPct_; } else { return UnlockedPctDefaultValue; } }
      set {
        _hasBits0 |= 1;
        unlockedPct_ = value;
      }
    }
    /// <summary>Gets whether the "unlocked_pct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnlockedPct {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "unlocked_pct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnlockedPct() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 6;
    private readonly static bool HiddenDefaultValue = false;

    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hidden {
      get { if ((_hasBits0 & 2) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hidden_ = value;
      }
    }
    /// <summary>Gets whether the "hidden" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHidden {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hidden" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHidden() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CUserNewsAchievementDisplayData_CAchievement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CUserNewsAchievementDisplayData_CAchievement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (DisplayDescription != other.DisplayDescription) return false;
      if (Icon != other.Icon) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UnlockedPct, other.UnlockedPct)) return false;
      if (Hidden != other.Hidden) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (HasDisplayDescription) hash ^= DisplayDescription.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasUnlockedPct) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UnlockedPct);
      if (HasHidden) hash ^= Hidden.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDisplayName) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (HasDisplayDescription) {
        output.WriteRawTag(26);
        output.WriteString(DisplayDescription);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasUnlockedPct) {
        output.WriteRawTag(45);
        output.WriteFloat(UnlockedPct);
      }
      if (HasHidden) {
        output.WriteRawTag(48);
        output.WriteBool(Hidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDisplayName) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (HasDisplayDescription) {
        output.WriteRawTag(26);
        output.WriteString(DisplayDescription);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasUnlockedPct) {
        output.WriteRawTag(45);
        output.WriteFloat(UnlockedPct);
      }
      if (HasHidden) {
        output.WriteRawTag(48);
        output.WriteBool(Hidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (HasDisplayDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayDescription);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasUnlockedPct) {
        size += 1 + 4;
      }
      if (HasHidden) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CUserNewsAchievementDisplayData_CAchievement other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      if (other.HasDisplayDescription) {
        DisplayDescription = other.DisplayDescription;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasUnlockedPct) {
        UnlockedPct = other.UnlockedPct;
      }
      if (other.HasHidden) {
        Hidden = other.Hidden;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            DisplayDescription = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 45: {
            UnlockedPct = input.ReadFloat();
            break;
          }
          case 48: {
            Hidden = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            DisplayDescription = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 45: {
            UnlockedPct = input.ReadFloat();
            break;
          }
          case 48: {
            Hidden = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
