// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_player.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_player.steamclient.proto</summary>
  public static partial class SteammessagesPlayerSteamclientReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_player.steamclient.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesPlayerSteamclientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZzdGVhbW1lc3NhZ2VzX3BsYXllci5zdGVhbWNsaWVudC5wcm90bxogZ29v",
            "Z2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8aGHN0ZWFtbWVzc2FnZXNf",
            "YmFzZS5wcm90bxosc3RlYW1tZXNzYWdlc191bmlmaWVkX2Jhc2Uuc3RlYW1j",
            "bGllbnQucHJvdG8aC2VudW1zLnByb3RvIkQKMUNQbGF5ZXJfR2V0UmVjZW50",
            "UGxheXRpbWVTZXNzaW9uc0ZvckNoaWxkX1JlcXVlc3QSDwoHc3RlYW1pZBgB",
            "IAEoBCL+AQoyQ1BsYXllcl9HZXRSZWNlbnRQbGF5dGltZVNlc3Npb25zRm9y",
            "Q2hpbGRfUmVzcG9uc2USVQoIc2Vzc2lvbnMYASADKAsyQy5DUGxheWVyX0dl",
            "dFJlY2VudFBsYXl0aW1lU2Vzc2lvbnNGb3JDaGlsZF9SZXNwb25zZS5QbGF5",
            "dGltZVNlc3Npb24acQoPUGxheXRpbWVTZXNzaW9uEhIKCnRpbWVfc3RhcnQY",
            "ASABKA0SEAoIdGltZV9lbmQYAiABKA0SDQoFYXBwaWQYAyABKA0SEwoLZGV2",
            "aWNlX3R5cGUYBCABKA0SFAoMZGlzY29ubmVjdGVkGAUgASgIIjgKJENQbGF5",
            "ZXJfR2V0UGxheWVyTGlua0RldGFpbHNfUmVxdWVzdBIQCghzdGVhbWlkcxgB",
            "IAMoBCLFCQolQ1BsYXllcl9HZXRQbGF5ZXJMaW5rRGV0YWlsc19SZXNwb25z",
            "ZRJKCghhY2NvdW50cxgBIAMoCzI4LkNQbGF5ZXJfR2V0UGxheWVyTGlua0Rl",
            "dGFpbHNfUmVzcG9uc2UuUGxheWVyTGlua0RldGFpbHMazwgKEVBsYXllckxp",
            "bmtEZXRhaWxzEl8KC3B1YmxpY19kYXRhGAEgASgLMkouQ1BsYXllcl9HZXRQ",
            "bGF5ZXJMaW5rRGV0YWlsc19SZXNwb25zZS5QbGF5ZXJMaW5rRGV0YWlscy5B",
            "Y2NvdW50UHVibGljRGF0YRJhCgxwcml2YXRlX2RhdGEYAiABKAsySy5DUGxh",
            "eWVyX0dldFBsYXllckxpbmtEZXRhaWxzX1Jlc3BvbnNlLlBsYXllckxpbmtE",
            "ZXRhaWxzLkFjY291bnRQcml2YXRlRGF0YRqHAgoRQWNjb3VudFB1YmxpY0Rh",
            "dGESDwoHc3RlYW1pZBgBIAIoBhIYChB2aXNpYmlsaXR5X3N0YXRlGAIgASgF",
            "EhUKDXByaXZhY3lfc3RhdGUYAyABKAUSFQoNcHJvZmlsZV9zdGF0ZRgEIAEo",
            "BRIYChBiYW5fZXhwaXJlc190aW1lGAcgASgNEhUKDWFjY291bnRfZmxhZ3MY",
            "CCABKA0SGQoRc2hhX2RpZ2VzdF9hdmF0YXIYCSABKAwSFAoMcGVyc29uYV9u",
            "YW1lGAogASgJEhMKC3Byb2ZpbGVfdXJsGAsgASgJEiIKGmNvbnRlbnRfY291",
            "bnRyeV9yZXN0cmljdGVkGAwgASgIGusEChJBY2NvdW50UHJpdmF0ZURhdGES",
            "FQoNcGVyc29uYV9zdGF0ZRgBIAEoBRIbChNwZXJzb25hX3N0YXRlX2ZsYWdz",
            "GAIgASgNEhQKDHRpbWVfY3JlYXRlZBgDIAEoDRIPCgdnYW1lX2lkGAQgASgG",
            "EhwKFGdhbWVfc2VydmVyX3N0ZWFtX2lkGAUgASgGEh4KFmdhbWVfc2VydmVy",
            "X2lwX2FkZHJlc3MYBiABKA0SGAoQZ2FtZV9zZXJ2ZXJfcG9ydBgHIAEoDRIX",
            "Cg9nYW1lX2V4dHJhX2luZm8YCCABKAkSFAoMYWNjb3VudF9uYW1lGAkgASgJ",
            "EhYKDmxvYmJ5X3N0ZWFtX2lkGAogASgGEhgKEHJpY2hfcHJlc2VuY2Vfa3YY",
            "CyABKAkSHAoUYnJvYWRjYXN0X3Nlc3Npb25faWQYDCABKAYSJAocd2F0Y2hp",
            "bmdfYnJvYWRjYXN0X2FjY291bnRpZBgNIAEoDRIgChh3YXRjaGluZ19icm9h",
            "ZGNhc3RfYXBwaWQYDiABKA0SIgoad2F0Y2hpbmdfYnJvYWRjYXN0X3ZpZXdl",
            "cnMYDyABKA0SIAoYd2F0Y2hpbmdfYnJvYWRjYXN0X3RpdGxlGBAgASgJEhgK",
            "EGxhc3RfbG9nb2ZmX3RpbWUYESABKA0SGAoQbGFzdF9zZWVuX29ubGluZRgS",
            "IAEoDRIUCgxnYW1lX29zX3R5cGUYEyABKAUSGAoQZ2FtZV9kZXZpY2VfdHlw",
            "ZRgUIAEoBRIYChBnYW1lX2RldmljZV9uYW1lGBUgASgJEhcKD2dhbWVfaXNf",
            "cHJpdmF0ZRgWIAEoCCI0CjJDUGxheWVyX0dldE11dHVhbEZyaWVuZHNGb3JJ",
            "bmNvbWluZ0ludml0ZXNfUmVxdWVzdCJcCiZDUGxheWVyX0luY29taW5nSW52",
            "aXRlTXV0dWFsRnJpZW5kTGlzdBIPCgdzdGVhbWlkGAEgASgGEiEKGW11dHVh",
            "bF9mcmllbmRfYWNjb3VudF9pZHMYAiADKA0ijAEKM0NQbGF5ZXJfR2V0TXV0",
            "dWFsRnJpZW5kc0ZvckluY29taW5nSW52aXRlc19SZXNwb25zZRJVCiRpbmNv",
            "bWluZ19pbnZpdGVfbXV0dWFsX2ZyaWVuZHNfbGlzdHMYASADKAsyJy5DUGxh",
            "eWVyX0luY29taW5nSW52aXRlTXV0dWFsRnJpZW5kTGlzdCLzAQodQ1BsYXll",
            "cl9HZXRPd25lZEdhbWVzX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBBIXCg9p",
            "bmNsdWRlX2FwcGluZm8YAiABKAgSIQoZaW5jbHVkZV9wbGF5ZWRfZnJlZV9n",
            "YW1lcxgDIAEoCBIVCg1hcHBpZHNfZmlsdGVyGAQgAygNEhgKEGluY2x1ZGVf",
            "ZnJlZV9zdWIYBSABKAgSIAoSc2tpcF91bnZldHRlZF9hcHBzGAYgASgIOgR0",
            "cnVlEhAKCGxhbmd1YWdlGAcgASgJEiAKGGluY2x1ZGVfZXh0ZW5kZWRfYXBw",
            "aW5mbxgIIAEoCCK2BAoeQ1BsYXllcl9HZXRPd25lZEdhbWVzX1Jlc3BvbnNl",
            "EhIKCmdhbWVfY291bnQYASABKA0SMwoFZ2FtZXMYAiADKAsyJC5DUGxheWVy",
            "X0dldE93bmVkR2FtZXNfUmVzcG9uc2UuR2FtZRrKAwoER2FtZRINCgVhcHBp",
            "ZBgBIAEoBRIMCgRuYW1lGAIgASgJEhcKD3BsYXl0aW1lXzJ3ZWVrcxgDIAEo",
            "BRIYChBwbGF5dGltZV9mb3JldmVyGAQgASgFEhQKDGltZ19pY29uX3VybBgF",
            "IAEoCRIjChtoYXNfY29tbXVuaXR5X3Zpc2libGVfc3RhdHMYByABKAgSIAoY",
            "cGxheXRpbWVfd2luZG93c19mb3JldmVyGAggASgFEhwKFHBsYXl0aW1lX21h",
            "Y19mb3JldmVyGAkgASgFEh4KFnBsYXl0aW1lX2xpbnV4X2ZvcmV2ZXIYCiAB",
            "KAUSGQoRcnRpbWVfbGFzdF9wbGF5ZWQYCyABKA0SGAoQY2Fwc3VsZV9maWxl",
            "bmFtZRgMIAEoCRIPCgdzb3J0X2FzGA0gASgJEhQKDGhhc193b3Jrc2hvcBgO",
            "IAEoCBISCgpoYXNfbWFya2V0GA8gASgIEg8KB2hhc19kbGMYECABKAgSGAoQ",
            "aGFzX2xlYWRlcmJvYXJkcxgRIAEoCBIdChVjb250ZW50X2Rlc2NyaXB0b3Jp",
            "ZHMYEiADKA0SHQoVcGxheXRpbWVfZGlzY29ubmVjdGVkGBMgASgFIk0KG0NQ",
            "bGF5ZXJfR2V0UGxheU5leHRfUmVxdWVzdBIXCg9tYXhfYWdlX3NlY29uZHMY",
            "ASABKA0SFQoNaWdub3JlX2FwcGlkcxgCIAMoDSJIChxDUGxheWVyX0dldFBs",
            "YXlOZXh0X1Jlc3BvbnNlEhgKEGxhc3RfdXBkYXRlX3RpbWUYASABKA0SDgoG",
            "YXBwaWRzGAIgAygNIjcKJkNQbGF5ZXJfR2V0RnJpZW5kc0dhbWVwbGF5SW5m",
            "b19SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNIu4FCidDUGxheWVyX0dldEZyaWVu",
            "ZHNHYW1lcGxheUluZm9fUmVzcG9uc2USSwoJeW91cl9pbmZvGAEgASgLMjgu",
            "Q1BsYXllcl9HZXRGcmllbmRzR2FtZXBsYXlJbmZvX1Jlc3BvbnNlLk93bkdh",
            "bWVwbGF5SW5mbxJNCgdpbl9nYW1lGAIgAygLMjwuQ1BsYXllcl9HZXRGcmll",
            "bmRzR2FtZXBsYXlJbmZvX1Jlc3BvbnNlLkZyaWVuZHNHYW1lcGxheUluZm8S",
            "VQoPcGxheWVkX3JlY2VudGx5GAMgAygLMjwuQ1BsYXllcl9HZXRGcmllbmRz",
            "R2FtZXBsYXlJbmZvX1Jlc3BvbnNlLkZyaWVuZHNHYW1lcGxheUluZm8SUQoL",
            "cGxheWVkX2V2ZXIYBCADKAsyPC5DUGxheWVyX0dldEZyaWVuZHNHYW1lcGxh",
            "eUluZm9fUmVzcG9uc2UuRnJpZW5kc0dhbWVwbGF5SW5mbxJKCgRvd25zGAUg",
            "AygLMjwuQ1BsYXllcl9HZXRGcmllbmRzR2FtZXBsYXlJbmZvX1Jlc3BvbnNl",
            "LkZyaWVuZHNHYW1lcGxheUluZm8SUQoLaW5fd2lzaGxpc3QYBiADKAsyPC5D",
            "UGxheWVyX0dldEZyaWVuZHNHYW1lcGxheUluZm9fUmVzcG9uc2UuRnJpZW5k",
            "c0dhbWVwbGF5SW5mbxpeChNGcmllbmRzR2FtZXBsYXlJbmZvEg8KB3N0ZWFt",
            "aWQYASABKAYSFgoObWludXRlc19wbGF5ZWQYAiABKA0SHgoWbWludXRlc19w",
            "bGF5ZWRfZm9yZXZlchgDIAEoDRp+Cg9Pd25HYW1lcGxheUluZm8SDwoHc3Rl",
            "YW1pZBgBIAEoBhIWCg5taW51dGVzX3BsYXllZBgCIAEoDRIeChZtaW51dGVz",
            "X3BsYXllZF9mb3JldmVyGAMgASgNEhMKC2luX3dpc2hsaXN0GAQgASgIEg0K",
            "BW93bmVkGAUgASgIIjMKIkNQbGF5ZXJfR2V0R2FtZUJhZGdlTGV2ZWxzX1Jl",
            "cXVlc3QSDQoFYXBwaWQYASABKA0itQEKI0NQbGF5ZXJfR2V0R2FtZUJhZGdl",
            "TGV2ZWxzX1Jlc3BvbnNlEhQKDHBsYXllcl9sZXZlbBgBIAEoDRI6CgZiYWRn",
            "ZXMYAiADKAsyKi5DUGxheWVyX0dldEdhbWVCYWRnZUxldmVsc19SZXNwb25z",
            "ZS5CYWRnZRo8CgVCYWRnZRINCgVsZXZlbBgBIAEoBRIOCgZzZXJpZXMYAiAB",
            "KAUSFAoMYm9yZGVyX2NvbG9yGAMgASgNIkkKJENQbGF5ZXJfR2V0UHJvZmls",
            "ZUJhY2tncm91bmRfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEhAKCGxhbmd1",
            "YWdlGAIgASgJIpoDCgtQcm9maWxlSXRlbRIXCg9jb21tdW5pdHlpdGVtaWQY",
            "ASABKAQSEwoLaW1hZ2Vfc21hbGwYAiABKAkSEwoLaW1hZ2VfbGFyZ2UYAyAB",
            "KAkSDAoEbmFtZRgEIAEoCRISCgppdGVtX3RpdGxlGAUgASgJEhgKEGl0ZW1f",
            "ZGVzY3JpcHRpb24YBiABKAkSDQoFYXBwaWQYByABKA0SEQoJaXRlbV90eXBl",
            "GAggASgNEhIKCml0ZW1fY2xhc3MYCSABKA0SEgoKbW92aWVfd2VibRgKIAEo",
            "CRIRCgltb3ZpZV9tcDQYCyABKAkSGAoQbW92aWVfd2VibV9zbWFsbBgNIAEo",
            "CRIXCg9tb3ZpZV9tcDRfc21hbGwYDiABKAkSFgoOZXF1aXBwZWRfZmxhZ3MY",
            "DCABKA0SMQoOcHJvZmlsZV9jb2xvcnMYDyADKAsyGS5Qcm9maWxlSXRlbS5Q",
            "cm9maWxlQ29sb3IaMQoMUHJvZmlsZUNvbG9yEhIKCnN0eWxlX25hbWUYASAB",
            "KAkSDQoFY29sb3IYAiABKAkiUQolQ1BsYXllcl9HZXRQcm9maWxlQmFja2dy",
            "b3VuZF9SZXNwb25zZRIoChJwcm9maWxlX2JhY2tncm91bmQYASABKAsyDC5Q",
            "cm9maWxlSXRlbSI/CiRDUGxheWVyX1NldFByb2ZpbGVCYWNrZ3JvdW5kX1Jl",
            "cXVlc3QSFwoPY29tbXVuaXR5aXRlbWlkGAEgASgEIicKJUNQbGF5ZXJfU2V0",
            "UHJvZmlsZUJhY2tncm91bmRfUmVzcG9uc2UiTQooQ1BsYXllcl9HZXRNaW5p",
            "UHJvZmlsZUJhY2tncm91bmRfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEhAK",
            "CGxhbmd1YWdlGAIgASgJIlUKKUNQbGF5ZXJfR2V0TWluaVByb2ZpbGVCYWNr",
            "Z3JvdW5kX1Jlc3BvbnNlEigKEnByb2ZpbGVfYmFja2dyb3VuZBgBIAEoCzIM",
            "LlByb2ZpbGVJdGVtIkMKKENQbGF5ZXJfU2V0TWluaVByb2ZpbGVCYWNrZ3Jv",
            "dW5kX1JlcXVlc3QSFwoPY29tbXVuaXR5aXRlbWlkGAEgASgEIisKKUNQbGF5",
            "ZXJfU2V0TWluaVByb2ZpbGVCYWNrZ3JvdW5kX1Jlc3BvbnNlIkMKHkNQbGF5",
            "ZXJfR2V0QXZhdGFyRnJhbWVfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEhAK",
            "CGxhbmd1YWdlGAIgASgJIkUKH0NQbGF5ZXJfR2V0QXZhdGFyRnJhbWVfUmVz",
            "cG9uc2USIgoMYXZhdGFyX2ZyYW1lGAEgASgLMgwuUHJvZmlsZUl0ZW0iOQoe",
            "Q1BsYXllcl9TZXRBdmF0YXJGcmFtZV9SZXF1ZXN0EhcKD2NvbW11bml0eWl0",
            "ZW1pZBgBIAEoBCIhCh9DUGxheWVyX1NldEF2YXRhckZyYW1lX1Jlc3BvbnNl",
            "IkYKIUNQbGF5ZXJfR2V0QW5pbWF0ZWRBdmF0YXJfUmVxdWVzdBIPCgdzdGVh",
            "bWlkGAEgASgGEhAKCGxhbmd1YWdlGAIgASgJIkIKIkNQbGF5ZXJfR2V0QW5p",
            "bWF0ZWRBdmF0YXJfUmVzcG9uc2USHAoGYXZhdGFyGAEgASgLMgwuUHJvZmls",
            "ZUl0ZW0iPAohQ1BsYXllcl9TZXRBbmltYXRlZEF2YXRhcl9SZXF1ZXN0EhcK",
            "D2NvbW11bml0eWl0ZW1pZBgBIAEoBCIkCiJDUGxheWVyX1NldEFuaW1hdGVk",
            "QXZhdGFyX1Jlc3BvbnNlIk0KKENQbGF5ZXJfR2V0U3RlYW1EZWNrS2V5Ym9h",
            "cmRTa2luX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIQCghsYW5ndWFnZRgC",
            "IAEoCSJZCilDUGxheWVyX0dldFN0ZWFtRGVja0tleWJvYXJkU2tpbl9SZXNw",
            "b25zZRIsChZzdGVhbV9kZWNrZXlib2FyZF9za2luGAEgASgLMgwuUHJvZmls",
            "ZUl0ZW0iQwooQ1BsYXllcl9TZXRTdGVhbURlY2tLZXlib2FyZFNraW5fUmVx",
            "dWVzdBIXCg9jb21tdW5pdHlpdGVtaWQYASABKAQiKwopQ1BsYXllcl9TZXRT",
            "dGVhbURlY2tLZXlib2FyZFNraW5fUmVzcG9uc2UiXwokQ1BsYXllcl9HZXRQ",
            "cm9maWxlSXRlbXNPd25lZF9SZXF1ZXN0EhAKCGxhbmd1YWdlGAEgASgJEiUK",
            "B2ZpbHRlcnMYAiADKA4yFC5FQ29tbXVuaXR5SXRlbUNsYXNzItYCCiVDUGxh",
            "eWVyX0dldFByb2ZpbGVJdGVtc093bmVkX1Jlc3BvbnNlEikKE3Byb2ZpbGVf",
            "YmFja2dyb3VuZHMYASADKAsyDC5Qcm9maWxlSXRlbRIuChhtaW5pX3Byb2Zp",
            "bGVfYmFja2dyb3VuZHMYAiADKAsyDC5Qcm9maWxlSXRlbRIjCg1hdmF0YXJf",
            "ZnJhbWVzGAMgAygLMgwuUHJvZmlsZUl0ZW0SJgoQYW5pbWF0ZWRfYXZhdGFy",
            "cxgEIAMoCzIMLlByb2ZpbGVJdGVtEicKEXByb2ZpbGVfbW9kaWZpZXJzGAUg",
            "AygLMgwuUHJvZmlsZUl0ZW0SLQoXc3RlYW1fZGVja2V5Ym9hcmRfc2tpbnMY",
            "BiADKAsyDC5Qcm9maWxlSXRlbRItChdzdGVhbV9kZWNzdGFydHVwX21vdmll",
            "cxgHIAMoCzIMLlByb2ZpbGVJdGVtIkwKJ0NQbGF5ZXJfR2V0UHJvZmlsZUl0",
            "ZW1zRXF1aXBwZWRfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEhAKCGxhbmd1",
            "YWdlGAIgASgJIqQCCihDUGxheWVyX0dldFByb2ZpbGVJdGVtc0VxdWlwcGVk",
            "X1Jlc3BvbnNlEigKEnByb2ZpbGVfYmFja2dyb3VuZBgBIAEoCzIMLlByb2Zp",
            "bGVJdGVtEi0KF21pbmlfcHJvZmlsZV9iYWNrZ3JvdW5kGAIgASgLMgwuUHJv",
            "ZmlsZUl0ZW0SIgoMYXZhdGFyX2ZyYW1lGAMgASgLMgwuUHJvZmlsZUl0ZW0S",
            "JQoPYW5pbWF0ZWRfYXZhdGFyGAQgASgLMgwuUHJvZmlsZUl0ZW0SJgoQcHJv",
            "ZmlsZV9tb2RpZmllchgFIAEoCzIMLlByb2ZpbGVJdGVtEiwKFnN0ZWFtX2Rl",
            "Y2tleWJvYXJkX3NraW4YBiABKAsyDC5Qcm9maWxlSXRlbSJVCitDUGxheWVy",
            "X1NldEVxdWlwcGVkUHJvZmlsZUl0ZW1GbGFnc19SZXF1ZXN0EhcKD2NvbW11",
            "bml0eWl0ZW1pZBgBIAEoBBINCgVmbGFncxgCIAEoDSIuCixDUGxheWVyX1Nl",
            "dEVxdWlwcGVkUHJvZmlsZUl0ZW1GbGFnc19SZXNwb25zZSIhCh9DUGxheWVy",
            "X0dldEVtb3RpY29uTGlzdF9SZXF1ZXN0ItsBCiBDUGxheWVyX0dldEVtb3Rp",
            "Y29uTGlzdF9SZXNwb25zZRI9CgllbW90aWNvbnMYASADKAsyKi5DUGxheWVy",
            "X0dldEVtb3RpY29uTGlzdF9SZXNwb25zZS5FbW90aWNvbhp4CghFbW90aWNv",
            "bhIMCgRuYW1lGAEgASgJEg0KBWNvdW50GAIgASgFEhYKDnRpbWVfbGFzdF91",
            "c2VkGAMgASgNEhEKCXVzZV9jb3VudBgEIAEoDRIVCg10aW1lX3JlY2VpdmVk",
            "GAUgASgNEg0KBWFwcGlkGAYgASgNIk0KKUNQbGF5ZXJfR2V0Q29tbXVuaXR5",
            "QmFkZ2VQcm9ncmVzc19SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAQSDwoHYmFk",
            "Z2VpZBgCIAEoBSKcAQoqQ1BsYXllcl9HZXRDb21tdW5pdHlCYWRnZVByb2dy",
            "ZXNzX1Jlc3BvbnNlEkEKBnF1ZXN0cxgBIAMoCzIxLkNQbGF5ZXJfR2V0Q29t",
            "bXVuaXR5QmFkZ2VQcm9ncmVzc19SZXNwb25zZS5RdWVzdBorCgVRdWVzdBIP",
            "CgdxdWVzdGlkGAEgASgNEhEKCWNvbXBsZXRlZBgCIAEoCCJ5CipDUGxheWVy",
            "X0dldFRvcEFjaGlldmVtZW50c0ZvckdhbWVzX1JlcXVlc3QSDwoHc3RlYW1p",
            "ZBgBIAEoBBIQCghsYW5ndWFnZRgCIAEoCRIYChBtYXhfYWNoaWV2ZW1lbnRz",
            "GAMgASgNEg4KBmFwcGlkcxgEIAMoDSKOAworQ1BsYXllcl9HZXRUb3BBY2hp",
            "ZXZlbWVudHNGb3JHYW1lc19SZXNwb25zZRJACgVnYW1lcxgBIAMoCzIxLkNQ",
            "bGF5ZXJfR2V0VG9wQWNoaWV2ZW1lbnRzRm9yR2FtZXNfUmVzcG9uc2UuR2Ft",
            "ZRqYAQoLQWNoaWV2ZW1lbnQSDgoGc3RhdGlkGAEgASgNEgsKA2JpdBgCIAEo",
            "DRIMCgRuYW1lGAMgASgJEgwKBGRlc2MYBCABKAkSDAoEaWNvbhgFIAEoCRIR",
            "CglpY29uX2dyYXkYBiABKAkSDgoGaGlkZGVuGAcgASgIEh8KF3BsYXllcl9w",
            "ZXJjZW50X3VubG9ja2VkGAggASgJGoEBCgRHYW1lEg0KBWFwcGlkGAEgASgN",
            "EhoKEnRvdGFsX2FjaGlldmVtZW50cxgCIAEoDRJOCgxhY2hpZXZlbWVudHMY",
            "AyADKAsyOC5DUGxheWVyX0dldFRvcEFjaGlldmVtZW50c0ZvckdhbWVzX1Jl",
            "c3BvbnNlLkFjaGlldmVtZW50IlwKJ0NQbGF5ZXJfR2V0QWNoaWV2ZW1lbnRz",
            "UHJvZ3Jlc3NfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgEEhAKCGxhbmd1YWdl",
            "GAIgASgJEg4KBmFwcGlkcxgDIAMoDSKNAgooQ1BsYXllcl9HZXRBY2hpZXZl",
            "bWVudHNQcm9ncmVzc19SZXNwb25zZRJbChRhY2hpZXZlbWVudF9wcm9ncmVz",
            "cxgBIAMoCzI9LkNQbGF5ZXJfR2V0QWNoaWV2ZW1lbnRzUHJvZ3Jlc3NfUmVz",
            "cG9uc2UuQWNoaWV2ZW1lbnRQcm9ncmVzcxqDAQoTQWNoaWV2ZW1lbnRQcm9n",
            "cmVzcxINCgVhcHBpZBgBIAEoDRIQCgh1bmxvY2tlZBgCIAEoDRINCgV0b3Rh",
            "bBgDIAEoDRISCgpwZXJjZW50YWdlGAQgASgCEhQKDGFsbF91bmxvY2tlZBgF",
            "IAEoCBISCgpjYWNoZV90aW1lGAYgASgNIkYKI0NQbGF5ZXJfR2V0R2FtZUFj",
            "aGlldmVtZW50c19SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNEhAKCGxhbmd1YWdl",
            "GAIgASgJIpgCCiRDUGxheWVyX0dldEdhbWVBY2hpZXZlbWVudHNfUmVzcG9u",
            "c2USRwoMYWNoaWV2ZW1lbnRzGAEgAygLMjEuQ1BsYXllcl9HZXRHYW1lQWNo",
            "aWV2ZW1lbnRzX1Jlc3BvbnNlLkFjaGlldmVtZW50GqYBCgtBY2hpZXZlbWVu",
            "dBIVCg1pbnRlcm5hbF9uYW1lGAEgASgJEhYKDmxvY2FsaXplZF9uYW1lGAIg",
            "ASgJEhYKDmxvY2FsaXplZF9kZXNjGAMgASgJEgwKBGljb24YBCABKAkSEQoJ",
            "aWNvbl9ncmF5GAUgASgJEg4KBmhpZGRlbhgGIAEoCBIfChdwbGF5ZXJfcGVy",
            "Y2VudF91bmxvY2tlZBgHIAEoCSIzCiBDUGxheWVyX0dldEZhdm9yaXRlQmFk",
            "Z2VfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgEIrABCiFDUGxheWVyX0dldEZh",
            "dm9yaXRlQmFkZ2VfUmVzcG9uc2USGgoSaGFzX2Zhdm9yaXRlX2JhZGdlGAEg",
            "ASgIEg8KB2JhZGdlaWQYAiABKA0SFwoPY29tbXVuaXR5aXRlbWlkGAMgASgE",
            "EhEKCWl0ZW1fdHlwZRgEIAEoDRIUCgxib3JkZXJfY29sb3IYBSABKA0SDQoF",
            "YXBwaWQYBiABKA0SDQoFbGV2ZWwYByABKA0iTAogQ1BsYXllcl9TZXRGYXZv",
            "cml0ZUJhZGdlX1JlcXVlc3QSFwoPY29tbXVuaXR5aXRlbWlkGAEgASgEEg8K",
            "B2JhZGdlaWQYAiABKA0iIwohQ1BsYXllcl9TZXRGYXZvcml0ZUJhZGdlX1Jl",
            "c3BvbnNlIo0BCidDUGxheWVyX0dldFByb2ZpbGVDdXN0b21pemF0aW9uX1Jl",
            "cXVlc3QSDwoHc3RlYW1pZBgBIAEoBhInCh9pbmNsdWRlX2luYWN0aXZlX2N1",
            "c3RvbWl6YXRpb25zGAIgASgIEigKIGluY2x1ZGVfcHVyY2hhc2VkX2N1c3Rv",
            "bWl6YXRpb25zGAMgASgIIu4CChhQcm9maWxlQ3VzdG9taXphdGlvblNsb3QS",
            "DAoEc2xvdBgBIAEoDRINCgVhcHBpZBgCIAEoDRIXCg9wdWJsaXNoZWRmaWxl",
            "aWQYAyABKAQSFAoMaXRlbV9hc3NldGlkGAQgASgEEhYKDml0ZW1fY29udGV4",
            "dGlkGAUgASgEEg0KBW5vdGVzGAYgASgJEg0KBXRpdGxlGAcgASgJEhEKCWFj",
            "Y291bnRpZBgIIAEoDRIPCgdiYWRnZWlkGAkgASgNEhQKDGJvcmRlcl9jb2xv",
            "chgKIAEoDRIUCgxpdGVtX2NsYXNzaWQYCyABKAQSFwoPaXRlbV9pbnN0YW5j",
            "ZWlkGAwgASgEElIKDmJhbl9jaGVjcmVzdWx0GA0gASgOMhcuRUJhbkNvbnRl",
            "bnRDaGVja1Jlc3VsdDohRUJhbkNvbnRlbnRDaGVja1Jlc3VsdF9Ob3RTY2Fu",
            "bmVkEhMKC3JlcGxheV95ZWFyGA4gASgNIrkCChRQcm9maWxlQ3VzdG9taXph",
            "dGlvbhJYChJjdXN0b21pemF0aW9uX3R5cGUYASABKA4yGi5FUHJvZmlsZUN1",
            "c3RvbWl6YXRpb25UeXBlOiBFUHJvZmlsZUN1c3RvbWl6YXRpb25UeXBlSW52",
            "YWxpZBINCgVsYXJnZRgCIAEoCBIoCgVzbG90cxgDIAMoCzIZLlByb2ZpbGVD",
            "dXN0b21pemF0aW9uU2xvdBIOCgZhY3RpdmUYBCABKAgSWwoTY3VzdG9taXph",
            "dGlvbl9zdHlsZRgFIAEoDjIbLkVQcm9maWxlQ3VzdG9taXphdGlvblN0eWxl",
            "OiFFUHJvZmlsZUN1c3RvbWl6YXRpb25TdHlsZURlZmF1bHQSEgoKcHVyY2hh",
            "c2VpZBgGIAEoBBINCgVsZXZlbBgHIAEoDSIvCgxQcm9maWxlVGhlbWUSEAoI",
            "dGhlbWVfaWQYASABKAkSDQoFdGl0bGUYAiABKAkiMQoSUHJvZmlsZVByZWZl",
            "cmVuY2VzEhsKE2hpZGVfcHJvZmlsZV9hd2FyZHMYASABKAgixgMKKENQbGF5",
            "ZXJfR2V0UHJvZmlsZUN1c3RvbWl6YXRpb25fUmVzcG9uc2USLQoOY3VzdG9t",
            "aXphdGlvbnMYASADKAsyFS5Qcm9maWxlQ3VzdG9taXphdGlvbhIXCg9zbG90",
            "c19hdmFpbGFibGUYAiABKA0SJAoNcHJvZmlsZV90aGVtZRgDIAEoCzINLlBy",
            "b2ZpbGVUaGVtZRJiChhwdXJjaGFzZWRfY3VzdG9taXphdGlvbnMYBCADKAsy",
            "QC5DUGxheWVyX0dldFByb2ZpbGVDdXN0b21pemF0aW9uX1Jlc3BvbnNlLlB1",
            "cmNoYXNlZEN1c3RvbWl6YXRpb24SMAoTcHJvZmlsZV9wcmVmZXJlbmNlcxgF",
            "IAEoCzITLlByb2ZpbGVQcmVmZXJlbmNlcxqVAQoWUHVyY2hhc2VkQ3VzdG9t",
            "aXphdGlvbhISCgpwdXJjaGFzZWlkGAEgASgEElgKEmN1c3RvbWl6YXRpb25f",
            "dHlwZRgCIAEoDjIaLkVQcm9maWxlQ3VzdG9taXphdGlvblR5cGU6IEVQcm9m",
            "aWxlQ3VzdG9taXphdGlvblR5cGVJbnZhbGlkEg0KBWxldmVsGAMgASgNIkQK",
            "MUNQbGF5ZXJfR2V0UHVyY2hhc2VkUHJvZmlsZUN1c3RvbWl6YXRpb25zX1Jl",
            "cXVlc3QSDwoHc3RlYW1pZBgBIAEoBiKrAgoyQ1BsYXllcl9HZXRQdXJjaGFz",
            "ZWRQcm9maWxlQ3VzdG9taXphdGlvbnNfUmVzcG9uc2USbAoYcHVyY2hhc2Vk",
            "X2N1c3RvbWl6YXRpb25zGAEgAygLMkouQ1BsYXllcl9HZXRQdXJjaGFzZWRQ",
            "cm9maWxlQ3VzdG9taXphdGlvbnNfUmVzcG9uc2UuUHVyY2hhc2VkQ3VzdG9t",
            "aXphdGlvbhqGAQoWUHVyY2hhc2VkQ3VzdG9taXphdGlvbhISCgpwdXJjaGFz",
            "ZWlkGAEgASgEElgKEmN1c3RvbWl6YXRpb25fdHlwZRgCIAEoDjIaLkVQcm9m",
            "aWxlQ3VzdG9taXphdGlvblR5cGU6IEVQcm9maWxlQ3VzdG9taXphdGlvblR5",
            "cGVJbnZhbGlkIk8KPENQbGF5ZXJfR2V0UHVyY2hhc2VkQW5kVXBncmFkZWRQ",
            "cm9maWxlQ3VzdG9taXphdGlvbnNfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgG",
            "IrYECj1DUGxheWVyX0dldFB1cmNoYXNlZEFuZFVwZ3JhZGVkUHJvZmlsZUN1",
            "c3RvbWl6YXRpb25zX1Jlc3BvbnNlEncKGHB1cmNoYXNlZF9jdXN0b21pemF0",
            "aW9ucxgBIAMoCzJVLkNQbGF5ZXJfR2V0UHVyY2hhc2VkQW5kVXBncmFkZWRQ",
            "cm9maWxlQ3VzdG9taXphdGlvbnNfUmVzcG9uc2UuUHVyY2hhc2VkQ3VzdG9t",
            "aXphdGlvbhJ1Chd1cGdyYWRlZF9jdXN0b21pemF0aW9ucxgCIAMoCzJULkNQ",
            "bGF5ZXJfR2V0UHVyY2hhc2VkQW5kVXBncmFkZWRQcm9maWxlQ3VzdG9taXph",
            "dGlvbnNfUmVzcG9uc2UuVXBncmFkZWRDdXN0b21pemF0aW9uGoEBChZQdXJj",
            "aGFzZWRDdXN0b21pemF0aW9uElgKEmN1c3RvbWl6YXRpb25fdHlwZRgBIAEo",
            "DjIaLkVQcm9maWxlQ3VzdG9taXphdGlvblR5cGU6IEVQcm9maWxlQ3VzdG9t",
            "aXphdGlvblR5cGVJbnZhbGlkEg0KBWNvdW50GAIgASgNGoABChVVcGdyYWRl",
            "ZEN1c3RvbWl6YXRpb24SWAoSY3VzdG9taXphdGlvbl90eXBlGAEgASgOMhou",
            "RVByb2ZpbGVDdXN0b21pemF0aW9uVHlwZTogRVByb2ZpbGVDdXN0b21pemF0",
            "aW9uVHlwZUludmFsaWQSDQoFbGV2ZWwYAiABKA0iKwopQ1BsYXllcl9HZXRQ",
            "cm9maWxlVGhlbWVzQXZhaWxhYmxlX1JlcXVlc3QiUwoqQ1BsYXllcl9HZXRQ",
            "cm9maWxlVGhlbWVzQXZhaWxhYmxlX1Jlc3BvbnNlEiUKDnByb2ZpbGVfdGhl",
            "bWVzGAEgAygLMg0uUHJvZmlsZVRoZW1lIjMKH0NQbGF5ZXJfU2V0UHJvZmls",
            "ZVRoZW1lX1JlcXVlc3QSEAoIdGhlbWVfaWQYASABKAkiIgogQ1BsYXllcl9T",
            "ZXRQcm9maWxlVGhlbWVfUmVzcG9uc2UiWQolQ1BsYXllcl9TZXRQcm9maWxl",
            "UHJlZmVyZW5jZXNfUmVxdWVzdBIwChNwcm9maWxlX3ByZWZlcmVuY2VzGAEg",
            "ASgLMhMuUHJvZmlsZVByZWZlcmVuY2VzIigKJkNQbGF5ZXJfU2V0UHJvZmls",
            "ZVByZWZlcmVuY2VzX1Jlc3BvbnNlIkkKI0NQbGF5ZXJfUG9zdFN0YXR1c1Rv",
            "RnJpZW5kc19SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNEhMKC3N0YXR1c190ZXh0",
            "GAIgASgJIiYKJENQbGF5ZXJfUG9zdFN0YXR1c1RvRnJpZW5kc19SZXNwb25z",
            "ZSJCCh9DUGxheWVyX0dldFBvc3RlZFN0YXR1c19SZXF1ZXN0Eg8KB3N0ZWFt",
            "aWQYASABKAQSDgoGcG9zdGlkGAIgASgEInoKIENQbGF5ZXJfR2V0UG9zdGVk",
            "U3RhdHVzX1Jlc3BvbnNlEhEKCWFjY291bnRpZBgBIAEoDRIOCgZwb3N0aWQY",
            "AiABKAQSEwoLc3RhdHVzX3RleHQYAyABKAkSDwoHZGVsZXRlZBgEIAEoCBIN",
            "CgVhcHBpZBgFIAEoDSI0CiJDUGxheWVyX0RlbGV0ZVBvc3RlZFN0YXR1c19S",
            "ZXF1ZXN0Eg4KBnBvc3RpZBgBIAEoBCIlCiNDUGxheWVyX0RlbGV0ZVBvc3Rl",
            "ZFN0YXR1c19SZXNwb25zZSI9CiJDUGxheWVyX0dldExhc3RQbGF5ZWRUaW1l",
            "c19SZXF1ZXN0EhcKD21pbl9sYXN0X3BsYXllZBgBIAEoDSKJBAojQ1BsYXll",
            "cl9HZXRMYXN0UGxheWVkVGltZXNfUmVzcG9uc2USOAoFZ2FtZXMYASADKAsy",
            "KS5DUGxheWVyX0dldExhc3RQbGF5ZWRUaW1lc19SZXNwb25zZS5HYW1lGqcD",
            "CgRHYW1lEg0KBWFwcGlkGAEgASgFEhUKDWxhc3RfcGxheXRpbWUYAiABKA0S",
            "FwoPcGxheXRpbWVfMndlZWtzGAMgASgFEhgKEHBsYXl0aW1lX2ZvcmV2ZXIY",
            "BCABKAUSFgoOZmlyc3RfcGxheXRpbWUYBSABKA0SIAoYcGxheXRpbWVfd2lu",
            "ZG93c19mb3JldmVyGAYgASgFEhwKFHBsYXl0aW1lX21hY19mb3JldmVyGAcg",
            "ASgFEh4KFnBsYXl0aW1lX2xpbnV4X2ZvcmV2ZXIYCCABKAUSHgoWZmlyc3Rf",
            "d2luZG93c19wbGF5dGltZRgJIAEoDRIaChJmaXJzdF9tYWNfcGxheXRpbWUY",
            "CiABKA0SHAoUZmlyc3RfbGludXhfcGxheXRpbWUYCyABKA0SHQoVbGFzdF93",
            "aW5kb3dzX3BsYXl0aW1lGAwgASgNEhkKEWxhc3RfbWFjX3BsYXl0aW1lGA0g",
            "ASgNEhsKE2xhc3RfbGludXhfcGxheXRpbWUYDiABKA0SHQoVcGxheXRpbWVf",
            "ZGlzY29ubmVjdGVkGA8gASgNIiQKIkNQbGF5ZXJfR2V0VGltZVNTQUFjY2Vw",
            "dGVkX1JlcXVlc3QiegojQ1BsYXllcl9HZXRUaW1lU1NBQWNjZXB0ZWRfUmVz",
            "cG9uc2USGQoRdGltZV9zc2FfYWNjZXB0ZWQYASABKA0SGAoQdGltZV9zc2Ff",
            "dXBkYXRlZBgCIAEoDRIeChZ0aW1lX2NoaW5hc3NhX2FjY2VwdGVkGAMgASgN",
            "InUKGUNQbGF5ZXJfQWNjZXB0U1NBX1JlcXVlc3QSPwoOYWdyZWVtZW50X3R5",
            "cGUYASABKA4yDy5FQWdyZWVtZW50VHlwZToWRUFncmVlbWVudFR5cGVfSW52",
            "YWxpZBIXCg90aW1lX3NpZ25lZF91dGMYAiABKA0iHAoaQ1BsYXllcl9BY2Nl",
            "cHRTU0FfUmVzcG9uc2UiIQofQ1BsYXllcl9HZXROaWNrbmFtZUxpc3RfUmVx",
            "dWVzdCKeAQogQ1BsYXllcl9HZXROaWNrbmFtZUxpc3RfUmVzcG9uc2USQwoJ",
            "bmlja25hbWVzGAEgAygLMjAuQ1BsYXllcl9HZXROaWNrbmFtZUxpc3RfUmVz",
            "cG9uc2UuUGxheWVyTmlja25hbWUaNQoOUGxheWVyTmlja25hbWUSEQoJYWNj",
            "b3VudGlkGAEgASgHEhAKCG5pY2tuYW1lGAIgASgJIikKJ0NQbGF5ZXJfR2V0",
            "UGVyRnJpZW5kUHJlZmVyZW5jZXNfUmVxdWVzdCLDBQoUUGVyRnJpZW5kUHJl",
            "ZmVyZW5jZXMSEQoJYWNjb3VudGlkGAEgASgHEhAKCG5pY2tuYW1lGAIgASgJ",
            "El0KGG5vdGlmaWNhdGlvbnNfc2hvd2luZ2FtZRgDIAEoDjIVLkVOb3RpZmlj",
            "YXRpb25TZXR0aW5nOiRFTm90aWZpY2F0aW9uU2V0dGluZ05vdGlmeVVzZURl",
            "ZmF1bHQSXQoYbm90aWZpY2F0aW9uc19zaG93b25saW5lGAQgASgOMhUuRU5v",
            "dGlmaWNhdGlvblNldHRpbmc6JEVOb3RpZmljYXRpb25TZXR0aW5nTm90aWZ5",
            "VXNlRGVmYXVsdBJfChpub3RpZmljYXRpb25zX3Nob3dtZXNzYWdlcxgFIAEo",
            "DjIVLkVOb3RpZmljYXRpb25TZXR0aW5nOiRFTm90aWZpY2F0aW9uU2V0dGlu",
            "Z05vdGlmeVVzZURlZmF1bHQSVgoRc291bmRzX3Nob3dpbmdhbWUYBiABKA4y",
            "FS5FTm90aWZpY2F0aW9uU2V0dGluZzokRU5vdGlmaWNhdGlvblNldHRpbmdO",
            "b3RpZnlVc2VEZWZhdWx0ElYKEXNvdW5kc19zaG93b25saW5lGAcgASgOMhUu",
            "RU5vdGlmaWNhdGlvblNldHRpbmc6JEVOb3RpZmljYXRpb25TZXR0aW5nTm90",
            "aWZ5VXNlRGVmYXVsdBJYChNzb3VuZHNfc2hvd21lc3NhZ2VzGAggASgOMhUu",
            "RU5vdGlmaWNhdGlvblNldHRpbmc6JEVOb3RpZmljYXRpb25TZXR0aW5nTm90",
            "aWZ5VXNlRGVmYXVsdBJdChhub3RpZmljYXRpb25zX3NlbmRtb2JpbGUYCSAB",
            "KA4yFS5FTm90aWZpY2F0aW9uU2V0dGluZzokRU5vdGlmaWNhdGlvblNldHRp",
            "bmdOb3RpZnlVc2VEZWZhdWx0IlYKKENQbGF5ZXJfR2V0UGVyRnJpZW5kUHJl",
            "ZmVyZW5jZXNfUmVzcG9uc2USKgoLcHJlZmVyZW5jZXMYASADKAsyFS5QZXJG",
            "cmllbmRQcmVmZXJlbmNlcyJVCidDUGxheWVyX1NldFBlckZyaWVuZFByZWZl",
            "cmVuY2VzX1JlcXVlc3QSKgoLcHJlZmVyZW5jZXMYASABKAsyFS5QZXJGcmll",
            "bmRQcmVmZXJlbmNlcyIqCihDUGxheWVyX1NldFBlckZyaWVuZFByZWZlcmVu",
            "Y2VzX1Jlc3BvbnNlIiwKGUNQbGF5ZXJfQWRkRnJpZW5kX1JlcXVlc3QSDwoH",
            "c3RlYW1pZBgBIAEoBiJeChpDUGxheWVyX0FkZEZyaWVuZF9SZXNwb25zZRIT",
            "CgtpbnZpdGVfc2VudBgBIAEoCBIbChNmcmllbmRfcmVsYXRpb25zaGlwGAIg",
            "ASgNEg4KBnJlc3VsdBgDIAEoBSIvChxDUGxheWVyX1JlbW92ZUZyaWVuZF9S",
            "ZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYiPAodQ1BsYXllcl9SZW1vdmVGcmll",
            "bmRfUmVzcG9uc2USGwoTZnJpZW5kX3JlbGF0aW9uc2hpcBgBIAEoDSJBChxD",
            "UGxheWVyX0lnbm9yZUZyaWVuZF9SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYS",
            "EAoIdW5pZ25vcmUYAiABKAgiPAodQ1BsYXllcl9JZ25vcmVGcmllbmRfUmVz",
            "cG9uc2USGwoTZnJpZW5kX3JlbGF0aW9uc2hpcBgBIAEoDSIpCidDUGxheWVy",
            "X0dldENvbW11bml0eVByZWZlcmVuY2VzX1JlcXVlc3QihAIKHENQbGF5ZXJf",
            "Q29tbXVuaXR5UHJlZmVyZW5jZXMSJQoWcGFyZW50aGVzaXplX25pY2tuYW1l",
            "cxgEIAEoCDoFZmFsc2USVAoTdGV4dF9maWx0ZXJfc2V0dGluZxgFIAEoDjIT",
            "LkVUZXh0RmlsdGVyU2V0dGluZzoiRVRleHRGaWx0ZXJTZXR0aW5nU3RlYW1M",
            "YWJPcHRlZE91dBIoChp0ZXh0X2ZpbHRlcl9pZ25vcmVfZnJpZW5kcxgGIAEo",
            "CDoEdHJ1ZRIiChp0ZXh0X2ZpbHRlcl93b3Jkc19yZXZpc2lvbhgHIAEoDRIZ",
            "ChF0aW1lc3RhbXBfdXBkYXRlZBgDIAEoDSKpAQooQ1BsYXllcl9HZXRDb21t",
            "dW5pdHlQcmVmZXJlbmNlc19SZXNwb25zZRIyCgtwcmVmZXJlbmNlcxgBIAEo",
            "CzIdLkNQbGF5ZXJfQ29tbXVuaXR5UHJlZmVyZW5jZXMSSQoeY29udGVudF9k",
            "ZXNjcmlwdG9yX3ByZWZlcmVuY2VzGAIgASgLMiEuVXNlckNvbnRlbnREZXNj",
            "cmlwdG9yUHJlZmVyZW5jZXMiXQonQ1BsYXllcl9TZXRDb21tdW5pdHlQcmVm",
            "ZXJlbmNlc19SZXF1ZXN0EjIKC3ByZWZlcmVuY2VzGAEgASgLMh0uQ1BsYXll",
            "cl9Db21tdW5pdHlQcmVmZXJlbmNlcyIqCihDUGxheWVyX1NldENvbW11bml0",
            "eVByZWZlcmVuY2VzX1Jlc3BvbnNlIiQKIkNQbGF5ZXJfR2V0VGV4dEZpbHRl",
            "cldvcmRzX1JlcXVlc3QijgEKF0NQbGF5ZXJfVGV4dEZpbHRlcldvcmRzEicK",
            "H3RleHRfZmlsdGVyX2N1c3RvbV9iYW5uZWRfd29yZHMYASADKAkSJgoedGV4",
            "dF9maWx0ZXJfY3VzdG9tX2NsZWFuX3dvcmRzGAIgAygJEiIKGnRleHRfZmls",
            "dGVyX3dvcmRzX3JldmlzaW9uGAMgASgNIk4KI0NQbGF5ZXJfR2V0VGV4dEZp",
            "bHRlcldvcmRzX1Jlc3BvbnNlEicKBXdvcmRzGAEgASgLMhguQ1BsYXllcl9U",
            "ZXh0RmlsdGVyV29yZHMiQAosQ1BsYXllcl9HZXROZXdTdGVhbUFubm91bmNl",
            "bWVudFN0YXRlX1JlcXVlc3QSEAoIbGFuZ3VhZ2UYASABKAUi5wEKLUNQbGF5",
            "ZXJfR2V0TmV3U3RlYW1Bbm5vdW5jZW1lbnRTdGF0ZV9SZXNwb25zZRJOCgVz",
            "dGF0ZRgBIAEoDjIbLkVOZXdTdGVhbUFubm91bmNlbWVudFN0YXRlOiJFTmV3",
            "U3RlYW1Bbm5vdW5jZW1lbnRTdGF0ZV9JbnZhbGlkEh0KFWFubm91bmNlbWVu",
            "dF9oZWFkbGluZRgCIAEoCRIYChBhbm5vdW5jZW1lbnRfdXJsGAMgASgJEhMK",
            "C3RpbWVfcG9zdGVkGAQgASgNEhgKEGFubm91bmNlbWVudF9naWQYBSABKAQi",
            "YAovQ1BsYXllcl9VcGRhdGVTdGVhbUFubm91bmNlbWVudExhc3RSZWFkX1Jl",
            "cXVlc3QSGAoQYW5ub3VuY2VtZW50X2dpZBgBIAEoBBITCgt0aW1lX3Bvc3Rl",
            "ZBgCIAEoDSIyCjBDUGxheWVyX1VwZGF0ZVN0ZWFtQW5ub3VuY2VtZW50TGFz",
            "dFJlYWRfUmVzcG9uc2UiJAoiQ1BsYXllcl9HZXRQcml2YWN5U2V0dGluZ3Nf",
            "UmVxdWVzdCLMAQoQQ1ByaXZhY3lTZXR0aW5ncxIVCg1wcml2YWN5X3N0YXRl",
            "GAEgASgFEh8KF3ByaXZhY3lfc3RhdGVfaW52ZW50b3J5GAIgASgFEhsKE3By",
            "aXZhY3lfc3RhdGVfZ2lmdHMYAyABKAUSIAoYcHJpdmFjeV9zdGF0ZV9vd25l",
            "ZGdhbWVzGAQgASgFEh4KFnByaXZhY3lfc3RhdGVfcGxheXRpbWUYBSABKAUS",
            "IQoZcHJpdmFjeV9zdGF0ZV9mcmllbmRzbGlzdBgGIAEoBSJSCiNDUGxheWVy",
            "X0dldFByaXZhY3lTZXR0aW5nc19SZXNwb25zZRIrChBwcml2YWN5X3NldHRp",
            "bmdzGAEgASgLMhEuQ1ByaXZhY3lTZXR0aW5ncyIzCiJDUGxheWVyX0dldER1",
            "cmF0aW9uQ29udHJvbF9SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNIu4BCiNDUGxh",
            "eWVyX0dldER1cmF0aW9uQ29udHJvbF9SZXNwb25zZRISCgppc19lbmFibGVk",
            "GAEgASgIEg8KB3NlY29uZHMYAiABKAUSFQoNc2Vjb25kc190b2RheRgDIAEo",
            "BRIdChVpc19zdGVhbWNoaW5hX2FjY291bnQYBCABKAgSFwoPaXNfYWdlX3Zl",
            "cmlmaWVkGAUgASgIEh0KFXNlY29uZHNfYWxsb3dlZF90b2RheRgGIAEoDRIg",
            "ChhhZ2VfdmVyaWZpY2F0aW9uX3BlbmRpbmcYByABKAgSEgoKYmxvY21pbm9y",
            "cxgIIAEoCCLnAQoqQ1BsYXllcl9SZWNvcmREaXNjb25uZWN0ZWRQbGF5dGlt",
            "ZV9SZXF1ZXN0Ek4KDXBsYXlfc2Vzc2lvbnMYAyADKAsyNy5DUGxheWVyX1Jl",
            "Y29yZERpc2Nvbm5lY3RlZFBsYXl0aW1lX1JlcXVlc3QuUGxheUhpc3Rvcnka",
            "aQoLUGxheUhpc3RvcnkSDQoFYXBwaWQYASABKA0SGgoSc2Vzc2lvbl90aW1l",
            "X3N0YXJ0GAIgASgNEg8KB3NlY29uZHMYAyABKA0SDwoHb2ZmbGluZRgEIAEo",
            "CBINCgVvd25lchgFIAEoDSItCitDUGxheWVyX1JlY29yZERpc2Nvbm5lY3Rl",
            "ZFBsYXl0aW1lX1Jlc3BvbnNlImAKJENQbGF5ZXJfTGFzdFBsYXllZFRpbWVz",
            "X05vdGlmaWNhdGlvbhI4CgVnYW1lcxgBIAMoCzIpLkNQbGF5ZXJfR2V0TGFz",
            "dFBsYXllZFRpbWVzX1Jlc3BvbnNlLkdhbWUiagoqQ1BsYXllcl9GcmllbmRO",
            "aWNrbmFtZUNoYW5nZWRfTm90aWZpY2F0aW9uEhEKCWFjY291bnRpZBgBIAEo",
            "BxIQCghuaWNrbmFtZRgCIAEoCRIXCg9pc19lY2hvX3RvX3NlbGYYAyABKAgi",
            "Swo2Q1BsYXllcl9GcmllbmRFcXVpcHBlZFByb2ZpbGVJdGVtc0NoYW5nZWRf",
            "Tm90aWZpY2F0aW9uEhEKCWFjY291bnRpZBgBIAEoByLoAQouQ1BsYXllcl9O",
            "ZXdTdGVhbUFubm91bmNlbWVudFN0YXRlX05vdGlmaWNhdGlvbhJOCgVzdGF0",
            "ZRgBIAEoDjIbLkVOZXdTdGVhbUFubm91bmNlbWVudFN0YXRlOiJFTmV3U3Rl",
            "YW1Bbm5vdW5jZW1lbnRTdGF0ZV9JbnZhbGlkEh0KFWFubm91bmNlbWVudF9o",
            "ZWFkbGluZRgCIAEoCRIYChBhbm5vdW5jZW1lbnRfdXJsGAMgASgJEhMKC3Rp",
            "bWVfcG9zdGVkGAQgASgNEhgKEGFubm91bmNlbWVudF9naWQYBSABKAQisQEK",
            "MENQbGF5ZXJfQ29tbXVuaXR5UHJlZmVyZW5jZXNDaGFuZ2VkX05vdGlmaWNh",
            "dGlvbhIyCgtwcmVmZXJlbmNlcxgBIAEoCzIdLkNQbGF5ZXJfQ29tbXVuaXR5",
            "UHJlZmVyZW5jZXMSSQoeY29udGVudF9kZXNjcmlwdG9yX3ByZWZlcmVuY2Vz",
            "GAIgASgLMiEuVXNlckNvbnRlbnREZXNjcmlwdG9yUHJlZmVyZW5jZXMiVgor",
            "Q1BsYXllcl9UZXh0RmlsdGVyV29yZHNDaGFuZ2VkX05vdGlmaWNhdGlvbhIn",
            "CgV3b3JkcxgBIAEoCzIYLkNQbGF5ZXJfVGV4dEZpbHRlcldvcmRzInEKMENQ",
            "bGF5ZXJfUGVyRnJpZW5kUHJlZmVyZW5jZXNDaGFuZ2VkX05vdGlmaWNhdGlv",
            "bhIRCglhY2NvdW50aWQYASABKAcSKgoLcHJlZmVyZW5jZXMYAiABKAsyFS5Q",
            "ZXJGcmllbmRQcmVmZXJlbmNlcyJaCitDUGxheWVyX1ByaXZhY3lTZXR0aW5n",
            "c0NoYW5nZWRfTm90aWZpY2F0aW9uEisKEHByaXZhY3lfc2V0dGluZ3MYASAB",
            "KAsyES5DUHJpdmFjeVNldHRpbmdzKo0CChpFUHJvZmlsZUN1c3RvbWl6YXRp",
            "b25TdHlsZRIlCiFFUHJvZmlsZUN1c3RvbWl6YXRpb25TdHlsZURlZmF1bHQQ",
            "ABImCiJFUHJvZmlsZUN1c3RvbWl6YXRpb25TdHlsZVNlbGVjdGVkEAESJAog",
            "RVByb2ZpbGVDdXN0b21pemF0aW9uU3R5bGVSYXJlc3QQAhIoCiRFUHJvZmls",
            "ZUN1c3RvbWl6YXRpb25TdHlsZU1vc3RSZWNlbnQQAxIkCiBFUHJvZmlsZUN1",
            "c3RvbWl6YXRpb25TdHlsZVJhbmRvbRAEEioKJkVQcm9maWxlQ3VzdG9taXph",
            "dGlvblN0eWxlSGlnaGVzdFJhdGVkEAUqcAoORUFncmVlbWVudFR5cGUSIwoW",
            "RUFncmVlbWVudFR5cGVfSW52YWxpZBD///////////8BEhwKGEVBZ3JlZW1l",
            "bnRUeXBlX0dsb2JhbFNTQRAAEhsKF0VBZ3JlZW1lbnRUeXBlX0NoaW5hU1NB",
            "EAEqfwoURU5vdGlmaWNhdGlvblNldHRpbmcSKAokRU5vdGlmaWNhdGlvblNl",
            "dHRpbmdOb3RpZnlVc2VEZWZhdWx0EAASHgoaRU5vdGlmaWNhdGlvblNldHRp",
            "bmdBbHdheXMQARIdChlFTm90aWZpY2F0aW9uU2V0dGluZ05ldmVyEAIqqAEK",
            "EkVUZXh0RmlsdGVyU2V0dGluZxImCiJFVGV4dEZpbHRlclNldHRpbmdTdGVh",
            "bUxhYk9wdGVkT3V0EAASHQoZRVRleHRGaWx0ZXJTZXR0aW5nRW5hYmxlZBAB",
            "EisKJ0VUZXh0RmlsdGVyU2V0dGluZ0VuYWJsZWRBbGxvd1Byb2Zhbml0eRAC",
            "Eh4KGkVUZXh0RmlsdGVyU2V0dGluZ0Rpc2FibGVkEAMy0isKBlBsYXllchKM",
            "AQohR2V0UmVjZW50UGxheXRpbWVTZXNzaW9uc0ZvckNoaWxkEjIuQ1BsYXll",
            "cl9HZXRSZWNlbnRQbGF5dGltZVNlc3Npb25zRm9yQ2hpbGRfUmVxdWVzdBoz",
            "LkNQbGF5ZXJfR2V0UmVjZW50UGxheXRpbWVTZXNzaW9uc0ZvckNoaWxkX1Jl",
            "c3BvbnNlEmUKFEdldFBsYXllckxpbmtEZXRhaWxzEiUuQ1BsYXllcl9HZXRQ",
            "bGF5ZXJMaW5rRGV0YWlsc19SZXF1ZXN0GiYuQ1BsYXllcl9HZXRQbGF5ZXJM",
            "aW5rRGV0YWlsc19SZXNwb25zZRKPAQoiR2V0TXV0dWFsRnJpZW5kc0Zvcklu",
            "Y29taW5nSW52aXRlcxIzLkNQbGF5ZXJfR2V0TXV0dWFsRnJpZW5kc0Zvcklu",
            "Y29taW5nSW52aXRlc19SZXF1ZXN0GjQuQ1BsYXllcl9HZXRNdXR1YWxGcmll",
            "bmRzRm9ySW5jb21pbmdJbnZpdGVzX1Jlc3BvbnNlElAKDUdldE93bmVkR2Ft",
            "ZXMSHi5DUGxheWVyX0dldE93bmVkR2FtZXNfUmVxdWVzdBofLkNQbGF5ZXJf",
            "R2V0T3duZWRHYW1lc19SZXNwb25zZRJKCgtHZXRQbGF5TmV4dBIcLkNQbGF5",
            "ZXJfR2V0UGxheU5leHRfUmVxdWVzdBodLkNQbGF5ZXJfR2V0UGxheU5leHRf",
            "UmVzcG9uc2USawoWR2V0RnJpZW5kc0dhbWVwbGF5SW5mbxInLkNQbGF5ZXJf",
            "R2V0RnJpZW5kc0dhbWVwbGF5SW5mb19SZXF1ZXN0GiguQ1BsYXllcl9HZXRG",
            "cmllbmRzR2FtZXBsYXlJbmZvX1Jlc3BvbnNlEl8KEkdldEdhbWVCYWRnZUxl",
            "dmVscxIjLkNQbGF5ZXJfR2V0R2FtZUJhZGdlTGV2ZWxzX1JlcXVlc3QaJC5D",
            "UGxheWVyX0dldEdhbWVCYWRnZUxldmVsc19SZXNwb25zZRJlChRHZXRQcm9m",
            "aWxlQmFja2dyb3VuZBIlLkNQbGF5ZXJfR2V0UHJvZmlsZUJhY2tncm91bmRf",
            "UmVxdWVzdBomLkNQbGF5ZXJfR2V0UHJvZmlsZUJhY2tncm91bmRfUmVzcG9u",
            "c2USZQoUU2V0UHJvZmlsZUJhY2tncm91bmQSJS5DUGxheWVyX1NldFByb2Zp",
            "bGVCYWNrZ3JvdW5kX1JlcXVlc3QaJi5DUGxheWVyX1NldFByb2ZpbGVCYWNr",
            "Z3JvdW5kX1Jlc3BvbnNlEnEKGEdldE1pbmlQcm9maWxlQmFja2dyb3VuZBIp",
            "LkNQbGF5ZXJfR2V0TWluaVByb2ZpbGVCYWNrZ3JvdW5kX1JlcXVlc3QaKi5D",
            "UGxheWVyX0dldE1pbmlQcm9maWxlQmFja2dyb3VuZF9SZXNwb25zZRJxChhT",
            "ZXRNaW5pUHJvZmlsZUJhY2tncm91bmQSKS5DUGxheWVyX1NldE1pbmlQcm9m",
            "aWxlQmFja2dyb3VuZF9SZXF1ZXN0GiouQ1BsYXllcl9TZXRNaW5pUHJvZmls",
            "ZUJhY2tncm91bmRfUmVzcG9uc2USUwoOR2V0QXZhdGFyRnJhbWUSHy5DUGxh",
            "eWVyX0dldEF2YXRhckZyYW1lX1JlcXVlc3QaIC5DUGxheWVyX0dldEF2YXRh",
            "ckZyYW1lX1Jlc3BvbnNlElMKDlNldEF2YXRhckZyYW1lEh8uQ1BsYXllcl9T",
            "ZXRBdmF0YXJGcmFtZV9SZXF1ZXN0GiAuQ1BsYXllcl9TZXRBdmF0YXJGcmFt",
            "ZV9SZXNwb25zZRJcChFHZXRBbmltYXRlZEF2YXRhchIiLkNQbGF5ZXJfR2V0",
            "QW5pbWF0ZWRBdmF0YXJfUmVxdWVzdBojLkNQbGF5ZXJfR2V0QW5pbWF0ZWRB",
            "dmF0YXJfUmVzcG9uc2USXAoRU2V0QW5pbWF0ZWRBdmF0YXISIi5DUGxheWVy",
            "X1NldEFuaW1hdGVkQXZhdGFyX1JlcXVlc3QaIy5DUGxheWVyX1NldEFuaW1h",
            "dGVkQXZhdGFyX1Jlc3BvbnNlEnEKGEdldFN0ZWFtRGVja0tleWJvYXJkU2tp",
            "bhIpLkNQbGF5ZXJfR2V0U3RlYW1EZWNrS2V5Ym9hcmRTa2luX1JlcXVlc3Qa",
            "Ki5DUGxheWVyX0dldFN0ZWFtRGVja0tleWJvYXJkU2tpbl9SZXNwb25zZRJx",
            "ChhTZXRTdGVhbURlY2tLZXlib2FyZFNraW4SKS5DUGxheWVyX1NldFN0ZWFt",
            "RGVja0tleWJvYXJkU2tpbl9SZXF1ZXN0GiouQ1BsYXllcl9TZXRTdGVhbURl",
            "Y2tLZXlib2FyZFNraW5fUmVzcG9uc2USZQoUR2V0UHJvZmlsZUl0ZW1zT3du",
            "ZWQSJS5DUGxheWVyX0dldFByb2ZpbGVJdGVtc093bmVkX1JlcXVlc3QaJi5D",
            "UGxheWVyX0dldFByb2ZpbGVJdGVtc093bmVkX1Jlc3BvbnNlEm4KF0dldFBy",
            "b2ZpbGVJdGVtc0VxdWlwcGVkEiguQ1BsYXllcl9HZXRQcm9maWxlSXRlbXNF",
            "cXVpcHBlZF9SZXF1ZXN0GikuQ1BsYXllcl9HZXRQcm9maWxlSXRlbXNFcXVp",
            "cHBlZF9SZXNwb25zZRJ6ChtTZXRFcXVpcHBlZFByb2ZpbGVJdGVtRmxhZ3MS",
            "LC5DUGxheWVyX1NldEVxdWlwcGVkUHJvZmlsZUl0ZW1GbGFnc19SZXF1ZXN0",
            "Gi0uQ1BsYXllcl9TZXRFcXVpcHBlZFByb2ZpbGVJdGVtRmxhZ3NfUmVzcG9u",
            "c2USVgoPR2V0RW1vdGljb25MaXN0EiAuQ1BsYXllcl9HZXRFbW90aWNvbkxp",
            "c3RfUmVxdWVzdBohLkNQbGF5ZXJfR2V0RW1vdGljb25MaXN0X1Jlc3BvbnNl",
            "EnQKGUdldENvbW11bml0eUJhZGdlUHJvZ3Jlc3MSKi5DUGxheWVyX0dldENv",
            "bW11bml0eUJhZGdlUHJvZ3Jlc3NfUmVxdWVzdBorLkNQbGF5ZXJfR2V0Q29t",
            "bXVuaXR5QmFkZ2VQcm9ncmVzc19SZXNwb25zZRJ3ChpHZXRUb3BBY2hpZXZl",
            "bWVudHNGb3JHYW1lcxIrLkNQbGF5ZXJfR2V0VG9wQWNoaWV2ZW1lbnRzRm9y",
            "R2FtZXNfUmVxdWVzdBosLkNQbGF5ZXJfR2V0VG9wQWNoaWV2ZW1lbnRzRm9y",
            "R2FtZXNfUmVzcG9uc2USbgoXR2V0QWNoaWV2ZW1lbnRzUHJvZ3Jlc3MSKC5D",
            "UGxheWVyX0dldEFjaGlldmVtZW50c1Byb2dyZXNzX1JlcXVlc3QaKS5DUGxh",
            "eWVyX0dldEFjaGlldmVtZW50c1Byb2dyZXNzX1Jlc3BvbnNlEmIKE0dldEdh",
            "bWVBY2hpZXZlbWVudHMSJC5DUGxheWVyX0dldEdhbWVBY2hpZXZlbWVudHNf",
            "UmVxdWVzdBolLkNQbGF5ZXJfR2V0R2FtZUFjaGlldmVtZW50c19SZXNwb25z",
            "ZRJZChBHZXRGYXZvcml0ZUJhZGdlEiEuQ1BsYXllcl9HZXRGYXZvcml0ZUJh",
            "ZGdlX1JlcXVlc3QaIi5DUGxheWVyX0dldEZhdm9yaXRlQmFkZ2VfUmVzcG9u",
            "c2USWQoQU2V0RmF2b3JpdGVCYWRnZRIhLkNQbGF5ZXJfU2V0RmF2b3JpdGVC",
            "YWRnZV9SZXF1ZXN0GiIuQ1BsYXllcl9TZXRGYXZvcml0ZUJhZGdlX1Jlc3Bv",
            "bnNlEm4KF0dldFByb2ZpbGVDdXN0b21pemF0aW9uEiguQ1BsYXllcl9HZXRQ",
            "cm9maWxlQ3VzdG9taXphdGlvbl9SZXF1ZXN0GikuQ1BsYXllcl9HZXRQcm9m",
            "aWxlQ3VzdG9taXphdGlvbl9SZXNwb25zZRKMAQohR2V0UHVyY2hhc2VkUHJv",
            "ZmlsZUN1c3RvbWl6YXRpb25zEjIuQ1BsYXllcl9HZXRQdXJjaGFzZWRQcm9m",
            "aWxlQ3VzdG9taXphdGlvbnNfUmVxdWVzdBozLkNQbGF5ZXJfR2V0UHVyY2hh",
            "c2VkUHJvZmlsZUN1c3RvbWl6YXRpb25zX1Jlc3BvbnNlEq0BCixHZXRQdXJj",
            "aGFzZWRBbmRVcGdyYWRlZFByb2ZpbGVDdXN0b21pemF0aW9ucxI9LkNQbGF5",
            "ZXJfR2V0UHVyY2hhc2VkQW5kVXBncmFkZWRQcm9maWxlQ3VzdG9taXphdGlv",
            "bnNfUmVxdWVzdBo+LkNQbGF5ZXJfR2V0UHVyY2hhc2VkQW5kVXBncmFkZWRQ",
            "cm9maWxlQ3VzdG9taXphdGlvbnNfUmVzcG9uc2USdAoZR2V0UHJvZmlsZVRo",
            "ZW1lc0F2YWlsYWJsZRIqLkNQbGF5ZXJfR2V0UHJvZmlsZVRoZW1lc0F2YWls",
            "YWJsZV9SZXF1ZXN0GisuQ1BsYXllcl9HZXRQcm9maWxlVGhlbWVzQXZhaWxh",
            "YmxlX1Jlc3BvbnNlElYKD1NldFByb2ZpbGVUaGVtZRIgLkNQbGF5ZXJfU2V0",
            "UHJvZmlsZVRoZW1lX1JlcXVlc3QaIS5DUGxheWVyX1NldFByb2ZpbGVUaGVt",
            "ZV9SZXNwb25zZRJoChVTZXRQcm9maWxlUHJlZmVyZW5jZXMSJi5DUGxheWVy",
            "X1NldFByb2ZpbGVQcmVmZXJlbmNlc19SZXF1ZXN0GicuQ1BsYXllcl9TZXRQ",
            "cm9maWxlUHJlZmVyZW5jZXNfUmVzcG9uc2USYgoTUG9zdFN0YXR1c1RvRnJp",
            "ZW5kcxIkLkNQbGF5ZXJfUG9zdFN0YXR1c1RvRnJpZW5kc19SZXF1ZXN0GiUu",
            "Q1BsYXllcl9Qb3N0U3RhdHVzVG9GcmllbmRzX1Jlc3BvbnNlElYKD0dldFBv",
            "c3RlZFN0YXR1cxIgLkNQbGF5ZXJfR2V0UG9zdGVkU3RhdHVzX1JlcXVlc3Qa",
            "IS5DUGxheWVyX0dldFBvc3RlZFN0YXR1c19SZXNwb25zZRJfChJEZWxldGVQ",
            "b3N0ZWRTdGF0dXMSIy5DUGxheWVyX0RlbGV0ZVBvc3RlZFN0YXR1c19SZXF1",
            "ZXN0GiQuQ1BsYXllcl9EZWxldGVQb3N0ZWRTdGF0dXNfUmVzcG9uc2USZQoY",
            "Q2xpZW50R2V0TGFzdFBsYXllZFRpbWVzEiMuQ1BsYXllcl9HZXRMYXN0UGxh",
            "eWVkVGltZXNfUmVxdWVzdBokLkNQbGF5ZXJfR2V0TGFzdFBsYXllZFRpbWVz",
            "X1Jlc3BvbnNlEl8KEkdldFRpbWVTU0FBY2NlcHRlZBIjLkNQbGF5ZXJfR2V0",
            "VGltZVNTQUFjY2VwdGVkX1JlcXVlc3QaJC5DUGxheWVyX0dldFRpbWVTU0FB",
            "Y2NlcHRlZF9SZXNwb25zZRJECglBY2NlcHRTU0ESGi5DUGxheWVyX0FjY2Vw",
            "dFNTQV9SZXF1ZXN0GhsuQ1BsYXllcl9BY2NlcHRTU0FfUmVzcG9uc2USVgoP",
            "R2V0Tmlja25hbWVMaXN0EiAuQ1BsYXllcl9HZXROaWNrbmFtZUxpc3RfUmVx",
            "dWVzdBohLkNQbGF5ZXJfR2V0Tmlja25hbWVMaXN0X1Jlc3BvbnNlEm4KF0dl",
            "dFBlckZyaWVuZFByZWZlcmVuY2VzEiguQ1BsYXllcl9HZXRQZXJGcmllbmRQ",
            "cmVmZXJlbmNlc19SZXF1ZXN0GikuQ1BsYXllcl9HZXRQZXJGcmllbmRQcmVm",
            "ZXJlbmNlc19SZXNwb25zZRJuChdTZXRQZXJGcmllbmRQcmVmZXJlbmNlcxIo",
            "LkNQbGF5ZXJfU2V0UGVyRnJpZW5kUHJlZmVyZW5jZXNfUmVxdWVzdBopLkNQ",
            "bGF5ZXJfU2V0UGVyRnJpZW5kUHJlZmVyZW5jZXNfUmVzcG9uc2USRAoJQWRk",
            "RnJpZW5kEhouQ1BsYXllcl9BZGRGcmllbmRfUmVxdWVzdBobLkNQbGF5ZXJf",
            "QWRkRnJpZW5kX1Jlc3BvbnNlEk0KDFJlbW92ZUZyaWVuZBIdLkNQbGF5ZXJf",
            "UmVtb3ZlRnJpZW5kX1JlcXVlc3QaHi5DUGxheWVyX1JlbW92ZUZyaWVuZF9S",
            "ZXNwb25zZRJNCgxJZ25vcmVGcmllbmQSHS5DUGxheWVyX0lnbm9yZUZyaWVu",
            "ZF9SZXF1ZXN0Gh4uQ1BsYXllcl9JZ25vcmVGcmllbmRfUmVzcG9uc2USbgoX",
            "R2V0Q29tbXVuaXR5UHJlZmVyZW5jZXMSKC5DUGxheWVyX0dldENvbW11bml0",
            "eVByZWZlcmVuY2VzX1JlcXVlc3QaKS5DUGxheWVyX0dldENvbW11bml0eVBy",
            "ZWZlcmVuY2VzX1Jlc3BvbnNlEm4KF1NldENvbW11bml0eVByZWZlcmVuY2Vz",
            "EiguQ1BsYXllcl9TZXRDb21tdW5pdHlQcmVmZXJlbmNlc19SZXF1ZXN0Giku",
            "Q1BsYXllcl9TZXRDb21tdW5pdHlQcmVmZXJlbmNlc19SZXNwb25zZRJfChJH",
            "ZXRUZXh0RmlsdGVyV29yZHMSIy5DUGxheWVyX0dldFRleHRGaWx0ZXJXb3Jk",
            "c19SZXF1ZXN0GiQuQ1BsYXllcl9HZXRUZXh0RmlsdGVyV29yZHNfUmVzcG9u",
            "c2USfQocR2V0TmV3U3RlYW1Bbm5vdW5jZW1lbnRTdGF0ZRItLkNQbGF5ZXJf",
            "R2V0TmV3U3RlYW1Bbm5vdW5jZW1lbnRTdGF0ZV9SZXF1ZXN0Gi4uQ1BsYXll",
            "cl9HZXROZXdTdGVhbUFubm91bmNlbWVudFN0YXRlX1Jlc3BvbnNlEoYBCh9V",
            "cGRhdGVTdGVhbUFubm91bmNlbWVudExhc3RSZWFkEjAuQ1BsYXllcl9VcGRh",
            "dGVTdGVhbUFubm91bmNlbWVudExhc3RSZWFkX1JlcXVlc3QaMS5DUGxheWVy",
            "X1VwZGF0ZVN0ZWFtQW5ub3VuY2VtZW50TGFzdFJlYWRfUmVzcG9uc2USXwoS",
            "R2V0UHJpdmFjeVNldHRpbmdzEiMuQ1BsYXllcl9HZXRQcml2YWN5U2V0dGlu",
            "Z3NfUmVxdWVzdBokLkNQbGF5ZXJfR2V0UHJpdmFjeVNldHRpbmdzX1Jlc3Bv",
            "bnNlEl8KEkdldER1cmF0aW9uQ29udHJvbBIjLkNQbGF5ZXJfR2V0RHVyYXRp",
            "b25Db250cm9sX1JlcXVlc3QaJC5DUGxheWVyX0dldER1cmF0aW9uQ29udHJv",
            "bF9SZXNwb25zZRJ3ChpSZWNvcmREaXNjb25uZWN0ZWRQbGF5dGltZRIrLkNQ",
            "bGF5ZXJfUmVjb3JkRGlzY29ubmVjdGVkUGxheXRpbWVfUmVxdWVzdBosLkNQ",
            "bGF5ZXJfUmVjb3JkRGlzY29ubmVjdGVkUGxheXRpbWVfUmVzcG9uc2UykwYK",
            "DFBsYXllckNsaWVudBJLChVOb3RpZnlMYXN0UGxheWVkVGltZXMSJS5DUGxh",
            "eWVyX0xhc3RQbGF5ZWRUaW1lc19Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNl",
            "ElcKG05vdGlmeUZyaWVuZE5pY2tuYW1lQ2hhbmdlZBIrLkNQbGF5ZXJfRnJp",
            "ZW5kTmlja25hbWVDaGFuZ2VkX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2US",
            "bwonTm90aWZ5RnJpZW5kRXF1aXBwZWRQcm9maWxlSXRlbXNDaGFuZ2VkEjcu",
            "Q1BsYXllcl9GcmllbmRFcXVpcHBlZFByb2ZpbGVJdGVtc0NoYW5nZWRfTm90",
            "aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJfCh9Ob3RpZnlOZXdTdGVhbUFubm91",
            "bmNlbWVudFN0YXRlEi8uQ1BsYXllcl9OZXdTdGVhbUFubm91bmNlbWVudFN0",
            "YXRlX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USYwohTm90aWZ5Q29tbXVu",
            "aXR5UHJlZmVyZW5jZXNDaGFuZ2VkEjEuQ1BsYXllcl9Db21tdW5pdHlQcmVm",
            "ZXJlbmNlc0NoYW5nZWRfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJZChxO",
            "b3RpZnlUZXh0RmlsdGVyV29yZHNDaGFuZ2VkEiwuQ1BsYXllcl9UZXh0Rmls",
            "dGVyV29yZHNDaGFuZ2VkX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USYwoh",
            "Tm90aWZ5UGVyRnJpZW5kUHJlZmVyZW5jZXNDaGFuZ2VkEjEuQ1BsYXllcl9Q",
            "ZXJGcmllbmRQcmVmZXJlbmNlc0NoYW5nZWRfTm90aWZpY2F0aW9uGgsuTm9S",
            "ZXNwb25zZRJgCiNOb3RpZnlQcml2YWN5UHJpdmFjeVNldHRpbmdzQ2hhbmdl",
            "ZBIsLkNQbGF5ZXJfUHJpdmFjeVNldHRpbmdzQ2hhbmdlZF9Ob3RpZmljYXRp",
            "b24aCy5Ob1Jlc3BvbnNlGgTAtRgCQh2AAQGqAhdPcGVuU3RlYW13b3Jrcy5Q",
            "cm90b2J1Zg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesUnifiedBaseSteamclientReflection.Descriptor, global::OpenSteamworks.Protobuf.EnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenSteamworks.Protobuf.EProfileCustomizationStyle), typeof(global::OpenSteamworks.Protobuf.EAgreementType), typeof(global::OpenSteamworks.Protobuf.ENotificationSetting), typeof(global::OpenSteamworks.Protobuf.ETextFilterSetting), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Request), global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response), global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Parser, new[]{ "Sessions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession), global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession.Parser, new[]{ "TimeStart", "TimeEnd", "Appid", "DeviceType", "Disconnected" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Request.Parser, new[]{ "Steamids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Parser, new[]{ "Accounts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails), global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Parser, new[]{ "PublicData", "PrivateData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData), global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData.Parser, new[]{ "Steamid", "VisibilityState", "PrivacyState", "ProfileState", "BanExpiresTime", "AccountFlags", "ShaDigestAvatar", "PersonaName", "ProfileUrl", "ContentCountryRestricted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData), global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData.Parser, new[]{ "PersonaState", "PersonaStateFlags", "TimeCreated", "GameId", "GameServerSteamId", "GameServerIpAddress", "GameServerPort", "GameExtraInfo", "AccountName", "LobbySteamId", "RichPresenceKv", "BroadcastSessionId", "WatchingBroadcastAccountid", "WatchingBroadcastAppid", "WatchingBroadcastViewers", "WatchingBroadcastTitle", "LastLogoffTime", "LastSeenOnline", "GameOsType", "GameDeviceType", "GameDeviceName", "GameIsPrivate" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetMutualFriendsForIncomingInvites_Request), global::OpenSteamworks.Protobuf.CPlayer_GetMutualFriendsForIncomingInvites_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList), global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList.Parser, new[]{ "Steamid", "MutualFriendAccountIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetMutualFriendsForIncomingInvites_Response), global::OpenSteamworks.Protobuf.CPlayer_GetMutualFriendsForIncomingInvites_Response.Parser, new[]{ "IncomingInviteMutualFriendsLists" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Request), global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Request.Parser, new[]{ "Steamid", "IncludeAppinfo", "IncludePlayedFreeGames", "AppidsFilter", "IncludeFreeSub", "SkipUnvettedApps", "Language", "IncludeExtendedAppinfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response), global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Parser, new[]{ "GameCount", "Games" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game), global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game.Parser, new[]{ "Appid", "Name", "Playtime2Weeks", "PlaytimeForever", "ImgIconUrl", "HasCommunityVisibleStats", "PlaytimeWindowsForever", "PlaytimeMacForever", "PlaytimeLinuxForever", "RtimeLastPlayed", "CapsuleFilename", "SortAs", "HasWorkshop", "HasMarket", "HasDlc", "HasLeaderboards", "ContentDescriptorids", "PlaytimeDisconnected" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayNext_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPlayNext_Request.Parser, new[]{ "MaxAgeSeconds", "IgnoreAppids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPlayNext_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPlayNext_Response.Parser, new[]{ "LastUpdateTime", "Appids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Request), global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Request.Parser, new[]{ "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response), global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Parser, new[]{ "YourInfo", "InGame", "PlayedRecently", "PlayedEver", "Owns", "InWishlist" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo), global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo.Parser, new[]{ "Steamid", "MinutesPlayed", "MinutesPlayedForever" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo), global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo.Parser, new[]{ "Steamid", "MinutesPlayed", "MinutesPlayedForever", "InWishlist", "Owned" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Request), global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Request.Parser, new[]{ "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response), global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Parser, new[]{ "PlayerLevel", "Badges" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge), global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge.Parser, new[]{ "Level", "Series", "BorderColor" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileBackground_Request), global::OpenSteamworks.Protobuf.CPlayer_GetProfileBackground_Request.Parser, new[]{ "Steamid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.ProfileItem), global::OpenSteamworks.Protobuf.ProfileItem.Parser, new[]{ "Communityitemid", "ImageSmall", "ImageLarge", "Name", "ItemTitle", "ItemDescription", "Appid", "ItemType", "ItemClass", "MovieWebm", "MovieMp4", "MovieWebmSmall", "MovieMp4Small", "EquippedFlags", "ProfileColors" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor), global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor.Parser, new[]{ "StyleName", "Color" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileBackground_Response), global::OpenSteamworks.Protobuf.CPlayer_GetProfileBackground_Response.Parser, new[]{ "ProfileBackground" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetProfileBackground_Request), global::OpenSteamworks.Protobuf.CPlayer_SetProfileBackground_Request.Parser, new[]{ "Communityitemid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetProfileBackground_Response), global::OpenSteamworks.Protobuf.CPlayer_SetProfileBackground_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetMiniProfileBackground_Request), global::OpenSteamworks.Protobuf.CPlayer_GetMiniProfileBackground_Request.Parser, new[]{ "Steamid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetMiniProfileBackground_Response), global::OpenSteamworks.Protobuf.CPlayer_GetMiniProfileBackground_Response.Parser, new[]{ "ProfileBackground" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetMiniProfileBackground_Request), global::OpenSteamworks.Protobuf.CPlayer_SetMiniProfileBackground_Request.Parser, new[]{ "Communityitemid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetMiniProfileBackground_Response), global::OpenSteamworks.Protobuf.CPlayer_SetMiniProfileBackground_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAvatarFrame_Request), global::OpenSteamworks.Protobuf.CPlayer_GetAvatarFrame_Request.Parser, new[]{ "Steamid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAvatarFrame_Response), global::OpenSteamworks.Protobuf.CPlayer_GetAvatarFrame_Response.Parser, new[]{ "AvatarFrame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetAvatarFrame_Request), global::OpenSteamworks.Protobuf.CPlayer_SetAvatarFrame_Request.Parser, new[]{ "Communityitemid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetAvatarFrame_Response), global::OpenSteamworks.Protobuf.CPlayer_SetAvatarFrame_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAnimatedAvatar_Request), global::OpenSteamworks.Protobuf.CPlayer_GetAnimatedAvatar_Request.Parser, new[]{ "Steamid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAnimatedAvatar_Response), global::OpenSteamworks.Protobuf.CPlayer_GetAnimatedAvatar_Response.Parser, new[]{ "Avatar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetAnimatedAvatar_Request), global::OpenSteamworks.Protobuf.CPlayer_SetAnimatedAvatar_Request.Parser, new[]{ "Communityitemid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetAnimatedAvatar_Response), global::OpenSteamworks.Protobuf.CPlayer_SetAnimatedAvatar_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetSteamDeckKeyboardSkin_Request), global::OpenSteamworks.Protobuf.CPlayer_GetSteamDeckKeyboardSkin_Request.Parser, new[]{ "Steamid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetSteamDeckKeyboardSkin_Response), global::OpenSteamworks.Protobuf.CPlayer_GetSteamDeckKeyboardSkin_Response.Parser, new[]{ "SteamDeckeyboardSkin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetSteamDeckKeyboardSkin_Request), global::OpenSteamworks.Protobuf.CPlayer_SetSteamDeckKeyboardSkin_Request.Parser, new[]{ "Communityitemid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetSteamDeckKeyboardSkin_Response), global::OpenSteamworks.Protobuf.CPlayer_SetSteamDeckKeyboardSkin_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsOwned_Request), global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsOwned_Request.Parser, new[]{ "Language", "Filters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsOwned_Response), global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsOwned_Response.Parser, new[]{ "ProfileBackgrounds", "MiniProfileBackgrounds", "AvatarFrames", "AnimatedAvatars", "ProfileModifiers", "SteamDeckeyboardSkins", "SteamDecstartupMovies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsEquipped_Request), global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsEquipped_Request.Parser, new[]{ "Steamid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsEquipped_Response), global::OpenSteamworks.Protobuf.CPlayer_GetProfileItemsEquipped_Response.Parser, new[]{ "ProfileBackground", "MiniProfileBackground", "AvatarFrame", "AnimatedAvatar", "ProfileModifier", "SteamDeckeyboardSkin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetEquippedProfileItemFlags_Request), global::OpenSteamworks.Protobuf.CPlayer_SetEquippedProfileItemFlags_Request.Parser, new[]{ "Communityitemid", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetEquippedProfileItemFlags_Response), global::OpenSteamworks.Protobuf.CPlayer_SetEquippedProfileItemFlags_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Request), global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response), global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Parser, new[]{ "Emoticons" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon), global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon.Parser, new[]{ "Name", "Count", "TimeLastUsed", "UseCount", "TimeReceived", "Appid" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Request), global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Request.Parser, new[]{ "Steamid", "Badgeid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response), global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Parser, new[]{ "Quests" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest), global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest.Parser, new[]{ "Questid", "Completed" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Request), global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Request.Parser, new[]{ "Steamid", "Language", "MaxAchievements", "Appids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response), global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Parser, new[]{ "Games" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement), global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement.Parser, new[]{ "Statid", "Bit", "Name", "Desc", "Icon", "IconGray", "Hidden", "PlayerPercentUnlocked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game), global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game.Parser, new[]{ "Appid", "TotalAchievements", "Achievements" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Request), global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Request.Parser, new[]{ "Steamid", "Language", "Appids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response), global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Parser, new[]{ "AchievementProgress" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress), global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress.Parser, new[]{ "Appid", "Unlocked", "Total", "Percentage", "AllUnlocked", "CacheTime" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Request), global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Request.Parser, new[]{ "Appid", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response), global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Parser, new[]{ "Achievements" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement), global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement.Parser, new[]{ "InternalName", "LocalizedName", "LocalizedDesc", "Icon", "IconGray", "Hidden", "PlayerPercentUnlocked" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetFavoriteBadge_Request), global::OpenSteamworks.Protobuf.CPlayer_GetFavoriteBadge_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetFavoriteBadge_Response), global::OpenSteamworks.Protobuf.CPlayer_GetFavoriteBadge_Response.Parser, new[]{ "HasFavoriteBadge", "Badgeid", "Communityitemid", "ItemType", "BorderColor", "Appid", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetFavoriteBadge_Request), global::OpenSteamworks.Protobuf.CPlayer_SetFavoriteBadge_Request.Parser, new[]{ "Communityitemid", "Badgeid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetFavoriteBadge_Response), global::OpenSteamworks.Protobuf.CPlayer_SetFavoriteBadge_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Request), global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Request.Parser, new[]{ "Steamid", "IncludeInactiveCustomizations", "IncludePurchasedCustomizations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.ProfileCustomizationSlot), global::OpenSteamworks.Protobuf.ProfileCustomizationSlot.Parser, new[]{ "Slot", "Appid", "Publishedfileid", "ItemAssetid", "ItemContextid", "Notes", "Title", "Accountid", "Badgeid", "BorderColor", "ItemClassid", "ItemInstanceid", "BanChecresult", "ReplayYear" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.ProfileCustomization), global::OpenSteamworks.Protobuf.ProfileCustomization.Parser, new[]{ "CustomizationType", "Large", "Slots", "Active", "CustomizationStyle", "Purchaseid", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.ProfileTheme), global::OpenSteamworks.Protobuf.ProfileTheme.Parser, new[]{ "ThemeId", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.ProfilePreferences), global::OpenSteamworks.Protobuf.ProfilePreferences.Parser, new[]{ "HideProfileAwards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response), global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Parser, new[]{ "Customizations", "SlotsAvailable", "ProfileTheme", "PurchasedCustomizations", "ProfilePreferences" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization), global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization.Parser, new[]{ "Purchaseid", "CustomizationType", "Level" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Parser, new[]{ "PurchasedCustomizations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization.Parser, new[]{ "Purchaseid", "CustomizationType" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Parser, new[]{ "PurchasedCustomizations", "UpgradedCustomizations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization.Parser, new[]{ "CustomizationType", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization), global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization.Parser, new[]{ "CustomizationType", "Level" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileThemesAvailable_Request), global::OpenSteamworks.Protobuf.CPlayer_GetProfileThemesAvailable_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetProfileThemesAvailable_Response), global::OpenSteamworks.Protobuf.CPlayer_GetProfileThemesAvailable_Response.Parser, new[]{ "ProfileThemes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetProfileTheme_Request), global::OpenSteamworks.Protobuf.CPlayer_SetProfileTheme_Request.Parser, new[]{ "ThemeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetProfileTheme_Response), global::OpenSteamworks.Protobuf.CPlayer_SetProfileTheme_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetProfilePreferences_Request), global::OpenSteamworks.Protobuf.CPlayer_SetProfilePreferences_Request.Parser, new[]{ "ProfilePreferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetProfilePreferences_Response), global::OpenSteamworks.Protobuf.CPlayer_SetProfilePreferences_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_PostStatusToFriends_Request), global::OpenSteamworks.Protobuf.CPlayer_PostStatusToFriends_Request.Parser, new[]{ "Appid", "StatusText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_PostStatusToFriends_Response), global::OpenSteamworks.Protobuf.CPlayer_PostStatusToFriends_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPostedStatus_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPostedStatus_Request.Parser, new[]{ "Steamid", "Postid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPostedStatus_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPostedStatus_Response.Parser, new[]{ "Accountid", "Postid", "StatusText", "Deleted", "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_DeletePostedStatus_Request), global::OpenSteamworks.Protobuf.CPlayer_DeletePostedStatus_Request.Parser, new[]{ "Postid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_DeletePostedStatus_Response), global::OpenSteamworks.Protobuf.CPlayer_DeletePostedStatus_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Request), global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Request.Parser, new[]{ "MinLastPlayed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response), global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Parser, new[]{ "Games" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game), global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game.Parser, new[]{ "Appid", "LastPlaytime", "Playtime2Weeks", "PlaytimeForever", "FirstPlaytime", "PlaytimeWindowsForever", "PlaytimeMacForever", "PlaytimeLinuxForever", "FirstWindowsPlaytime", "FirstMacPlaytime", "FirstLinuxPlaytime", "LastWindowsPlaytime", "LastMacPlaytime", "LastLinuxPlaytime", "PlaytimeDisconnected" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTimeSSAAccepted_Request), global::OpenSteamworks.Protobuf.CPlayer_GetTimeSSAAccepted_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTimeSSAAccepted_Response), global::OpenSteamworks.Protobuf.CPlayer_GetTimeSSAAccepted_Response.Parser, new[]{ "TimeSsaAccepted", "TimeSsaUpdated", "TimeChinassaAccepted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_AcceptSSA_Request), global::OpenSteamworks.Protobuf.CPlayer_AcceptSSA_Request.Parser, new[]{ "AgreementType", "TimeSignedUtc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_AcceptSSA_Response), global::OpenSteamworks.Protobuf.CPlayer_AcceptSSA_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Request), global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response), global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Parser, new[]{ "Nicknames" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname), global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname.Parser, new[]{ "Accountid", "Nickname" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPerFriendPreferences_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPerFriendPreferences_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.PerFriendPreferences), global::OpenSteamworks.Protobuf.PerFriendPreferences.Parser, new[]{ "Accountid", "Nickname", "NotificationsShowingame", "NotificationsShowonline", "NotificationsShowmessages", "SoundsShowingame", "SoundsShowonline", "SoundsShowmessages", "NotificationsSendmobile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPerFriendPreferences_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPerFriendPreferences_Response.Parser, new[]{ "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetPerFriendPreferences_Request), global::OpenSteamworks.Protobuf.CPlayer_SetPerFriendPreferences_Request.Parser, new[]{ "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetPerFriendPreferences_Response), global::OpenSteamworks.Protobuf.CPlayer_SetPerFriendPreferences_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_AddFriend_Request), global::OpenSteamworks.Protobuf.CPlayer_AddFriend_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_AddFriend_Response), global::OpenSteamworks.Protobuf.CPlayer_AddFriend_Response.Parser, new[]{ "InviteSent", "FriendRelationship", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_RemoveFriend_Request), global::OpenSteamworks.Protobuf.CPlayer_RemoveFriend_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_RemoveFriend_Response), global::OpenSteamworks.Protobuf.CPlayer_RemoveFriend_Response.Parser, new[]{ "FriendRelationship" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_IgnoreFriend_Request), global::OpenSteamworks.Protobuf.CPlayer_IgnoreFriend_Request.Parser, new[]{ "Steamid", "Unignore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_IgnoreFriend_Response), global::OpenSteamworks.Protobuf.CPlayer_IgnoreFriend_Response.Parser, new[]{ "FriendRelationship" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetCommunityPreferences_Request), global::OpenSteamworks.Protobuf.CPlayer_GetCommunityPreferences_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences), global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences.Parser, new[]{ "ParenthesizeNicknames", "TextFilterSetting", "TextFilterIgnoreFriends", "TextFilterWordsRevision", "TimestampUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetCommunityPreferences_Response), global::OpenSteamworks.Protobuf.CPlayer_GetCommunityPreferences_Response.Parser, new[]{ "Preferences", "ContentDescriptorPreferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetCommunityPreferences_Request), global::OpenSteamworks.Protobuf.CPlayer_SetCommunityPreferences_Request.Parser, new[]{ "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_SetCommunityPreferences_Response), global::OpenSteamworks.Protobuf.CPlayer_SetCommunityPreferences_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTextFilterWords_Request), global::OpenSteamworks.Protobuf.CPlayer_GetTextFilterWords_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords), global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords.Parser, new[]{ "TextFilterCustomBannedWords", "TextFilterCustomCleanWords", "TextFilterWordsRevision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetTextFilterWords_Response), global::OpenSteamworks.Protobuf.CPlayer_GetTextFilterWords_Response.Parser, new[]{ "Words" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetNewSteamAnnouncementState_Request), global::OpenSteamworks.Protobuf.CPlayer_GetNewSteamAnnouncementState_Request.Parser, new[]{ "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetNewSteamAnnouncementState_Response), global::OpenSteamworks.Protobuf.CPlayer_GetNewSteamAnnouncementState_Response.Parser, new[]{ "State", "AnnouncementHeadline", "AnnouncementUrl", "TimePosted", "AnnouncementGid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_UpdateSteamAnnouncementLastRead_Request), global::OpenSteamworks.Protobuf.CPlayer_UpdateSteamAnnouncementLastRead_Request.Parser, new[]{ "AnnouncementGid", "TimePosted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_UpdateSteamAnnouncementLastRead_Response), global::OpenSteamworks.Protobuf.CPlayer_UpdateSteamAnnouncementLastRead_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPrivacySettings_Request), global::OpenSteamworks.Protobuf.CPlayer_GetPrivacySettings_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPrivacySettings), global::OpenSteamworks.Protobuf.CPrivacySettings.Parser, new[]{ "PrivacyState", "PrivacyStateInventory", "PrivacyStateGifts", "PrivacyStateOwnedgames", "PrivacyStatePlaytime", "PrivacyStateFriendslist" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetPrivacySettings_Response), global::OpenSteamworks.Protobuf.CPlayer_GetPrivacySettings_Response.Parser, new[]{ "PrivacySettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetDurationControl_Request), global::OpenSteamworks.Protobuf.CPlayer_GetDurationControl_Request.Parser, new[]{ "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_GetDurationControl_Response), global::OpenSteamworks.Protobuf.CPlayer_GetDurationControl_Response.Parser, new[]{ "IsEnabled", "Seconds", "SecondsToday", "IsSteamchinaAccount", "IsAgeVerified", "SecondsAllowedToday", "AgeVerificationPending", "Blocminors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request), global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Parser, new[]{ "PlaySessions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory), global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory.Parser, new[]{ "Appid", "SessionTimeStart", "Seconds", "Offline", "Owner" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Response), global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_LastPlayedTimes_Notification), global::OpenSteamworks.Protobuf.CPlayer_LastPlayedTimes_Notification.Parser, new[]{ "Games" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_FriendNicknameChanged_Notification), global::OpenSteamworks.Protobuf.CPlayer_FriendNicknameChanged_Notification.Parser, new[]{ "Accountid", "Nickname", "IsEchoToSelf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_FriendEquippedProfileItemsChanged_Notification), global::OpenSteamworks.Protobuf.CPlayer_FriendEquippedProfileItemsChanged_Notification.Parser, new[]{ "Accountid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_NewSteamAnnouncementState_Notification), global::OpenSteamworks.Protobuf.CPlayer_NewSteamAnnouncementState_Notification.Parser, new[]{ "State", "AnnouncementHeadline", "AnnouncementUrl", "TimePosted", "AnnouncementGid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferencesChanged_Notification), global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferencesChanged_Notification.Parser, new[]{ "Preferences", "ContentDescriptorPreferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_TextFilterWordsChanged_Notification), global::OpenSteamworks.Protobuf.CPlayer_TextFilterWordsChanged_Notification.Parser, new[]{ "Words" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_PerFriendPreferencesChanged_Notification), global::OpenSteamworks.Protobuf.CPlayer_PerFriendPreferencesChanged_Notification.Parser, new[]{ "Accountid", "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPlayer_PrivacySettingsChanged_Notification), global::OpenSteamworks.Protobuf.CPlayer_PrivacySettingsChanged_Notification.Parser, new[]{ "PrivacySettings" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EProfileCustomizationStyle {
    [pbr::OriginalName("EProfileCustomizationStyleDefault")] Default = 0,
    [pbr::OriginalName("EProfileCustomizationStyleSelected")] Selected = 1,
    [pbr::OriginalName("EProfileCustomizationStyleRarest")] Rarest = 2,
    [pbr::OriginalName("EProfileCustomizationStyleMostRecent")] MostRecent = 3,
    [pbr::OriginalName("EProfileCustomizationStyleRandom")] Random = 4,
    [pbr::OriginalName("EProfileCustomizationStyleHighestRated")] HighestRated = 5,
  }

  public enum EAgreementType {
    [pbr::OriginalName("EAgreementType_Invalid")] Invalid = -1,
    [pbr::OriginalName("EAgreementType_GlobalSSA")] GlobalSsa = 0,
    [pbr::OriginalName("EAgreementType_ChinaSSA")] ChinaSsa = 1,
  }

  public enum ENotificationSetting {
    [pbr::OriginalName("ENotificationSettingNotifyUseDefault")] NotifyUseDefault = 0,
    [pbr::OriginalName("ENotificationSettingAlways")] Always = 1,
    [pbr::OriginalName("ENotificationSettingNever")] Never = 2,
  }

  public enum ETextFilterSetting {
    [pbr::OriginalName("ETextFilterSettingSteamLabOptedOut")] SteamLabOptedOut = 0,
    [pbr::OriginalName("ETextFilterSettingEnabled")] Enabled = 1,
    [pbr::OriginalName("ETextFilterSettingEnabledAllowProfanity")] EnabledAllowProfanity = 2,
    [pbr::OriginalName("ETextFilterSettingDisabled")] Disabled = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetRecentPlaytimeSessionsForChild_Request : pb::IMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetRecentPlaytimeSessionsForChild_Request> _parser = new pb::MessageParser<CPlayer_GetRecentPlaytimeSessionsForChild_Request>(() => new CPlayer_GetRecentPlaytimeSessionsForChild_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetRecentPlaytimeSessionsForChild_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetRecentPlaytimeSessionsForChild_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetRecentPlaytimeSessionsForChild_Request(CPlayer_GetRecentPlaytimeSessionsForChild_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetRecentPlaytimeSessionsForChild_Request Clone() {
      return new CPlayer_GetRecentPlaytimeSessionsForChild_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetRecentPlaytimeSessionsForChild_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetRecentPlaytimeSessionsForChild_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetRecentPlaytimeSessionsForChild_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetRecentPlaytimeSessionsForChild_Response : pb::IMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetRecentPlaytimeSessionsForChild_Response> _parser = new pb::MessageParser<CPlayer_GetRecentPlaytimeSessionsForChild_Response>(() => new CPlayer_GetRecentPlaytimeSessionsForChild_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetRecentPlaytimeSessionsForChild_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetRecentPlaytimeSessionsForChild_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetRecentPlaytimeSessionsForChild_Response(CPlayer_GetRecentPlaytimeSessionsForChild_Response other) : this() {
      sessions_ = other.sessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetRecentPlaytimeSessionsForChild_Response Clone() {
      return new CPlayer_GetRecentPlaytimeSessionsForChild_Response(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession> sessions_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Types.PlaytimeSession> Sessions {
      get { return sessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetRecentPlaytimeSessionsForChild_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetRecentPlaytimeSessionsForChild_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetRecentPlaytimeSessionsForChild_Response other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetRecentPlaytimeSessionsForChild_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PlaytimeSession : pb::IMessage<PlaytimeSession>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlaytimeSession> _parser = new pb::MessageParser<PlaytimeSession>(() => new PlaytimeSession());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlaytimeSession> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetRecentPlaytimeSessionsForChild_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlaytimeSession() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlaytimeSession(PlaytimeSession other) : this() {
          _hasBits0 = other._hasBits0;
          timeStart_ = other.timeStart_;
          timeEnd_ = other.timeEnd_;
          appid_ = other.appid_;
          deviceType_ = other.deviceType_;
          disconnected_ = other.disconnected_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlaytimeSession Clone() {
          return new PlaytimeSession(this);
        }

        /// <summary>Field number for the "time_start" field.</summary>
        public const int TimeStartFieldNumber = 1;
        private readonly static uint TimeStartDefaultValue = 0;

        private uint timeStart_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint TimeStart {
          get { if ((_hasBits0 & 1) != 0) { return timeStart_; } else { return TimeStartDefaultValue; } }
          set {
            _hasBits0 |= 1;
            timeStart_ = value;
          }
        }
        /// <summary>Gets whether the "time_start" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimeStart {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "time_start" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimeStart() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "time_end" field.</summary>
        public const int TimeEndFieldNumber = 2;
        private readonly static uint TimeEndDefaultValue = 0;

        private uint timeEnd_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint TimeEnd {
          get { if ((_hasBits0 & 2) != 0) { return timeEnd_; } else { return TimeEndDefaultValue; } }
          set {
            _hasBits0 |= 2;
            timeEnd_ = value;
          }
        }
        /// <summary>Gets whether the "time_end" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimeEnd {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "time_end" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimeEnd() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 3;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 4) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 4;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "device_type" field.</summary>
        public const int DeviceTypeFieldNumber = 4;
        private readonly static uint DeviceTypeDefaultValue = 0;

        private uint deviceType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint DeviceType {
          get { if ((_hasBits0 & 8) != 0) { return deviceType_; } else { return DeviceTypeDefaultValue; } }
          set {
            _hasBits0 |= 8;
            deviceType_ = value;
          }
        }
        /// <summary>Gets whether the "device_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeviceType {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "device_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeviceType() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "disconnected" field.</summary>
        public const int DisconnectedFieldNumber = 5;
        private readonly static bool DisconnectedDefaultValue = false;

        private bool disconnected_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Disconnected {
          get { if ((_hasBits0 & 16) != 0) { return disconnected_; } else { return DisconnectedDefaultValue; } }
          set {
            _hasBits0 |= 16;
            disconnected_ = value;
          }
        }
        /// <summary>Gets whether the "disconnected" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDisconnected {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "disconnected" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDisconnected() {
          _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlaytimeSession);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlaytimeSession other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TimeStart != other.TimeStart) return false;
          if (TimeEnd != other.TimeEnd) return false;
          if (Appid != other.Appid) return false;
          if (DeviceType != other.DeviceType) return false;
          if (Disconnected != other.Disconnected) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasTimeStart) hash ^= TimeStart.GetHashCode();
          if (HasTimeEnd) hash ^= TimeEnd.GetHashCode();
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasDeviceType) hash ^= DeviceType.GetHashCode();
          if (HasDisconnected) hash ^= Disconnected.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasTimeStart) {
            output.WriteRawTag(8);
            output.WriteUInt32(TimeStart);
          }
          if (HasTimeEnd) {
            output.WriteRawTag(16);
            output.WriteUInt32(TimeEnd);
          }
          if (HasAppid) {
            output.WriteRawTag(24);
            output.WriteUInt32(Appid);
          }
          if (HasDeviceType) {
            output.WriteRawTag(32);
            output.WriteUInt32(DeviceType);
          }
          if (HasDisconnected) {
            output.WriteRawTag(40);
            output.WriteBool(Disconnected);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasTimeStart) {
            output.WriteRawTag(8);
            output.WriteUInt32(TimeStart);
          }
          if (HasTimeEnd) {
            output.WriteRawTag(16);
            output.WriteUInt32(TimeEnd);
          }
          if (HasAppid) {
            output.WriteRawTag(24);
            output.WriteUInt32(Appid);
          }
          if (HasDeviceType) {
            output.WriteRawTag(32);
            output.WriteUInt32(DeviceType);
          }
          if (HasDisconnected) {
            output.WriteRawTag(40);
            output.WriteBool(Disconnected);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasTimeStart) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeStart);
          }
          if (HasTimeEnd) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeEnd);
          }
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (HasDeviceType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceType);
          }
          if (HasDisconnected) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlaytimeSession other) {
          if (other == null) {
            return;
          }
          if (other.HasTimeStart) {
            TimeStart = other.TimeStart;
          }
          if (other.HasTimeEnd) {
            TimeEnd = other.TimeEnd;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasDeviceType) {
            DeviceType = other.DeviceType;
          }
          if (other.HasDisconnected) {
            Disconnected = other.Disconnected;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TimeStart = input.ReadUInt32();
                break;
              }
              case 16: {
                TimeEnd = input.ReadUInt32();
                break;
              }
              case 24: {
                Appid = input.ReadUInt32();
                break;
              }
              case 32: {
                DeviceType = input.ReadUInt32();
                break;
              }
              case 40: {
                Disconnected = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TimeStart = input.ReadUInt32();
                break;
              }
              case 16: {
                TimeEnd = input.ReadUInt32();
                break;
              }
              case 24: {
                Appid = input.ReadUInt32();
                break;
              }
              case 32: {
                DeviceType = input.ReadUInt32();
                break;
              }
              case 40: {
                Disconnected = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPlayerLinkDetails_Request : pb::IMessage<CPlayer_GetPlayerLinkDetails_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPlayerLinkDetails_Request> _parser = new pb::MessageParser<CPlayer_GetPlayerLinkDetails_Request>(() => new CPlayer_GetPlayerLinkDetails_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPlayerLinkDetails_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayerLinkDetails_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayerLinkDetails_Request(CPlayer_GetPlayerLinkDetails_Request other) : this() {
      steamids_ = other.steamids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayerLinkDetails_Request Clone() {
      return new CPlayer_GetPlayerLinkDetails_Request(this);
    }

    /// <summary>Field number for the "steamids" field.</summary>
    public const int SteamidsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_steamids_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> steamids_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Steamids {
      get { return steamids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPlayerLinkDetails_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPlayerLinkDetails_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!steamids_.Equals(other.steamids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= steamids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      steamids_.WriteTo(output, _repeated_steamids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      steamids_.WriteTo(ref output, _repeated_steamids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += steamids_.CalculateSize(_repeated_steamids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPlayerLinkDetails_Request other) {
      if (other == null) {
        return;
      }
      steamids_.Add(other.steamids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            steamids_.AddEntriesFrom(input, _repeated_steamids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            steamids_.AddEntriesFrom(ref input, _repeated_steamids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPlayerLinkDetails_Response : pb::IMessage<CPlayer_GetPlayerLinkDetails_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPlayerLinkDetails_Response> _parser = new pb::MessageParser<CPlayer_GetPlayerLinkDetails_Response>(() => new CPlayer_GetPlayerLinkDetails_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPlayerLinkDetails_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayerLinkDetails_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayerLinkDetails_Response(CPlayer_GetPlayerLinkDetails_Response other) : this() {
      accounts_ = other.accounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayerLinkDetails_Response Clone() {
      return new CPlayer_GetPlayerLinkDetails_Response(this);
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails> accounts_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPlayerLinkDetails_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPlayerLinkDetails_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accounts_.Equals(other.accounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      accounts_.WriteTo(ref output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPlayerLinkDetails_Response other) {
      if (other == null) {
        return;
      }
      accounts_.Add(other.accounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetPlayerLinkDetails_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PlayerLinkDetails : pb::IMessage<PlayerLinkDetails>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerLinkDetails> _parser = new pb::MessageParser<PlayerLinkDetails>(() => new PlayerLinkDetails());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlayerLinkDetails> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayerLinkDetails() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayerLinkDetails(PlayerLinkDetails other) : this() {
          publicData_ = other.publicData_ != null ? other.publicData_.Clone() : null;
          privateData_ = other.privateData_ != null ? other.privateData_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayerLinkDetails Clone() {
          return new PlayerLinkDetails(this);
        }

        /// <summary>Field number for the "public_data" field.</summary>
        public const int PublicDataFieldNumber = 1;
        private global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData publicData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData PublicData {
          get { return publicData_; }
          set {
            publicData_ = value;
          }
        }

        /// <summary>Field number for the "private_data" field.</summary>
        public const int PrivateDataFieldNumber = 2;
        private global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData privateData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData PrivateData {
          get { return privateData_; }
          set {
            privateData_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlayerLinkDetails);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlayerLinkDetails other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PublicData, other.PublicData)) return false;
          if (!object.Equals(PrivateData, other.PrivateData)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (publicData_ != null) hash ^= PublicData.GetHashCode();
          if (privateData_ != null) hash ^= PrivateData.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (publicData_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PublicData);
          }
          if (privateData_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PrivateData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (publicData_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PublicData);
          }
          if (privateData_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PrivateData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (publicData_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicData);
          }
          if (privateData_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivateData);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlayerLinkDetails other) {
          if (other == null) {
            return;
          }
          if (other.publicData_ != null) {
            if (publicData_ == null) {
              PublicData = new global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData();
            }
            PublicData.MergeFrom(other.PublicData);
          }
          if (other.privateData_ != null) {
            if (privateData_ == null) {
              PrivateData = new global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData();
            }
            PrivateData.MergeFrom(other.PrivateData);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (publicData_ == null) {
                  PublicData = new global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData();
                }
                input.ReadMessage(PublicData);
                break;
              }
              case 18: {
                if (privateData_ == null) {
                  PrivateData = new global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData();
                }
                input.ReadMessage(PrivateData);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (publicData_ == null) {
                  PublicData = new global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPublicData();
                }
                input.ReadMessage(PublicData);
                break;
              }
              case 18: {
                if (privateData_ == null) {
                  PrivateData = new global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Types.AccountPrivateData();
                }
                input.ReadMessage(PrivateData);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the PlayerLinkDetails message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class AccountPublicData : pb::IMessage<AccountPublicData>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<AccountPublicData> _parser = new pb::MessageParser<AccountPublicData>(() => new AccountPublicData());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<AccountPublicData> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public AccountPublicData() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public AccountPublicData(AccountPublicData other) : this() {
              _hasBits0 = other._hasBits0;
              steamid_ = other.steamid_;
              visibilityState_ = other.visibilityState_;
              privacyState_ = other.privacyState_;
              profileState_ = other.profileState_;
              banExpiresTime_ = other.banExpiresTime_;
              accountFlags_ = other.accountFlags_;
              shaDigestAvatar_ = other.shaDigestAvatar_;
              personaName_ = other.personaName_;
              profileUrl_ = other.profileUrl_;
              contentCountryRestricted_ = other.contentCountryRestricted_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public AccountPublicData Clone() {
              return new AccountPublicData(this);
            }

            /// <summary>Field number for the "steamid" field.</summary>
            public const int SteamidFieldNumber = 1;
            private readonly static ulong SteamidDefaultValue = 0UL;

            private ulong steamid_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong Steamid {
              get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
              set {
                _hasBits0 |= 1;
                steamid_ = value;
              }
            }
            /// <summary>Gets whether the "steamid" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasSteamid {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "steamid" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearSteamid() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "visibility_state" field.</summary>
            public const int VisibilityStateFieldNumber = 2;
            private readonly static int VisibilityStateDefaultValue = 0;

            private int visibilityState_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int VisibilityState {
              get { if ((_hasBits0 & 2) != 0) { return visibilityState_; } else { return VisibilityStateDefaultValue; } }
              set {
                _hasBits0 |= 2;
                visibilityState_ = value;
              }
            }
            /// <summary>Gets whether the "visibility_state" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasVisibilityState {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "visibility_state" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearVisibilityState() {
              _hasBits0 &= ~2;
            }

            /// <summary>Field number for the "privacy_state" field.</summary>
            public const int PrivacyStateFieldNumber = 3;
            private readonly static int PrivacyStateDefaultValue = 0;

            private int privacyState_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int PrivacyState {
              get { if ((_hasBits0 & 4) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
              set {
                _hasBits0 |= 4;
                privacyState_ = value;
              }
            }
            /// <summary>Gets whether the "privacy_state" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasPrivacyState {
              get { return (_hasBits0 & 4) != 0; }
            }
            /// <summary>Clears the value of the "privacy_state" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPrivacyState() {
              _hasBits0 &= ~4;
            }

            /// <summary>Field number for the "profile_state" field.</summary>
            public const int ProfileStateFieldNumber = 4;
            private readonly static int ProfileStateDefaultValue = 0;

            private int profileState_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int ProfileState {
              get { if ((_hasBits0 & 8) != 0) { return profileState_; } else { return ProfileStateDefaultValue; } }
              set {
                _hasBits0 |= 8;
                profileState_ = value;
              }
            }
            /// <summary>Gets whether the "profile_state" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasProfileState {
              get { return (_hasBits0 & 8) != 0; }
            }
            /// <summary>Clears the value of the "profile_state" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearProfileState() {
              _hasBits0 &= ~8;
            }

            /// <summary>Field number for the "ban_expires_time" field.</summary>
            public const int BanExpiresTimeFieldNumber = 7;
            private readonly static uint BanExpiresTimeDefaultValue = 0;

            private uint banExpiresTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint BanExpiresTime {
              get { if ((_hasBits0 & 16) != 0) { return banExpiresTime_; } else { return BanExpiresTimeDefaultValue; } }
              set {
                _hasBits0 |= 16;
                banExpiresTime_ = value;
              }
            }
            /// <summary>Gets whether the "ban_expires_time" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasBanExpiresTime {
              get { return (_hasBits0 & 16) != 0; }
            }
            /// <summary>Clears the value of the "ban_expires_time" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearBanExpiresTime() {
              _hasBits0 &= ~16;
            }

            /// <summary>Field number for the "account_flags" field.</summary>
            public const int AccountFlagsFieldNumber = 8;
            private readonly static uint AccountFlagsDefaultValue = 0;

            private uint accountFlags_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint AccountFlags {
              get { if ((_hasBits0 & 32) != 0) { return accountFlags_; } else { return AccountFlagsDefaultValue; } }
              set {
                _hasBits0 |= 32;
                accountFlags_ = value;
              }
            }
            /// <summary>Gets whether the "account_flags" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasAccountFlags {
              get { return (_hasBits0 & 32) != 0; }
            }
            /// <summary>Clears the value of the "account_flags" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearAccountFlags() {
              _hasBits0 &= ~32;
            }

            /// <summary>Field number for the "sha_digest_avatar" field.</summary>
            public const int ShaDigestAvatarFieldNumber = 9;
            private readonly static pb::ByteString ShaDigestAvatarDefaultValue = pb::ByteString.Empty;

            private pb::ByteString shaDigestAvatar_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pb::ByteString ShaDigestAvatar {
              get { return shaDigestAvatar_ ?? ShaDigestAvatarDefaultValue; }
              set {
                shaDigestAvatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "sha_digest_avatar" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasShaDigestAvatar {
              get { return shaDigestAvatar_ != null; }
            }
            /// <summary>Clears the value of the "sha_digest_avatar" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearShaDigestAvatar() {
              shaDigestAvatar_ = null;
            }

            /// <summary>Field number for the "persona_name" field.</summary>
            public const int PersonaNameFieldNumber = 10;
            private readonly static string PersonaNameDefaultValue = "";

            private string personaName_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string PersonaName {
              get { return personaName_ ?? PersonaNameDefaultValue; }
              set {
                personaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "persona_name" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasPersonaName {
              get { return personaName_ != null; }
            }
            /// <summary>Clears the value of the "persona_name" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPersonaName() {
              personaName_ = null;
            }

            /// <summary>Field number for the "profile_url" field.</summary>
            public const int ProfileUrlFieldNumber = 11;
            private readonly static string ProfileUrlDefaultValue = "";

            private string profileUrl_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string ProfileUrl {
              get { return profileUrl_ ?? ProfileUrlDefaultValue; }
              set {
                profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "profile_url" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasProfileUrl {
              get { return profileUrl_ != null; }
            }
            /// <summary>Clears the value of the "profile_url" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearProfileUrl() {
              profileUrl_ = null;
            }

            /// <summary>Field number for the "content_country_restricted" field.</summary>
            public const int ContentCountryRestrictedFieldNumber = 12;
            private readonly static bool ContentCountryRestrictedDefaultValue = false;

            private bool contentCountryRestricted_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool ContentCountryRestricted {
              get { if ((_hasBits0 & 64) != 0) { return contentCountryRestricted_; } else { return ContentCountryRestrictedDefaultValue; } }
              set {
                _hasBits0 |= 64;
                contentCountryRestricted_ = value;
              }
            }
            /// <summary>Gets whether the "content_country_restricted" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasContentCountryRestricted {
              get { return (_hasBits0 & 64) != 0; }
            }
            /// <summary>Clears the value of the "content_country_restricted" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearContentCountryRestricted() {
              _hasBits0 &= ~64;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as AccountPublicData);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(AccountPublicData other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Steamid != other.Steamid) return false;
              if (VisibilityState != other.VisibilityState) return false;
              if (PrivacyState != other.PrivacyState) return false;
              if (ProfileState != other.ProfileState) return false;
              if (BanExpiresTime != other.BanExpiresTime) return false;
              if (AccountFlags != other.AccountFlags) return false;
              if (ShaDigestAvatar != other.ShaDigestAvatar) return false;
              if (PersonaName != other.PersonaName) return false;
              if (ProfileUrl != other.ProfileUrl) return false;
              if (ContentCountryRestricted != other.ContentCountryRestricted) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasSteamid) hash ^= Steamid.GetHashCode();
              if (HasVisibilityState) hash ^= VisibilityState.GetHashCode();
              if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
              if (HasProfileState) hash ^= ProfileState.GetHashCode();
              if (HasBanExpiresTime) hash ^= BanExpiresTime.GetHashCode();
              if (HasAccountFlags) hash ^= AccountFlags.GetHashCode();
              if (HasShaDigestAvatar) hash ^= ShaDigestAvatar.GetHashCode();
              if (HasPersonaName) hash ^= PersonaName.GetHashCode();
              if (HasProfileUrl) hash ^= ProfileUrl.GetHashCode();
              if (HasContentCountryRestricted) hash ^= ContentCountryRestricted.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasSteamid) {
                output.WriteRawTag(9);
                output.WriteFixed64(Steamid);
              }
              if (HasVisibilityState) {
                output.WriteRawTag(16);
                output.WriteInt32(VisibilityState);
              }
              if (HasPrivacyState) {
                output.WriteRawTag(24);
                output.WriteInt32(PrivacyState);
              }
              if (HasProfileState) {
                output.WriteRawTag(32);
                output.WriteInt32(ProfileState);
              }
              if (HasBanExpiresTime) {
                output.WriteRawTag(56);
                output.WriteUInt32(BanExpiresTime);
              }
              if (HasAccountFlags) {
                output.WriteRawTag(64);
                output.WriteUInt32(AccountFlags);
              }
              if (HasShaDigestAvatar) {
                output.WriteRawTag(74);
                output.WriteBytes(ShaDigestAvatar);
              }
              if (HasPersonaName) {
                output.WriteRawTag(82);
                output.WriteString(PersonaName);
              }
              if (HasProfileUrl) {
                output.WriteRawTag(90);
                output.WriteString(ProfileUrl);
              }
              if (HasContentCountryRestricted) {
                output.WriteRawTag(96);
                output.WriteBool(ContentCountryRestricted);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasSteamid) {
                output.WriteRawTag(9);
                output.WriteFixed64(Steamid);
              }
              if (HasVisibilityState) {
                output.WriteRawTag(16);
                output.WriteInt32(VisibilityState);
              }
              if (HasPrivacyState) {
                output.WriteRawTag(24);
                output.WriteInt32(PrivacyState);
              }
              if (HasProfileState) {
                output.WriteRawTag(32);
                output.WriteInt32(ProfileState);
              }
              if (HasBanExpiresTime) {
                output.WriteRawTag(56);
                output.WriteUInt32(BanExpiresTime);
              }
              if (HasAccountFlags) {
                output.WriteRawTag(64);
                output.WriteUInt32(AccountFlags);
              }
              if (HasShaDigestAvatar) {
                output.WriteRawTag(74);
                output.WriteBytes(ShaDigestAvatar);
              }
              if (HasPersonaName) {
                output.WriteRawTag(82);
                output.WriteString(PersonaName);
              }
              if (HasProfileUrl) {
                output.WriteRawTag(90);
                output.WriteString(ProfileUrl);
              }
              if (HasContentCountryRestricted) {
                output.WriteRawTag(96);
                output.WriteBool(ContentCountryRestricted);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasSteamid) {
                size += 1 + 8;
              }
              if (HasVisibilityState) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(VisibilityState);
              }
              if (HasPrivacyState) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
              }
              if (HasProfileState) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfileState);
              }
              if (HasBanExpiresTime) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BanExpiresTime);
              }
              if (HasAccountFlags) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountFlags);
              }
              if (HasShaDigestAvatar) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaDigestAvatar);
              }
              if (HasPersonaName) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonaName);
              }
              if (HasProfileUrl) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
              }
              if (HasContentCountryRestricted) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(AccountPublicData other) {
              if (other == null) {
                return;
              }
              if (other.HasSteamid) {
                Steamid = other.Steamid;
              }
              if (other.HasVisibilityState) {
                VisibilityState = other.VisibilityState;
              }
              if (other.HasPrivacyState) {
                PrivacyState = other.PrivacyState;
              }
              if (other.HasProfileState) {
                ProfileState = other.ProfileState;
              }
              if (other.HasBanExpiresTime) {
                BanExpiresTime = other.BanExpiresTime;
              }
              if (other.HasAccountFlags) {
                AccountFlags = other.AccountFlags;
              }
              if (other.HasShaDigestAvatar) {
                ShaDigestAvatar = other.ShaDigestAvatar;
              }
              if (other.HasPersonaName) {
                PersonaName = other.PersonaName;
              }
              if (other.HasProfileUrl) {
                ProfileUrl = other.ProfileUrl;
              }
              if (other.HasContentCountryRestricted) {
                ContentCountryRestricted = other.ContentCountryRestricted;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 9: {
                    Steamid = input.ReadFixed64();
                    break;
                  }
                  case 16: {
                    VisibilityState = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    PrivacyState = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    ProfileState = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    BanExpiresTime = input.ReadUInt32();
                    break;
                  }
                  case 64: {
                    AccountFlags = input.ReadUInt32();
                    break;
                  }
                  case 74: {
                    ShaDigestAvatar = input.ReadBytes();
                    break;
                  }
                  case 82: {
                    PersonaName = input.ReadString();
                    break;
                  }
                  case 90: {
                    ProfileUrl = input.ReadString();
                    break;
                  }
                  case 96: {
                    ContentCountryRestricted = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 9: {
                    Steamid = input.ReadFixed64();
                    break;
                  }
                  case 16: {
                    VisibilityState = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    PrivacyState = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    ProfileState = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    BanExpiresTime = input.ReadUInt32();
                    break;
                  }
                  case 64: {
                    AccountFlags = input.ReadUInt32();
                    break;
                  }
                  case 74: {
                    ShaDigestAvatar = input.ReadBytes();
                    break;
                  }
                  case 82: {
                    PersonaName = input.ReadString();
                    break;
                  }
                  case 90: {
                    ProfileUrl = input.ReadString();
                    break;
                  }
                  case 96: {
                    ContentCountryRestricted = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class AccountPrivateData : pb::IMessage<AccountPrivateData>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<AccountPrivateData> _parser = new pb::MessageParser<AccountPrivateData>(() => new AccountPrivateData());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<AccountPrivateData> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::OpenSteamworks.Protobuf.CPlayer_GetPlayerLinkDetails_Response.Types.PlayerLinkDetails.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public AccountPrivateData() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public AccountPrivateData(AccountPrivateData other) : this() {
              _hasBits0 = other._hasBits0;
              personaState_ = other.personaState_;
              personaStateFlags_ = other.personaStateFlags_;
              timeCreated_ = other.timeCreated_;
              gameId_ = other.gameId_;
              gameServerSteamId_ = other.gameServerSteamId_;
              gameServerIpAddress_ = other.gameServerIpAddress_;
              gameServerPort_ = other.gameServerPort_;
              gameExtraInfo_ = other.gameExtraInfo_;
              accountName_ = other.accountName_;
              lobbySteamId_ = other.lobbySteamId_;
              richPresenceKv_ = other.richPresenceKv_;
              broadcastSessionId_ = other.broadcastSessionId_;
              watchingBroadcastAccountid_ = other.watchingBroadcastAccountid_;
              watchingBroadcastAppid_ = other.watchingBroadcastAppid_;
              watchingBroadcastViewers_ = other.watchingBroadcastViewers_;
              watchingBroadcastTitle_ = other.watchingBroadcastTitle_;
              lastLogoffTime_ = other.lastLogoffTime_;
              lastSeenOnline_ = other.lastSeenOnline_;
              gameOsType_ = other.gameOsType_;
              gameDeviceType_ = other.gameDeviceType_;
              gameDeviceName_ = other.gameDeviceName_;
              gameIsPrivate_ = other.gameIsPrivate_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public AccountPrivateData Clone() {
              return new AccountPrivateData(this);
            }

            /// <summary>Field number for the "persona_state" field.</summary>
            public const int PersonaStateFieldNumber = 1;
            private readonly static int PersonaStateDefaultValue = 0;

            private int personaState_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int PersonaState {
              get { if ((_hasBits0 & 1) != 0) { return personaState_; } else { return PersonaStateDefaultValue; } }
              set {
                _hasBits0 |= 1;
                personaState_ = value;
              }
            }
            /// <summary>Gets whether the "persona_state" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasPersonaState {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "persona_state" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPersonaState() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "persona_state_flags" field.</summary>
            public const int PersonaStateFlagsFieldNumber = 2;
            private readonly static uint PersonaStateFlagsDefaultValue = 0;

            private uint personaStateFlags_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint PersonaStateFlags {
              get { if ((_hasBits0 & 2) != 0) { return personaStateFlags_; } else { return PersonaStateFlagsDefaultValue; } }
              set {
                _hasBits0 |= 2;
                personaStateFlags_ = value;
              }
            }
            /// <summary>Gets whether the "persona_state_flags" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasPersonaStateFlags {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "persona_state_flags" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPersonaStateFlags() {
              _hasBits0 &= ~2;
            }

            /// <summary>Field number for the "time_created" field.</summary>
            public const int TimeCreatedFieldNumber = 3;
            private readonly static uint TimeCreatedDefaultValue = 0;

            private uint timeCreated_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint TimeCreated {
              get { if ((_hasBits0 & 4) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
              set {
                _hasBits0 |= 4;
                timeCreated_ = value;
              }
            }
            /// <summary>Gets whether the "time_created" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasTimeCreated {
              get { return (_hasBits0 & 4) != 0; }
            }
            /// <summary>Clears the value of the "time_created" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearTimeCreated() {
              _hasBits0 &= ~4;
            }

            /// <summary>Field number for the "game_id" field.</summary>
            public const int GameIdFieldNumber = 4;
            private readonly static ulong GameIdDefaultValue = 0UL;

            private ulong gameId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong GameId {
              get { if ((_hasBits0 & 8) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
              set {
                _hasBits0 |= 8;
                gameId_ = value;
              }
            }
            /// <summary>Gets whether the "game_id" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameId {
              get { return (_hasBits0 & 8) != 0; }
            }
            /// <summary>Clears the value of the "game_id" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameId() {
              _hasBits0 &= ~8;
            }

            /// <summary>Field number for the "game_server_steam_id" field.</summary>
            public const int GameServerSteamIdFieldNumber = 5;
            private readonly static ulong GameServerSteamIdDefaultValue = 0UL;

            private ulong gameServerSteamId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong GameServerSteamId {
              get { if ((_hasBits0 & 16) != 0) { return gameServerSteamId_; } else { return GameServerSteamIdDefaultValue; } }
              set {
                _hasBits0 |= 16;
                gameServerSteamId_ = value;
              }
            }
            /// <summary>Gets whether the "game_server_steam_id" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameServerSteamId {
              get { return (_hasBits0 & 16) != 0; }
            }
            /// <summary>Clears the value of the "game_server_steam_id" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameServerSteamId() {
              _hasBits0 &= ~16;
            }

            /// <summary>Field number for the "game_server_ip_address" field.</summary>
            public const int GameServerIpAddressFieldNumber = 6;
            private readonly static uint GameServerIpAddressDefaultValue = 0;

            private uint gameServerIpAddress_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint GameServerIpAddress {
              get { if ((_hasBits0 & 32) != 0) { return gameServerIpAddress_; } else { return GameServerIpAddressDefaultValue; } }
              set {
                _hasBits0 |= 32;
                gameServerIpAddress_ = value;
              }
            }
            /// <summary>Gets whether the "game_server_ip_address" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameServerIpAddress {
              get { return (_hasBits0 & 32) != 0; }
            }
            /// <summary>Clears the value of the "game_server_ip_address" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameServerIpAddress() {
              _hasBits0 &= ~32;
            }

            /// <summary>Field number for the "game_server_port" field.</summary>
            public const int GameServerPortFieldNumber = 7;
            private readonly static uint GameServerPortDefaultValue = 0;

            private uint gameServerPort_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint GameServerPort {
              get { if ((_hasBits0 & 64) != 0) { return gameServerPort_; } else { return GameServerPortDefaultValue; } }
              set {
                _hasBits0 |= 64;
                gameServerPort_ = value;
              }
            }
            /// <summary>Gets whether the "game_server_port" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameServerPort {
              get { return (_hasBits0 & 64) != 0; }
            }
            /// <summary>Clears the value of the "game_server_port" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameServerPort() {
              _hasBits0 &= ~64;
            }

            /// <summary>Field number for the "game_extra_info" field.</summary>
            public const int GameExtraInfoFieldNumber = 8;
            private readonly static string GameExtraInfoDefaultValue = "";

            private string gameExtraInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string GameExtraInfo {
              get { return gameExtraInfo_ ?? GameExtraInfoDefaultValue; }
              set {
                gameExtraInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "game_extra_info" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameExtraInfo {
              get { return gameExtraInfo_ != null; }
            }
            /// <summary>Clears the value of the "game_extra_info" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameExtraInfo() {
              gameExtraInfo_ = null;
            }

            /// <summary>Field number for the "account_name" field.</summary>
            public const int AccountNameFieldNumber = 9;
            private readonly static string AccountNameDefaultValue = "";

            private string accountName_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string AccountName {
              get { return accountName_ ?? AccountNameDefaultValue; }
              set {
                accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "account_name" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasAccountName {
              get { return accountName_ != null; }
            }
            /// <summary>Clears the value of the "account_name" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearAccountName() {
              accountName_ = null;
            }

            /// <summary>Field number for the "lobby_steam_id" field.</summary>
            public const int LobbySteamIdFieldNumber = 10;
            private readonly static ulong LobbySteamIdDefaultValue = 0UL;

            private ulong lobbySteamId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong LobbySteamId {
              get { if ((_hasBits0 & 128) != 0) { return lobbySteamId_; } else { return LobbySteamIdDefaultValue; } }
              set {
                _hasBits0 |= 128;
                lobbySteamId_ = value;
              }
            }
            /// <summary>Gets whether the "lobby_steam_id" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasLobbySteamId {
              get { return (_hasBits0 & 128) != 0; }
            }
            /// <summary>Clears the value of the "lobby_steam_id" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearLobbySteamId() {
              _hasBits0 &= ~128;
            }

            /// <summary>Field number for the "rich_presence_kv" field.</summary>
            public const int RichPresenceKvFieldNumber = 11;
            private readonly static string RichPresenceKvDefaultValue = "";

            private string richPresenceKv_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string RichPresenceKv {
              get { return richPresenceKv_ ?? RichPresenceKvDefaultValue; }
              set {
                richPresenceKv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "rich_presence_kv" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasRichPresenceKv {
              get { return richPresenceKv_ != null; }
            }
            /// <summary>Clears the value of the "rich_presence_kv" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearRichPresenceKv() {
              richPresenceKv_ = null;
            }

            /// <summary>Field number for the "broadcast_session_id" field.</summary>
            public const int BroadcastSessionIdFieldNumber = 12;
            private readonly static ulong BroadcastSessionIdDefaultValue = 0UL;

            private ulong broadcastSessionId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong BroadcastSessionId {
              get { if ((_hasBits0 & 256) != 0) { return broadcastSessionId_; } else { return BroadcastSessionIdDefaultValue; } }
              set {
                _hasBits0 |= 256;
                broadcastSessionId_ = value;
              }
            }
            /// <summary>Gets whether the "broadcast_session_id" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasBroadcastSessionId {
              get { return (_hasBits0 & 256) != 0; }
            }
            /// <summary>Clears the value of the "broadcast_session_id" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearBroadcastSessionId() {
              _hasBits0 &= ~256;
            }

            /// <summary>Field number for the "watching_broadcast_accountid" field.</summary>
            public const int WatchingBroadcastAccountidFieldNumber = 13;
            private readonly static uint WatchingBroadcastAccountidDefaultValue = 0;

            private uint watchingBroadcastAccountid_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint WatchingBroadcastAccountid {
              get { if ((_hasBits0 & 512) != 0) { return watchingBroadcastAccountid_; } else { return WatchingBroadcastAccountidDefaultValue; } }
              set {
                _hasBits0 |= 512;
                watchingBroadcastAccountid_ = value;
              }
            }
            /// <summary>Gets whether the "watching_broadcast_accountid" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasWatchingBroadcastAccountid {
              get { return (_hasBits0 & 512) != 0; }
            }
            /// <summary>Clears the value of the "watching_broadcast_accountid" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearWatchingBroadcastAccountid() {
              _hasBits0 &= ~512;
            }

            /// <summary>Field number for the "watching_broadcast_appid" field.</summary>
            public const int WatchingBroadcastAppidFieldNumber = 14;
            private readonly static uint WatchingBroadcastAppidDefaultValue = 0;

            private uint watchingBroadcastAppid_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint WatchingBroadcastAppid {
              get { if ((_hasBits0 & 1024) != 0) { return watchingBroadcastAppid_; } else { return WatchingBroadcastAppidDefaultValue; } }
              set {
                _hasBits0 |= 1024;
                watchingBroadcastAppid_ = value;
              }
            }
            /// <summary>Gets whether the "watching_broadcast_appid" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasWatchingBroadcastAppid {
              get { return (_hasBits0 & 1024) != 0; }
            }
            /// <summary>Clears the value of the "watching_broadcast_appid" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearWatchingBroadcastAppid() {
              _hasBits0 &= ~1024;
            }

            /// <summary>Field number for the "watching_broadcast_viewers" field.</summary>
            public const int WatchingBroadcastViewersFieldNumber = 15;
            private readonly static uint WatchingBroadcastViewersDefaultValue = 0;

            private uint watchingBroadcastViewers_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint WatchingBroadcastViewers {
              get { if ((_hasBits0 & 2048) != 0) { return watchingBroadcastViewers_; } else { return WatchingBroadcastViewersDefaultValue; } }
              set {
                _hasBits0 |= 2048;
                watchingBroadcastViewers_ = value;
              }
            }
            /// <summary>Gets whether the "watching_broadcast_viewers" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasWatchingBroadcastViewers {
              get { return (_hasBits0 & 2048) != 0; }
            }
            /// <summary>Clears the value of the "watching_broadcast_viewers" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearWatchingBroadcastViewers() {
              _hasBits0 &= ~2048;
            }

            /// <summary>Field number for the "watching_broadcast_title" field.</summary>
            public const int WatchingBroadcastTitleFieldNumber = 16;
            private readonly static string WatchingBroadcastTitleDefaultValue = "";

            private string watchingBroadcastTitle_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string WatchingBroadcastTitle {
              get { return watchingBroadcastTitle_ ?? WatchingBroadcastTitleDefaultValue; }
              set {
                watchingBroadcastTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "watching_broadcast_title" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasWatchingBroadcastTitle {
              get { return watchingBroadcastTitle_ != null; }
            }
            /// <summary>Clears the value of the "watching_broadcast_title" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearWatchingBroadcastTitle() {
              watchingBroadcastTitle_ = null;
            }

            /// <summary>Field number for the "last_logoff_time" field.</summary>
            public const int LastLogoffTimeFieldNumber = 17;
            private readonly static uint LastLogoffTimeDefaultValue = 0;

            private uint lastLogoffTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint LastLogoffTime {
              get { if ((_hasBits0 & 4096) != 0) { return lastLogoffTime_; } else { return LastLogoffTimeDefaultValue; } }
              set {
                _hasBits0 |= 4096;
                lastLogoffTime_ = value;
              }
            }
            /// <summary>Gets whether the "last_logoff_time" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasLastLogoffTime {
              get { return (_hasBits0 & 4096) != 0; }
            }
            /// <summary>Clears the value of the "last_logoff_time" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearLastLogoffTime() {
              _hasBits0 &= ~4096;
            }

            /// <summary>Field number for the "last_seen_online" field.</summary>
            public const int LastSeenOnlineFieldNumber = 18;
            private readonly static uint LastSeenOnlineDefaultValue = 0;

            private uint lastSeenOnline_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint LastSeenOnline {
              get { if ((_hasBits0 & 8192) != 0) { return lastSeenOnline_; } else { return LastSeenOnlineDefaultValue; } }
              set {
                _hasBits0 |= 8192;
                lastSeenOnline_ = value;
              }
            }
            /// <summary>Gets whether the "last_seen_online" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasLastSeenOnline {
              get { return (_hasBits0 & 8192) != 0; }
            }
            /// <summary>Clears the value of the "last_seen_online" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearLastSeenOnline() {
              _hasBits0 &= ~8192;
            }

            /// <summary>Field number for the "game_os_type" field.</summary>
            public const int GameOsTypeFieldNumber = 19;
            private readonly static int GameOsTypeDefaultValue = 0;

            private int gameOsType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int GameOsType {
              get { if ((_hasBits0 & 16384) != 0) { return gameOsType_; } else { return GameOsTypeDefaultValue; } }
              set {
                _hasBits0 |= 16384;
                gameOsType_ = value;
              }
            }
            /// <summary>Gets whether the "game_os_type" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameOsType {
              get { return (_hasBits0 & 16384) != 0; }
            }
            /// <summary>Clears the value of the "game_os_type" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameOsType() {
              _hasBits0 &= ~16384;
            }

            /// <summary>Field number for the "game_device_type" field.</summary>
            public const int GameDeviceTypeFieldNumber = 20;
            private readonly static int GameDeviceTypeDefaultValue = 0;

            private int gameDeviceType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int GameDeviceType {
              get { if ((_hasBits0 & 32768) != 0) { return gameDeviceType_; } else { return GameDeviceTypeDefaultValue; } }
              set {
                _hasBits0 |= 32768;
                gameDeviceType_ = value;
              }
            }
            /// <summary>Gets whether the "game_device_type" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameDeviceType {
              get { return (_hasBits0 & 32768) != 0; }
            }
            /// <summary>Clears the value of the "game_device_type" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameDeviceType() {
              _hasBits0 &= ~32768;
            }

            /// <summary>Field number for the "game_device_name" field.</summary>
            public const int GameDeviceNameFieldNumber = 21;
            private readonly static string GameDeviceNameDefaultValue = "";

            private string gameDeviceName_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string GameDeviceName {
              get { return gameDeviceName_ ?? GameDeviceNameDefaultValue; }
              set {
                gameDeviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "game_device_name" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameDeviceName {
              get { return gameDeviceName_ != null; }
            }
            /// <summary>Clears the value of the "game_device_name" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameDeviceName() {
              gameDeviceName_ = null;
            }

            /// <summary>Field number for the "game_is_private" field.</summary>
            public const int GameIsPrivateFieldNumber = 22;
            private readonly static bool GameIsPrivateDefaultValue = false;

            private bool gameIsPrivate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool GameIsPrivate {
              get { if ((_hasBits0 & 65536) != 0) { return gameIsPrivate_; } else { return GameIsPrivateDefaultValue; } }
              set {
                _hasBits0 |= 65536;
                gameIsPrivate_ = value;
              }
            }
            /// <summary>Gets whether the "game_is_private" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasGameIsPrivate {
              get { return (_hasBits0 & 65536) != 0; }
            }
            /// <summary>Clears the value of the "game_is_private" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearGameIsPrivate() {
              _hasBits0 &= ~65536;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as AccountPrivateData);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(AccountPrivateData other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PersonaState != other.PersonaState) return false;
              if (PersonaStateFlags != other.PersonaStateFlags) return false;
              if (TimeCreated != other.TimeCreated) return false;
              if (GameId != other.GameId) return false;
              if (GameServerSteamId != other.GameServerSteamId) return false;
              if (GameServerIpAddress != other.GameServerIpAddress) return false;
              if (GameServerPort != other.GameServerPort) return false;
              if (GameExtraInfo != other.GameExtraInfo) return false;
              if (AccountName != other.AccountName) return false;
              if (LobbySteamId != other.LobbySteamId) return false;
              if (RichPresenceKv != other.RichPresenceKv) return false;
              if (BroadcastSessionId != other.BroadcastSessionId) return false;
              if (WatchingBroadcastAccountid != other.WatchingBroadcastAccountid) return false;
              if (WatchingBroadcastAppid != other.WatchingBroadcastAppid) return false;
              if (WatchingBroadcastViewers != other.WatchingBroadcastViewers) return false;
              if (WatchingBroadcastTitle != other.WatchingBroadcastTitle) return false;
              if (LastLogoffTime != other.LastLogoffTime) return false;
              if (LastSeenOnline != other.LastSeenOnline) return false;
              if (GameOsType != other.GameOsType) return false;
              if (GameDeviceType != other.GameDeviceType) return false;
              if (GameDeviceName != other.GameDeviceName) return false;
              if (GameIsPrivate != other.GameIsPrivate) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasPersonaState) hash ^= PersonaState.GetHashCode();
              if (HasPersonaStateFlags) hash ^= PersonaStateFlags.GetHashCode();
              if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
              if (HasGameId) hash ^= GameId.GetHashCode();
              if (HasGameServerSteamId) hash ^= GameServerSteamId.GetHashCode();
              if (HasGameServerIpAddress) hash ^= GameServerIpAddress.GetHashCode();
              if (HasGameServerPort) hash ^= GameServerPort.GetHashCode();
              if (HasGameExtraInfo) hash ^= GameExtraInfo.GetHashCode();
              if (HasAccountName) hash ^= AccountName.GetHashCode();
              if (HasLobbySteamId) hash ^= LobbySteamId.GetHashCode();
              if (HasRichPresenceKv) hash ^= RichPresenceKv.GetHashCode();
              if (HasBroadcastSessionId) hash ^= BroadcastSessionId.GetHashCode();
              if (HasWatchingBroadcastAccountid) hash ^= WatchingBroadcastAccountid.GetHashCode();
              if (HasWatchingBroadcastAppid) hash ^= WatchingBroadcastAppid.GetHashCode();
              if (HasWatchingBroadcastViewers) hash ^= WatchingBroadcastViewers.GetHashCode();
              if (HasWatchingBroadcastTitle) hash ^= WatchingBroadcastTitle.GetHashCode();
              if (HasLastLogoffTime) hash ^= LastLogoffTime.GetHashCode();
              if (HasLastSeenOnline) hash ^= LastSeenOnline.GetHashCode();
              if (HasGameOsType) hash ^= GameOsType.GetHashCode();
              if (HasGameDeviceType) hash ^= GameDeviceType.GetHashCode();
              if (HasGameDeviceName) hash ^= GameDeviceName.GetHashCode();
              if (HasGameIsPrivate) hash ^= GameIsPrivate.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasPersonaState) {
                output.WriteRawTag(8);
                output.WriteInt32(PersonaState);
              }
              if (HasPersonaStateFlags) {
                output.WriteRawTag(16);
                output.WriteUInt32(PersonaStateFlags);
              }
              if (HasTimeCreated) {
                output.WriteRawTag(24);
                output.WriteUInt32(TimeCreated);
              }
              if (HasGameId) {
                output.WriteRawTag(33);
                output.WriteFixed64(GameId);
              }
              if (HasGameServerSteamId) {
                output.WriteRawTag(41);
                output.WriteFixed64(GameServerSteamId);
              }
              if (HasGameServerIpAddress) {
                output.WriteRawTag(48);
                output.WriteUInt32(GameServerIpAddress);
              }
              if (HasGameServerPort) {
                output.WriteRawTag(56);
                output.WriteUInt32(GameServerPort);
              }
              if (HasGameExtraInfo) {
                output.WriteRawTag(66);
                output.WriteString(GameExtraInfo);
              }
              if (HasAccountName) {
                output.WriteRawTag(74);
                output.WriteString(AccountName);
              }
              if (HasLobbySteamId) {
                output.WriteRawTag(81);
                output.WriteFixed64(LobbySteamId);
              }
              if (HasRichPresenceKv) {
                output.WriteRawTag(90);
                output.WriteString(RichPresenceKv);
              }
              if (HasBroadcastSessionId) {
                output.WriteRawTag(97);
                output.WriteFixed64(BroadcastSessionId);
              }
              if (HasWatchingBroadcastAccountid) {
                output.WriteRawTag(104);
                output.WriteUInt32(WatchingBroadcastAccountid);
              }
              if (HasWatchingBroadcastAppid) {
                output.WriteRawTag(112);
                output.WriteUInt32(WatchingBroadcastAppid);
              }
              if (HasWatchingBroadcastViewers) {
                output.WriteRawTag(120);
                output.WriteUInt32(WatchingBroadcastViewers);
              }
              if (HasWatchingBroadcastTitle) {
                output.WriteRawTag(130, 1);
                output.WriteString(WatchingBroadcastTitle);
              }
              if (HasLastLogoffTime) {
                output.WriteRawTag(136, 1);
                output.WriteUInt32(LastLogoffTime);
              }
              if (HasLastSeenOnline) {
                output.WriteRawTag(144, 1);
                output.WriteUInt32(LastSeenOnline);
              }
              if (HasGameOsType) {
                output.WriteRawTag(152, 1);
                output.WriteInt32(GameOsType);
              }
              if (HasGameDeviceType) {
                output.WriteRawTag(160, 1);
                output.WriteInt32(GameDeviceType);
              }
              if (HasGameDeviceName) {
                output.WriteRawTag(170, 1);
                output.WriteString(GameDeviceName);
              }
              if (HasGameIsPrivate) {
                output.WriteRawTag(176, 1);
                output.WriteBool(GameIsPrivate);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasPersonaState) {
                output.WriteRawTag(8);
                output.WriteInt32(PersonaState);
              }
              if (HasPersonaStateFlags) {
                output.WriteRawTag(16);
                output.WriteUInt32(PersonaStateFlags);
              }
              if (HasTimeCreated) {
                output.WriteRawTag(24);
                output.WriteUInt32(TimeCreated);
              }
              if (HasGameId) {
                output.WriteRawTag(33);
                output.WriteFixed64(GameId);
              }
              if (HasGameServerSteamId) {
                output.WriteRawTag(41);
                output.WriteFixed64(GameServerSteamId);
              }
              if (HasGameServerIpAddress) {
                output.WriteRawTag(48);
                output.WriteUInt32(GameServerIpAddress);
              }
              if (HasGameServerPort) {
                output.WriteRawTag(56);
                output.WriteUInt32(GameServerPort);
              }
              if (HasGameExtraInfo) {
                output.WriteRawTag(66);
                output.WriteString(GameExtraInfo);
              }
              if (HasAccountName) {
                output.WriteRawTag(74);
                output.WriteString(AccountName);
              }
              if (HasLobbySteamId) {
                output.WriteRawTag(81);
                output.WriteFixed64(LobbySteamId);
              }
              if (HasRichPresenceKv) {
                output.WriteRawTag(90);
                output.WriteString(RichPresenceKv);
              }
              if (HasBroadcastSessionId) {
                output.WriteRawTag(97);
                output.WriteFixed64(BroadcastSessionId);
              }
              if (HasWatchingBroadcastAccountid) {
                output.WriteRawTag(104);
                output.WriteUInt32(WatchingBroadcastAccountid);
              }
              if (HasWatchingBroadcastAppid) {
                output.WriteRawTag(112);
                output.WriteUInt32(WatchingBroadcastAppid);
              }
              if (HasWatchingBroadcastViewers) {
                output.WriteRawTag(120);
                output.WriteUInt32(WatchingBroadcastViewers);
              }
              if (HasWatchingBroadcastTitle) {
                output.WriteRawTag(130, 1);
                output.WriteString(WatchingBroadcastTitle);
              }
              if (HasLastLogoffTime) {
                output.WriteRawTag(136, 1);
                output.WriteUInt32(LastLogoffTime);
              }
              if (HasLastSeenOnline) {
                output.WriteRawTag(144, 1);
                output.WriteUInt32(LastSeenOnline);
              }
              if (HasGameOsType) {
                output.WriteRawTag(152, 1);
                output.WriteInt32(GameOsType);
              }
              if (HasGameDeviceType) {
                output.WriteRawTag(160, 1);
                output.WriteInt32(GameDeviceType);
              }
              if (HasGameDeviceName) {
                output.WriteRawTag(170, 1);
                output.WriteString(GameDeviceName);
              }
              if (HasGameIsPrivate) {
                output.WriteRawTag(176, 1);
                output.WriteBool(GameIsPrivate);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasPersonaState) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PersonaState);
              }
              if (HasPersonaStateFlags) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PersonaStateFlags);
              }
              if (HasTimeCreated) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCreated);
              }
              if (HasGameId) {
                size += 1 + 8;
              }
              if (HasGameServerSteamId) {
                size += 1 + 8;
              }
              if (HasGameServerIpAddress) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameServerIpAddress);
              }
              if (HasGameServerPort) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameServerPort);
              }
              if (HasGameExtraInfo) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GameExtraInfo);
              }
              if (HasAccountName) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
              }
              if (HasLobbySteamId) {
                size += 1 + 8;
              }
              if (HasRichPresenceKv) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RichPresenceKv);
              }
              if (HasBroadcastSessionId) {
                size += 1 + 8;
              }
              if (HasWatchingBroadcastAccountid) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WatchingBroadcastAccountid);
              }
              if (HasWatchingBroadcastAppid) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WatchingBroadcastAppid);
              }
              if (HasWatchingBroadcastViewers) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WatchingBroadcastViewers);
              }
              if (HasWatchingBroadcastTitle) {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(WatchingBroadcastTitle);
              }
              if (HasLastLogoffTime) {
                size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LastLogoffTime);
              }
              if (HasLastSeenOnline) {
                size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LastSeenOnline);
              }
              if (HasGameOsType) {
                size += 2 + pb::CodedOutputStream.ComputeInt32Size(GameOsType);
              }
              if (HasGameDeviceType) {
                size += 2 + pb::CodedOutputStream.ComputeInt32Size(GameDeviceType);
              }
              if (HasGameDeviceName) {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(GameDeviceName);
              }
              if (HasGameIsPrivate) {
                size += 2 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(AccountPrivateData other) {
              if (other == null) {
                return;
              }
              if (other.HasPersonaState) {
                PersonaState = other.PersonaState;
              }
              if (other.HasPersonaStateFlags) {
                PersonaStateFlags = other.PersonaStateFlags;
              }
              if (other.HasTimeCreated) {
                TimeCreated = other.TimeCreated;
              }
              if (other.HasGameId) {
                GameId = other.GameId;
              }
              if (other.HasGameServerSteamId) {
                GameServerSteamId = other.GameServerSteamId;
              }
              if (other.HasGameServerIpAddress) {
                GameServerIpAddress = other.GameServerIpAddress;
              }
              if (other.HasGameServerPort) {
                GameServerPort = other.GameServerPort;
              }
              if (other.HasGameExtraInfo) {
                GameExtraInfo = other.GameExtraInfo;
              }
              if (other.HasAccountName) {
                AccountName = other.AccountName;
              }
              if (other.HasLobbySteamId) {
                LobbySteamId = other.LobbySteamId;
              }
              if (other.HasRichPresenceKv) {
                RichPresenceKv = other.RichPresenceKv;
              }
              if (other.HasBroadcastSessionId) {
                BroadcastSessionId = other.BroadcastSessionId;
              }
              if (other.HasWatchingBroadcastAccountid) {
                WatchingBroadcastAccountid = other.WatchingBroadcastAccountid;
              }
              if (other.HasWatchingBroadcastAppid) {
                WatchingBroadcastAppid = other.WatchingBroadcastAppid;
              }
              if (other.HasWatchingBroadcastViewers) {
                WatchingBroadcastViewers = other.WatchingBroadcastViewers;
              }
              if (other.HasWatchingBroadcastTitle) {
                WatchingBroadcastTitle = other.WatchingBroadcastTitle;
              }
              if (other.HasLastLogoffTime) {
                LastLogoffTime = other.LastLogoffTime;
              }
              if (other.HasLastSeenOnline) {
                LastSeenOnline = other.LastSeenOnline;
              }
              if (other.HasGameOsType) {
                GameOsType = other.GameOsType;
              }
              if (other.HasGameDeviceType) {
                GameDeviceType = other.GameDeviceType;
              }
              if (other.HasGameDeviceName) {
                GameDeviceName = other.GameDeviceName;
              }
              if (other.HasGameIsPrivate) {
                GameIsPrivate = other.GameIsPrivate;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    PersonaState = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    PersonaStateFlags = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    TimeCreated = input.ReadUInt32();
                    break;
                  }
                  case 33: {
                    GameId = input.ReadFixed64();
                    break;
                  }
                  case 41: {
                    GameServerSteamId = input.ReadFixed64();
                    break;
                  }
                  case 48: {
                    GameServerIpAddress = input.ReadUInt32();
                    break;
                  }
                  case 56: {
                    GameServerPort = input.ReadUInt32();
                    break;
                  }
                  case 66: {
                    GameExtraInfo = input.ReadString();
                    break;
                  }
                  case 74: {
                    AccountName = input.ReadString();
                    break;
                  }
                  case 81: {
                    LobbySteamId = input.ReadFixed64();
                    break;
                  }
                  case 90: {
                    RichPresenceKv = input.ReadString();
                    break;
                  }
                  case 97: {
                    BroadcastSessionId = input.ReadFixed64();
                    break;
                  }
                  case 104: {
                    WatchingBroadcastAccountid = input.ReadUInt32();
                    break;
                  }
                  case 112: {
                    WatchingBroadcastAppid = input.ReadUInt32();
                    break;
                  }
                  case 120: {
                    WatchingBroadcastViewers = input.ReadUInt32();
                    break;
                  }
                  case 130: {
                    WatchingBroadcastTitle = input.ReadString();
                    break;
                  }
                  case 136: {
                    LastLogoffTime = input.ReadUInt32();
                    break;
                  }
                  case 144: {
                    LastSeenOnline = input.ReadUInt32();
                    break;
                  }
                  case 152: {
                    GameOsType = input.ReadInt32();
                    break;
                  }
                  case 160: {
                    GameDeviceType = input.ReadInt32();
                    break;
                  }
                  case 170: {
                    GameDeviceName = input.ReadString();
                    break;
                  }
                  case 176: {
                    GameIsPrivate = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    PersonaState = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    PersonaStateFlags = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    TimeCreated = input.ReadUInt32();
                    break;
                  }
                  case 33: {
                    GameId = input.ReadFixed64();
                    break;
                  }
                  case 41: {
                    GameServerSteamId = input.ReadFixed64();
                    break;
                  }
                  case 48: {
                    GameServerIpAddress = input.ReadUInt32();
                    break;
                  }
                  case 56: {
                    GameServerPort = input.ReadUInt32();
                    break;
                  }
                  case 66: {
                    GameExtraInfo = input.ReadString();
                    break;
                  }
                  case 74: {
                    AccountName = input.ReadString();
                    break;
                  }
                  case 81: {
                    LobbySteamId = input.ReadFixed64();
                    break;
                  }
                  case 90: {
                    RichPresenceKv = input.ReadString();
                    break;
                  }
                  case 97: {
                    BroadcastSessionId = input.ReadFixed64();
                    break;
                  }
                  case 104: {
                    WatchingBroadcastAccountid = input.ReadUInt32();
                    break;
                  }
                  case 112: {
                    WatchingBroadcastAppid = input.ReadUInt32();
                    break;
                  }
                  case 120: {
                    WatchingBroadcastViewers = input.ReadUInt32();
                    break;
                  }
                  case 130: {
                    WatchingBroadcastTitle = input.ReadString();
                    break;
                  }
                  case 136: {
                    LastLogoffTime = input.ReadUInt32();
                    break;
                  }
                  case 144: {
                    LastSeenOnline = input.ReadUInt32();
                    break;
                  }
                  case 152: {
                    GameOsType = input.ReadInt32();
                    break;
                  }
                  case 160: {
                    GameDeviceType = input.ReadInt32();
                    break;
                  }
                  case 170: {
                    GameDeviceName = input.ReadString();
                    break;
                  }
                  case 176: {
                    GameIsPrivate = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetMutualFriendsForIncomingInvites_Request : pb::IMessage<CPlayer_GetMutualFriendsForIncomingInvites_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetMutualFriendsForIncomingInvites_Request> _parser = new pb::MessageParser<CPlayer_GetMutualFriendsForIncomingInvites_Request>(() => new CPlayer_GetMutualFriendsForIncomingInvites_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetMutualFriendsForIncomingInvites_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMutualFriendsForIncomingInvites_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMutualFriendsForIncomingInvites_Request(CPlayer_GetMutualFriendsForIncomingInvites_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMutualFriendsForIncomingInvites_Request Clone() {
      return new CPlayer_GetMutualFriendsForIncomingInvites_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetMutualFriendsForIncomingInvites_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetMutualFriendsForIncomingInvites_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetMutualFriendsForIncomingInvites_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_IncomingInviteMutualFriendList : pb::IMessage<CPlayer_IncomingInviteMutualFriendList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_IncomingInviteMutualFriendList> _parser = new pb::MessageParser<CPlayer_IncomingInviteMutualFriendList>(() => new CPlayer_IncomingInviteMutualFriendList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_IncomingInviteMutualFriendList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IncomingInviteMutualFriendList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IncomingInviteMutualFriendList(CPlayer_IncomingInviteMutualFriendList other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      mutualFriendAccountIds_ = other.mutualFriendAccountIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IncomingInviteMutualFriendList Clone() {
      return new CPlayer_IncomingInviteMutualFriendList(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mutual_friend_account_ids" field.</summary>
    public const int MutualFriendAccountIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_mutualFriendAccountIds_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> mutualFriendAccountIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> MutualFriendAccountIds {
      get { return mutualFriendAccountIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_IncomingInviteMutualFriendList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_IncomingInviteMutualFriendList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if(!mutualFriendAccountIds_.Equals(other.mutualFriendAccountIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      hash ^= mutualFriendAccountIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      mutualFriendAccountIds_.WriteTo(output, _repeated_mutualFriendAccountIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      mutualFriendAccountIds_.WriteTo(ref output, _repeated_mutualFriendAccountIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      size += mutualFriendAccountIds_.CalculateSize(_repeated_mutualFriendAccountIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_IncomingInviteMutualFriendList other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      mutualFriendAccountIds_.Add(other.mutualFriendAccountIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18:
          case 16: {
            mutualFriendAccountIds_.AddEntriesFrom(input, _repeated_mutualFriendAccountIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18:
          case 16: {
            mutualFriendAccountIds_.AddEntriesFrom(ref input, _repeated_mutualFriendAccountIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetMutualFriendsForIncomingInvites_Response : pb::IMessage<CPlayer_GetMutualFriendsForIncomingInvites_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetMutualFriendsForIncomingInvites_Response> _parser = new pb::MessageParser<CPlayer_GetMutualFriendsForIncomingInvites_Response>(() => new CPlayer_GetMutualFriendsForIncomingInvites_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetMutualFriendsForIncomingInvites_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMutualFriendsForIncomingInvites_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMutualFriendsForIncomingInvites_Response(CPlayer_GetMutualFriendsForIncomingInvites_Response other) : this() {
      incomingInviteMutualFriendsLists_ = other.incomingInviteMutualFriendsLists_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMutualFriendsForIncomingInvites_Response Clone() {
      return new CPlayer_GetMutualFriendsForIncomingInvites_Response(this);
    }

    /// <summary>Field number for the "incoming_invite_mutual_friends_lists" field.</summary>
    public const int IncomingInviteMutualFriendsListsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList> _repeated_incomingInviteMutualFriendsLists_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList> incomingInviteMutualFriendsLists_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_IncomingInviteMutualFriendList> IncomingInviteMutualFriendsLists {
      get { return incomingInviteMutualFriendsLists_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetMutualFriendsForIncomingInvites_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetMutualFriendsForIncomingInvites_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!incomingInviteMutualFriendsLists_.Equals(other.incomingInviteMutualFriendsLists_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= incomingInviteMutualFriendsLists_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      incomingInviteMutualFriendsLists_.WriteTo(output, _repeated_incomingInviteMutualFriendsLists_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      incomingInviteMutualFriendsLists_.WriteTo(ref output, _repeated_incomingInviteMutualFriendsLists_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += incomingInviteMutualFriendsLists_.CalculateSize(_repeated_incomingInviteMutualFriendsLists_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetMutualFriendsForIncomingInvites_Response other) {
      if (other == null) {
        return;
      }
      incomingInviteMutualFriendsLists_.Add(other.incomingInviteMutualFriendsLists_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            incomingInviteMutualFriendsLists_.AddEntriesFrom(input, _repeated_incomingInviteMutualFriendsLists_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            incomingInviteMutualFriendsLists_.AddEntriesFrom(ref input, _repeated_incomingInviteMutualFriendsLists_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetOwnedGames_Request : pb::IMessage<CPlayer_GetOwnedGames_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetOwnedGames_Request> _parser = new pb::MessageParser<CPlayer_GetOwnedGames_Request>(() => new CPlayer_GetOwnedGames_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetOwnedGames_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetOwnedGames_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetOwnedGames_Request(CPlayer_GetOwnedGames_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      includeAppinfo_ = other.includeAppinfo_;
      includePlayedFreeGames_ = other.includePlayedFreeGames_;
      appidsFilter_ = other.appidsFilter_.Clone();
      includeFreeSub_ = other.includeFreeSub_;
      skipUnvettedApps_ = other.skipUnvettedApps_;
      language_ = other.language_;
      includeExtendedAppinfo_ = other.includeExtendedAppinfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetOwnedGames_Request Clone() {
      return new CPlayer_GetOwnedGames_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "include_appinfo" field.</summary>
    public const int IncludeAppinfoFieldNumber = 2;
    private readonly static bool IncludeAppinfoDefaultValue = false;

    private bool includeAppinfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeAppinfo {
      get { if ((_hasBits0 & 2) != 0) { return includeAppinfo_; } else { return IncludeAppinfoDefaultValue; } }
      set {
        _hasBits0 |= 2;
        includeAppinfo_ = value;
      }
    }
    /// <summary>Gets whether the "include_appinfo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeAppinfo {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "include_appinfo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeAppinfo() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "include_played_free_games" field.</summary>
    public const int IncludePlayedFreeGamesFieldNumber = 3;
    private readonly static bool IncludePlayedFreeGamesDefaultValue = false;

    private bool includePlayedFreeGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludePlayedFreeGames {
      get { if ((_hasBits0 & 4) != 0) { return includePlayedFreeGames_; } else { return IncludePlayedFreeGamesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        includePlayedFreeGames_ = value;
      }
    }
    /// <summary>Gets whether the "include_played_free_games" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludePlayedFreeGames {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "include_played_free_games" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludePlayedFreeGames() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "appids_filter" field.</summary>
    public const int AppidsFilterFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_appidsFilter_codec
        = pb::FieldCodec.ForUInt32(32);
    private readonly pbc::RepeatedField<uint> appidsFilter_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> AppidsFilter {
      get { return appidsFilter_; }
    }

    /// <summary>Field number for the "include_free_sub" field.</summary>
    public const int IncludeFreeSubFieldNumber = 5;
    private readonly static bool IncludeFreeSubDefaultValue = false;

    private bool includeFreeSub_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeFreeSub {
      get { if ((_hasBits0 & 8) != 0) { return includeFreeSub_; } else { return IncludeFreeSubDefaultValue; } }
      set {
        _hasBits0 |= 8;
        includeFreeSub_ = value;
      }
    }
    /// <summary>Gets whether the "include_free_sub" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeFreeSub {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "include_free_sub" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeFreeSub() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "skip_unvetted_apps" field.</summary>
    public const int SkipUnvettedAppsFieldNumber = 6;
    private readonly static bool SkipUnvettedAppsDefaultValue = true;

    private bool skipUnvettedApps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SkipUnvettedApps {
      get { if ((_hasBits0 & 16) != 0) { return skipUnvettedApps_; } else { return SkipUnvettedAppsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        skipUnvettedApps_ = value;
      }
    }
    /// <summary>Gets whether the "skip_unvetted_apps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkipUnvettedApps {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "skip_unvetted_apps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkipUnvettedApps() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 7;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    /// <summary>Field number for the "include_extended_appinfo" field.</summary>
    public const int IncludeExtendedAppinfoFieldNumber = 8;
    private readonly static bool IncludeExtendedAppinfoDefaultValue = false;

    private bool includeExtendedAppinfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeExtendedAppinfo {
      get { if ((_hasBits0 & 32) != 0) { return includeExtendedAppinfo_; } else { return IncludeExtendedAppinfoDefaultValue; } }
      set {
        _hasBits0 |= 32;
        includeExtendedAppinfo_ = value;
      }
    }
    /// <summary>Gets whether the "include_extended_appinfo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeExtendedAppinfo {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "include_extended_appinfo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeExtendedAppinfo() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetOwnedGames_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetOwnedGames_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (IncludeAppinfo != other.IncludeAppinfo) return false;
      if (IncludePlayedFreeGames != other.IncludePlayedFreeGames) return false;
      if(!appidsFilter_.Equals(other.appidsFilter_)) return false;
      if (IncludeFreeSub != other.IncludeFreeSub) return false;
      if (SkipUnvettedApps != other.SkipUnvettedApps) return false;
      if (Language != other.Language) return false;
      if (IncludeExtendedAppinfo != other.IncludeExtendedAppinfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasIncludeAppinfo) hash ^= IncludeAppinfo.GetHashCode();
      if (HasIncludePlayedFreeGames) hash ^= IncludePlayedFreeGames.GetHashCode();
      hash ^= appidsFilter_.GetHashCode();
      if (HasIncludeFreeSub) hash ^= IncludeFreeSub.GetHashCode();
      if (HasSkipUnvettedApps) hash ^= SkipUnvettedApps.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (HasIncludeExtendedAppinfo) hash ^= IncludeExtendedAppinfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasIncludeAppinfo) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeAppinfo);
      }
      if (HasIncludePlayedFreeGames) {
        output.WriteRawTag(24);
        output.WriteBool(IncludePlayedFreeGames);
      }
      appidsFilter_.WriteTo(output, _repeated_appidsFilter_codec);
      if (HasIncludeFreeSub) {
        output.WriteRawTag(40);
        output.WriteBool(IncludeFreeSub);
      }
      if (HasSkipUnvettedApps) {
        output.WriteRawTag(48);
        output.WriteBool(SkipUnvettedApps);
      }
      if (HasLanguage) {
        output.WriteRawTag(58);
        output.WriteString(Language);
      }
      if (HasIncludeExtendedAppinfo) {
        output.WriteRawTag(64);
        output.WriteBool(IncludeExtendedAppinfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasIncludeAppinfo) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeAppinfo);
      }
      if (HasIncludePlayedFreeGames) {
        output.WriteRawTag(24);
        output.WriteBool(IncludePlayedFreeGames);
      }
      appidsFilter_.WriteTo(ref output, _repeated_appidsFilter_codec);
      if (HasIncludeFreeSub) {
        output.WriteRawTag(40);
        output.WriteBool(IncludeFreeSub);
      }
      if (HasSkipUnvettedApps) {
        output.WriteRawTag(48);
        output.WriteBool(SkipUnvettedApps);
      }
      if (HasLanguage) {
        output.WriteRawTag(58);
        output.WriteString(Language);
      }
      if (HasIncludeExtendedAppinfo) {
        output.WriteRawTag(64);
        output.WriteBool(IncludeExtendedAppinfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasIncludeAppinfo) {
        size += 1 + 1;
      }
      if (HasIncludePlayedFreeGames) {
        size += 1 + 1;
      }
      size += appidsFilter_.CalculateSize(_repeated_appidsFilter_codec);
      if (HasIncludeFreeSub) {
        size += 1 + 1;
      }
      if (HasSkipUnvettedApps) {
        size += 1 + 1;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (HasIncludeExtendedAppinfo) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetOwnedGames_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasIncludeAppinfo) {
        IncludeAppinfo = other.IncludeAppinfo;
      }
      if (other.HasIncludePlayedFreeGames) {
        IncludePlayedFreeGames = other.IncludePlayedFreeGames;
      }
      appidsFilter_.Add(other.appidsFilter_);
      if (other.HasIncludeFreeSub) {
        IncludeFreeSub = other.IncludeFreeSub;
      }
      if (other.HasSkipUnvettedApps) {
        SkipUnvettedApps = other.SkipUnvettedApps;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      if (other.HasIncludeExtendedAppinfo) {
        IncludeExtendedAppinfo = other.IncludeExtendedAppinfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            IncludeAppinfo = input.ReadBool();
            break;
          }
          case 24: {
            IncludePlayedFreeGames = input.ReadBool();
            break;
          }
          case 34:
          case 32: {
            appidsFilter_.AddEntriesFrom(input, _repeated_appidsFilter_codec);
            break;
          }
          case 40: {
            IncludeFreeSub = input.ReadBool();
            break;
          }
          case 48: {
            SkipUnvettedApps = input.ReadBool();
            break;
          }
          case 58: {
            Language = input.ReadString();
            break;
          }
          case 64: {
            IncludeExtendedAppinfo = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            IncludeAppinfo = input.ReadBool();
            break;
          }
          case 24: {
            IncludePlayedFreeGames = input.ReadBool();
            break;
          }
          case 34:
          case 32: {
            appidsFilter_.AddEntriesFrom(ref input, _repeated_appidsFilter_codec);
            break;
          }
          case 40: {
            IncludeFreeSub = input.ReadBool();
            break;
          }
          case 48: {
            SkipUnvettedApps = input.ReadBool();
            break;
          }
          case 58: {
            Language = input.ReadString();
            break;
          }
          case 64: {
            IncludeExtendedAppinfo = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetOwnedGames_Response : pb::IMessage<CPlayer_GetOwnedGames_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetOwnedGames_Response> _parser = new pb::MessageParser<CPlayer_GetOwnedGames_Response>(() => new CPlayer_GetOwnedGames_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetOwnedGames_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetOwnedGames_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetOwnedGames_Response(CPlayer_GetOwnedGames_Response other) : this() {
      _hasBits0 = other._hasBits0;
      gameCount_ = other.gameCount_;
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetOwnedGames_Response Clone() {
      return new CPlayer_GetOwnedGames_Response(this);
    }

    /// <summary>Field number for the "game_count" field.</summary>
    public const int GameCountFieldNumber = 1;
    private readonly static uint GameCountDefaultValue = 0;

    private uint gameCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameCount {
      get { if ((_hasBits0 & 1) != 0) { return gameCount_; } else { return GameCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameCount_ = value;
      }
    }
    /// <summary>Gets whether the "game_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game> _repeated_games_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game> games_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Types.Game> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetOwnedGames_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetOwnedGames_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameCount != other.GameCount) return false;
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameCount) hash ^= GameCount.GetHashCode();
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameCount);
      }
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameCount);
      }
      games_.WriteTo(ref output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameCount);
      }
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetOwnedGames_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasGameCount) {
        GameCount = other.GameCount;
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameCount = input.ReadUInt32();
            break;
          }
          case 18: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameCount = input.ReadUInt32();
            break;
          }
          case 18: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetOwnedGames_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Game : pb::IMessage<Game>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Game> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetOwnedGames_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game(Game other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          name_ = other.name_;
          playtime2Weeks_ = other.playtime2Weeks_;
          playtimeForever_ = other.playtimeForever_;
          imgIconUrl_ = other.imgIconUrl_;
          hasCommunityVisibleStats_ = other.hasCommunityVisibleStats_;
          playtimeWindowsForever_ = other.playtimeWindowsForever_;
          playtimeMacForever_ = other.playtimeMacForever_;
          playtimeLinuxForever_ = other.playtimeLinuxForever_;
          rtimeLastPlayed_ = other.rtimeLastPlayed_;
          capsuleFilename_ = other.capsuleFilename_;
          sortAs_ = other.sortAs_;
          hasWorkshop_ = other.hasWorkshop_;
          hasMarket_ = other.hasMarket_;
          hasDlc_ = other.hasDlc_;
          hasLeaderboards_ = other.hasLeaderboards_;
          contentDescriptorids_ = other.contentDescriptorids_.Clone();
          playtimeDisconnected_ = other.playtimeDisconnected_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game Clone() {
          return new Game(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static int AppidDefaultValue = 0;

        private int appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "playtime_2weeks" field.</summary>
        public const int Playtime2WeeksFieldNumber = 3;
        private readonly static int Playtime2WeeksDefaultValue = 0;

        private int playtime2Weeks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Playtime2Weeks {
          get { if ((_hasBits0 & 2) != 0) { return playtime2Weeks_; } else { return Playtime2WeeksDefaultValue; } }
          set {
            _hasBits0 |= 2;
            playtime2Weeks_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_2weeks" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytime2Weeks {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "playtime_2weeks" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytime2Weeks() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "playtime_forever" field.</summary>
        public const int PlaytimeForeverFieldNumber = 4;
        private readonly static int PlaytimeForeverDefaultValue = 0;

        private int playtimeForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeForever {
          get { if ((_hasBits0 & 4) != 0) { return playtimeForever_; } else { return PlaytimeForeverDefaultValue; } }
          set {
            _hasBits0 |= 4;
            playtimeForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeForever {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "playtime_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeForever() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "img_icon_url" field.</summary>
        public const int ImgIconUrlFieldNumber = 5;
        private readonly static string ImgIconUrlDefaultValue = "";

        private string imgIconUrl_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ImgIconUrl {
          get { return imgIconUrl_ ?? ImgIconUrlDefaultValue; }
          set {
            imgIconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "img_icon_url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasImgIconUrl {
          get { return imgIconUrl_ != null; }
        }
        /// <summary>Clears the value of the "img_icon_url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearImgIconUrl() {
          imgIconUrl_ = null;
        }

        /// <summary>Field number for the "has_community_visible_stats" field.</summary>
        public const int HasCommunityVisibleStatsFieldNumber = 7;
        private readonly static bool HasCommunityVisibleStatsDefaultValue = false;

        private bool hasCommunityVisibleStats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCommunityVisibleStats {
          get { if ((_hasBits0 & 8) != 0) { return hasCommunityVisibleStats_; } else { return HasCommunityVisibleStatsDefaultValue; } }
          set {
            _hasBits0 |= 8;
            hasCommunityVisibleStats_ = value;
          }
        }
        /// <summary>Gets whether the "has_community_visible_stats" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHasCommunityVisibleStats {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "has_community_visible_stats" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHasCommunityVisibleStats() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "playtime_windows_forever" field.</summary>
        public const int PlaytimeWindowsForeverFieldNumber = 8;
        private readonly static int PlaytimeWindowsForeverDefaultValue = 0;

        private int playtimeWindowsForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeWindowsForever {
          get { if ((_hasBits0 & 16) != 0) { return playtimeWindowsForever_; } else { return PlaytimeWindowsForeverDefaultValue; } }
          set {
            _hasBits0 |= 16;
            playtimeWindowsForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_windows_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeWindowsForever {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "playtime_windows_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeWindowsForever() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "playtime_mac_forever" field.</summary>
        public const int PlaytimeMacForeverFieldNumber = 9;
        private readonly static int PlaytimeMacForeverDefaultValue = 0;

        private int playtimeMacForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeMacForever {
          get { if ((_hasBits0 & 32) != 0) { return playtimeMacForever_; } else { return PlaytimeMacForeverDefaultValue; } }
          set {
            _hasBits0 |= 32;
            playtimeMacForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_mac_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeMacForever {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "playtime_mac_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeMacForever() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "playtime_linux_forever" field.</summary>
        public const int PlaytimeLinuxForeverFieldNumber = 10;
        private readonly static int PlaytimeLinuxForeverDefaultValue = 0;

        private int playtimeLinuxForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeLinuxForever {
          get { if ((_hasBits0 & 64) != 0) { return playtimeLinuxForever_; } else { return PlaytimeLinuxForeverDefaultValue; } }
          set {
            _hasBits0 |= 64;
            playtimeLinuxForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_linux_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeLinuxForever {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "playtime_linux_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeLinuxForever() {
          _hasBits0 &= ~64;
        }

        /// <summary>Field number for the "rtime_last_played" field.</summary>
        public const int RtimeLastPlayedFieldNumber = 11;
        private readonly static uint RtimeLastPlayedDefaultValue = 0;

        private uint rtimeLastPlayed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint RtimeLastPlayed {
          get { if ((_hasBits0 & 128) != 0) { return rtimeLastPlayed_; } else { return RtimeLastPlayedDefaultValue; } }
          set {
            _hasBits0 |= 128;
            rtimeLastPlayed_ = value;
          }
        }
        /// <summary>Gets whether the "rtime_last_played" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRtimeLastPlayed {
          get { return (_hasBits0 & 128) != 0; }
        }
        /// <summary>Clears the value of the "rtime_last_played" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRtimeLastPlayed() {
          _hasBits0 &= ~128;
        }

        /// <summary>Field number for the "capsule_filename" field.</summary>
        public const int CapsuleFilenameFieldNumber = 12;
        private readonly static string CapsuleFilenameDefaultValue = "";

        private string capsuleFilename_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CapsuleFilename {
          get { return capsuleFilename_ ?? CapsuleFilenameDefaultValue; }
          set {
            capsuleFilename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "capsule_filename" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCapsuleFilename {
          get { return capsuleFilename_ != null; }
        }
        /// <summary>Clears the value of the "capsule_filename" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCapsuleFilename() {
          capsuleFilename_ = null;
        }

        /// <summary>Field number for the "sort_as" field.</summary>
        public const int SortAsFieldNumber = 13;
        private readonly static string SortAsDefaultValue = "";

        private string sortAs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SortAs {
          get { return sortAs_ ?? SortAsDefaultValue; }
          set {
            sortAs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "sort_as" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSortAs {
          get { return sortAs_ != null; }
        }
        /// <summary>Clears the value of the "sort_as" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSortAs() {
          sortAs_ = null;
        }

        /// <summary>Field number for the "has_workshop" field.</summary>
        public const int HasWorkshopFieldNumber = 14;
        private readonly static bool HasWorkshopDefaultValue = false;

        private bool hasWorkshop_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWorkshop {
          get { if ((_hasBits0 & 256) != 0) { return hasWorkshop_; } else { return HasWorkshopDefaultValue; } }
          set {
            _hasBits0 |= 256;
            hasWorkshop_ = value;
          }
        }
        /// <summary>Gets whether the "has_workshop" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHasWorkshop {
          get { return (_hasBits0 & 256) != 0; }
        }
        /// <summary>Clears the value of the "has_workshop" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHasWorkshop() {
          _hasBits0 &= ~256;
        }

        /// <summary>Field number for the "has_market" field.</summary>
        public const int HasMarketFieldNumber = 15;
        private readonly static bool HasMarketDefaultValue = false;

        private bool hasMarket_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMarket {
          get { if ((_hasBits0 & 512) != 0) { return hasMarket_; } else { return HasMarketDefaultValue; } }
          set {
            _hasBits0 |= 512;
            hasMarket_ = value;
          }
        }
        /// <summary>Gets whether the "has_market" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHasMarket {
          get { return (_hasBits0 & 512) != 0; }
        }
        /// <summary>Clears the value of the "has_market" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHasMarket() {
          _hasBits0 &= ~512;
        }

        /// <summary>Field number for the "has_dlc" field.</summary>
        public const int HasDlcFieldNumber = 16;
        private readonly static bool HasDlcDefaultValue = false;

        private bool hasDlc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDlc {
          get { if ((_hasBits0 & 1024) != 0) { return hasDlc_; } else { return HasDlcDefaultValue; } }
          set {
            _hasBits0 |= 1024;
            hasDlc_ = value;
          }
        }
        /// <summary>Gets whether the "has_dlc" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHasDlc {
          get { return (_hasBits0 & 1024) != 0; }
        }
        /// <summary>Clears the value of the "has_dlc" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHasDlc() {
          _hasBits0 &= ~1024;
        }

        /// <summary>Field number for the "has_leaderboards" field.</summary>
        public const int HasLeaderboardsFieldNumber = 17;
        private readonly static bool HasLeaderboardsDefaultValue = false;

        private bool hasLeaderboards_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLeaderboards {
          get { if ((_hasBits0 & 2048) != 0) { return hasLeaderboards_; } else { return HasLeaderboardsDefaultValue; } }
          set {
            _hasBits0 |= 2048;
            hasLeaderboards_ = value;
          }
        }
        /// <summary>Gets whether the "has_leaderboards" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHasLeaderboards {
          get { return (_hasBits0 & 2048) != 0; }
        }
        /// <summary>Clears the value of the "has_leaderboards" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHasLeaderboards() {
          _hasBits0 &= ~2048;
        }

        /// <summary>Field number for the "content_descriptorids" field.</summary>
        public const int ContentDescriptoridsFieldNumber = 18;
        private static readonly pb::FieldCodec<uint> _repeated_contentDescriptorids_codec
            = pb::FieldCodec.ForUInt32(144);
        private readonly pbc::RepeatedField<uint> contentDescriptorids_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<uint> ContentDescriptorids {
          get { return contentDescriptorids_; }
        }

        /// <summary>Field number for the "playtime_disconnected" field.</summary>
        public const int PlaytimeDisconnectedFieldNumber = 19;
        private readonly static int PlaytimeDisconnectedDefaultValue = 0;

        private int playtimeDisconnected_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeDisconnected {
          get { if ((_hasBits0 & 4096) != 0) { return playtimeDisconnected_; } else { return PlaytimeDisconnectedDefaultValue; } }
          set {
            _hasBits0 |= 4096;
            playtimeDisconnected_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_disconnected" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeDisconnected {
          get { return (_hasBits0 & 4096) != 0; }
        }
        /// <summary>Clears the value of the "playtime_disconnected" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeDisconnected() {
          _hasBits0 &= ~4096;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Game);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Game other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (Name != other.Name) return false;
          if (Playtime2Weeks != other.Playtime2Weeks) return false;
          if (PlaytimeForever != other.PlaytimeForever) return false;
          if (ImgIconUrl != other.ImgIconUrl) return false;
          if (HasCommunityVisibleStats != other.HasCommunityVisibleStats) return false;
          if (PlaytimeWindowsForever != other.PlaytimeWindowsForever) return false;
          if (PlaytimeMacForever != other.PlaytimeMacForever) return false;
          if (PlaytimeLinuxForever != other.PlaytimeLinuxForever) return false;
          if (RtimeLastPlayed != other.RtimeLastPlayed) return false;
          if (CapsuleFilename != other.CapsuleFilename) return false;
          if (SortAs != other.SortAs) return false;
          if (HasWorkshop != other.HasWorkshop) return false;
          if (HasMarket != other.HasMarket) return false;
          if (HasDlc != other.HasDlc) return false;
          if (HasLeaderboards != other.HasLeaderboards) return false;
          if(!contentDescriptorids_.Equals(other.contentDescriptorids_)) return false;
          if (PlaytimeDisconnected != other.PlaytimeDisconnected) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasPlaytime2Weeks) hash ^= Playtime2Weeks.GetHashCode();
          if (HasPlaytimeForever) hash ^= PlaytimeForever.GetHashCode();
          if (HasImgIconUrl) hash ^= ImgIconUrl.GetHashCode();
          if (HasHasCommunityVisibleStats) hash ^= HasCommunityVisibleStats.GetHashCode();
          if (HasPlaytimeWindowsForever) hash ^= PlaytimeWindowsForever.GetHashCode();
          if (HasPlaytimeMacForever) hash ^= PlaytimeMacForever.GetHashCode();
          if (HasPlaytimeLinuxForever) hash ^= PlaytimeLinuxForever.GetHashCode();
          if (HasRtimeLastPlayed) hash ^= RtimeLastPlayed.GetHashCode();
          if (HasCapsuleFilename) hash ^= CapsuleFilename.GetHashCode();
          if (HasSortAs) hash ^= SortAs.GetHashCode();
          if (HasHasWorkshop) hash ^= HasWorkshop.GetHashCode();
          if (HasHasMarket) hash ^= HasMarket.GetHashCode();
          if (HasHasDlc) hash ^= HasDlc.GetHashCode();
          if (HasHasLeaderboards) hash ^= HasLeaderboards.GetHashCode();
          hash ^= contentDescriptorids_.GetHashCode();
          if (HasPlaytimeDisconnected) hash ^= PlaytimeDisconnected.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteInt32(Appid);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasPlaytime2Weeks) {
            output.WriteRawTag(24);
            output.WriteInt32(Playtime2Weeks);
          }
          if (HasPlaytimeForever) {
            output.WriteRawTag(32);
            output.WriteInt32(PlaytimeForever);
          }
          if (HasImgIconUrl) {
            output.WriteRawTag(42);
            output.WriteString(ImgIconUrl);
          }
          if (HasHasCommunityVisibleStats) {
            output.WriteRawTag(56);
            output.WriteBool(HasCommunityVisibleStats);
          }
          if (HasPlaytimeWindowsForever) {
            output.WriteRawTag(64);
            output.WriteInt32(PlaytimeWindowsForever);
          }
          if (HasPlaytimeMacForever) {
            output.WriteRawTag(72);
            output.WriteInt32(PlaytimeMacForever);
          }
          if (HasPlaytimeLinuxForever) {
            output.WriteRawTag(80);
            output.WriteInt32(PlaytimeLinuxForever);
          }
          if (HasRtimeLastPlayed) {
            output.WriteRawTag(88);
            output.WriteUInt32(RtimeLastPlayed);
          }
          if (HasCapsuleFilename) {
            output.WriteRawTag(98);
            output.WriteString(CapsuleFilename);
          }
          if (HasSortAs) {
            output.WriteRawTag(106);
            output.WriteString(SortAs);
          }
          if (HasHasWorkshop) {
            output.WriteRawTag(112);
            output.WriteBool(HasWorkshop);
          }
          if (HasHasMarket) {
            output.WriteRawTag(120);
            output.WriteBool(HasMarket);
          }
          if (HasHasDlc) {
            output.WriteRawTag(128, 1);
            output.WriteBool(HasDlc);
          }
          if (HasHasLeaderboards) {
            output.WriteRawTag(136, 1);
            output.WriteBool(HasLeaderboards);
          }
          contentDescriptorids_.WriteTo(output, _repeated_contentDescriptorids_codec);
          if (HasPlaytimeDisconnected) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(PlaytimeDisconnected);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteInt32(Appid);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasPlaytime2Weeks) {
            output.WriteRawTag(24);
            output.WriteInt32(Playtime2Weeks);
          }
          if (HasPlaytimeForever) {
            output.WriteRawTag(32);
            output.WriteInt32(PlaytimeForever);
          }
          if (HasImgIconUrl) {
            output.WriteRawTag(42);
            output.WriteString(ImgIconUrl);
          }
          if (HasHasCommunityVisibleStats) {
            output.WriteRawTag(56);
            output.WriteBool(HasCommunityVisibleStats);
          }
          if (HasPlaytimeWindowsForever) {
            output.WriteRawTag(64);
            output.WriteInt32(PlaytimeWindowsForever);
          }
          if (HasPlaytimeMacForever) {
            output.WriteRawTag(72);
            output.WriteInt32(PlaytimeMacForever);
          }
          if (HasPlaytimeLinuxForever) {
            output.WriteRawTag(80);
            output.WriteInt32(PlaytimeLinuxForever);
          }
          if (HasRtimeLastPlayed) {
            output.WriteRawTag(88);
            output.WriteUInt32(RtimeLastPlayed);
          }
          if (HasCapsuleFilename) {
            output.WriteRawTag(98);
            output.WriteString(CapsuleFilename);
          }
          if (HasSortAs) {
            output.WriteRawTag(106);
            output.WriteString(SortAs);
          }
          if (HasHasWorkshop) {
            output.WriteRawTag(112);
            output.WriteBool(HasWorkshop);
          }
          if (HasHasMarket) {
            output.WriteRawTag(120);
            output.WriteBool(HasMarket);
          }
          if (HasHasDlc) {
            output.WriteRawTag(128, 1);
            output.WriteBool(HasDlc);
          }
          if (HasHasLeaderboards) {
            output.WriteRawTag(136, 1);
            output.WriteBool(HasLeaderboards);
          }
          contentDescriptorids_.WriteTo(ref output, _repeated_contentDescriptorids_codec);
          if (HasPlaytimeDisconnected) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(PlaytimeDisconnected);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Appid);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasPlaytime2Weeks) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Playtime2Weeks);
          }
          if (HasPlaytimeForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeForever);
          }
          if (HasImgIconUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgIconUrl);
          }
          if (HasHasCommunityVisibleStats) {
            size += 1 + 1;
          }
          if (HasPlaytimeWindowsForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeWindowsForever);
          }
          if (HasPlaytimeMacForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeMacForever);
          }
          if (HasPlaytimeLinuxForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeLinuxForever);
          }
          if (HasRtimeLastPlayed) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeLastPlayed);
          }
          if (HasCapsuleFilename) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CapsuleFilename);
          }
          if (HasSortAs) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SortAs);
          }
          if (HasHasWorkshop) {
            size += 1 + 1;
          }
          if (HasHasMarket) {
            size += 1 + 1;
          }
          if (HasHasDlc) {
            size += 2 + 1;
          }
          if (HasHasLeaderboards) {
            size += 2 + 1;
          }
          size += contentDescriptorids_.CalculateSize(_repeated_contentDescriptorids_codec);
          if (HasPlaytimeDisconnected) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeDisconnected);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Game other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasPlaytime2Weeks) {
            Playtime2Weeks = other.Playtime2Weeks;
          }
          if (other.HasPlaytimeForever) {
            PlaytimeForever = other.PlaytimeForever;
          }
          if (other.HasImgIconUrl) {
            ImgIconUrl = other.ImgIconUrl;
          }
          if (other.HasHasCommunityVisibleStats) {
            HasCommunityVisibleStats = other.HasCommunityVisibleStats;
          }
          if (other.HasPlaytimeWindowsForever) {
            PlaytimeWindowsForever = other.PlaytimeWindowsForever;
          }
          if (other.HasPlaytimeMacForever) {
            PlaytimeMacForever = other.PlaytimeMacForever;
          }
          if (other.HasPlaytimeLinuxForever) {
            PlaytimeLinuxForever = other.PlaytimeLinuxForever;
          }
          if (other.HasRtimeLastPlayed) {
            RtimeLastPlayed = other.RtimeLastPlayed;
          }
          if (other.HasCapsuleFilename) {
            CapsuleFilename = other.CapsuleFilename;
          }
          if (other.HasSortAs) {
            SortAs = other.SortAs;
          }
          if (other.HasHasWorkshop) {
            HasWorkshop = other.HasWorkshop;
          }
          if (other.HasHasMarket) {
            HasMarket = other.HasMarket;
          }
          if (other.HasHasDlc) {
            HasDlc = other.HasDlc;
          }
          if (other.HasHasLeaderboards) {
            HasLeaderboards = other.HasLeaderboards;
          }
          contentDescriptorids_.Add(other.contentDescriptorids_);
          if (other.HasPlaytimeDisconnected) {
            PlaytimeDisconnected = other.PlaytimeDisconnected;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Playtime2Weeks = input.ReadInt32();
                break;
              }
              case 32: {
                PlaytimeForever = input.ReadInt32();
                break;
              }
              case 42: {
                ImgIconUrl = input.ReadString();
                break;
              }
              case 56: {
                HasCommunityVisibleStats = input.ReadBool();
                break;
              }
              case 64: {
                PlaytimeWindowsForever = input.ReadInt32();
                break;
              }
              case 72: {
                PlaytimeMacForever = input.ReadInt32();
                break;
              }
              case 80: {
                PlaytimeLinuxForever = input.ReadInt32();
                break;
              }
              case 88: {
                RtimeLastPlayed = input.ReadUInt32();
                break;
              }
              case 98: {
                CapsuleFilename = input.ReadString();
                break;
              }
              case 106: {
                SortAs = input.ReadString();
                break;
              }
              case 112: {
                HasWorkshop = input.ReadBool();
                break;
              }
              case 120: {
                HasMarket = input.ReadBool();
                break;
              }
              case 128: {
                HasDlc = input.ReadBool();
                break;
              }
              case 136: {
                HasLeaderboards = input.ReadBool();
                break;
              }
              case 146:
              case 144: {
                contentDescriptorids_.AddEntriesFrom(input, _repeated_contentDescriptorids_codec);
                break;
              }
              case 152: {
                PlaytimeDisconnected = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Playtime2Weeks = input.ReadInt32();
                break;
              }
              case 32: {
                PlaytimeForever = input.ReadInt32();
                break;
              }
              case 42: {
                ImgIconUrl = input.ReadString();
                break;
              }
              case 56: {
                HasCommunityVisibleStats = input.ReadBool();
                break;
              }
              case 64: {
                PlaytimeWindowsForever = input.ReadInt32();
                break;
              }
              case 72: {
                PlaytimeMacForever = input.ReadInt32();
                break;
              }
              case 80: {
                PlaytimeLinuxForever = input.ReadInt32();
                break;
              }
              case 88: {
                RtimeLastPlayed = input.ReadUInt32();
                break;
              }
              case 98: {
                CapsuleFilename = input.ReadString();
                break;
              }
              case 106: {
                SortAs = input.ReadString();
                break;
              }
              case 112: {
                HasWorkshop = input.ReadBool();
                break;
              }
              case 120: {
                HasMarket = input.ReadBool();
                break;
              }
              case 128: {
                HasDlc = input.ReadBool();
                break;
              }
              case 136: {
                HasLeaderboards = input.ReadBool();
                break;
              }
              case 146:
              case 144: {
                contentDescriptorids_.AddEntriesFrom(ref input, _repeated_contentDescriptorids_codec);
                break;
              }
              case 152: {
                PlaytimeDisconnected = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPlayNext_Request : pb::IMessage<CPlayer_GetPlayNext_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPlayNext_Request> _parser = new pb::MessageParser<CPlayer_GetPlayNext_Request>(() => new CPlayer_GetPlayNext_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPlayNext_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayNext_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayNext_Request(CPlayer_GetPlayNext_Request other) : this() {
      _hasBits0 = other._hasBits0;
      maxAgeSeconds_ = other.maxAgeSeconds_;
      ignoreAppids_ = other.ignoreAppids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayNext_Request Clone() {
      return new CPlayer_GetPlayNext_Request(this);
    }

    /// <summary>Field number for the "max_age_seconds" field.</summary>
    public const int MaxAgeSecondsFieldNumber = 1;
    private readonly static uint MaxAgeSecondsDefaultValue = 0;

    private uint maxAgeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxAgeSeconds {
      get { if ((_hasBits0 & 1) != 0) { return maxAgeSeconds_; } else { return MaxAgeSecondsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxAgeSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "max_age_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxAgeSeconds {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_age_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxAgeSeconds() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ignore_appids" field.</summary>
    public const int IgnoreAppidsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_ignoreAppids_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> ignoreAppids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> IgnoreAppids {
      get { return ignoreAppids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPlayNext_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPlayNext_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxAgeSeconds != other.MaxAgeSeconds) return false;
      if(!ignoreAppids_.Equals(other.ignoreAppids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMaxAgeSeconds) hash ^= MaxAgeSeconds.GetHashCode();
      hash ^= ignoreAppids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMaxAgeSeconds) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxAgeSeconds);
      }
      ignoreAppids_.WriteTo(output, _repeated_ignoreAppids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMaxAgeSeconds) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxAgeSeconds);
      }
      ignoreAppids_.WriteTo(ref output, _repeated_ignoreAppids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMaxAgeSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxAgeSeconds);
      }
      size += ignoreAppids_.CalculateSize(_repeated_ignoreAppids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPlayNext_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasMaxAgeSeconds) {
        MaxAgeSeconds = other.MaxAgeSeconds;
      }
      ignoreAppids_.Add(other.ignoreAppids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxAgeSeconds = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            ignoreAppids_.AddEntriesFrom(input, _repeated_ignoreAppids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxAgeSeconds = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            ignoreAppids_.AddEntriesFrom(ref input, _repeated_ignoreAppids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPlayNext_Response : pb::IMessage<CPlayer_GetPlayNext_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPlayNext_Response> _parser = new pb::MessageParser<CPlayer_GetPlayNext_Response>(() => new CPlayer_GetPlayNext_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPlayNext_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayNext_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayNext_Response(CPlayer_GetPlayNext_Response other) : this() {
      _hasBits0 = other._hasBits0;
      lastUpdateTime_ = other.lastUpdateTime_;
      appids_ = other.appids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPlayNext_Response Clone() {
      return new CPlayer_GetPlayNext_Response(this);
    }

    /// <summary>Field number for the "last_update_time" field.</summary>
    public const int LastUpdateTimeFieldNumber = 1;
    private readonly static uint LastUpdateTimeDefaultValue = 0;

    private uint lastUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LastUpdateTime {
      get { if ((_hasBits0 & 1) != 0) { return lastUpdateTime_; } else { return LastUpdateTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lastUpdateTime_ = value;
      }
    }
    /// <summary>Gets whether the "last_update_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastUpdateTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "last_update_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastUpdateTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appids" field.</summary>
    public const int AppidsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_appids_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Appids {
      get { return appids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPlayNext_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPlayNext_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastUpdateTime != other.LastUpdateTime) return false;
      if(!appids_.Equals(other.appids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLastUpdateTime) hash ^= LastUpdateTime.GetHashCode();
      hash ^= appids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLastUpdateTime) {
        output.WriteRawTag(8);
        output.WriteUInt32(LastUpdateTime);
      }
      appids_.WriteTo(output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLastUpdateTime) {
        output.WriteRawTag(8);
        output.WriteUInt32(LastUpdateTime);
      }
      appids_.WriteTo(ref output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLastUpdateTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastUpdateTime);
      }
      size += appids_.CalculateSize(_repeated_appids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPlayNext_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasLastUpdateTime) {
        LastUpdateTime = other.LastUpdateTime;
      }
      appids_.Add(other.appids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastUpdateTime = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            appids_.AddEntriesFrom(input, _repeated_appids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LastUpdateTime = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetFriendsGameplayInfo_Request : pb::IMessage<CPlayer_GetFriendsGameplayInfo_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetFriendsGameplayInfo_Request> _parser = new pb::MessageParser<CPlayer_GetFriendsGameplayInfo_Request>(() => new CPlayer_GetFriendsGameplayInfo_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetFriendsGameplayInfo_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFriendsGameplayInfo_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFriendsGameplayInfo_Request(CPlayer_GetFriendsGameplayInfo_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFriendsGameplayInfo_Request Clone() {
      return new CPlayer_GetFriendsGameplayInfo_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetFriendsGameplayInfo_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetFriendsGameplayInfo_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetFriendsGameplayInfo_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetFriendsGameplayInfo_Response : pb::IMessage<CPlayer_GetFriendsGameplayInfo_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetFriendsGameplayInfo_Response> _parser = new pb::MessageParser<CPlayer_GetFriendsGameplayInfo_Response>(() => new CPlayer_GetFriendsGameplayInfo_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetFriendsGameplayInfo_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFriendsGameplayInfo_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFriendsGameplayInfo_Response(CPlayer_GetFriendsGameplayInfo_Response other) : this() {
      yourInfo_ = other.yourInfo_ != null ? other.yourInfo_.Clone() : null;
      inGame_ = other.inGame_.Clone();
      playedRecently_ = other.playedRecently_.Clone();
      playedEver_ = other.playedEver_.Clone();
      owns_ = other.owns_.Clone();
      inWishlist_ = other.inWishlist_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFriendsGameplayInfo_Response Clone() {
      return new CPlayer_GetFriendsGameplayInfo_Response(this);
    }

    /// <summary>Field number for the "your_info" field.</summary>
    public const int YourInfoFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo yourInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo YourInfo {
      get { return yourInfo_; }
      set {
        yourInfo_ = value;
      }
    }

    /// <summary>Field number for the "in_game" field.</summary>
    public const int InGameFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> _repeated_inGame_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> inGame_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> InGame {
      get { return inGame_; }
    }

    /// <summary>Field number for the "played_recently" field.</summary>
    public const int PlayedRecentlyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> _repeated_playedRecently_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> playedRecently_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> PlayedRecently {
      get { return playedRecently_; }
    }

    /// <summary>Field number for the "played_ever" field.</summary>
    public const int PlayedEverFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> _repeated_playedEver_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> playedEver_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> PlayedEver {
      get { return playedEver_; }
    }

    /// <summary>Field number for the "owns" field.</summary>
    public const int OwnsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> _repeated_owns_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> owns_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> Owns {
      get { return owns_; }
    }

    /// <summary>Field number for the "in_wishlist" field.</summary>
    public const int InWishlistFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> _repeated_inWishlist_codec
        = pb::FieldCodec.ForMessage(50, global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> inWishlist_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.FriendsGameplayInfo> InWishlist {
      get { return inWishlist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetFriendsGameplayInfo_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetFriendsGameplayInfo_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(YourInfo, other.YourInfo)) return false;
      if(!inGame_.Equals(other.inGame_)) return false;
      if(!playedRecently_.Equals(other.playedRecently_)) return false;
      if(!playedEver_.Equals(other.playedEver_)) return false;
      if(!owns_.Equals(other.owns_)) return false;
      if(!inWishlist_.Equals(other.inWishlist_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (yourInfo_ != null) hash ^= YourInfo.GetHashCode();
      hash ^= inGame_.GetHashCode();
      hash ^= playedRecently_.GetHashCode();
      hash ^= playedEver_.GetHashCode();
      hash ^= owns_.GetHashCode();
      hash ^= inWishlist_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (yourInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(YourInfo);
      }
      inGame_.WriteTo(output, _repeated_inGame_codec);
      playedRecently_.WriteTo(output, _repeated_playedRecently_codec);
      playedEver_.WriteTo(output, _repeated_playedEver_codec);
      owns_.WriteTo(output, _repeated_owns_codec);
      inWishlist_.WriteTo(output, _repeated_inWishlist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (yourInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(YourInfo);
      }
      inGame_.WriteTo(ref output, _repeated_inGame_codec);
      playedRecently_.WriteTo(ref output, _repeated_playedRecently_codec);
      playedEver_.WriteTo(ref output, _repeated_playedEver_codec);
      owns_.WriteTo(ref output, _repeated_owns_codec);
      inWishlist_.WriteTo(ref output, _repeated_inWishlist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (yourInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YourInfo);
      }
      size += inGame_.CalculateSize(_repeated_inGame_codec);
      size += playedRecently_.CalculateSize(_repeated_playedRecently_codec);
      size += playedEver_.CalculateSize(_repeated_playedEver_codec);
      size += owns_.CalculateSize(_repeated_owns_codec);
      size += inWishlist_.CalculateSize(_repeated_inWishlist_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetFriendsGameplayInfo_Response other) {
      if (other == null) {
        return;
      }
      if (other.yourInfo_ != null) {
        if (yourInfo_ == null) {
          YourInfo = new global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo();
        }
        YourInfo.MergeFrom(other.YourInfo);
      }
      inGame_.Add(other.inGame_);
      playedRecently_.Add(other.playedRecently_);
      playedEver_.Add(other.playedEver_);
      owns_.Add(other.owns_);
      inWishlist_.Add(other.inWishlist_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (yourInfo_ == null) {
              YourInfo = new global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo();
            }
            input.ReadMessage(YourInfo);
            break;
          }
          case 18: {
            inGame_.AddEntriesFrom(input, _repeated_inGame_codec);
            break;
          }
          case 26: {
            playedRecently_.AddEntriesFrom(input, _repeated_playedRecently_codec);
            break;
          }
          case 34: {
            playedEver_.AddEntriesFrom(input, _repeated_playedEver_codec);
            break;
          }
          case 42: {
            owns_.AddEntriesFrom(input, _repeated_owns_codec);
            break;
          }
          case 50: {
            inWishlist_.AddEntriesFrom(input, _repeated_inWishlist_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (yourInfo_ == null) {
              YourInfo = new global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Types.OwnGameplayInfo();
            }
            input.ReadMessage(YourInfo);
            break;
          }
          case 18: {
            inGame_.AddEntriesFrom(ref input, _repeated_inGame_codec);
            break;
          }
          case 26: {
            playedRecently_.AddEntriesFrom(ref input, _repeated_playedRecently_codec);
            break;
          }
          case 34: {
            playedEver_.AddEntriesFrom(ref input, _repeated_playedEver_codec);
            break;
          }
          case 42: {
            owns_.AddEntriesFrom(ref input, _repeated_owns_codec);
            break;
          }
          case 50: {
            inWishlist_.AddEntriesFrom(ref input, _repeated_inWishlist_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetFriendsGameplayInfo_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class FriendsGameplayInfo : pb::IMessage<FriendsGameplayInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FriendsGameplayInfo> _parser = new pb::MessageParser<FriendsGameplayInfo>(() => new FriendsGameplayInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FriendsGameplayInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FriendsGameplayInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FriendsGameplayInfo(FriendsGameplayInfo other) : this() {
          _hasBits0 = other._hasBits0;
          steamid_ = other.steamid_;
          minutesPlayed_ = other.minutesPlayed_;
          minutesPlayedForever_ = other.minutesPlayedForever_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FriendsGameplayInfo Clone() {
          return new FriendsGameplayInfo(this);
        }

        /// <summary>Field number for the "steamid" field.</summary>
        public const int SteamidFieldNumber = 1;
        private readonly static ulong SteamidDefaultValue = 0UL;

        private ulong steamid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Steamid {
          get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            steamid_ = value;
          }
        }
        /// <summary>Gets whether the "steamid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSteamid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "steamid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSteamid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "minutes_played" field.</summary>
        public const int MinutesPlayedFieldNumber = 2;
        private readonly static uint MinutesPlayedDefaultValue = 0;

        private uint minutesPlayed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint MinutesPlayed {
          get { if ((_hasBits0 & 2) != 0) { return minutesPlayed_; } else { return MinutesPlayedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            minutesPlayed_ = value;
          }
        }
        /// <summary>Gets whether the "minutes_played" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinutesPlayed {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "minutes_played" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinutesPlayed() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "minutes_played_forever" field.</summary>
        public const int MinutesPlayedForeverFieldNumber = 3;
        private readonly static uint MinutesPlayedForeverDefaultValue = 0;

        private uint minutesPlayedForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint MinutesPlayedForever {
          get { if ((_hasBits0 & 4) != 0) { return minutesPlayedForever_; } else { return MinutesPlayedForeverDefaultValue; } }
          set {
            _hasBits0 |= 4;
            minutesPlayedForever_ = value;
          }
        }
        /// <summary>Gets whether the "minutes_played_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinutesPlayedForever {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "minutes_played_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinutesPlayedForever() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FriendsGameplayInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FriendsGameplayInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Steamid != other.Steamid) return false;
          if (MinutesPlayed != other.MinutesPlayed) return false;
          if (MinutesPlayedForever != other.MinutesPlayedForever) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSteamid) hash ^= Steamid.GetHashCode();
          if (HasMinutesPlayed) hash ^= MinutesPlayed.GetHashCode();
          if (HasMinutesPlayedForever) hash ^= MinutesPlayedForever.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSteamid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Steamid);
          }
          if (HasMinutesPlayed) {
            output.WriteRawTag(16);
            output.WriteUInt32(MinutesPlayed);
          }
          if (HasMinutesPlayedForever) {
            output.WriteRawTag(24);
            output.WriteUInt32(MinutesPlayedForever);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSteamid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Steamid);
          }
          if (HasMinutesPlayed) {
            output.WriteRawTag(16);
            output.WriteUInt32(MinutesPlayed);
          }
          if (HasMinutesPlayedForever) {
            output.WriteRawTag(24);
            output.WriteUInt32(MinutesPlayedForever);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSteamid) {
            size += 1 + 8;
          }
          if (HasMinutesPlayed) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinutesPlayed);
          }
          if (HasMinutesPlayedForever) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinutesPlayedForever);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FriendsGameplayInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasSteamid) {
            Steamid = other.Steamid;
          }
          if (other.HasMinutesPlayed) {
            MinutesPlayed = other.MinutesPlayed;
          }
          if (other.HasMinutesPlayedForever) {
            MinutesPlayedForever = other.MinutesPlayedForever;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Steamid = input.ReadFixed64();
                break;
              }
              case 16: {
                MinutesPlayed = input.ReadUInt32();
                break;
              }
              case 24: {
                MinutesPlayedForever = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Steamid = input.ReadFixed64();
                break;
              }
              case 16: {
                MinutesPlayed = input.ReadUInt32();
                break;
              }
              case 24: {
                MinutesPlayedForever = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class OwnGameplayInfo : pb::IMessage<OwnGameplayInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OwnGameplayInfo> _parser = new pb::MessageParser<OwnGameplayInfo>(() => new OwnGameplayInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OwnGameplayInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetFriendsGameplayInfo_Response.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OwnGameplayInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OwnGameplayInfo(OwnGameplayInfo other) : this() {
          _hasBits0 = other._hasBits0;
          steamid_ = other.steamid_;
          minutesPlayed_ = other.minutesPlayed_;
          minutesPlayedForever_ = other.minutesPlayedForever_;
          inWishlist_ = other.inWishlist_;
          owned_ = other.owned_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OwnGameplayInfo Clone() {
          return new OwnGameplayInfo(this);
        }

        /// <summary>Field number for the "steamid" field.</summary>
        public const int SteamidFieldNumber = 1;
        private readonly static ulong SteamidDefaultValue = 0UL;

        private ulong steamid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Steamid {
          get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            steamid_ = value;
          }
        }
        /// <summary>Gets whether the "steamid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSteamid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "steamid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSteamid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "minutes_played" field.</summary>
        public const int MinutesPlayedFieldNumber = 2;
        private readonly static uint MinutesPlayedDefaultValue = 0;

        private uint minutesPlayed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint MinutesPlayed {
          get { if ((_hasBits0 & 2) != 0) { return minutesPlayed_; } else { return MinutesPlayedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            minutesPlayed_ = value;
          }
        }
        /// <summary>Gets whether the "minutes_played" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinutesPlayed {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "minutes_played" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinutesPlayed() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "minutes_played_forever" field.</summary>
        public const int MinutesPlayedForeverFieldNumber = 3;
        private readonly static uint MinutesPlayedForeverDefaultValue = 0;

        private uint minutesPlayedForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint MinutesPlayedForever {
          get { if ((_hasBits0 & 4) != 0) { return minutesPlayedForever_; } else { return MinutesPlayedForeverDefaultValue; } }
          set {
            _hasBits0 |= 4;
            minutesPlayedForever_ = value;
          }
        }
        /// <summary>Gets whether the "minutes_played_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinutesPlayedForever {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "minutes_played_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinutesPlayedForever() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "in_wishlist" field.</summary>
        public const int InWishlistFieldNumber = 4;
        private readonly static bool InWishlistDefaultValue = false;

        private bool inWishlist_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool InWishlist {
          get { if ((_hasBits0 & 8) != 0) { return inWishlist_; } else { return InWishlistDefaultValue; } }
          set {
            _hasBits0 |= 8;
            inWishlist_ = value;
          }
        }
        /// <summary>Gets whether the "in_wishlist" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInWishlist {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "in_wishlist" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInWishlist() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "owned" field.</summary>
        public const int OwnedFieldNumber = 5;
        private readonly static bool OwnedDefaultValue = false;

        private bool owned_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Owned {
          get { if ((_hasBits0 & 16) != 0) { return owned_; } else { return OwnedDefaultValue; } }
          set {
            _hasBits0 |= 16;
            owned_ = value;
          }
        }
        /// <summary>Gets whether the "owned" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOwned {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "owned" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOwned() {
          _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OwnGameplayInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OwnGameplayInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Steamid != other.Steamid) return false;
          if (MinutesPlayed != other.MinutesPlayed) return false;
          if (MinutesPlayedForever != other.MinutesPlayedForever) return false;
          if (InWishlist != other.InWishlist) return false;
          if (Owned != other.Owned) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSteamid) hash ^= Steamid.GetHashCode();
          if (HasMinutesPlayed) hash ^= MinutesPlayed.GetHashCode();
          if (HasMinutesPlayedForever) hash ^= MinutesPlayedForever.GetHashCode();
          if (HasInWishlist) hash ^= InWishlist.GetHashCode();
          if (HasOwned) hash ^= Owned.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSteamid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Steamid);
          }
          if (HasMinutesPlayed) {
            output.WriteRawTag(16);
            output.WriteUInt32(MinutesPlayed);
          }
          if (HasMinutesPlayedForever) {
            output.WriteRawTag(24);
            output.WriteUInt32(MinutesPlayedForever);
          }
          if (HasInWishlist) {
            output.WriteRawTag(32);
            output.WriteBool(InWishlist);
          }
          if (HasOwned) {
            output.WriteRawTag(40);
            output.WriteBool(Owned);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSteamid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Steamid);
          }
          if (HasMinutesPlayed) {
            output.WriteRawTag(16);
            output.WriteUInt32(MinutesPlayed);
          }
          if (HasMinutesPlayedForever) {
            output.WriteRawTag(24);
            output.WriteUInt32(MinutesPlayedForever);
          }
          if (HasInWishlist) {
            output.WriteRawTag(32);
            output.WriteBool(InWishlist);
          }
          if (HasOwned) {
            output.WriteRawTag(40);
            output.WriteBool(Owned);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSteamid) {
            size += 1 + 8;
          }
          if (HasMinutesPlayed) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinutesPlayed);
          }
          if (HasMinutesPlayedForever) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinutesPlayedForever);
          }
          if (HasInWishlist) {
            size += 1 + 1;
          }
          if (HasOwned) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OwnGameplayInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasSteamid) {
            Steamid = other.Steamid;
          }
          if (other.HasMinutesPlayed) {
            MinutesPlayed = other.MinutesPlayed;
          }
          if (other.HasMinutesPlayedForever) {
            MinutesPlayedForever = other.MinutesPlayedForever;
          }
          if (other.HasInWishlist) {
            InWishlist = other.InWishlist;
          }
          if (other.HasOwned) {
            Owned = other.Owned;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Steamid = input.ReadFixed64();
                break;
              }
              case 16: {
                MinutesPlayed = input.ReadUInt32();
                break;
              }
              case 24: {
                MinutesPlayedForever = input.ReadUInt32();
                break;
              }
              case 32: {
                InWishlist = input.ReadBool();
                break;
              }
              case 40: {
                Owned = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Steamid = input.ReadFixed64();
                break;
              }
              case 16: {
                MinutesPlayed = input.ReadUInt32();
                break;
              }
              case 24: {
                MinutesPlayedForever = input.ReadUInt32();
                break;
              }
              case 32: {
                InWishlist = input.ReadBool();
                break;
              }
              case 40: {
                Owned = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetGameBadgeLevels_Request : pb::IMessage<CPlayer_GetGameBadgeLevels_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetGameBadgeLevels_Request> _parser = new pb::MessageParser<CPlayer_GetGameBadgeLevels_Request>(() => new CPlayer_GetGameBadgeLevels_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetGameBadgeLevels_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameBadgeLevels_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameBadgeLevels_Request(CPlayer_GetGameBadgeLevels_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameBadgeLevels_Request Clone() {
      return new CPlayer_GetGameBadgeLevels_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetGameBadgeLevels_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetGameBadgeLevels_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetGameBadgeLevels_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetGameBadgeLevels_Response : pb::IMessage<CPlayer_GetGameBadgeLevels_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetGameBadgeLevels_Response> _parser = new pb::MessageParser<CPlayer_GetGameBadgeLevels_Response>(() => new CPlayer_GetGameBadgeLevels_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetGameBadgeLevels_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameBadgeLevels_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameBadgeLevels_Response(CPlayer_GetGameBadgeLevels_Response other) : this() {
      _hasBits0 = other._hasBits0;
      playerLevel_ = other.playerLevel_;
      badges_ = other.badges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameBadgeLevels_Response Clone() {
      return new CPlayer_GetGameBadgeLevels_Response(this);
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 1;
    private readonly static uint PlayerLevelDefaultValue = 0;

    private uint playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerLevel {
      get { if ((_hasBits0 & 1) != 0) { return playerLevel_; } else { return PlayerLevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerLevel_ = value;
      }
    }
    /// <summary>Gets whether the "player_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "player_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "badges" field.</summary>
    public const int BadgesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge> _repeated_badges_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge> badges_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Types.Badge> Badges {
      get { return badges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetGameBadgeLevels_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetGameBadgeLevels_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerLevel != other.PlayerLevel) return false;
      if(!badges_.Equals(other.badges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerLevel) hash ^= PlayerLevel.GetHashCode();
      hash ^= badges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerLevel) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerLevel);
      }
      badges_.WriteTo(output, _repeated_badges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerLevel) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerLevel);
      }
      badges_.WriteTo(ref output, _repeated_badges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerLevel);
      }
      size += badges_.CalculateSize(_repeated_badges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetGameBadgeLevels_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerLevel) {
        PlayerLevel = other.PlayerLevel;
      }
      badges_.Add(other.badges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerLevel = input.ReadUInt32();
            break;
          }
          case 18: {
            badges_.AddEntriesFrom(input, _repeated_badges_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerLevel = input.ReadUInt32();
            break;
          }
          case 18: {
            badges_.AddEntriesFrom(ref input, _repeated_badges_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetGameBadgeLevels_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Badge : pb::IMessage<Badge>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Badge> _parser = new pb::MessageParser<Badge>(() => new Badge());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Badge> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetGameBadgeLevels_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Badge() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Badge(Badge other) : this() {
          _hasBits0 = other._hasBits0;
          level_ = other.level_;
          series_ = other.series_;
          borderColor_ = other.borderColor_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Badge Clone() {
          return new Badge(this);
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 1;
        private readonly static int LevelDefaultValue = 0;

        private int level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Level {
          get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
          set {
            _hasBits0 |= 1;
            level_ = value;
          }
        }
        /// <summary>Gets whether the "level" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLevel {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "level" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLevel() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "series" field.</summary>
        public const int SeriesFieldNumber = 2;
        private readonly static int SeriesDefaultValue = 0;

        private int series_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Series {
          get { if ((_hasBits0 & 2) != 0) { return series_; } else { return SeriesDefaultValue; } }
          set {
            _hasBits0 |= 2;
            series_ = value;
          }
        }
        /// <summary>Gets whether the "series" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSeries {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "series" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSeries() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "border_color" field.</summary>
        public const int BorderColorFieldNumber = 3;
        private readonly static uint BorderColorDefaultValue = 0;

        private uint borderColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint BorderColor {
          get { if ((_hasBits0 & 4) != 0) { return borderColor_; } else { return BorderColorDefaultValue; } }
          set {
            _hasBits0 |= 4;
            borderColor_ = value;
          }
        }
        /// <summary>Gets whether the "border_color" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBorderColor {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "border_color" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBorderColor() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Badge);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Badge other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Level != other.Level) return false;
          if (Series != other.Series) return false;
          if (BorderColor != other.BorderColor) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasLevel) hash ^= Level.GetHashCode();
          if (HasSeries) hash ^= Series.GetHashCode();
          if (HasBorderColor) hash ^= BorderColor.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasLevel) {
            output.WriteRawTag(8);
            output.WriteInt32(Level);
          }
          if (HasSeries) {
            output.WriteRawTag(16);
            output.WriteInt32(Series);
          }
          if (HasBorderColor) {
            output.WriteRawTag(24);
            output.WriteUInt32(BorderColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasLevel) {
            output.WriteRawTag(8);
            output.WriteInt32(Level);
          }
          if (HasSeries) {
            output.WriteRawTag(16);
            output.WriteInt32(Series);
          }
          if (HasBorderColor) {
            output.WriteRawTag(24);
            output.WriteUInt32(BorderColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasLevel) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
          }
          if (HasSeries) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Series);
          }
          if (HasBorderColor) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BorderColor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Badge other) {
          if (other == null) {
            return;
          }
          if (other.HasLevel) {
            Level = other.Level;
          }
          if (other.HasSeries) {
            Series = other.Series;
          }
          if (other.HasBorderColor) {
            BorderColor = other.BorderColor;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Level = input.ReadInt32();
                break;
              }
              case 16: {
                Series = input.ReadInt32();
                break;
              }
              case 24: {
                BorderColor = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Level = input.ReadInt32();
                break;
              }
              case 16: {
                Series = input.ReadInt32();
                break;
              }
              case 24: {
                BorderColor = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileBackground_Request : pb::IMessage<CPlayer_GetProfileBackground_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileBackground_Request> _parser = new pb::MessageParser<CPlayer_GetProfileBackground_Request>(() => new CPlayer_GetProfileBackground_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileBackground_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileBackground_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileBackground_Request(CPlayer_GetProfileBackground_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileBackground_Request Clone() {
      return new CPlayer_GetProfileBackground_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileBackground_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileBackground_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileBackground_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProfileItem : pb::IMessage<ProfileItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProfileItem> _parser = new pb::MessageParser<ProfileItem>(() => new ProfileItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProfileItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileItem(ProfileItem other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      imageSmall_ = other.imageSmall_;
      imageLarge_ = other.imageLarge_;
      name_ = other.name_;
      itemTitle_ = other.itemTitle_;
      itemDescription_ = other.itemDescription_;
      appid_ = other.appid_;
      itemType_ = other.itemType_;
      itemClass_ = other.itemClass_;
      movieWebm_ = other.movieWebm_;
      movieMp4_ = other.movieMp4_;
      movieWebmSmall_ = other.movieWebmSmall_;
      movieMp4Small_ = other.movieMp4Small_;
      equippedFlags_ = other.equippedFlags_;
      profileColors_ = other.profileColors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileItem Clone() {
      return new ProfileItem(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "image_small" field.</summary>
    public const int ImageSmallFieldNumber = 2;
    private readonly static string ImageSmallDefaultValue = "";

    private string imageSmall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImageSmall {
      get { return imageSmall_ ?? ImageSmallDefaultValue; }
      set {
        imageSmall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image_small" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageSmall {
      get { return imageSmall_ != null; }
    }
    /// <summary>Clears the value of the "image_small" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageSmall() {
      imageSmall_ = null;
    }

    /// <summary>Field number for the "image_large" field.</summary>
    public const int ImageLargeFieldNumber = 3;
    private readonly static string ImageLargeDefaultValue = "";

    private string imageLarge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImageLarge {
      get { return imageLarge_ ?? ImageLargeDefaultValue; }
      set {
        imageLarge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image_large" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageLarge {
      get { return imageLarge_ != null; }
    }
    /// <summary>Clears the value of the "image_large" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageLarge() {
      imageLarge_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "item_title" field.</summary>
    public const int ItemTitleFieldNumber = 5;
    private readonly static string ItemTitleDefaultValue = "";

    private string itemTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemTitle {
      get { return itemTitle_ ?? ItemTitleDefaultValue; }
      set {
        itemTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemTitle {
      get { return itemTitle_ != null; }
    }
    /// <summary>Clears the value of the "item_title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemTitle() {
      itemTitle_ = null;
    }

    /// <summary>Field number for the "item_description" field.</summary>
    public const int ItemDescriptionFieldNumber = 6;
    private readonly static string ItemDescriptionDefaultValue = "";

    private string itemDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemDescription {
      get { return itemDescription_ ?? ItemDescriptionDefaultValue; }
      set {
        itemDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemDescription {
      get { return itemDescription_ != null; }
    }
    /// <summary>Clears the value of the "item_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemDescription() {
      itemDescription_ = null;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 7;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_type" field.</summary>
    public const int ItemTypeFieldNumber = 8;
    private readonly static uint ItemTypeDefaultValue = 0;

    private uint itemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemType {
      get { if ((_hasBits0 & 4) != 0) { return itemType_; } else { return ItemTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        itemType_ = value;
      }
    }
    /// <summary>Gets whether the "item_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "item_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "item_class" field.</summary>
    public const int ItemClassFieldNumber = 9;
    private readonly static uint ItemClassDefaultValue = 0;

    private uint itemClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemClass {
      get { if ((_hasBits0 & 8) != 0) { return itemClass_; } else { return ItemClassDefaultValue; } }
      set {
        _hasBits0 |= 8;
        itemClass_ = value;
      }
    }
    /// <summary>Gets whether the "item_class" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemClass {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "item_class" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemClass() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "movie_webm" field.</summary>
    public const int MovieWebmFieldNumber = 10;
    private readonly static string MovieWebmDefaultValue = "";

    private string movieWebm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MovieWebm {
      get { return movieWebm_ ?? MovieWebmDefaultValue; }
      set {
        movieWebm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "movie_webm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMovieWebm {
      get { return movieWebm_ != null; }
    }
    /// <summary>Clears the value of the "movie_webm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMovieWebm() {
      movieWebm_ = null;
    }

    /// <summary>Field number for the "movie_mp4" field.</summary>
    public const int MovieMp4FieldNumber = 11;
    private readonly static string MovieMp4DefaultValue = "";

    private string movieMp4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MovieMp4 {
      get { return movieMp4_ ?? MovieMp4DefaultValue; }
      set {
        movieMp4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "movie_mp4" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMovieMp4 {
      get { return movieMp4_ != null; }
    }
    /// <summary>Clears the value of the "movie_mp4" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMovieMp4() {
      movieMp4_ = null;
    }

    /// <summary>Field number for the "movie_webm_small" field.</summary>
    public const int MovieWebmSmallFieldNumber = 13;
    private readonly static string MovieWebmSmallDefaultValue = "";

    private string movieWebmSmall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MovieWebmSmall {
      get { return movieWebmSmall_ ?? MovieWebmSmallDefaultValue; }
      set {
        movieWebmSmall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "movie_webm_small" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMovieWebmSmall {
      get { return movieWebmSmall_ != null; }
    }
    /// <summary>Clears the value of the "movie_webm_small" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMovieWebmSmall() {
      movieWebmSmall_ = null;
    }

    /// <summary>Field number for the "movie_mp4_small" field.</summary>
    public const int MovieMp4SmallFieldNumber = 14;
    private readonly static string MovieMp4SmallDefaultValue = "";

    private string movieMp4Small_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MovieMp4Small {
      get { return movieMp4Small_ ?? MovieMp4SmallDefaultValue; }
      set {
        movieMp4Small_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "movie_mp4_small" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMovieMp4Small {
      get { return movieMp4Small_ != null; }
    }
    /// <summary>Clears the value of the "movie_mp4_small" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMovieMp4Small() {
      movieMp4Small_ = null;
    }

    /// <summary>Field number for the "equipped_flags" field.</summary>
    public const int EquippedFlagsFieldNumber = 12;
    private readonly static uint EquippedFlagsDefaultValue = 0;

    private uint equippedFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EquippedFlags {
      get { if ((_hasBits0 & 16) != 0) { return equippedFlags_; } else { return EquippedFlagsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        equippedFlags_ = value;
      }
    }
    /// <summary>Gets whether the "equipped_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEquippedFlags {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "equipped_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEquippedFlags() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "profile_colors" field.</summary>
    public const int ProfileColorsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor> _repeated_profileColors_codec
        = pb::FieldCodec.ForMessage(122, global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor> profileColors_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem.Types.ProfileColor> ProfileColors {
      get { return profileColors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProfileItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProfileItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      if (ImageSmall != other.ImageSmall) return false;
      if (ImageLarge != other.ImageLarge) return false;
      if (Name != other.Name) return false;
      if (ItemTitle != other.ItemTitle) return false;
      if (ItemDescription != other.ItemDescription) return false;
      if (Appid != other.Appid) return false;
      if (ItemType != other.ItemType) return false;
      if (ItemClass != other.ItemClass) return false;
      if (MovieWebm != other.MovieWebm) return false;
      if (MovieMp4 != other.MovieMp4) return false;
      if (MovieWebmSmall != other.MovieWebmSmall) return false;
      if (MovieMp4Small != other.MovieMp4Small) return false;
      if (EquippedFlags != other.EquippedFlags) return false;
      if(!profileColors_.Equals(other.profileColors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (HasImageSmall) hash ^= ImageSmall.GetHashCode();
      if (HasImageLarge) hash ^= ImageLarge.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasItemTitle) hash ^= ItemTitle.GetHashCode();
      if (HasItemDescription) hash ^= ItemDescription.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasItemType) hash ^= ItemType.GetHashCode();
      if (HasItemClass) hash ^= ItemClass.GetHashCode();
      if (HasMovieWebm) hash ^= MovieWebm.GetHashCode();
      if (HasMovieMp4) hash ^= MovieMp4.GetHashCode();
      if (HasMovieWebmSmall) hash ^= MovieWebmSmall.GetHashCode();
      if (HasMovieMp4Small) hash ^= MovieMp4Small.GetHashCode();
      if (HasEquippedFlags) hash ^= EquippedFlags.GetHashCode();
      hash ^= profileColors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (HasImageSmall) {
        output.WriteRawTag(18);
        output.WriteString(ImageSmall);
      }
      if (HasImageLarge) {
        output.WriteRawTag(26);
        output.WriteString(ImageLarge);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HasItemTitle) {
        output.WriteRawTag(42);
        output.WriteString(ItemTitle);
      }
      if (HasItemDescription) {
        output.WriteRawTag(50);
        output.WriteString(ItemDescription);
      }
      if (HasAppid) {
        output.WriteRawTag(56);
        output.WriteUInt32(Appid);
      }
      if (HasItemType) {
        output.WriteRawTag(64);
        output.WriteUInt32(ItemType);
      }
      if (HasItemClass) {
        output.WriteRawTag(72);
        output.WriteUInt32(ItemClass);
      }
      if (HasMovieWebm) {
        output.WriteRawTag(82);
        output.WriteString(MovieWebm);
      }
      if (HasMovieMp4) {
        output.WriteRawTag(90);
        output.WriteString(MovieMp4);
      }
      if (HasEquippedFlags) {
        output.WriteRawTag(96);
        output.WriteUInt32(EquippedFlags);
      }
      if (HasMovieWebmSmall) {
        output.WriteRawTag(106);
        output.WriteString(MovieWebmSmall);
      }
      if (HasMovieMp4Small) {
        output.WriteRawTag(114);
        output.WriteString(MovieMp4Small);
      }
      profileColors_.WriteTo(output, _repeated_profileColors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (HasImageSmall) {
        output.WriteRawTag(18);
        output.WriteString(ImageSmall);
      }
      if (HasImageLarge) {
        output.WriteRawTag(26);
        output.WriteString(ImageLarge);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HasItemTitle) {
        output.WriteRawTag(42);
        output.WriteString(ItemTitle);
      }
      if (HasItemDescription) {
        output.WriteRawTag(50);
        output.WriteString(ItemDescription);
      }
      if (HasAppid) {
        output.WriteRawTag(56);
        output.WriteUInt32(Appid);
      }
      if (HasItemType) {
        output.WriteRawTag(64);
        output.WriteUInt32(ItemType);
      }
      if (HasItemClass) {
        output.WriteRawTag(72);
        output.WriteUInt32(ItemClass);
      }
      if (HasMovieWebm) {
        output.WriteRawTag(82);
        output.WriteString(MovieWebm);
      }
      if (HasMovieMp4) {
        output.WriteRawTag(90);
        output.WriteString(MovieMp4);
      }
      if (HasEquippedFlags) {
        output.WriteRawTag(96);
        output.WriteUInt32(EquippedFlags);
      }
      if (HasMovieWebmSmall) {
        output.WriteRawTag(106);
        output.WriteString(MovieWebmSmall);
      }
      if (HasMovieMp4Small) {
        output.WriteRawTag(114);
        output.WriteString(MovieMp4Small);
      }
      profileColors_.WriteTo(ref output, _repeated_profileColors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (HasImageSmall) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageSmall);
      }
      if (HasImageLarge) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageLarge);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasItemTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemTitle);
      }
      if (HasItemDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemDescription);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasItemType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemType);
      }
      if (HasItemClass) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemClass);
      }
      if (HasMovieWebm) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MovieWebm);
      }
      if (HasMovieMp4) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MovieMp4);
      }
      if (HasMovieWebmSmall) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MovieWebmSmall);
      }
      if (HasMovieMp4Small) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MovieMp4Small);
      }
      if (HasEquippedFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquippedFlags);
      }
      size += profileColors_.CalculateSize(_repeated_profileColors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProfileItem other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      if (other.HasImageSmall) {
        ImageSmall = other.ImageSmall;
      }
      if (other.HasImageLarge) {
        ImageLarge = other.ImageLarge;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasItemTitle) {
        ItemTitle = other.ItemTitle;
      }
      if (other.HasItemDescription) {
        ItemDescription = other.ItemDescription;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasItemType) {
        ItemType = other.ItemType;
      }
      if (other.HasItemClass) {
        ItemClass = other.ItemClass;
      }
      if (other.HasMovieWebm) {
        MovieWebm = other.MovieWebm;
      }
      if (other.HasMovieMp4) {
        MovieMp4 = other.MovieMp4;
      }
      if (other.HasMovieWebmSmall) {
        MovieWebmSmall = other.MovieWebmSmall;
      }
      if (other.HasMovieMp4Small) {
        MovieMp4Small = other.MovieMp4Small;
      }
      if (other.HasEquippedFlags) {
        EquippedFlags = other.EquippedFlags;
      }
      profileColors_.Add(other.profileColors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 18: {
            ImageSmall = input.ReadString();
            break;
          }
          case 26: {
            ImageLarge = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            ItemTitle = input.ReadString();
            break;
          }
          case 50: {
            ItemDescription = input.ReadString();
            break;
          }
          case 56: {
            Appid = input.ReadUInt32();
            break;
          }
          case 64: {
            ItemType = input.ReadUInt32();
            break;
          }
          case 72: {
            ItemClass = input.ReadUInt32();
            break;
          }
          case 82: {
            MovieWebm = input.ReadString();
            break;
          }
          case 90: {
            MovieMp4 = input.ReadString();
            break;
          }
          case 96: {
            EquippedFlags = input.ReadUInt32();
            break;
          }
          case 106: {
            MovieWebmSmall = input.ReadString();
            break;
          }
          case 114: {
            MovieMp4Small = input.ReadString();
            break;
          }
          case 122: {
            profileColors_.AddEntriesFrom(input, _repeated_profileColors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 18: {
            ImageSmall = input.ReadString();
            break;
          }
          case 26: {
            ImageLarge = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            ItemTitle = input.ReadString();
            break;
          }
          case 50: {
            ItemDescription = input.ReadString();
            break;
          }
          case 56: {
            Appid = input.ReadUInt32();
            break;
          }
          case 64: {
            ItemType = input.ReadUInt32();
            break;
          }
          case 72: {
            ItemClass = input.ReadUInt32();
            break;
          }
          case 82: {
            MovieWebm = input.ReadString();
            break;
          }
          case 90: {
            MovieMp4 = input.ReadString();
            break;
          }
          case 96: {
            EquippedFlags = input.ReadUInt32();
            break;
          }
          case 106: {
            MovieWebmSmall = input.ReadString();
            break;
          }
          case 114: {
            MovieMp4Small = input.ReadString();
            break;
          }
          case 122: {
            profileColors_.AddEntriesFrom(ref input, _repeated_profileColors_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ProfileItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ProfileColor : pb::IMessage<ProfileColor>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProfileColor> _parser = new pb::MessageParser<ProfileColor>(() => new ProfileColor());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProfileColor> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.ProfileItem.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProfileColor() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProfileColor(ProfileColor other) : this() {
          styleName_ = other.styleName_;
          color_ = other.color_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProfileColor Clone() {
          return new ProfileColor(this);
        }

        /// <summary>Field number for the "style_name" field.</summary>
        public const int StyleNameFieldNumber = 1;
        private readonly static string StyleNameDefaultValue = "";

        private string styleName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StyleName {
          get { return styleName_ ?? StyleNameDefaultValue; }
          set {
            styleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "style_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStyleName {
          get { return styleName_ != null; }
        }
        /// <summary>Clears the value of the "style_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStyleName() {
          styleName_ = null;
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 2;
        private readonly static string ColorDefaultValue = "";

        private string color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Color {
          get { return color_ ?? ColorDefaultValue; }
          set {
            color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "color" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasColor {
          get { return color_ != null; }
        }
        /// <summary>Clears the value of the "color" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearColor() {
          color_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProfileColor);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProfileColor other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StyleName != other.StyleName) return false;
          if (Color != other.Color) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasStyleName) hash ^= StyleName.GetHashCode();
          if (HasColor) hash ^= Color.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasStyleName) {
            output.WriteRawTag(10);
            output.WriteString(StyleName);
          }
          if (HasColor) {
            output.WriteRawTag(18);
            output.WriteString(Color);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasStyleName) {
            output.WriteRawTag(10);
            output.WriteString(StyleName);
          }
          if (HasColor) {
            output.WriteRawTag(18);
            output.WriteString(Color);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasStyleName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StyleName);
          }
          if (HasColor) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProfileColor other) {
          if (other == null) {
            return;
          }
          if (other.HasStyleName) {
            StyleName = other.StyleName;
          }
          if (other.HasColor) {
            Color = other.Color;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                StyleName = input.ReadString();
                break;
              }
              case 18: {
                Color = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                StyleName = input.ReadString();
                break;
              }
              case 18: {
                Color = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileBackground_Response : pb::IMessage<CPlayer_GetProfileBackground_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileBackground_Response> _parser = new pb::MessageParser<CPlayer_GetProfileBackground_Response>(() => new CPlayer_GetProfileBackground_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileBackground_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileBackground_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileBackground_Response(CPlayer_GetProfileBackground_Response other) : this() {
      profileBackground_ = other.profileBackground_ != null ? other.profileBackground_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileBackground_Response Clone() {
      return new CPlayer_GetProfileBackground_Response(this);
    }

    /// <summary>Field number for the "profile_background" field.</summary>
    public const int ProfileBackgroundFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfileItem profileBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem ProfileBackground {
      get { return profileBackground_; }
      set {
        profileBackground_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileBackground_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileBackground_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProfileBackground, other.ProfileBackground)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (profileBackground_ != null) hash ^= ProfileBackground.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (profileBackground_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfileBackground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (profileBackground_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfileBackground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (profileBackground_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileBackground);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileBackground_Response other) {
      if (other == null) {
        return;
      }
      if (other.profileBackground_ != null) {
        if (profileBackground_ == null) {
          ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        ProfileBackground.MergeFrom(other.ProfileBackground);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (profileBackground_ == null) {
              ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileBackground);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (profileBackground_ == null) {
              ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileBackground);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetProfileBackground_Request : pb::IMessage<CPlayer_SetProfileBackground_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetProfileBackground_Request> _parser = new pb::MessageParser<CPlayer_SetProfileBackground_Request>(() => new CPlayer_SetProfileBackground_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetProfileBackground_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileBackground_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileBackground_Request(CPlayer_SetProfileBackground_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileBackground_Request Clone() {
      return new CPlayer_SetProfileBackground_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetProfileBackground_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetProfileBackground_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetProfileBackground_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetProfileBackground_Response : pb::IMessage<CPlayer_SetProfileBackground_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetProfileBackground_Response> _parser = new pb::MessageParser<CPlayer_SetProfileBackground_Response>(() => new CPlayer_SetProfileBackground_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetProfileBackground_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileBackground_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileBackground_Response(CPlayer_SetProfileBackground_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileBackground_Response Clone() {
      return new CPlayer_SetProfileBackground_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetProfileBackground_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetProfileBackground_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetProfileBackground_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetMiniProfileBackground_Request : pb::IMessage<CPlayer_GetMiniProfileBackground_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetMiniProfileBackground_Request> _parser = new pb::MessageParser<CPlayer_GetMiniProfileBackground_Request>(() => new CPlayer_GetMiniProfileBackground_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetMiniProfileBackground_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMiniProfileBackground_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMiniProfileBackground_Request(CPlayer_GetMiniProfileBackground_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMiniProfileBackground_Request Clone() {
      return new CPlayer_GetMiniProfileBackground_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetMiniProfileBackground_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetMiniProfileBackground_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetMiniProfileBackground_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetMiniProfileBackground_Response : pb::IMessage<CPlayer_GetMiniProfileBackground_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetMiniProfileBackground_Response> _parser = new pb::MessageParser<CPlayer_GetMiniProfileBackground_Response>(() => new CPlayer_GetMiniProfileBackground_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetMiniProfileBackground_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMiniProfileBackground_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMiniProfileBackground_Response(CPlayer_GetMiniProfileBackground_Response other) : this() {
      profileBackground_ = other.profileBackground_ != null ? other.profileBackground_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetMiniProfileBackground_Response Clone() {
      return new CPlayer_GetMiniProfileBackground_Response(this);
    }

    /// <summary>Field number for the "profile_background" field.</summary>
    public const int ProfileBackgroundFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfileItem profileBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem ProfileBackground {
      get { return profileBackground_; }
      set {
        profileBackground_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetMiniProfileBackground_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetMiniProfileBackground_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProfileBackground, other.ProfileBackground)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (profileBackground_ != null) hash ^= ProfileBackground.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (profileBackground_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfileBackground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (profileBackground_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfileBackground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (profileBackground_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileBackground);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetMiniProfileBackground_Response other) {
      if (other == null) {
        return;
      }
      if (other.profileBackground_ != null) {
        if (profileBackground_ == null) {
          ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        ProfileBackground.MergeFrom(other.ProfileBackground);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (profileBackground_ == null) {
              ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileBackground);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (profileBackground_ == null) {
              ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileBackground);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetMiniProfileBackground_Request : pb::IMessage<CPlayer_SetMiniProfileBackground_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetMiniProfileBackground_Request> _parser = new pb::MessageParser<CPlayer_SetMiniProfileBackground_Request>(() => new CPlayer_SetMiniProfileBackground_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetMiniProfileBackground_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetMiniProfileBackground_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetMiniProfileBackground_Request(CPlayer_SetMiniProfileBackground_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetMiniProfileBackground_Request Clone() {
      return new CPlayer_SetMiniProfileBackground_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetMiniProfileBackground_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetMiniProfileBackground_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetMiniProfileBackground_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetMiniProfileBackground_Response : pb::IMessage<CPlayer_SetMiniProfileBackground_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetMiniProfileBackground_Response> _parser = new pb::MessageParser<CPlayer_SetMiniProfileBackground_Response>(() => new CPlayer_SetMiniProfileBackground_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetMiniProfileBackground_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetMiniProfileBackground_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetMiniProfileBackground_Response(CPlayer_SetMiniProfileBackground_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetMiniProfileBackground_Response Clone() {
      return new CPlayer_SetMiniProfileBackground_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetMiniProfileBackground_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetMiniProfileBackground_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetMiniProfileBackground_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetAvatarFrame_Request : pb::IMessage<CPlayer_GetAvatarFrame_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetAvatarFrame_Request> _parser = new pb::MessageParser<CPlayer_GetAvatarFrame_Request>(() => new CPlayer_GetAvatarFrame_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetAvatarFrame_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAvatarFrame_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAvatarFrame_Request(CPlayer_GetAvatarFrame_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAvatarFrame_Request Clone() {
      return new CPlayer_GetAvatarFrame_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetAvatarFrame_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetAvatarFrame_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetAvatarFrame_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetAvatarFrame_Response : pb::IMessage<CPlayer_GetAvatarFrame_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetAvatarFrame_Response> _parser = new pb::MessageParser<CPlayer_GetAvatarFrame_Response>(() => new CPlayer_GetAvatarFrame_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetAvatarFrame_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAvatarFrame_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAvatarFrame_Response(CPlayer_GetAvatarFrame_Response other) : this() {
      avatarFrame_ = other.avatarFrame_ != null ? other.avatarFrame_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAvatarFrame_Response Clone() {
      return new CPlayer_GetAvatarFrame_Response(this);
    }

    /// <summary>Field number for the "avatar_frame" field.</summary>
    public const int AvatarFrameFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfileItem avatarFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem AvatarFrame {
      get { return avatarFrame_; }
      set {
        avatarFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetAvatarFrame_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetAvatarFrame_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvatarFrame, other.AvatarFrame)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (avatarFrame_ != null) hash ^= AvatarFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (avatarFrame_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AvatarFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (avatarFrame_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AvatarFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (avatarFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetAvatarFrame_Response other) {
      if (other == null) {
        return;
      }
      if (other.avatarFrame_ != null) {
        if (avatarFrame_ == null) {
          AvatarFrame = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        AvatarFrame.MergeFrom(other.AvatarFrame);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (avatarFrame_ == null) {
              AvatarFrame = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(AvatarFrame);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (avatarFrame_ == null) {
              AvatarFrame = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(AvatarFrame);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetAvatarFrame_Request : pb::IMessage<CPlayer_SetAvatarFrame_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetAvatarFrame_Request> _parser = new pb::MessageParser<CPlayer_SetAvatarFrame_Request>(() => new CPlayer_SetAvatarFrame_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetAvatarFrame_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAvatarFrame_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAvatarFrame_Request(CPlayer_SetAvatarFrame_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAvatarFrame_Request Clone() {
      return new CPlayer_SetAvatarFrame_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetAvatarFrame_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetAvatarFrame_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetAvatarFrame_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetAvatarFrame_Response : pb::IMessage<CPlayer_SetAvatarFrame_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetAvatarFrame_Response> _parser = new pb::MessageParser<CPlayer_SetAvatarFrame_Response>(() => new CPlayer_SetAvatarFrame_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetAvatarFrame_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAvatarFrame_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAvatarFrame_Response(CPlayer_SetAvatarFrame_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAvatarFrame_Response Clone() {
      return new CPlayer_SetAvatarFrame_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetAvatarFrame_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetAvatarFrame_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetAvatarFrame_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetAnimatedAvatar_Request : pb::IMessage<CPlayer_GetAnimatedAvatar_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetAnimatedAvatar_Request> _parser = new pb::MessageParser<CPlayer_GetAnimatedAvatar_Request>(() => new CPlayer_GetAnimatedAvatar_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetAnimatedAvatar_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAnimatedAvatar_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAnimatedAvatar_Request(CPlayer_GetAnimatedAvatar_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAnimatedAvatar_Request Clone() {
      return new CPlayer_GetAnimatedAvatar_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetAnimatedAvatar_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetAnimatedAvatar_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetAnimatedAvatar_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetAnimatedAvatar_Response : pb::IMessage<CPlayer_GetAnimatedAvatar_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetAnimatedAvatar_Response> _parser = new pb::MessageParser<CPlayer_GetAnimatedAvatar_Response>(() => new CPlayer_GetAnimatedAvatar_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetAnimatedAvatar_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAnimatedAvatar_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAnimatedAvatar_Response(CPlayer_GetAnimatedAvatar_Response other) : this() {
      avatar_ = other.avatar_ != null ? other.avatar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAnimatedAvatar_Response Clone() {
      return new CPlayer_GetAnimatedAvatar_Response(this);
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfileItem avatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem Avatar {
      get { return avatar_; }
      set {
        avatar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetAnimatedAvatar_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetAnimatedAvatar_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Avatar, other.Avatar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (avatar_ != null) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (avatar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (avatar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (avatar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetAnimatedAvatar_Response other) {
      if (other == null) {
        return;
      }
      if (other.avatar_ != null) {
        if (avatar_ == null) {
          Avatar = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        Avatar.MergeFrom(other.Avatar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (avatar_ == null) {
              Avatar = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(Avatar);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (avatar_ == null) {
              Avatar = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(Avatar);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetAnimatedAvatar_Request : pb::IMessage<CPlayer_SetAnimatedAvatar_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetAnimatedAvatar_Request> _parser = new pb::MessageParser<CPlayer_SetAnimatedAvatar_Request>(() => new CPlayer_SetAnimatedAvatar_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetAnimatedAvatar_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAnimatedAvatar_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAnimatedAvatar_Request(CPlayer_SetAnimatedAvatar_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAnimatedAvatar_Request Clone() {
      return new CPlayer_SetAnimatedAvatar_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetAnimatedAvatar_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetAnimatedAvatar_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetAnimatedAvatar_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetAnimatedAvatar_Response : pb::IMessage<CPlayer_SetAnimatedAvatar_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetAnimatedAvatar_Response> _parser = new pb::MessageParser<CPlayer_SetAnimatedAvatar_Response>(() => new CPlayer_SetAnimatedAvatar_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetAnimatedAvatar_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAnimatedAvatar_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAnimatedAvatar_Response(CPlayer_SetAnimatedAvatar_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetAnimatedAvatar_Response Clone() {
      return new CPlayer_SetAnimatedAvatar_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetAnimatedAvatar_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetAnimatedAvatar_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetAnimatedAvatar_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetSteamDeckKeyboardSkin_Request : pb::IMessage<CPlayer_GetSteamDeckKeyboardSkin_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetSteamDeckKeyboardSkin_Request> _parser = new pb::MessageParser<CPlayer_GetSteamDeckKeyboardSkin_Request>(() => new CPlayer_GetSteamDeckKeyboardSkin_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetSteamDeckKeyboardSkin_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetSteamDeckKeyboardSkin_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetSteamDeckKeyboardSkin_Request(CPlayer_GetSteamDeckKeyboardSkin_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetSteamDeckKeyboardSkin_Request Clone() {
      return new CPlayer_GetSteamDeckKeyboardSkin_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetSteamDeckKeyboardSkin_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetSteamDeckKeyboardSkin_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetSteamDeckKeyboardSkin_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetSteamDeckKeyboardSkin_Response : pb::IMessage<CPlayer_GetSteamDeckKeyboardSkin_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetSteamDeckKeyboardSkin_Response> _parser = new pb::MessageParser<CPlayer_GetSteamDeckKeyboardSkin_Response>(() => new CPlayer_GetSteamDeckKeyboardSkin_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetSteamDeckKeyboardSkin_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetSteamDeckKeyboardSkin_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetSteamDeckKeyboardSkin_Response(CPlayer_GetSteamDeckKeyboardSkin_Response other) : this() {
      steamDeckeyboardSkin_ = other.steamDeckeyboardSkin_ != null ? other.steamDeckeyboardSkin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetSteamDeckKeyboardSkin_Response Clone() {
      return new CPlayer_GetSteamDeckKeyboardSkin_Response(this);
    }

    /// <summary>Field number for the "steam_deckeyboard_skin" field.</summary>
    public const int SteamDeckeyboardSkinFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfileItem steamDeckeyboardSkin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem SteamDeckeyboardSkin {
      get { return steamDeckeyboardSkin_; }
      set {
        steamDeckeyboardSkin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetSteamDeckKeyboardSkin_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetSteamDeckKeyboardSkin_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SteamDeckeyboardSkin, other.SteamDeckeyboardSkin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (steamDeckeyboardSkin_ != null) hash ^= SteamDeckeyboardSkin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (steamDeckeyboardSkin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SteamDeckeyboardSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (steamDeckeyboardSkin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SteamDeckeyboardSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (steamDeckeyboardSkin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SteamDeckeyboardSkin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetSteamDeckKeyboardSkin_Response other) {
      if (other == null) {
        return;
      }
      if (other.steamDeckeyboardSkin_ != null) {
        if (steamDeckeyboardSkin_ == null) {
          SteamDeckeyboardSkin = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        SteamDeckeyboardSkin.MergeFrom(other.SteamDeckeyboardSkin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (steamDeckeyboardSkin_ == null) {
              SteamDeckeyboardSkin = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(SteamDeckeyboardSkin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (steamDeckeyboardSkin_ == null) {
              SteamDeckeyboardSkin = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(SteamDeckeyboardSkin);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetSteamDeckKeyboardSkin_Request : pb::IMessage<CPlayer_SetSteamDeckKeyboardSkin_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetSteamDeckKeyboardSkin_Request> _parser = new pb::MessageParser<CPlayer_SetSteamDeckKeyboardSkin_Request>(() => new CPlayer_SetSteamDeckKeyboardSkin_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetSteamDeckKeyboardSkin_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetSteamDeckKeyboardSkin_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetSteamDeckKeyboardSkin_Request(CPlayer_SetSteamDeckKeyboardSkin_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetSteamDeckKeyboardSkin_Request Clone() {
      return new CPlayer_SetSteamDeckKeyboardSkin_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetSteamDeckKeyboardSkin_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetSteamDeckKeyboardSkin_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetSteamDeckKeyboardSkin_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetSteamDeckKeyboardSkin_Response : pb::IMessage<CPlayer_SetSteamDeckKeyboardSkin_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetSteamDeckKeyboardSkin_Response> _parser = new pb::MessageParser<CPlayer_SetSteamDeckKeyboardSkin_Response>(() => new CPlayer_SetSteamDeckKeyboardSkin_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetSteamDeckKeyboardSkin_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetSteamDeckKeyboardSkin_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetSteamDeckKeyboardSkin_Response(CPlayer_SetSteamDeckKeyboardSkin_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetSteamDeckKeyboardSkin_Response Clone() {
      return new CPlayer_SetSteamDeckKeyboardSkin_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetSteamDeckKeyboardSkin_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetSteamDeckKeyboardSkin_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetSteamDeckKeyboardSkin_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileItemsOwned_Request : pb::IMessage<CPlayer_GetProfileItemsOwned_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileItemsOwned_Request> _parser = new pb::MessageParser<CPlayer_GetProfileItemsOwned_Request>(() => new CPlayer_GetProfileItemsOwned_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileItemsOwned_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsOwned_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsOwned_Request(CPlayer_GetProfileItemsOwned_Request other) : this() {
      language_ = other.language_;
      filters_ = other.filters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsOwned_Request Clone() {
      return new CPlayer_GetProfileItemsOwned_Request(this);
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 1;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ECommunityItemClass> _repeated_filters_codec
        = pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::OpenSteamworks.Protobuf.ECommunityItemClass) x);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ECommunityItemClass> filters_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ECommunityItemClass>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ECommunityItemClass> Filters {
      get { return filters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileItemsOwned_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileItemsOwned_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Language != other.Language) return false;
      if(!filters_.Equals(other.filters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLanguage) hash ^= Language.GetHashCode();
      hash ^= filters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLanguage) {
        output.WriteRawTag(10);
        output.WriteString(Language);
      }
      filters_.WriteTo(output, _repeated_filters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLanguage) {
        output.WriteRawTag(10);
        output.WriteString(Language);
      }
      filters_.WriteTo(ref output, _repeated_filters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      size += filters_.CalculateSize(_repeated_filters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileItemsOwned_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      filters_.Add(other.filters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Language = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Language = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileItemsOwned_Response : pb::IMessage<CPlayer_GetProfileItemsOwned_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileItemsOwned_Response> _parser = new pb::MessageParser<CPlayer_GetProfileItemsOwned_Response>(() => new CPlayer_GetProfileItemsOwned_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileItemsOwned_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsOwned_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsOwned_Response(CPlayer_GetProfileItemsOwned_Response other) : this() {
      profileBackgrounds_ = other.profileBackgrounds_.Clone();
      miniProfileBackgrounds_ = other.miniProfileBackgrounds_.Clone();
      avatarFrames_ = other.avatarFrames_.Clone();
      animatedAvatars_ = other.animatedAvatars_.Clone();
      profileModifiers_ = other.profileModifiers_.Clone();
      steamDeckeyboardSkins_ = other.steamDeckeyboardSkins_.Clone();
      steamDecstartupMovies_ = other.steamDecstartupMovies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsOwned_Response Clone() {
      return new CPlayer_GetProfileItemsOwned_Response(this);
    }

    /// <summary>Field number for the "profile_backgrounds" field.</summary>
    public const int ProfileBackgroundsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_profileBackgrounds_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> profileBackgrounds_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> ProfileBackgrounds {
      get { return profileBackgrounds_; }
    }

    /// <summary>Field number for the "mini_profile_backgrounds" field.</summary>
    public const int MiniProfileBackgroundsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_miniProfileBackgrounds_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> miniProfileBackgrounds_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> MiniProfileBackgrounds {
      get { return miniProfileBackgrounds_; }
    }

    /// <summary>Field number for the "avatar_frames" field.</summary>
    public const int AvatarFramesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_avatarFrames_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> avatarFrames_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> AvatarFrames {
      get { return avatarFrames_; }
    }

    /// <summary>Field number for the "animated_avatars" field.</summary>
    public const int AnimatedAvatarsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_animatedAvatars_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> animatedAvatars_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> AnimatedAvatars {
      get { return animatedAvatars_; }
    }

    /// <summary>Field number for the "profile_modifiers" field.</summary>
    public const int ProfileModifiersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_profileModifiers_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> profileModifiers_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> ProfileModifiers {
      get { return profileModifiers_; }
    }

    /// <summary>Field number for the "steam_deckeyboard_skins" field.</summary>
    public const int SteamDeckeyboardSkinsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_steamDeckeyboardSkins_codec
        = pb::FieldCodec.ForMessage(50, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> steamDeckeyboardSkins_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> SteamDeckeyboardSkins {
      get { return steamDeckeyboardSkins_; }
    }

    /// <summary>Field number for the "steam_decstartup_movies" field.</summary>
    public const int SteamDecstartupMoviesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileItem> _repeated_steamDecstartupMovies_codec
        = pb::FieldCodec.ForMessage(58, global::OpenSteamworks.Protobuf.ProfileItem.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> steamDecstartupMovies_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileItem> SteamDecstartupMovies {
      get { return steamDecstartupMovies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileItemsOwned_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileItemsOwned_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profileBackgrounds_.Equals(other.profileBackgrounds_)) return false;
      if(!miniProfileBackgrounds_.Equals(other.miniProfileBackgrounds_)) return false;
      if(!avatarFrames_.Equals(other.avatarFrames_)) return false;
      if(!animatedAvatars_.Equals(other.animatedAvatars_)) return false;
      if(!profileModifiers_.Equals(other.profileModifiers_)) return false;
      if(!steamDeckeyboardSkins_.Equals(other.steamDeckeyboardSkins_)) return false;
      if(!steamDecstartupMovies_.Equals(other.steamDecstartupMovies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profileBackgrounds_.GetHashCode();
      hash ^= miniProfileBackgrounds_.GetHashCode();
      hash ^= avatarFrames_.GetHashCode();
      hash ^= animatedAvatars_.GetHashCode();
      hash ^= profileModifiers_.GetHashCode();
      hash ^= steamDeckeyboardSkins_.GetHashCode();
      hash ^= steamDecstartupMovies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      profileBackgrounds_.WriteTo(output, _repeated_profileBackgrounds_codec);
      miniProfileBackgrounds_.WriteTo(output, _repeated_miniProfileBackgrounds_codec);
      avatarFrames_.WriteTo(output, _repeated_avatarFrames_codec);
      animatedAvatars_.WriteTo(output, _repeated_animatedAvatars_codec);
      profileModifiers_.WriteTo(output, _repeated_profileModifiers_codec);
      steamDeckeyboardSkins_.WriteTo(output, _repeated_steamDeckeyboardSkins_codec);
      steamDecstartupMovies_.WriteTo(output, _repeated_steamDecstartupMovies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      profileBackgrounds_.WriteTo(ref output, _repeated_profileBackgrounds_codec);
      miniProfileBackgrounds_.WriteTo(ref output, _repeated_miniProfileBackgrounds_codec);
      avatarFrames_.WriteTo(ref output, _repeated_avatarFrames_codec);
      animatedAvatars_.WriteTo(ref output, _repeated_animatedAvatars_codec);
      profileModifiers_.WriteTo(ref output, _repeated_profileModifiers_codec);
      steamDeckeyboardSkins_.WriteTo(ref output, _repeated_steamDeckeyboardSkins_codec);
      steamDecstartupMovies_.WriteTo(ref output, _repeated_steamDecstartupMovies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += profileBackgrounds_.CalculateSize(_repeated_profileBackgrounds_codec);
      size += miniProfileBackgrounds_.CalculateSize(_repeated_miniProfileBackgrounds_codec);
      size += avatarFrames_.CalculateSize(_repeated_avatarFrames_codec);
      size += animatedAvatars_.CalculateSize(_repeated_animatedAvatars_codec);
      size += profileModifiers_.CalculateSize(_repeated_profileModifiers_codec);
      size += steamDeckeyboardSkins_.CalculateSize(_repeated_steamDeckeyboardSkins_codec);
      size += steamDecstartupMovies_.CalculateSize(_repeated_steamDecstartupMovies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileItemsOwned_Response other) {
      if (other == null) {
        return;
      }
      profileBackgrounds_.Add(other.profileBackgrounds_);
      miniProfileBackgrounds_.Add(other.miniProfileBackgrounds_);
      avatarFrames_.Add(other.avatarFrames_);
      animatedAvatars_.Add(other.animatedAvatars_);
      profileModifiers_.Add(other.profileModifiers_);
      steamDeckeyboardSkins_.Add(other.steamDeckeyboardSkins_);
      steamDecstartupMovies_.Add(other.steamDecstartupMovies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profileBackgrounds_.AddEntriesFrom(input, _repeated_profileBackgrounds_codec);
            break;
          }
          case 18: {
            miniProfileBackgrounds_.AddEntriesFrom(input, _repeated_miniProfileBackgrounds_codec);
            break;
          }
          case 26: {
            avatarFrames_.AddEntriesFrom(input, _repeated_avatarFrames_codec);
            break;
          }
          case 34: {
            animatedAvatars_.AddEntriesFrom(input, _repeated_animatedAvatars_codec);
            break;
          }
          case 42: {
            profileModifiers_.AddEntriesFrom(input, _repeated_profileModifiers_codec);
            break;
          }
          case 50: {
            steamDeckeyboardSkins_.AddEntriesFrom(input, _repeated_steamDeckeyboardSkins_codec);
            break;
          }
          case 58: {
            steamDecstartupMovies_.AddEntriesFrom(input, _repeated_steamDecstartupMovies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            profileBackgrounds_.AddEntriesFrom(ref input, _repeated_profileBackgrounds_codec);
            break;
          }
          case 18: {
            miniProfileBackgrounds_.AddEntriesFrom(ref input, _repeated_miniProfileBackgrounds_codec);
            break;
          }
          case 26: {
            avatarFrames_.AddEntriesFrom(ref input, _repeated_avatarFrames_codec);
            break;
          }
          case 34: {
            animatedAvatars_.AddEntriesFrom(ref input, _repeated_animatedAvatars_codec);
            break;
          }
          case 42: {
            profileModifiers_.AddEntriesFrom(ref input, _repeated_profileModifiers_codec);
            break;
          }
          case 50: {
            steamDeckeyboardSkins_.AddEntriesFrom(ref input, _repeated_steamDeckeyboardSkins_codec);
            break;
          }
          case 58: {
            steamDecstartupMovies_.AddEntriesFrom(ref input, _repeated_steamDecstartupMovies_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileItemsEquipped_Request : pb::IMessage<CPlayer_GetProfileItemsEquipped_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileItemsEquipped_Request> _parser = new pb::MessageParser<CPlayer_GetProfileItemsEquipped_Request>(() => new CPlayer_GetProfileItemsEquipped_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileItemsEquipped_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsEquipped_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsEquipped_Request(CPlayer_GetProfileItemsEquipped_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsEquipped_Request Clone() {
      return new CPlayer_GetProfileItemsEquipped_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileItemsEquipped_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileItemsEquipped_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileItemsEquipped_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileItemsEquipped_Response : pb::IMessage<CPlayer_GetProfileItemsEquipped_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileItemsEquipped_Response> _parser = new pb::MessageParser<CPlayer_GetProfileItemsEquipped_Response>(() => new CPlayer_GetProfileItemsEquipped_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileItemsEquipped_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsEquipped_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsEquipped_Response(CPlayer_GetProfileItemsEquipped_Response other) : this() {
      profileBackground_ = other.profileBackground_ != null ? other.profileBackground_.Clone() : null;
      miniProfileBackground_ = other.miniProfileBackground_ != null ? other.miniProfileBackground_.Clone() : null;
      avatarFrame_ = other.avatarFrame_ != null ? other.avatarFrame_.Clone() : null;
      animatedAvatar_ = other.animatedAvatar_ != null ? other.animatedAvatar_.Clone() : null;
      profileModifier_ = other.profileModifier_ != null ? other.profileModifier_.Clone() : null;
      steamDeckeyboardSkin_ = other.steamDeckeyboardSkin_ != null ? other.steamDeckeyboardSkin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileItemsEquipped_Response Clone() {
      return new CPlayer_GetProfileItemsEquipped_Response(this);
    }

    /// <summary>Field number for the "profile_background" field.</summary>
    public const int ProfileBackgroundFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfileItem profileBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem ProfileBackground {
      get { return profileBackground_; }
      set {
        profileBackground_ = value;
      }
    }

    /// <summary>Field number for the "mini_profile_background" field.</summary>
    public const int MiniProfileBackgroundFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.ProfileItem miniProfileBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem MiniProfileBackground {
      get { return miniProfileBackground_; }
      set {
        miniProfileBackground_ = value;
      }
    }

    /// <summary>Field number for the "avatar_frame" field.</summary>
    public const int AvatarFrameFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.ProfileItem avatarFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem AvatarFrame {
      get { return avatarFrame_; }
      set {
        avatarFrame_ = value;
      }
    }

    /// <summary>Field number for the "animated_avatar" field.</summary>
    public const int AnimatedAvatarFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.ProfileItem animatedAvatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem AnimatedAvatar {
      get { return animatedAvatar_; }
      set {
        animatedAvatar_ = value;
      }
    }

    /// <summary>Field number for the "profile_modifier" field.</summary>
    public const int ProfileModifierFieldNumber = 5;
    private global::OpenSteamworks.Protobuf.ProfileItem profileModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem ProfileModifier {
      get { return profileModifier_; }
      set {
        profileModifier_ = value;
      }
    }

    /// <summary>Field number for the "steam_deckeyboard_skin" field.</summary>
    public const int SteamDeckeyboardSkinFieldNumber = 6;
    private global::OpenSteamworks.Protobuf.ProfileItem steamDeckeyboardSkin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileItem SteamDeckeyboardSkin {
      get { return steamDeckeyboardSkin_; }
      set {
        steamDeckeyboardSkin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileItemsEquipped_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileItemsEquipped_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProfileBackground, other.ProfileBackground)) return false;
      if (!object.Equals(MiniProfileBackground, other.MiniProfileBackground)) return false;
      if (!object.Equals(AvatarFrame, other.AvatarFrame)) return false;
      if (!object.Equals(AnimatedAvatar, other.AnimatedAvatar)) return false;
      if (!object.Equals(ProfileModifier, other.ProfileModifier)) return false;
      if (!object.Equals(SteamDeckeyboardSkin, other.SteamDeckeyboardSkin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (profileBackground_ != null) hash ^= ProfileBackground.GetHashCode();
      if (miniProfileBackground_ != null) hash ^= MiniProfileBackground.GetHashCode();
      if (avatarFrame_ != null) hash ^= AvatarFrame.GetHashCode();
      if (animatedAvatar_ != null) hash ^= AnimatedAvatar.GetHashCode();
      if (profileModifier_ != null) hash ^= ProfileModifier.GetHashCode();
      if (steamDeckeyboardSkin_ != null) hash ^= SteamDeckeyboardSkin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (profileBackground_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfileBackground);
      }
      if (miniProfileBackground_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MiniProfileBackground);
      }
      if (avatarFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AvatarFrame);
      }
      if (animatedAvatar_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AnimatedAvatar);
      }
      if (profileModifier_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProfileModifier);
      }
      if (steamDeckeyboardSkin_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SteamDeckeyboardSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (profileBackground_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfileBackground);
      }
      if (miniProfileBackground_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MiniProfileBackground);
      }
      if (avatarFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AvatarFrame);
      }
      if (animatedAvatar_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AnimatedAvatar);
      }
      if (profileModifier_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProfileModifier);
      }
      if (steamDeckeyboardSkin_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SteamDeckeyboardSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (profileBackground_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileBackground);
      }
      if (miniProfileBackground_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MiniProfileBackground);
      }
      if (avatarFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarFrame);
      }
      if (animatedAvatar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnimatedAvatar);
      }
      if (profileModifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileModifier);
      }
      if (steamDeckeyboardSkin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SteamDeckeyboardSkin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileItemsEquipped_Response other) {
      if (other == null) {
        return;
      }
      if (other.profileBackground_ != null) {
        if (profileBackground_ == null) {
          ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        ProfileBackground.MergeFrom(other.ProfileBackground);
      }
      if (other.miniProfileBackground_ != null) {
        if (miniProfileBackground_ == null) {
          MiniProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        MiniProfileBackground.MergeFrom(other.MiniProfileBackground);
      }
      if (other.avatarFrame_ != null) {
        if (avatarFrame_ == null) {
          AvatarFrame = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        AvatarFrame.MergeFrom(other.AvatarFrame);
      }
      if (other.animatedAvatar_ != null) {
        if (animatedAvatar_ == null) {
          AnimatedAvatar = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        AnimatedAvatar.MergeFrom(other.AnimatedAvatar);
      }
      if (other.profileModifier_ != null) {
        if (profileModifier_ == null) {
          ProfileModifier = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        ProfileModifier.MergeFrom(other.ProfileModifier);
      }
      if (other.steamDeckeyboardSkin_ != null) {
        if (steamDeckeyboardSkin_ == null) {
          SteamDeckeyboardSkin = new global::OpenSteamworks.Protobuf.ProfileItem();
        }
        SteamDeckeyboardSkin.MergeFrom(other.SteamDeckeyboardSkin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (profileBackground_ == null) {
              ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileBackground);
            break;
          }
          case 18: {
            if (miniProfileBackground_ == null) {
              MiniProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(MiniProfileBackground);
            break;
          }
          case 26: {
            if (avatarFrame_ == null) {
              AvatarFrame = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(AvatarFrame);
            break;
          }
          case 34: {
            if (animatedAvatar_ == null) {
              AnimatedAvatar = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(AnimatedAvatar);
            break;
          }
          case 42: {
            if (profileModifier_ == null) {
              ProfileModifier = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileModifier);
            break;
          }
          case 50: {
            if (steamDeckeyboardSkin_ == null) {
              SteamDeckeyboardSkin = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(SteamDeckeyboardSkin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (profileBackground_ == null) {
              ProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileBackground);
            break;
          }
          case 18: {
            if (miniProfileBackground_ == null) {
              MiniProfileBackground = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(MiniProfileBackground);
            break;
          }
          case 26: {
            if (avatarFrame_ == null) {
              AvatarFrame = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(AvatarFrame);
            break;
          }
          case 34: {
            if (animatedAvatar_ == null) {
              AnimatedAvatar = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(AnimatedAvatar);
            break;
          }
          case 42: {
            if (profileModifier_ == null) {
              ProfileModifier = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(ProfileModifier);
            break;
          }
          case 50: {
            if (steamDeckeyboardSkin_ == null) {
              SteamDeckeyboardSkin = new global::OpenSteamworks.Protobuf.ProfileItem();
            }
            input.ReadMessage(SteamDeckeyboardSkin);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetEquippedProfileItemFlags_Request : pb::IMessage<CPlayer_SetEquippedProfileItemFlags_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetEquippedProfileItemFlags_Request> _parser = new pb::MessageParser<CPlayer_SetEquippedProfileItemFlags_Request>(() => new CPlayer_SetEquippedProfileItemFlags_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetEquippedProfileItemFlags_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetEquippedProfileItemFlags_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetEquippedProfileItemFlags_Request(CPlayer_SetEquippedProfileItemFlags_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetEquippedProfileItemFlags_Request Clone() {
      return new CPlayer_SetEquippedProfileItemFlags_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 2;
    private readonly static uint FlagsDefaultValue = 0;

    private uint flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        flags_ = value;
      }
    }
    /// <summary>Gets whether the "flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetEquippedProfileItemFlags_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetEquippedProfileItemFlags_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (HasFlags) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (HasFlags) {
        output.WriteRawTag(16);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (HasFlags) {
        output.WriteRawTag(16);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (HasFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetEquippedProfileItemFlags_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      if (other.HasFlags) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 16: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 16: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetEquippedProfileItemFlags_Response : pb::IMessage<CPlayer_SetEquippedProfileItemFlags_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetEquippedProfileItemFlags_Response> _parser = new pb::MessageParser<CPlayer_SetEquippedProfileItemFlags_Response>(() => new CPlayer_SetEquippedProfileItemFlags_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetEquippedProfileItemFlags_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetEquippedProfileItemFlags_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetEquippedProfileItemFlags_Response(CPlayer_SetEquippedProfileItemFlags_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetEquippedProfileItemFlags_Response Clone() {
      return new CPlayer_SetEquippedProfileItemFlags_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetEquippedProfileItemFlags_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetEquippedProfileItemFlags_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetEquippedProfileItemFlags_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetEmoticonList_Request : pb::IMessage<CPlayer_GetEmoticonList_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetEmoticonList_Request> _parser = new pb::MessageParser<CPlayer_GetEmoticonList_Request>(() => new CPlayer_GetEmoticonList_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetEmoticonList_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetEmoticonList_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetEmoticonList_Request(CPlayer_GetEmoticonList_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetEmoticonList_Request Clone() {
      return new CPlayer_GetEmoticonList_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetEmoticonList_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetEmoticonList_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetEmoticonList_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetEmoticonList_Response : pb::IMessage<CPlayer_GetEmoticonList_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetEmoticonList_Response> _parser = new pb::MessageParser<CPlayer_GetEmoticonList_Response>(() => new CPlayer_GetEmoticonList_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetEmoticonList_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetEmoticonList_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetEmoticonList_Response(CPlayer_GetEmoticonList_Response other) : this() {
      emoticons_ = other.emoticons_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetEmoticonList_Response Clone() {
      return new CPlayer_GetEmoticonList_Response(this);
    }

    /// <summary>Field number for the "emoticons" field.</summary>
    public const int EmoticonsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon> _repeated_emoticons_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon> emoticons_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Types.Emoticon> Emoticons {
      get { return emoticons_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetEmoticonList_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetEmoticonList_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!emoticons_.Equals(other.emoticons_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= emoticons_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      emoticons_.WriteTo(output, _repeated_emoticons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      emoticons_.WriteTo(ref output, _repeated_emoticons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += emoticons_.CalculateSize(_repeated_emoticons_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetEmoticonList_Response other) {
      if (other == null) {
        return;
      }
      emoticons_.Add(other.emoticons_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            emoticons_.AddEntriesFrom(input, _repeated_emoticons_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            emoticons_.AddEntriesFrom(ref input, _repeated_emoticons_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetEmoticonList_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Emoticon : pb::IMessage<Emoticon>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Emoticon> _parser = new pb::MessageParser<Emoticon>(() => new Emoticon());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Emoticon> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetEmoticonList_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Emoticon() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Emoticon(Emoticon other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          count_ = other.count_;
          timeLastUsed_ = other.timeLastUsed_;
          useCount_ = other.useCount_;
          timeReceived_ = other.timeReceived_;
          appid_ = other.appid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Emoticon Clone() {
          return new Emoticon(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private readonly static int CountDefaultValue = 0;

        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Count {
          get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            count_ = value;
          }
        }
        /// <summary>Gets whether the "count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCount() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "time_last_used" field.</summary>
        public const int TimeLastUsedFieldNumber = 3;
        private readonly static uint TimeLastUsedDefaultValue = 0;

        private uint timeLastUsed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint TimeLastUsed {
          get { if ((_hasBits0 & 2) != 0) { return timeLastUsed_; } else { return TimeLastUsedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            timeLastUsed_ = value;
          }
        }
        /// <summary>Gets whether the "time_last_used" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimeLastUsed {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "time_last_used" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimeLastUsed() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "use_count" field.</summary>
        public const int UseCountFieldNumber = 4;
        private readonly static uint UseCountDefaultValue = 0;

        private uint useCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint UseCount {
          get { if ((_hasBits0 & 4) != 0) { return useCount_; } else { return UseCountDefaultValue; } }
          set {
            _hasBits0 |= 4;
            useCount_ = value;
          }
        }
        /// <summary>Gets whether the "use_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUseCount {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "use_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUseCount() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "time_received" field.</summary>
        public const int TimeReceivedFieldNumber = 5;
        private readonly static uint TimeReceivedDefaultValue = 0;

        private uint timeReceived_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint TimeReceived {
          get { if ((_hasBits0 & 8) != 0) { return timeReceived_; } else { return TimeReceivedDefaultValue; } }
          set {
            _hasBits0 |= 8;
            timeReceived_ = value;
          }
        }
        /// <summary>Gets whether the "time_received" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimeReceived {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "time_received" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimeReceived() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 6;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 16) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 16;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Emoticon);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Emoticon other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Count != other.Count) return false;
          if (TimeLastUsed != other.TimeLastUsed) return false;
          if (UseCount != other.UseCount) return false;
          if (TimeReceived != other.TimeReceived) return false;
          if (Appid != other.Appid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasCount) hash ^= Count.GetHashCode();
          if (HasTimeLastUsed) hash ^= TimeLastUsed.GetHashCode();
          if (HasUseCount) hash ^= UseCount.GetHashCode();
          if (HasTimeReceived) hash ^= TimeReceived.GetHashCode();
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteInt32(Count);
          }
          if (HasTimeLastUsed) {
            output.WriteRawTag(24);
            output.WriteUInt32(TimeLastUsed);
          }
          if (HasUseCount) {
            output.WriteRawTag(32);
            output.WriteUInt32(UseCount);
          }
          if (HasTimeReceived) {
            output.WriteRawTag(40);
            output.WriteUInt32(TimeReceived);
          }
          if (HasAppid) {
            output.WriteRawTag(48);
            output.WriteUInt32(Appid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteInt32(Count);
          }
          if (HasTimeLastUsed) {
            output.WriteRawTag(24);
            output.WriteUInt32(TimeLastUsed);
          }
          if (HasUseCount) {
            output.WriteRawTag(32);
            output.WriteUInt32(UseCount);
          }
          if (HasTimeReceived) {
            output.WriteRawTag(40);
            output.WriteUInt32(TimeReceived);
          }
          if (HasAppid) {
            output.WriteRawTag(48);
            output.WriteUInt32(Appid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasCount) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (HasTimeLastUsed) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeLastUsed);
          }
          if (HasUseCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UseCount);
          }
          if (HasTimeReceived) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeReceived);
          }
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Emoticon other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          if (other.HasTimeLastUsed) {
            TimeLastUsed = other.TimeLastUsed;
          }
          if (other.HasUseCount) {
            UseCount = other.UseCount;
          }
          if (other.HasTimeReceived) {
            TimeReceived = other.TimeReceived;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt32();
                break;
              }
              case 24: {
                TimeLastUsed = input.ReadUInt32();
                break;
              }
              case 32: {
                UseCount = input.ReadUInt32();
                break;
              }
              case 40: {
                TimeReceived = input.ReadUInt32();
                break;
              }
              case 48: {
                Appid = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt32();
                break;
              }
              case 24: {
                TimeLastUsed = input.ReadUInt32();
                break;
              }
              case 32: {
                UseCount = input.ReadUInt32();
                break;
              }
              case 40: {
                TimeReceived = input.ReadUInt32();
                break;
              }
              case 48: {
                Appid = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetCommunityBadgeProgress_Request : pb::IMessage<CPlayer_GetCommunityBadgeProgress_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetCommunityBadgeProgress_Request> _parser = new pb::MessageParser<CPlayer_GetCommunityBadgeProgress_Request>(() => new CPlayer_GetCommunityBadgeProgress_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetCommunityBadgeProgress_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityBadgeProgress_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityBadgeProgress_Request(CPlayer_GetCommunityBadgeProgress_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      badgeid_ = other.badgeid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityBadgeProgress_Request Clone() {
      return new CPlayer_GetCommunityBadgeProgress_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "badgeid" field.</summary>
    public const int BadgeidFieldNumber = 2;
    private readonly static int BadgeidDefaultValue = 0;

    private int badgeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Badgeid {
      get { if ((_hasBits0 & 2) != 0) { return badgeid_; } else { return BadgeidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        badgeid_ = value;
      }
    }
    /// <summary>Gets whether the "badgeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBadgeid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "badgeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBadgeid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetCommunityBadgeProgress_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetCommunityBadgeProgress_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Badgeid != other.Badgeid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasBadgeid) hash ^= Badgeid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasBadgeid) {
        output.WriteRawTag(16);
        output.WriteInt32(Badgeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasBadgeid) {
        output.WriteRawTag(16);
        output.WriteInt32(Badgeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasBadgeid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Badgeid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetCommunityBadgeProgress_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasBadgeid) {
        Badgeid = other.Badgeid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            Badgeid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            Badgeid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetCommunityBadgeProgress_Response : pb::IMessage<CPlayer_GetCommunityBadgeProgress_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetCommunityBadgeProgress_Response> _parser = new pb::MessageParser<CPlayer_GetCommunityBadgeProgress_Response>(() => new CPlayer_GetCommunityBadgeProgress_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetCommunityBadgeProgress_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityBadgeProgress_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityBadgeProgress_Response(CPlayer_GetCommunityBadgeProgress_Response other) : this() {
      quests_ = other.quests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityBadgeProgress_Response Clone() {
      return new CPlayer_GetCommunityBadgeProgress_Response(this);
    }

    /// <summary>Field number for the "quests" field.</summary>
    public const int QuestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest> _repeated_quests_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest> quests_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Types.Quest> Quests {
      get { return quests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetCommunityBadgeProgress_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetCommunityBadgeProgress_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!quests_.Equals(other.quests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= quests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      quests_.WriteTo(output, _repeated_quests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      quests_.WriteTo(ref output, _repeated_quests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += quests_.CalculateSize(_repeated_quests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetCommunityBadgeProgress_Response other) {
      if (other == null) {
        return;
      }
      quests_.Add(other.quests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            quests_.AddEntriesFrom(input, _repeated_quests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            quests_.AddEntriesFrom(ref input, _repeated_quests_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetCommunityBadgeProgress_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Quest : pb::IMessage<Quest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Quest> _parser = new pb::MessageParser<Quest>(() => new Quest());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Quest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetCommunityBadgeProgress_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quest(Quest other) : this() {
          _hasBits0 = other._hasBits0;
          questid_ = other.questid_;
          completed_ = other.completed_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quest Clone() {
          return new Quest(this);
        }

        /// <summary>Field number for the "questid" field.</summary>
        public const int QuestidFieldNumber = 1;
        private readonly static uint QuestidDefaultValue = 0;

        private uint questid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Questid {
          get { if ((_hasBits0 & 1) != 0) { return questid_; } else { return QuestidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            questid_ = value;
          }
        }
        /// <summary>Gets whether the "questid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasQuestid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "questid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearQuestid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "completed" field.</summary>
        public const int CompletedFieldNumber = 2;
        private readonly static bool CompletedDefaultValue = false;

        private bool completed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Completed {
          get { if ((_hasBits0 & 2) != 0) { return completed_; } else { return CompletedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            completed_ = value;
          }
        }
        /// <summary>Gets whether the "completed" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCompleted {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "completed" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCompleted() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Quest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Quest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Questid != other.Questid) return false;
          if (Completed != other.Completed) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasQuestid) hash ^= Questid.GetHashCode();
          if (HasCompleted) hash ^= Completed.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasQuestid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Questid);
          }
          if (HasCompleted) {
            output.WriteRawTag(16);
            output.WriteBool(Completed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasQuestid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Questid);
          }
          if (HasCompleted) {
            output.WriteRawTag(16);
            output.WriteBool(Completed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasQuestid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Questid);
          }
          if (HasCompleted) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Quest other) {
          if (other == null) {
            return;
          }
          if (other.HasQuestid) {
            Questid = other.Questid;
          }
          if (other.HasCompleted) {
            Completed = other.Completed;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Questid = input.ReadUInt32();
                break;
              }
              case 16: {
                Completed = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Questid = input.ReadUInt32();
                break;
              }
              case 16: {
                Completed = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetTopAchievementsForGames_Request : pb::IMessage<CPlayer_GetTopAchievementsForGames_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetTopAchievementsForGames_Request> _parser = new pb::MessageParser<CPlayer_GetTopAchievementsForGames_Request>(() => new CPlayer_GetTopAchievementsForGames_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetTopAchievementsForGames_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTopAchievementsForGames_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTopAchievementsForGames_Request(CPlayer_GetTopAchievementsForGames_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      maxAchievements_ = other.maxAchievements_;
      appids_ = other.appids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTopAchievementsForGames_Request Clone() {
      return new CPlayer_GetTopAchievementsForGames_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    /// <summary>Field number for the "max_achievements" field.</summary>
    public const int MaxAchievementsFieldNumber = 3;
    private readonly static uint MaxAchievementsDefaultValue = 0;

    private uint maxAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxAchievements {
      get { if ((_hasBits0 & 2) != 0) { return maxAchievements_; } else { return MaxAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "max_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxAchievements {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxAchievements() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "appids" field.</summary>
    public const int AppidsFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_appids_codec
        = pb::FieldCodec.ForUInt32(32);
    private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Appids {
      get { return appids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetTopAchievementsForGames_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetTopAchievementsForGames_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      if (MaxAchievements != other.MaxAchievements) return false;
      if(!appids_.Equals(other.appids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (HasMaxAchievements) hash ^= MaxAchievements.GetHashCode();
      hash ^= appids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (HasMaxAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxAchievements);
      }
      appids_.WriteTo(output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (HasMaxAchievements) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxAchievements);
      }
      appids_.WriteTo(ref output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (HasMaxAchievements) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxAchievements);
      }
      size += appids_.CalculateSize(_repeated_appids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetTopAchievementsForGames_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      if (other.HasMaxAchievements) {
        MaxAchievements = other.MaxAchievements;
      }
      appids_.Add(other.appids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
          case 24: {
            MaxAchievements = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            appids_.AddEntriesFrom(input, _repeated_appids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
          case 24: {
            MaxAchievements = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetTopAchievementsForGames_Response : pb::IMessage<CPlayer_GetTopAchievementsForGames_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetTopAchievementsForGames_Response> _parser = new pb::MessageParser<CPlayer_GetTopAchievementsForGames_Response>(() => new CPlayer_GetTopAchievementsForGames_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetTopAchievementsForGames_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTopAchievementsForGames_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTopAchievementsForGames_Response(CPlayer_GetTopAchievementsForGames_Response other) : this() {
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTopAchievementsForGames_Response Clone() {
      return new CPlayer_GetTopAchievementsForGames_Response(this);
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game> _repeated_games_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game> games_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Game> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetTopAchievementsForGames_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetTopAchievementsForGames_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      games_.WriteTo(ref output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetTopAchievementsForGames_Response other) {
      if (other == null) {
        return;
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetTopAchievementsForGames_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Achievement : pb::IMessage<Achievement>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Achievement> _parser = new pb::MessageParser<Achievement>(() => new Achievement());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Achievement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Achievement() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Achievement(Achievement other) : this() {
          _hasBits0 = other._hasBits0;
          statid_ = other.statid_;
          bit_ = other.bit_;
          name_ = other.name_;
          desc_ = other.desc_;
          icon_ = other.icon_;
          iconGray_ = other.iconGray_;
          hidden_ = other.hidden_;
          playerPercentUnlocked_ = other.playerPercentUnlocked_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Achievement Clone() {
          return new Achievement(this);
        }

        /// <summary>Field number for the "statid" field.</summary>
        public const int StatidFieldNumber = 1;
        private readonly static uint StatidDefaultValue = 0;

        private uint statid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Statid {
          get { if ((_hasBits0 & 1) != 0) { return statid_; } else { return StatidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            statid_ = value;
          }
        }
        /// <summary>Gets whether the "statid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStatid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "statid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStatid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "bit" field.</summary>
        public const int BitFieldNumber = 2;
        private readonly static uint BitDefaultValue = 0;

        private uint bit_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Bit {
          get { if ((_hasBits0 & 2) != 0) { return bit_; } else { return BitDefaultValue; } }
          set {
            _hasBits0 |= 2;
            bit_ = value;
          }
        }
        /// <summary>Gets whether the "bit" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBit {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "bit" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBit() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "desc" field.</summary>
        public const int DescFieldNumber = 4;
        private readonly static string DescDefaultValue = "";

        private string desc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Desc {
          get { return desc_ ?? DescDefaultValue; }
          set {
            desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "desc" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDesc {
          get { return desc_ != null; }
        }
        /// <summary>Clears the value of the "desc" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDesc() {
          desc_ = null;
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 5;
        private readonly static string IconDefaultValue = "";

        private string icon_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Icon {
          get { return icon_ ?? IconDefaultValue; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "icon" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIcon {
          get { return icon_ != null; }
        }
        /// <summary>Clears the value of the "icon" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIcon() {
          icon_ = null;
        }

        /// <summary>Field number for the "icon_gray" field.</summary>
        public const int IconGrayFieldNumber = 6;
        private readonly static string IconGrayDefaultValue = "";

        private string iconGray_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string IconGray {
          get { return iconGray_ ?? IconGrayDefaultValue; }
          set {
            iconGray_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "icon_gray" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIconGray {
          get { return iconGray_ != null; }
        }
        /// <summary>Clears the value of the "icon_gray" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIconGray() {
          iconGray_ = null;
        }

        /// <summary>Field number for the "hidden" field.</summary>
        public const int HiddenFieldNumber = 7;
        private readonly static bool HiddenDefaultValue = false;

        private bool hidden_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Hidden {
          get { if ((_hasBits0 & 4) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
          set {
            _hasBits0 |= 4;
            hidden_ = value;
          }
        }
        /// <summary>Gets whether the "hidden" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHidden {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "hidden" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHidden() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "player_percent_unlocked" field.</summary>
        public const int PlayerPercentUnlockedFieldNumber = 8;
        private readonly static string PlayerPercentUnlockedDefaultValue = "";

        private string playerPercentUnlocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PlayerPercentUnlocked {
          get { return playerPercentUnlocked_ ?? PlayerPercentUnlockedDefaultValue; }
          set {
            playerPercentUnlocked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "player_percent_unlocked" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlayerPercentUnlocked {
          get { return playerPercentUnlocked_ != null; }
        }
        /// <summary>Clears the value of the "player_percent_unlocked" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlayerPercentUnlocked() {
          playerPercentUnlocked_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Achievement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Achievement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Statid != other.Statid) return false;
          if (Bit != other.Bit) return false;
          if (Name != other.Name) return false;
          if (Desc != other.Desc) return false;
          if (Icon != other.Icon) return false;
          if (IconGray != other.IconGray) return false;
          if (Hidden != other.Hidden) return false;
          if (PlayerPercentUnlocked != other.PlayerPercentUnlocked) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasStatid) hash ^= Statid.GetHashCode();
          if (HasBit) hash ^= Bit.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasDesc) hash ^= Desc.GetHashCode();
          if (HasIcon) hash ^= Icon.GetHashCode();
          if (HasIconGray) hash ^= IconGray.GetHashCode();
          if (HasHidden) hash ^= Hidden.GetHashCode();
          if (HasPlayerPercentUnlocked) hash ^= PlayerPercentUnlocked.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasStatid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Statid);
          }
          if (HasBit) {
            output.WriteRawTag(16);
            output.WriteUInt32(Bit);
          }
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasDesc) {
            output.WriteRawTag(34);
            output.WriteString(Desc);
          }
          if (HasIcon) {
            output.WriteRawTag(42);
            output.WriteString(Icon);
          }
          if (HasIconGray) {
            output.WriteRawTag(50);
            output.WriteString(IconGray);
          }
          if (HasHidden) {
            output.WriteRawTag(56);
            output.WriteBool(Hidden);
          }
          if (HasPlayerPercentUnlocked) {
            output.WriteRawTag(66);
            output.WriteString(PlayerPercentUnlocked);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasStatid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Statid);
          }
          if (HasBit) {
            output.WriteRawTag(16);
            output.WriteUInt32(Bit);
          }
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasDesc) {
            output.WriteRawTag(34);
            output.WriteString(Desc);
          }
          if (HasIcon) {
            output.WriteRawTag(42);
            output.WriteString(Icon);
          }
          if (HasIconGray) {
            output.WriteRawTag(50);
            output.WriteString(IconGray);
          }
          if (HasHidden) {
            output.WriteRawTag(56);
            output.WriteBool(Hidden);
          }
          if (HasPlayerPercentUnlocked) {
            output.WriteRawTag(66);
            output.WriteString(PlayerPercentUnlocked);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasStatid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Statid);
          }
          if (HasBit) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bit);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasDesc) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
          }
          if (HasIcon) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (HasIconGray) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IconGray);
          }
          if (HasHidden) {
            size += 1 + 1;
          }
          if (HasPlayerPercentUnlocked) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerPercentUnlocked);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Achievement other) {
          if (other == null) {
            return;
          }
          if (other.HasStatid) {
            Statid = other.Statid;
          }
          if (other.HasBit) {
            Bit = other.Bit;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasDesc) {
            Desc = other.Desc;
          }
          if (other.HasIcon) {
            Icon = other.Icon;
          }
          if (other.HasIconGray) {
            IconGray = other.IconGray;
          }
          if (other.HasHidden) {
            Hidden = other.Hidden;
          }
          if (other.HasPlayerPercentUnlocked) {
            PlayerPercentUnlocked = other.PlayerPercentUnlocked;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Statid = input.ReadUInt32();
                break;
              }
              case 16: {
                Bit = input.ReadUInt32();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Desc = input.ReadString();
                break;
              }
              case 42: {
                Icon = input.ReadString();
                break;
              }
              case 50: {
                IconGray = input.ReadString();
                break;
              }
              case 56: {
                Hidden = input.ReadBool();
                break;
              }
              case 66: {
                PlayerPercentUnlocked = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Statid = input.ReadUInt32();
                break;
              }
              case 16: {
                Bit = input.ReadUInt32();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Desc = input.ReadString();
                break;
              }
              case 42: {
                Icon = input.ReadString();
                break;
              }
              case 50: {
                IconGray = input.ReadString();
                break;
              }
              case 56: {
                Hidden = input.ReadBool();
                break;
              }
              case 66: {
                PlayerPercentUnlocked = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Game : pb::IMessage<Game>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Game> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game(Game other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          totalAchievements_ = other.totalAchievements_;
          achievements_ = other.achievements_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game Clone() {
          return new Game(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "total_achievements" field.</summary>
        public const int TotalAchievementsFieldNumber = 2;
        private readonly static uint TotalAchievementsDefaultValue = 0;

        private uint totalAchievements_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint TotalAchievements {
          get { if ((_hasBits0 & 2) != 0) { return totalAchievements_; } else { return TotalAchievementsDefaultValue; } }
          set {
            _hasBits0 |= 2;
            totalAchievements_ = value;
          }
        }
        /// <summary>Gets whether the "total_achievements" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTotalAchievements {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "total_achievements" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTotalAchievements() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "achievements" field.</summary>
        public const int AchievementsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement> _repeated_achievements_codec
            = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement.Parser);
        private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement> achievements_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetTopAchievementsForGames_Response.Types.Achievement> Achievements {
          get { return achievements_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Game);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Game other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (TotalAchievements != other.TotalAchievements) return false;
          if(!achievements_.Equals(other.achievements_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasTotalAchievements) hash ^= TotalAchievements.GetHashCode();
          hash ^= achievements_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasTotalAchievements) {
            output.WriteRawTag(16);
            output.WriteUInt32(TotalAchievements);
          }
          achievements_.WriteTo(output, _repeated_achievements_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasTotalAchievements) {
            output.WriteRawTag(16);
            output.WriteUInt32(TotalAchievements);
          }
          achievements_.WriteTo(ref output, _repeated_achievements_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (HasTotalAchievements) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalAchievements);
          }
          size += achievements_.CalculateSize(_repeated_achievements_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Game other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasTotalAchievements) {
            TotalAchievements = other.TotalAchievements;
          }
          achievements_.Add(other.achievements_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 16: {
                TotalAchievements = input.ReadUInt32();
                break;
              }
              case 26: {
                achievements_.AddEntriesFrom(input, _repeated_achievements_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 16: {
                TotalAchievements = input.ReadUInt32();
                break;
              }
              case 26: {
                achievements_.AddEntriesFrom(ref input, _repeated_achievements_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetAchievementsProgress_Request : pb::IMessage<CPlayer_GetAchievementsProgress_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetAchievementsProgress_Request> _parser = new pb::MessageParser<CPlayer_GetAchievementsProgress_Request>(() => new CPlayer_GetAchievementsProgress_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetAchievementsProgress_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAchievementsProgress_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAchievementsProgress_Request(CPlayer_GetAchievementsProgress_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      language_ = other.language_;
      appids_ = other.appids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAchievementsProgress_Request Clone() {
      return new CPlayer_GetAchievementsProgress_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    /// <summary>Field number for the "appids" field.</summary>
    public const int AppidsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_appids_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Appids {
      get { return appids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetAchievementsProgress_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetAchievementsProgress_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Language != other.Language) return false;
      if(!appids_.Equals(other.appids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      hash ^= appids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      appids_.WriteTo(output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      appids_.WriteTo(ref output, _repeated_appids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      size += appids_.CalculateSize(_repeated_appids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetAchievementsProgress_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      appids_.Add(other.appids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            appids_.AddEntriesFrom(input, _repeated_appids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetAchievementsProgress_Response : pb::IMessage<CPlayer_GetAchievementsProgress_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetAchievementsProgress_Response> _parser = new pb::MessageParser<CPlayer_GetAchievementsProgress_Response>(() => new CPlayer_GetAchievementsProgress_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetAchievementsProgress_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAchievementsProgress_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAchievementsProgress_Response(CPlayer_GetAchievementsProgress_Response other) : this() {
      achievementProgress_ = other.achievementProgress_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetAchievementsProgress_Response Clone() {
      return new CPlayer_GetAchievementsProgress_Response(this);
    }

    /// <summary>Field number for the "achievement_progress" field.</summary>
    public const int AchievementProgressFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress> _repeated_achievementProgress_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress> achievementProgress_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Types.AchievementProgress> AchievementProgress {
      get { return achievementProgress_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetAchievementsProgress_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetAchievementsProgress_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!achievementProgress_.Equals(other.achievementProgress_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= achievementProgress_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      achievementProgress_.WriteTo(output, _repeated_achievementProgress_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      achievementProgress_.WriteTo(ref output, _repeated_achievementProgress_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += achievementProgress_.CalculateSize(_repeated_achievementProgress_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetAchievementsProgress_Response other) {
      if (other == null) {
        return;
      }
      achievementProgress_.Add(other.achievementProgress_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            achievementProgress_.AddEntriesFrom(input, _repeated_achievementProgress_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            achievementProgress_.AddEntriesFrom(ref input, _repeated_achievementProgress_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetAchievementsProgress_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AchievementProgress : pb::IMessage<AchievementProgress>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AchievementProgress> _parser = new pb::MessageParser<AchievementProgress>(() => new AchievementProgress());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AchievementProgress> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetAchievementsProgress_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AchievementProgress() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AchievementProgress(AchievementProgress other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          unlocked_ = other.unlocked_;
          total_ = other.total_;
          percentage_ = other.percentage_;
          allUnlocked_ = other.allUnlocked_;
          cacheTime_ = other.cacheTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AchievementProgress Clone() {
          return new AchievementProgress(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "unlocked" field.</summary>
        public const int UnlockedFieldNumber = 2;
        private readonly static uint UnlockedDefaultValue = 0;

        private uint unlocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Unlocked {
          get { if ((_hasBits0 & 2) != 0) { return unlocked_; } else { return UnlockedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            unlocked_ = value;
          }
        }
        /// <summary>Gets whether the "unlocked" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUnlocked {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "unlocked" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUnlocked() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 3;
        private readonly static uint TotalDefaultValue = 0;

        private uint total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Total {
          get { if ((_hasBits0 & 4) != 0) { return total_; } else { return TotalDefaultValue; } }
          set {
            _hasBits0 |= 4;
            total_ = value;
          }
        }
        /// <summary>Gets whether the "total" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTotal {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "total" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTotal() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "percentage" field.</summary>
        public const int PercentageFieldNumber = 4;
        private readonly static float PercentageDefaultValue = 0F;

        private float percentage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Percentage {
          get { if ((_hasBits0 & 8) != 0) { return percentage_; } else { return PercentageDefaultValue; } }
          set {
            _hasBits0 |= 8;
            percentage_ = value;
          }
        }
        /// <summary>Gets whether the "percentage" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPercentage {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "percentage" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPercentage() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "all_unlocked" field.</summary>
        public const int AllUnlockedFieldNumber = 5;
        private readonly static bool AllUnlockedDefaultValue = false;

        private bool allUnlocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AllUnlocked {
          get { if ((_hasBits0 & 16) != 0) { return allUnlocked_; } else { return AllUnlockedDefaultValue; } }
          set {
            _hasBits0 |= 16;
            allUnlocked_ = value;
          }
        }
        /// <summary>Gets whether the "all_unlocked" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAllUnlocked {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "all_unlocked" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAllUnlocked() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "cache_time" field.</summary>
        public const int CacheTimeFieldNumber = 6;
        private readonly static uint CacheTimeDefaultValue = 0;

        private uint cacheTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint CacheTime {
          get { if ((_hasBits0 & 32) != 0) { return cacheTime_; } else { return CacheTimeDefaultValue; } }
          set {
            _hasBits0 |= 32;
            cacheTime_ = value;
          }
        }
        /// <summary>Gets whether the "cache_time" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCacheTime {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "cache_time" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCacheTime() {
          _hasBits0 &= ~32;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AchievementProgress);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AchievementProgress other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (Unlocked != other.Unlocked) return false;
          if (Total != other.Total) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Percentage, other.Percentage)) return false;
          if (AllUnlocked != other.AllUnlocked) return false;
          if (CacheTime != other.CacheTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasUnlocked) hash ^= Unlocked.GetHashCode();
          if (HasTotal) hash ^= Total.GetHashCode();
          if (HasPercentage) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Percentage);
          if (HasAllUnlocked) hash ^= AllUnlocked.GetHashCode();
          if (HasCacheTime) hash ^= CacheTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasUnlocked) {
            output.WriteRawTag(16);
            output.WriteUInt32(Unlocked);
          }
          if (HasTotal) {
            output.WriteRawTag(24);
            output.WriteUInt32(Total);
          }
          if (HasPercentage) {
            output.WriteRawTag(37);
            output.WriteFloat(Percentage);
          }
          if (HasAllUnlocked) {
            output.WriteRawTag(40);
            output.WriteBool(AllUnlocked);
          }
          if (HasCacheTime) {
            output.WriteRawTag(48);
            output.WriteUInt32(CacheTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasUnlocked) {
            output.WriteRawTag(16);
            output.WriteUInt32(Unlocked);
          }
          if (HasTotal) {
            output.WriteRawTag(24);
            output.WriteUInt32(Total);
          }
          if (HasPercentage) {
            output.WriteRawTag(37);
            output.WriteFloat(Percentage);
          }
          if (HasAllUnlocked) {
            output.WriteRawTag(40);
            output.WriteBool(AllUnlocked);
          }
          if (HasCacheTime) {
            output.WriteRawTag(48);
            output.WriteUInt32(CacheTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (HasUnlocked) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Unlocked);
          }
          if (HasTotal) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Total);
          }
          if (HasPercentage) {
            size += 1 + 4;
          }
          if (HasAllUnlocked) {
            size += 1 + 1;
          }
          if (HasCacheTime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CacheTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AchievementProgress other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasUnlocked) {
            Unlocked = other.Unlocked;
          }
          if (other.HasTotal) {
            Total = other.Total;
          }
          if (other.HasPercentage) {
            Percentage = other.Percentage;
          }
          if (other.HasAllUnlocked) {
            AllUnlocked = other.AllUnlocked;
          }
          if (other.HasCacheTime) {
            CacheTime = other.CacheTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 16: {
                Unlocked = input.ReadUInt32();
                break;
              }
              case 24: {
                Total = input.ReadUInt32();
                break;
              }
              case 37: {
                Percentage = input.ReadFloat();
                break;
              }
              case 40: {
                AllUnlocked = input.ReadBool();
                break;
              }
              case 48: {
                CacheTime = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 16: {
                Unlocked = input.ReadUInt32();
                break;
              }
              case 24: {
                Total = input.ReadUInt32();
                break;
              }
              case 37: {
                Percentage = input.ReadFloat();
                break;
              }
              case 40: {
                AllUnlocked = input.ReadBool();
                break;
              }
              case 48: {
                CacheTime = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetGameAchievements_Request : pb::IMessage<CPlayer_GetGameAchievements_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetGameAchievements_Request> _parser = new pb::MessageParser<CPlayer_GetGameAchievements_Request>(() => new CPlayer_GetGameAchievements_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetGameAchievements_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameAchievements_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameAchievements_Request(CPlayer_GetGameAchievements_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameAchievements_Request Clone() {
      return new CPlayer_GetGameAchievements_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetGameAchievements_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetGameAchievements_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasLanguage) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetGameAchievements_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetGameAchievements_Response : pb::IMessage<CPlayer_GetGameAchievements_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetGameAchievements_Response> _parser = new pb::MessageParser<CPlayer_GetGameAchievements_Response>(() => new CPlayer_GetGameAchievements_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetGameAchievements_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameAchievements_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameAchievements_Response(CPlayer_GetGameAchievements_Response other) : this() {
      achievements_ = other.achievements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetGameAchievements_Response Clone() {
      return new CPlayer_GetGameAchievements_Response(this);
    }

    /// <summary>Field number for the "achievements" field.</summary>
    public const int AchievementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement> _repeated_achievements_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement> achievements_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Types.Achievement> Achievements {
      get { return achievements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetGameAchievements_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetGameAchievements_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!achievements_.Equals(other.achievements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= achievements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      achievements_.WriteTo(output, _repeated_achievements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      achievements_.WriteTo(ref output, _repeated_achievements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += achievements_.CalculateSize(_repeated_achievements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetGameAchievements_Response other) {
      if (other == null) {
        return;
      }
      achievements_.Add(other.achievements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            achievements_.AddEntriesFrom(input, _repeated_achievements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            achievements_.AddEntriesFrom(ref input, _repeated_achievements_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetGameAchievements_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Achievement : pb::IMessage<Achievement>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Achievement> _parser = new pb::MessageParser<Achievement>(() => new Achievement());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Achievement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetGameAchievements_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Achievement() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Achievement(Achievement other) : this() {
          _hasBits0 = other._hasBits0;
          internalName_ = other.internalName_;
          localizedName_ = other.localizedName_;
          localizedDesc_ = other.localizedDesc_;
          icon_ = other.icon_;
          iconGray_ = other.iconGray_;
          hidden_ = other.hidden_;
          playerPercentUnlocked_ = other.playerPercentUnlocked_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Achievement Clone() {
          return new Achievement(this);
        }

        /// <summary>Field number for the "internal_name" field.</summary>
        public const int InternalNameFieldNumber = 1;
        private readonly static string InternalNameDefaultValue = "";

        private string internalName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InternalName {
          get { return internalName_ ?? InternalNameDefaultValue; }
          set {
            internalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "internal_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInternalName {
          get { return internalName_ != null; }
        }
        /// <summary>Clears the value of the "internal_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInternalName() {
          internalName_ = null;
        }

        /// <summary>Field number for the "localized_name" field.</summary>
        public const int LocalizedNameFieldNumber = 2;
        private readonly static string LocalizedNameDefaultValue = "";

        private string localizedName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocalizedName {
          get { return localizedName_ ?? LocalizedNameDefaultValue; }
          set {
            localizedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "localized_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLocalizedName {
          get { return localizedName_ != null; }
        }
        /// <summary>Clears the value of the "localized_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLocalizedName() {
          localizedName_ = null;
        }

        /// <summary>Field number for the "localized_desc" field.</summary>
        public const int LocalizedDescFieldNumber = 3;
        private readonly static string LocalizedDescDefaultValue = "";

        private string localizedDesc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LocalizedDesc {
          get { return localizedDesc_ ?? LocalizedDescDefaultValue; }
          set {
            localizedDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "localized_desc" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLocalizedDesc {
          get { return localizedDesc_ != null; }
        }
        /// <summary>Clears the value of the "localized_desc" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLocalizedDesc() {
          localizedDesc_ = null;
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 4;
        private readonly static string IconDefaultValue = "";

        private string icon_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Icon {
          get { return icon_ ?? IconDefaultValue; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "icon" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIcon {
          get { return icon_ != null; }
        }
        /// <summary>Clears the value of the "icon" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIcon() {
          icon_ = null;
        }

        /// <summary>Field number for the "icon_gray" field.</summary>
        public const int IconGrayFieldNumber = 5;
        private readonly static string IconGrayDefaultValue = "";

        private string iconGray_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string IconGray {
          get { return iconGray_ ?? IconGrayDefaultValue; }
          set {
            iconGray_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "icon_gray" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIconGray {
          get { return iconGray_ != null; }
        }
        /// <summary>Clears the value of the "icon_gray" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIconGray() {
          iconGray_ = null;
        }

        /// <summary>Field number for the "hidden" field.</summary>
        public const int HiddenFieldNumber = 6;
        private readonly static bool HiddenDefaultValue = false;

        private bool hidden_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Hidden {
          get { if ((_hasBits0 & 1) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
          set {
            _hasBits0 |= 1;
            hidden_ = value;
          }
        }
        /// <summary>Gets whether the "hidden" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHidden {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "hidden" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHidden() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "player_percent_unlocked" field.</summary>
        public const int PlayerPercentUnlockedFieldNumber = 7;
        private readonly static string PlayerPercentUnlockedDefaultValue = "";

        private string playerPercentUnlocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PlayerPercentUnlocked {
          get { return playerPercentUnlocked_ ?? PlayerPercentUnlockedDefaultValue; }
          set {
            playerPercentUnlocked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "player_percent_unlocked" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlayerPercentUnlocked {
          get { return playerPercentUnlocked_ != null; }
        }
        /// <summary>Clears the value of the "player_percent_unlocked" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlayerPercentUnlocked() {
          playerPercentUnlocked_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Achievement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Achievement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InternalName != other.InternalName) return false;
          if (LocalizedName != other.LocalizedName) return false;
          if (LocalizedDesc != other.LocalizedDesc) return false;
          if (Icon != other.Icon) return false;
          if (IconGray != other.IconGray) return false;
          if (Hidden != other.Hidden) return false;
          if (PlayerPercentUnlocked != other.PlayerPercentUnlocked) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasInternalName) hash ^= InternalName.GetHashCode();
          if (HasLocalizedName) hash ^= LocalizedName.GetHashCode();
          if (HasLocalizedDesc) hash ^= LocalizedDesc.GetHashCode();
          if (HasIcon) hash ^= Icon.GetHashCode();
          if (HasIconGray) hash ^= IconGray.GetHashCode();
          if (HasHidden) hash ^= Hidden.GetHashCode();
          if (HasPlayerPercentUnlocked) hash ^= PlayerPercentUnlocked.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasInternalName) {
            output.WriteRawTag(10);
            output.WriteString(InternalName);
          }
          if (HasLocalizedName) {
            output.WriteRawTag(18);
            output.WriteString(LocalizedName);
          }
          if (HasLocalizedDesc) {
            output.WriteRawTag(26);
            output.WriteString(LocalizedDesc);
          }
          if (HasIcon) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (HasIconGray) {
            output.WriteRawTag(42);
            output.WriteString(IconGray);
          }
          if (HasHidden) {
            output.WriteRawTag(48);
            output.WriteBool(Hidden);
          }
          if (HasPlayerPercentUnlocked) {
            output.WriteRawTag(58);
            output.WriteString(PlayerPercentUnlocked);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasInternalName) {
            output.WriteRawTag(10);
            output.WriteString(InternalName);
          }
          if (HasLocalizedName) {
            output.WriteRawTag(18);
            output.WriteString(LocalizedName);
          }
          if (HasLocalizedDesc) {
            output.WriteRawTag(26);
            output.WriteString(LocalizedDesc);
          }
          if (HasIcon) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (HasIconGray) {
            output.WriteRawTag(42);
            output.WriteString(IconGray);
          }
          if (HasHidden) {
            output.WriteRawTag(48);
            output.WriteBool(Hidden);
          }
          if (HasPlayerPercentUnlocked) {
            output.WriteRawTag(58);
            output.WriteString(PlayerPercentUnlocked);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasInternalName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InternalName);
          }
          if (HasLocalizedName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedName);
          }
          if (HasLocalizedDesc) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedDesc);
          }
          if (HasIcon) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (HasIconGray) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IconGray);
          }
          if (HasHidden) {
            size += 1 + 1;
          }
          if (HasPlayerPercentUnlocked) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerPercentUnlocked);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Achievement other) {
          if (other == null) {
            return;
          }
          if (other.HasInternalName) {
            InternalName = other.InternalName;
          }
          if (other.HasLocalizedName) {
            LocalizedName = other.LocalizedName;
          }
          if (other.HasLocalizedDesc) {
            LocalizedDesc = other.LocalizedDesc;
          }
          if (other.HasIcon) {
            Icon = other.Icon;
          }
          if (other.HasIconGray) {
            IconGray = other.IconGray;
          }
          if (other.HasHidden) {
            Hidden = other.Hidden;
          }
          if (other.HasPlayerPercentUnlocked) {
            PlayerPercentUnlocked = other.PlayerPercentUnlocked;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                InternalName = input.ReadString();
                break;
              }
              case 18: {
                LocalizedName = input.ReadString();
                break;
              }
              case 26: {
                LocalizedDesc = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
              case 42: {
                IconGray = input.ReadString();
                break;
              }
              case 48: {
                Hidden = input.ReadBool();
                break;
              }
              case 58: {
                PlayerPercentUnlocked = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                InternalName = input.ReadString();
                break;
              }
              case 18: {
                LocalizedName = input.ReadString();
                break;
              }
              case 26: {
                LocalizedDesc = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
              case 42: {
                IconGray = input.ReadString();
                break;
              }
              case 48: {
                Hidden = input.ReadBool();
                break;
              }
              case 58: {
                PlayerPercentUnlocked = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetFavoriteBadge_Request : pb::IMessage<CPlayer_GetFavoriteBadge_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetFavoriteBadge_Request> _parser = new pb::MessageParser<CPlayer_GetFavoriteBadge_Request>(() => new CPlayer_GetFavoriteBadge_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetFavoriteBadge_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFavoriteBadge_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFavoriteBadge_Request(CPlayer_GetFavoriteBadge_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFavoriteBadge_Request Clone() {
      return new CPlayer_GetFavoriteBadge_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetFavoriteBadge_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetFavoriteBadge_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetFavoriteBadge_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetFavoriteBadge_Response : pb::IMessage<CPlayer_GetFavoriteBadge_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetFavoriteBadge_Response> _parser = new pb::MessageParser<CPlayer_GetFavoriteBadge_Response>(() => new CPlayer_GetFavoriteBadge_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetFavoriteBadge_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFavoriteBadge_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFavoriteBadge_Response(CPlayer_GetFavoriteBadge_Response other) : this() {
      _hasBits0 = other._hasBits0;
      hasFavoriteBadge_ = other.hasFavoriteBadge_;
      badgeid_ = other.badgeid_;
      communityitemid_ = other.communityitemid_;
      itemType_ = other.itemType_;
      borderColor_ = other.borderColor_;
      appid_ = other.appid_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetFavoriteBadge_Response Clone() {
      return new CPlayer_GetFavoriteBadge_Response(this);
    }

    /// <summary>Field number for the "has_favorite_badge" field.</summary>
    public const int HasFavoriteBadgeFieldNumber = 1;
    private readonly static bool HasFavoriteBadgeDefaultValue = false;

    private bool hasFavoriteBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFavoriteBadge {
      get { if ((_hasBits0 & 1) != 0) { return hasFavoriteBadge_; } else { return HasFavoriteBadgeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hasFavoriteBadge_ = value;
      }
    }
    /// <summary>Gets whether the "has_favorite_badge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasFavoriteBadge {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "has_favorite_badge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasFavoriteBadge() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "badgeid" field.</summary>
    public const int BadgeidFieldNumber = 2;
    private readonly static uint BadgeidDefaultValue = 0;

    private uint badgeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Badgeid {
      get { if ((_hasBits0 & 2) != 0) { return badgeid_; } else { return BadgeidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        badgeid_ = value;
      }
    }
    /// <summary>Gets whether the "badgeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBadgeid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "badgeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBadgeid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 3;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 4) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "item_type" field.</summary>
    public const int ItemTypeFieldNumber = 4;
    private readonly static uint ItemTypeDefaultValue = 0;

    private uint itemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemType {
      get { if ((_hasBits0 & 8) != 0) { return itemType_; } else { return ItemTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        itemType_ = value;
      }
    }
    /// <summary>Gets whether the "item_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "item_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "border_color" field.</summary>
    public const int BorderColorFieldNumber = 5;
    private readonly static uint BorderColorDefaultValue = 0;

    private uint borderColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BorderColor {
      get { if ((_hasBits0 & 16) != 0) { return borderColor_; } else { return BorderColorDefaultValue; } }
      set {
        _hasBits0 |= 16;
        borderColor_ = value;
      }
    }
    /// <summary>Gets whether the "border_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderColor {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "border_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderColor() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 6;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 32) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private readonly static uint LevelDefaultValue = 0;

    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { if ((_hasBits0 & 64) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 64;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetFavoriteBadge_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetFavoriteBadge_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HasFavoriteBadge != other.HasFavoriteBadge) return false;
      if (Badgeid != other.Badgeid) return false;
      if (Communityitemid != other.Communityitemid) return false;
      if (ItemType != other.ItemType) return false;
      if (BorderColor != other.BorderColor) return false;
      if (Appid != other.Appid) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHasFavoriteBadge) hash ^= HasFavoriteBadge.GetHashCode();
      if (HasBadgeid) hash ^= Badgeid.GetHashCode();
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (HasItemType) hash ^= ItemType.GetHashCode();
      if (HasBorderColor) hash ^= BorderColor.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHasFavoriteBadge) {
        output.WriteRawTag(8);
        output.WriteBool(HasFavoriteBadge);
      }
      if (HasBadgeid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Badgeid);
      }
      if (HasCommunityitemid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Communityitemid);
      }
      if (HasItemType) {
        output.WriteRawTag(32);
        output.WriteUInt32(ItemType);
      }
      if (HasBorderColor) {
        output.WriteRawTag(40);
        output.WriteUInt32(BorderColor);
      }
      if (HasAppid) {
        output.WriteRawTag(48);
        output.WriteUInt32(Appid);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHasFavoriteBadge) {
        output.WriteRawTag(8);
        output.WriteBool(HasFavoriteBadge);
      }
      if (HasBadgeid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Badgeid);
      }
      if (HasCommunityitemid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Communityitemid);
      }
      if (HasItemType) {
        output.WriteRawTag(32);
        output.WriteUInt32(ItemType);
      }
      if (HasBorderColor) {
        output.WriteRawTag(40);
        output.WriteUInt32(BorderColor);
      }
      if (HasAppid) {
        output.WriteRawTag(48);
        output.WriteUInt32(Appid);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHasFavoriteBadge) {
        size += 1 + 1;
      }
      if (HasBadgeid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Badgeid);
      }
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (HasItemType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemType);
      }
      if (HasBorderColor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BorderColor);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetFavoriteBadge_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasHasFavoriteBadge) {
        HasFavoriteBadge = other.HasFavoriteBadge;
      }
      if (other.HasBadgeid) {
        Badgeid = other.Badgeid;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      if (other.HasItemType) {
        ItemType = other.ItemType;
      }
      if (other.HasBorderColor) {
        BorderColor = other.BorderColor;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HasFavoriteBadge = input.ReadBool();
            break;
          }
          case 16: {
            Badgeid = input.ReadUInt32();
            break;
          }
          case 24: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 32: {
            ItemType = input.ReadUInt32();
            break;
          }
          case 40: {
            BorderColor = input.ReadUInt32();
            break;
          }
          case 48: {
            Appid = input.ReadUInt32();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HasFavoriteBadge = input.ReadBool();
            break;
          }
          case 16: {
            Badgeid = input.ReadUInt32();
            break;
          }
          case 24: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 32: {
            ItemType = input.ReadUInt32();
            break;
          }
          case 40: {
            BorderColor = input.ReadUInt32();
            break;
          }
          case 48: {
            Appid = input.ReadUInt32();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetFavoriteBadge_Request : pb::IMessage<CPlayer_SetFavoriteBadge_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetFavoriteBadge_Request> _parser = new pb::MessageParser<CPlayer_SetFavoriteBadge_Request>(() => new CPlayer_SetFavoriteBadge_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetFavoriteBadge_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetFavoriteBadge_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetFavoriteBadge_Request(CPlayer_SetFavoriteBadge_Request other) : this() {
      _hasBits0 = other._hasBits0;
      communityitemid_ = other.communityitemid_;
      badgeid_ = other.badgeid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetFavoriteBadge_Request Clone() {
      return new CPlayer_SetFavoriteBadge_Request(this);
    }

    /// <summary>Field number for the "communityitemid" field.</summary>
    public const int CommunityitemidFieldNumber = 1;
    private readonly static ulong CommunityitemidDefaultValue = 0UL;

    private ulong communityitemid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Communityitemid {
      get { if ((_hasBits0 & 1) != 0) { return communityitemid_; } else { return CommunityitemidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityitemid_ = value;
      }
    }
    /// <summary>Gets whether the "communityitemid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityitemid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "communityitemid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityitemid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "badgeid" field.</summary>
    public const int BadgeidFieldNumber = 2;
    private readonly static uint BadgeidDefaultValue = 0;

    private uint badgeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Badgeid {
      get { if ((_hasBits0 & 2) != 0) { return badgeid_; } else { return BadgeidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        badgeid_ = value;
      }
    }
    /// <summary>Gets whether the "badgeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBadgeid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "badgeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBadgeid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetFavoriteBadge_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetFavoriteBadge_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Communityitemid != other.Communityitemid) return false;
      if (Badgeid != other.Badgeid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommunityitemid) hash ^= Communityitemid.GetHashCode();
      if (HasBadgeid) hash ^= Badgeid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (HasBadgeid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Badgeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommunityitemid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Communityitemid);
      }
      if (HasBadgeid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Badgeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCommunityitemid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Communityitemid);
      }
      if (HasBadgeid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Badgeid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetFavoriteBadge_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasCommunityitemid) {
        Communityitemid = other.Communityitemid;
      }
      if (other.HasBadgeid) {
        Badgeid = other.Badgeid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 16: {
            Badgeid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Communityitemid = input.ReadUInt64();
            break;
          }
          case 16: {
            Badgeid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetFavoriteBadge_Response : pb::IMessage<CPlayer_SetFavoriteBadge_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetFavoriteBadge_Response> _parser = new pb::MessageParser<CPlayer_SetFavoriteBadge_Response>(() => new CPlayer_SetFavoriteBadge_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetFavoriteBadge_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetFavoriteBadge_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetFavoriteBadge_Response(CPlayer_SetFavoriteBadge_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetFavoriteBadge_Response Clone() {
      return new CPlayer_SetFavoriteBadge_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetFavoriteBadge_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetFavoriteBadge_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetFavoriteBadge_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileCustomization_Request : pb::IMessage<CPlayer_GetProfileCustomization_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileCustomization_Request> _parser = new pb::MessageParser<CPlayer_GetProfileCustomization_Request>(() => new CPlayer_GetProfileCustomization_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileCustomization_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileCustomization_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileCustomization_Request(CPlayer_GetProfileCustomization_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      includeInactiveCustomizations_ = other.includeInactiveCustomizations_;
      includePurchasedCustomizations_ = other.includePurchasedCustomizations_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileCustomization_Request Clone() {
      return new CPlayer_GetProfileCustomization_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "include_inactive_customizations" field.</summary>
    public const int IncludeInactiveCustomizationsFieldNumber = 2;
    private readonly static bool IncludeInactiveCustomizationsDefaultValue = false;

    private bool includeInactiveCustomizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeInactiveCustomizations {
      get { if ((_hasBits0 & 2) != 0) { return includeInactiveCustomizations_; } else { return IncludeInactiveCustomizationsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        includeInactiveCustomizations_ = value;
      }
    }
    /// <summary>Gets whether the "include_inactive_customizations" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeInactiveCustomizations {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "include_inactive_customizations" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeInactiveCustomizations() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "include_purchased_customizations" field.</summary>
    public const int IncludePurchasedCustomizationsFieldNumber = 3;
    private readonly static bool IncludePurchasedCustomizationsDefaultValue = false;

    private bool includePurchasedCustomizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludePurchasedCustomizations {
      get { if ((_hasBits0 & 4) != 0) { return includePurchasedCustomizations_; } else { return IncludePurchasedCustomizationsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        includePurchasedCustomizations_ = value;
      }
    }
    /// <summary>Gets whether the "include_purchased_customizations" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludePurchasedCustomizations {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "include_purchased_customizations" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludePurchasedCustomizations() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileCustomization_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileCustomization_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (IncludeInactiveCustomizations != other.IncludeInactiveCustomizations) return false;
      if (IncludePurchasedCustomizations != other.IncludePurchasedCustomizations) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasIncludeInactiveCustomizations) hash ^= IncludeInactiveCustomizations.GetHashCode();
      if (HasIncludePurchasedCustomizations) hash ^= IncludePurchasedCustomizations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasIncludeInactiveCustomizations) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeInactiveCustomizations);
      }
      if (HasIncludePurchasedCustomizations) {
        output.WriteRawTag(24);
        output.WriteBool(IncludePurchasedCustomizations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasIncludeInactiveCustomizations) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeInactiveCustomizations);
      }
      if (HasIncludePurchasedCustomizations) {
        output.WriteRawTag(24);
        output.WriteBool(IncludePurchasedCustomizations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasIncludeInactiveCustomizations) {
        size += 1 + 1;
      }
      if (HasIncludePurchasedCustomizations) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileCustomization_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasIncludeInactiveCustomizations) {
        IncludeInactiveCustomizations = other.IncludeInactiveCustomizations;
      }
      if (other.HasIncludePurchasedCustomizations) {
        IncludePurchasedCustomizations = other.IncludePurchasedCustomizations;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            IncludeInactiveCustomizations = input.ReadBool();
            break;
          }
          case 24: {
            IncludePurchasedCustomizations = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            IncludeInactiveCustomizations = input.ReadBool();
            break;
          }
          case 24: {
            IncludePurchasedCustomizations = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProfileCustomizationSlot : pb::IMessage<ProfileCustomizationSlot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProfileCustomizationSlot> _parser = new pb::MessageParser<ProfileCustomizationSlot>(() => new ProfileCustomizationSlot());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProfileCustomizationSlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileCustomizationSlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileCustomizationSlot(ProfileCustomizationSlot other) : this() {
      _hasBits0 = other._hasBits0;
      slot_ = other.slot_;
      appid_ = other.appid_;
      publishedfileid_ = other.publishedfileid_;
      itemAssetid_ = other.itemAssetid_;
      itemContextid_ = other.itemContextid_;
      notes_ = other.notes_;
      title_ = other.title_;
      accountid_ = other.accountid_;
      badgeid_ = other.badgeid_;
      borderColor_ = other.borderColor_;
      itemClassid_ = other.itemClassid_;
      itemInstanceid_ = other.itemInstanceid_;
      banChecresult_ = other.banChecresult_;
      replayYear_ = other.replayYear_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileCustomizationSlot Clone() {
      return new ProfileCustomizationSlot(this);
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 1;
    private readonly static uint SlotDefaultValue = 0;

    private uint slot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Slot {
      get { if ((_hasBits0 & 1) != 0) { return slot_; } else { return SlotDefaultValue; } }
      set {
        _hasBits0 |= 1;
        slot_ = value;
      }
    }
    /// <summary>Gets whether the "slot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlot {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "slot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlot() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "publishedfileid" field.</summary>
    public const int PublishedfileidFieldNumber = 3;
    private readonly static ulong PublishedfileidDefaultValue = 0UL;

    private ulong publishedfileid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Publishedfileid {
      get { if ((_hasBits0 & 4) != 0) { return publishedfileid_; } else { return PublishedfileidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        publishedfileid_ = value;
      }
    }
    /// <summary>Gets whether the "publishedfileid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPublishedfileid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "publishedfileid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPublishedfileid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "item_assetid" field.</summary>
    public const int ItemAssetidFieldNumber = 4;
    private readonly static ulong ItemAssetidDefaultValue = 0UL;

    private ulong itemAssetid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ItemAssetid {
      get { if ((_hasBits0 & 8) != 0) { return itemAssetid_; } else { return ItemAssetidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        itemAssetid_ = value;
      }
    }
    /// <summary>Gets whether the "item_assetid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemAssetid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "item_assetid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemAssetid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "item_contextid" field.</summary>
    public const int ItemContextidFieldNumber = 5;
    private readonly static ulong ItemContextidDefaultValue = 0UL;

    private ulong itemContextid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ItemContextid {
      get { if ((_hasBits0 & 16) != 0) { return itemContextid_; } else { return ItemContextidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        itemContextid_ = value;
      }
    }
    /// <summary>Gets whether the "item_contextid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemContextid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "item_contextid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemContextid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 6;
    private readonly static string NotesDefaultValue = "";

    private string notes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Notes {
      get { return notes_ ?? NotesDefaultValue; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotes {
      get { return notes_ != null; }
    }
    /// <summary>Clears the value of the "notes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotes() {
      notes_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 8;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Accountid {
      get { if ((_hasBits0 & 32) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "badgeid" field.</summary>
    public const int BadgeidFieldNumber = 9;
    private readonly static uint BadgeidDefaultValue = 0;

    private uint badgeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Badgeid {
      get { if ((_hasBits0 & 64) != 0) { return badgeid_; } else { return BadgeidDefaultValue; } }
      set {
        _hasBits0 |= 64;
        badgeid_ = value;
      }
    }
    /// <summary>Gets whether the "badgeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBadgeid {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "badgeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBadgeid() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "border_color" field.</summary>
    public const int BorderColorFieldNumber = 10;
    private readonly static uint BorderColorDefaultValue = 0;

    private uint borderColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BorderColor {
      get { if ((_hasBits0 & 128) != 0) { return borderColor_; } else { return BorderColorDefaultValue; } }
      set {
        _hasBits0 |= 128;
        borderColor_ = value;
      }
    }
    /// <summary>Gets whether the "border_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderColor {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "border_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderColor() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "item_classid" field.</summary>
    public const int ItemClassidFieldNumber = 11;
    private readonly static ulong ItemClassidDefaultValue = 0UL;

    private ulong itemClassid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ItemClassid {
      get { if ((_hasBits0 & 256) != 0) { return itemClassid_; } else { return ItemClassidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        itemClassid_ = value;
      }
    }
    /// <summary>Gets whether the "item_classid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemClassid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "item_classid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemClassid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "item_instanceid" field.</summary>
    public const int ItemInstanceidFieldNumber = 12;
    private readonly static ulong ItemInstanceidDefaultValue = 0UL;

    private ulong itemInstanceid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ItemInstanceid {
      get { if ((_hasBits0 & 512) != 0) { return itemInstanceid_; } else { return ItemInstanceidDefaultValue; } }
      set {
        _hasBits0 |= 512;
        itemInstanceid_ = value;
      }
    }
    /// <summary>Gets whether the "item_instanceid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemInstanceid {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "item_instanceid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemInstanceid() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "ban_checresult" field.</summary>
    public const int BanChecresultFieldNumber = 13;
    private readonly static global::OpenSteamworks.Protobuf.EBanContentCheckResult BanChecresultDefaultValue = global::OpenSteamworks.Protobuf.EBanContentCheckResult.NotScanned;

    private global::OpenSteamworks.Protobuf.EBanContentCheckResult banChecresult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EBanContentCheckResult BanChecresult {
      get { if ((_hasBits0 & 1024) != 0) { return banChecresult_; } else { return BanChecresultDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        banChecresult_ = value;
      }
    }
    /// <summary>Gets whether the "ban_checresult" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBanChecresult {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "ban_checresult" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBanChecresult() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "replay_year" field.</summary>
    public const int ReplayYearFieldNumber = 14;
    private readonly static uint ReplayYearDefaultValue = 0;

    private uint replayYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReplayYear {
      get { if ((_hasBits0 & 2048) != 0) { return replayYear_; } else { return ReplayYearDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        replayYear_ = value;
      }
    }
    /// <summary>Gets whether the "replay_year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReplayYear {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "replay_year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReplayYear() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProfileCustomizationSlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProfileCustomizationSlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slot != other.Slot) return false;
      if (Appid != other.Appid) return false;
      if (Publishedfileid != other.Publishedfileid) return false;
      if (ItemAssetid != other.ItemAssetid) return false;
      if (ItemContextid != other.ItemContextid) return false;
      if (Notes != other.Notes) return false;
      if (Title != other.Title) return false;
      if (Accountid != other.Accountid) return false;
      if (Badgeid != other.Badgeid) return false;
      if (BorderColor != other.BorderColor) return false;
      if (ItemClassid != other.ItemClassid) return false;
      if (ItemInstanceid != other.ItemInstanceid) return false;
      if (BanChecresult != other.BanChecresult) return false;
      if (ReplayYear != other.ReplayYear) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSlot) hash ^= Slot.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasPublishedfileid) hash ^= Publishedfileid.GetHashCode();
      if (HasItemAssetid) hash ^= ItemAssetid.GetHashCode();
      if (HasItemContextid) hash ^= ItemContextid.GetHashCode();
      if (HasNotes) hash ^= Notes.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (HasBadgeid) hash ^= Badgeid.GetHashCode();
      if (HasBorderColor) hash ^= BorderColor.GetHashCode();
      if (HasItemClassid) hash ^= ItemClassid.GetHashCode();
      if (HasItemInstanceid) hash ^= ItemInstanceid.GetHashCode();
      if (HasBanChecresult) hash ^= BanChecresult.GetHashCode();
      if (HasReplayYear) hash ^= ReplayYear.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSlot) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slot);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasPublishedfileid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Publishedfileid);
      }
      if (HasItemAssetid) {
        output.WriteRawTag(32);
        output.WriteUInt64(ItemAssetid);
      }
      if (HasItemContextid) {
        output.WriteRawTag(40);
        output.WriteUInt64(ItemContextid);
      }
      if (HasNotes) {
        output.WriteRawTag(50);
        output.WriteString(Notes);
      }
      if (HasTitle) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (HasAccountid) {
        output.WriteRawTag(64);
        output.WriteUInt32(Accountid);
      }
      if (HasBadgeid) {
        output.WriteRawTag(72);
        output.WriteUInt32(Badgeid);
      }
      if (HasBorderColor) {
        output.WriteRawTag(80);
        output.WriteUInt32(BorderColor);
      }
      if (HasItemClassid) {
        output.WriteRawTag(88);
        output.WriteUInt64(ItemClassid);
      }
      if (HasItemInstanceid) {
        output.WriteRawTag(96);
        output.WriteUInt64(ItemInstanceid);
      }
      if (HasBanChecresult) {
        output.WriteRawTag(104);
        output.WriteEnum((int) BanChecresult);
      }
      if (HasReplayYear) {
        output.WriteRawTag(112);
        output.WriteUInt32(ReplayYear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSlot) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slot);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasPublishedfileid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Publishedfileid);
      }
      if (HasItemAssetid) {
        output.WriteRawTag(32);
        output.WriteUInt64(ItemAssetid);
      }
      if (HasItemContextid) {
        output.WriteRawTag(40);
        output.WriteUInt64(ItemContextid);
      }
      if (HasNotes) {
        output.WriteRawTag(50);
        output.WriteString(Notes);
      }
      if (HasTitle) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (HasAccountid) {
        output.WriteRawTag(64);
        output.WriteUInt32(Accountid);
      }
      if (HasBadgeid) {
        output.WriteRawTag(72);
        output.WriteUInt32(Badgeid);
      }
      if (HasBorderColor) {
        output.WriteRawTag(80);
        output.WriteUInt32(BorderColor);
      }
      if (HasItemClassid) {
        output.WriteRawTag(88);
        output.WriteUInt64(ItemClassid);
      }
      if (HasItemInstanceid) {
        output.WriteRawTag(96);
        output.WriteUInt64(ItemInstanceid);
      }
      if (HasBanChecresult) {
        output.WriteRawTag(104);
        output.WriteEnum((int) BanChecresult);
      }
      if (HasReplayYear) {
        output.WriteRawTag(112);
        output.WriteUInt32(ReplayYear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSlot) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slot);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasPublishedfileid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Publishedfileid);
      }
      if (HasItemAssetid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemAssetid);
      }
      if (HasItemContextid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemContextid);
      }
      if (HasNotes) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasAccountid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
      }
      if (HasBadgeid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Badgeid);
      }
      if (HasBorderColor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BorderColor);
      }
      if (HasItemClassid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemClassid);
      }
      if (HasItemInstanceid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemInstanceid);
      }
      if (HasBanChecresult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BanChecresult);
      }
      if (HasReplayYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReplayYear);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProfileCustomizationSlot other) {
      if (other == null) {
        return;
      }
      if (other.HasSlot) {
        Slot = other.Slot;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasPublishedfileid) {
        Publishedfileid = other.Publishedfileid;
      }
      if (other.HasItemAssetid) {
        ItemAssetid = other.ItemAssetid;
      }
      if (other.HasItemContextid) {
        ItemContextid = other.ItemContextid;
      }
      if (other.HasNotes) {
        Notes = other.Notes;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.HasBadgeid) {
        Badgeid = other.Badgeid;
      }
      if (other.HasBorderColor) {
        BorderColor = other.BorderColor;
      }
      if (other.HasItemClassid) {
        ItemClassid = other.ItemClassid;
      }
      if (other.HasItemInstanceid) {
        ItemInstanceid = other.ItemInstanceid;
      }
      if (other.HasBanChecresult) {
        BanChecresult = other.BanChecresult;
      }
      if (other.HasReplayYear) {
        ReplayYear = other.ReplayYear;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Slot = input.ReadUInt32();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 24: {
            Publishedfileid = input.ReadUInt64();
            break;
          }
          case 32: {
            ItemAssetid = input.ReadUInt64();
            break;
          }
          case 40: {
            ItemContextid = input.ReadUInt64();
            break;
          }
          case 50: {
            Notes = input.ReadString();
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 64: {
            Accountid = input.ReadUInt32();
            break;
          }
          case 72: {
            Badgeid = input.ReadUInt32();
            break;
          }
          case 80: {
            BorderColor = input.ReadUInt32();
            break;
          }
          case 88: {
            ItemClassid = input.ReadUInt64();
            break;
          }
          case 96: {
            ItemInstanceid = input.ReadUInt64();
            break;
          }
          case 104: {
            BanChecresult = (global::OpenSteamworks.Protobuf.EBanContentCheckResult) input.ReadEnum();
            break;
          }
          case 112: {
            ReplayYear = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Slot = input.ReadUInt32();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 24: {
            Publishedfileid = input.ReadUInt64();
            break;
          }
          case 32: {
            ItemAssetid = input.ReadUInt64();
            break;
          }
          case 40: {
            ItemContextid = input.ReadUInt64();
            break;
          }
          case 50: {
            Notes = input.ReadString();
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 64: {
            Accountid = input.ReadUInt32();
            break;
          }
          case 72: {
            Badgeid = input.ReadUInt32();
            break;
          }
          case 80: {
            BorderColor = input.ReadUInt32();
            break;
          }
          case 88: {
            ItemClassid = input.ReadUInt64();
            break;
          }
          case 96: {
            ItemInstanceid = input.ReadUInt64();
            break;
          }
          case 104: {
            BanChecresult = (global::OpenSteamworks.Protobuf.EBanContentCheckResult) input.ReadEnum();
            break;
          }
          case 112: {
            ReplayYear = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProfileCustomization : pb::IMessage<ProfileCustomization>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProfileCustomization> _parser = new pb::MessageParser<ProfileCustomization>(() => new ProfileCustomization());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProfileCustomization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileCustomization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileCustomization(ProfileCustomization other) : this() {
      _hasBits0 = other._hasBits0;
      customizationType_ = other.customizationType_;
      large_ = other.large_;
      slots_ = other.slots_.Clone();
      active_ = other.active_;
      customizationStyle_ = other.customizationStyle_;
      purchaseid_ = other.purchaseid_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileCustomization Clone() {
      return new ProfileCustomization(this);
    }

    /// <summary>Field number for the "customization_type" field.</summary>
    public const int CustomizationTypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationTypeDefaultValue = global::OpenSteamworks.Protobuf.EProfileCustomizationType.Invalid;

    private global::OpenSteamworks.Protobuf.EProfileCustomizationType customizationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationType {
      get { if ((_hasBits0 & 1) != 0) { return customizationType_; } else { return CustomizationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        customizationType_ = value;
      }
    }
    /// <summary>Gets whether the "customization_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCustomizationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "customization_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCustomizationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "large" field.</summary>
    public const int LargeFieldNumber = 2;
    private readonly static bool LargeDefaultValue = false;

    private bool large_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Large {
      get { if ((_hasBits0 & 2) != 0) { return large_; } else { return LargeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        large_ = value;
      }
    }
    /// <summary>Gets whether the "large" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLarge {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "large" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLarge() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "slots" field.</summary>
    public const int SlotsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileCustomizationSlot> _repeated_slots_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.ProfileCustomizationSlot.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileCustomizationSlot> slots_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileCustomizationSlot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileCustomizationSlot> Slots {
      get { return slots_; }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 4;
    private readonly static bool ActiveDefaultValue = false;

    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Active {
      get { if ((_hasBits0 & 4) != 0) { return active_; } else { return ActiveDefaultValue; } }
      set {
        _hasBits0 |= 4;
        active_ = value;
      }
    }
    /// <summary>Gets whether the "active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActive {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActive() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "customization_style" field.</summary>
    public const int CustomizationStyleFieldNumber = 5;
    private readonly static global::OpenSteamworks.Protobuf.EProfileCustomizationStyle CustomizationStyleDefaultValue = global::OpenSteamworks.Protobuf.EProfileCustomizationStyle.Default;

    private global::OpenSteamworks.Protobuf.EProfileCustomizationStyle customizationStyle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EProfileCustomizationStyle CustomizationStyle {
      get { if ((_hasBits0 & 8) != 0) { return customizationStyle_; } else { return CustomizationStyleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        customizationStyle_ = value;
      }
    }
    /// <summary>Gets whether the "customization_style" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCustomizationStyle {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "customization_style" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCustomizationStyle() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "purchaseid" field.</summary>
    public const int PurchaseidFieldNumber = 6;
    private readonly static ulong PurchaseidDefaultValue = 0UL;

    private ulong purchaseid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Purchaseid {
      get { if ((_hasBits0 & 16) != 0) { return purchaseid_; } else { return PurchaseidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        purchaseid_ = value;
      }
    }
    /// <summary>Gets whether the "purchaseid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPurchaseid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "purchaseid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPurchaseid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private readonly static uint LevelDefaultValue = 0;

    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { if ((_hasBits0 & 32) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 32;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProfileCustomization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProfileCustomization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomizationType != other.CustomizationType) return false;
      if (Large != other.Large) return false;
      if(!slots_.Equals(other.slots_)) return false;
      if (Active != other.Active) return false;
      if (CustomizationStyle != other.CustomizationStyle) return false;
      if (Purchaseid != other.Purchaseid) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCustomizationType) hash ^= CustomizationType.GetHashCode();
      if (HasLarge) hash ^= Large.GetHashCode();
      hash ^= slots_.GetHashCode();
      if (HasActive) hash ^= Active.GetHashCode();
      if (HasCustomizationStyle) hash ^= CustomizationStyle.GetHashCode();
      if (HasPurchaseid) hash ^= Purchaseid.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCustomizationType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CustomizationType);
      }
      if (HasLarge) {
        output.WriteRawTag(16);
        output.WriteBool(Large);
      }
      slots_.WriteTo(output, _repeated_slots_codec);
      if (HasActive) {
        output.WriteRawTag(32);
        output.WriteBool(Active);
      }
      if (HasCustomizationStyle) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CustomizationStyle);
      }
      if (HasPurchaseid) {
        output.WriteRawTag(48);
        output.WriteUInt64(Purchaseid);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCustomizationType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CustomizationType);
      }
      if (HasLarge) {
        output.WriteRawTag(16);
        output.WriteBool(Large);
      }
      slots_.WriteTo(ref output, _repeated_slots_codec);
      if (HasActive) {
        output.WriteRawTag(32);
        output.WriteBool(Active);
      }
      if (HasCustomizationStyle) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CustomizationStyle);
      }
      if (HasPurchaseid) {
        output.WriteRawTag(48);
        output.WriteUInt64(Purchaseid);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCustomizationType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomizationType);
      }
      if (HasLarge) {
        size += 1 + 1;
      }
      size += slots_.CalculateSize(_repeated_slots_codec);
      if (HasActive) {
        size += 1 + 1;
      }
      if (HasCustomizationStyle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomizationStyle);
      }
      if (HasPurchaseid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Purchaseid);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProfileCustomization other) {
      if (other == null) {
        return;
      }
      if (other.HasCustomizationType) {
        CustomizationType = other.CustomizationType;
      }
      if (other.HasLarge) {
        Large = other.Large;
      }
      slots_.Add(other.slots_);
      if (other.HasActive) {
        Active = other.Active;
      }
      if (other.HasCustomizationStyle) {
        CustomizationStyle = other.CustomizationStyle;
      }
      if (other.HasPurchaseid) {
        Purchaseid = other.Purchaseid;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
            break;
          }
          case 16: {
            Large = input.ReadBool();
            break;
          }
          case 26: {
            slots_.AddEntriesFrom(input, _repeated_slots_codec);
            break;
          }
          case 32: {
            Active = input.ReadBool();
            break;
          }
          case 40: {
            CustomizationStyle = (global::OpenSteamworks.Protobuf.EProfileCustomizationStyle) input.ReadEnum();
            break;
          }
          case 48: {
            Purchaseid = input.ReadUInt64();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
            break;
          }
          case 16: {
            Large = input.ReadBool();
            break;
          }
          case 26: {
            slots_.AddEntriesFrom(ref input, _repeated_slots_codec);
            break;
          }
          case 32: {
            Active = input.ReadBool();
            break;
          }
          case 40: {
            CustomizationStyle = (global::OpenSteamworks.Protobuf.EProfileCustomizationStyle) input.ReadEnum();
            break;
          }
          case 48: {
            Purchaseid = input.ReadUInt64();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProfileTheme : pb::IMessage<ProfileTheme>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProfileTheme> _parser = new pb::MessageParser<ProfileTheme>(() => new ProfileTheme());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProfileTheme> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileTheme() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileTheme(ProfileTheme other) : this() {
      themeId_ = other.themeId_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfileTheme Clone() {
      return new ProfileTheme(this);
    }

    /// <summary>Field number for the "theme_id" field.</summary>
    public const int ThemeIdFieldNumber = 1;
    private readonly static string ThemeIdDefaultValue = "";

    private string themeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThemeId {
      get { return themeId_ ?? ThemeIdDefaultValue; }
      set {
        themeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "theme_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThemeId {
      get { return themeId_ != null; }
    }
    /// <summary>Clears the value of the "theme_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThemeId() {
      themeId_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProfileTheme);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProfileTheme other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThemeId != other.ThemeId) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasThemeId) hash ^= ThemeId.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasThemeId) {
        output.WriteRawTag(10);
        output.WriteString(ThemeId);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasThemeId) {
        output.WriteRawTag(10);
        output.WriteString(ThemeId);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasThemeId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThemeId);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProfileTheme other) {
      if (other == null) {
        return;
      }
      if (other.HasThemeId) {
        ThemeId = other.ThemeId;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ThemeId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ThemeId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProfilePreferences : pb::IMessage<ProfilePreferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProfilePreferences> _parser = new pb::MessageParser<ProfilePreferences>(() => new ProfilePreferences());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProfilePreferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfilePreferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfilePreferences(ProfilePreferences other) : this() {
      _hasBits0 = other._hasBits0;
      hideProfileAwards_ = other.hideProfileAwards_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProfilePreferences Clone() {
      return new ProfilePreferences(this);
    }

    /// <summary>Field number for the "hide_profile_awards" field.</summary>
    public const int HideProfileAwardsFieldNumber = 1;
    private readonly static bool HideProfileAwardsDefaultValue = false;

    private bool hideProfileAwards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HideProfileAwards {
      get { if ((_hasBits0 & 1) != 0) { return hideProfileAwards_; } else { return HideProfileAwardsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hideProfileAwards_ = value;
      }
    }
    /// <summary>Gets whether the "hide_profile_awards" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHideProfileAwards {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "hide_profile_awards" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHideProfileAwards() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProfilePreferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProfilePreferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HideProfileAwards != other.HideProfileAwards) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHideProfileAwards) hash ^= HideProfileAwards.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHideProfileAwards) {
        output.WriteRawTag(8);
        output.WriteBool(HideProfileAwards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHideProfileAwards) {
        output.WriteRawTag(8);
        output.WriteBool(HideProfileAwards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHideProfileAwards) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProfilePreferences other) {
      if (other == null) {
        return;
      }
      if (other.HasHideProfileAwards) {
        HideProfileAwards = other.HideProfileAwards;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HideProfileAwards = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HideProfileAwards = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileCustomization_Response : pb::IMessage<CPlayer_GetProfileCustomization_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileCustomization_Response> _parser = new pb::MessageParser<CPlayer_GetProfileCustomization_Response>(() => new CPlayer_GetProfileCustomization_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileCustomization_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileCustomization_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileCustomization_Response(CPlayer_GetProfileCustomization_Response other) : this() {
      _hasBits0 = other._hasBits0;
      customizations_ = other.customizations_.Clone();
      slotsAvailable_ = other.slotsAvailable_;
      profileTheme_ = other.profileTheme_ != null ? other.profileTheme_.Clone() : null;
      purchasedCustomizations_ = other.purchasedCustomizations_.Clone();
      profilePreferences_ = other.profilePreferences_ != null ? other.profilePreferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileCustomization_Response Clone() {
      return new CPlayer_GetProfileCustomization_Response(this);
    }

    /// <summary>Field number for the "customizations" field.</summary>
    public const int CustomizationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileCustomization> _repeated_customizations_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.ProfileCustomization.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileCustomization> customizations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileCustomization>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileCustomization> Customizations {
      get { return customizations_; }
    }

    /// <summary>Field number for the "slots_available" field.</summary>
    public const int SlotsAvailableFieldNumber = 2;
    private readonly static uint SlotsAvailableDefaultValue = 0;

    private uint slotsAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SlotsAvailable {
      get { if ((_hasBits0 & 1) != 0) { return slotsAvailable_; } else { return SlotsAvailableDefaultValue; } }
      set {
        _hasBits0 |= 1;
        slotsAvailable_ = value;
      }
    }
    /// <summary>Gets whether the "slots_available" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlotsAvailable {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "slots_available" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlotsAvailable() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "profile_theme" field.</summary>
    public const int ProfileThemeFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.ProfileTheme profileTheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfileTheme ProfileTheme {
      get { return profileTheme_; }
      set {
        profileTheme_ = value;
      }
    }

    /// <summary>Field number for the "purchased_customizations" field.</summary>
    public const int PurchasedCustomizationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization> _repeated_purchasedCustomizations_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization> purchasedCustomizations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Types.PurchasedCustomization> PurchasedCustomizations {
      get { return purchasedCustomizations_; }
    }

    /// <summary>Field number for the "profile_preferences" field.</summary>
    public const int ProfilePreferencesFieldNumber = 5;
    private global::OpenSteamworks.Protobuf.ProfilePreferences profilePreferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfilePreferences ProfilePreferences {
      get { return profilePreferences_; }
      set {
        profilePreferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileCustomization_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileCustomization_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!customizations_.Equals(other.customizations_)) return false;
      if (SlotsAvailable != other.SlotsAvailable) return false;
      if (!object.Equals(ProfileTheme, other.ProfileTheme)) return false;
      if(!purchasedCustomizations_.Equals(other.purchasedCustomizations_)) return false;
      if (!object.Equals(ProfilePreferences, other.ProfilePreferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= customizations_.GetHashCode();
      if (HasSlotsAvailable) hash ^= SlotsAvailable.GetHashCode();
      if (profileTheme_ != null) hash ^= ProfileTheme.GetHashCode();
      hash ^= purchasedCustomizations_.GetHashCode();
      if (profilePreferences_ != null) hash ^= ProfilePreferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      customizations_.WriteTo(output, _repeated_customizations_codec);
      if (HasSlotsAvailable) {
        output.WriteRawTag(16);
        output.WriteUInt32(SlotsAvailable);
      }
      if (profileTheme_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ProfileTheme);
      }
      purchasedCustomizations_.WriteTo(output, _repeated_purchasedCustomizations_codec);
      if (profilePreferences_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProfilePreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      customizations_.WriteTo(ref output, _repeated_customizations_codec);
      if (HasSlotsAvailable) {
        output.WriteRawTag(16);
        output.WriteUInt32(SlotsAvailable);
      }
      if (profileTheme_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ProfileTheme);
      }
      purchasedCustomizations_.WriteTo(ref output, _repeated_purchasedCustomizations_codec);
      if (profilePreferences_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProfilePreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += customizations_.CalculateSize(_repeated_customizations_codec);
      if (HasSlotsAvailable) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlotsAvailable);
      }
      if (profileTheme_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfileTheme);
      }
      size += purchasedCustomizations_.CalculateSize(_repeated_purchasedCustomizations_codec);
      if (profilePreferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfilePreferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileCustomization_Response other) {
      if (other == null) {
        return;
      }
      customizations_.Add(other.customizations_);
      if (other.HasSlotsAvailable) {
        SlotsAvailable = other.SlotsAvailable;
      }
      if (other.profileTheme_ != null) {
        if (profileTheme_ == null) {
          ProfileTheme = new global::OpenSteamworks.Protobuf.ProfileTheme();
        }
        ProfileTheme.MergeFrom(other.ProfileTheme);
      }
      purchasedCustomizations_.Add(other.purchasedCustomizations_);
      if (other.profilePreferences_ != null) {
        if (profilePreferences_ == null) {
          ProfilePreferences = new global::OpenSteamworks.Protobuf.ProfilePreferences();
        }
        ProfilePreferences.MergeFrom(other.ProfilePreferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            customizations_.AddEntriesFrom(input, _repeated_customizations_codec);
            break;
          }
          case 16: {
            SlotsAvailable = input.ReadUInt32();
            break;
          }
          case 26: {
            if (profileTheme_ == null) {
              ProfileTheme = new global::OpenSteamworks.Protobuf.ProfileTheme();
            }
            input.ReadMessage(ProfileTheme);
            break;
          }
          case 34: {
            purchasedCustomizations_.AddEntriesFrom(input, _repeated_purchasedCustomizations_codec);
            break;
          }
          case 42: {
            if (profilePreferences_ == null) {
              ProfilePreferences = new global::OpenSteamworks.Protobuf.ProfilePreferences();
            }
            input.ReadMessage(ProfilePreferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            customizations_.AddEntriesFrom(ref input, _repeated_customizations_codec);
            break;
          }
          case 16: {
            SlotsAvailable = input.ReadUInt32();
            break;
          }
          case 26: {
            if (profileTheme_ == null) {
              ProfileTheme = new global::OpenSteamworks.Protobuf.ProfileTheme();
            }
            input.ReadMessage(ProfileTheme);
            break;
          }
          case 34: {
            purchasedCustomizations_.AddEntriesFrom(ref input, _repeated_purchasedCustomizations_codec);
            break;
          }
          case 42: {
            if (profilePreferences_ == null) {
              ProfilePreferences = new global::OpenSteamworks.Protobuf.ProfilePreferences();
            }
            input.ReadMessage(ProfilePreferences);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetProfileCustomization_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PurchasedCustomization : pb::IMessage<PurchasedCustomization>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PurchasedCustomization> _parser = new pb::MessageParser<PurchasedCustomization>(() => new PurchasedCustomization());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PurchasedCustomization> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetProfileCustomization_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization(PurchasedCustomization other) : this() {
          _hasBits0 = other._hasBits0;
          purchaseid_ = other.purchaseid_;
          customizationType_ = other.customizationType_;
          level_ = other.level_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization Clone() {
          return new PurchasedCustomization(this);
        }

        /// <summary>Field number for the "purchaseid" field.</summary>
        public const int PurchaseidFieldNumber = 1;
        private readonly static ulong PurchaseidDefaultValue = 0UL;

        private ulong purchaseid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Purchaseid {
          get { if ((_hasBits0 & 1) != 0) { return purchaseid_; } else { return PurchaseidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            purchaseid_ = value;
          }
        }
        /// <summary>Gets whether the "purchaseid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPurchaseid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "purchaseid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPurchaseid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "customization_type" field.</summary>
        public const int CustomizationTypeFieldNumber = 2;
        private readonly static global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationTypeDefaultValue = global::OpenSteamworks.Protobuf.EProfileCustomizationType.Invalid;

        private global::OpenSteamworks.Protobuf.EProfileCustomizationType customizationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationType {
          get { if ((_hasBits0 & 2) != 0) { return customizationType_; } else { return CustomizationTypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            customizationType_ = value;
          }
        }
        /// <summary>Gets whether the "customization_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCustomizationType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "customization_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCustomizationType() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 3;
        private readonly static uint LevelDefaultValue = 0;

        private uint level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Level {
          get { if ((_hasBits0 & 4) != 0) { return level_; } else { return LevelDefaultValue; } }
          set {
            _hasBits0 |= 4;
            level_ = value;
          }
        }
        /// <summary>Gets whether the "level" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLevel {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "level" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLevel() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PurchasedCustomization);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PurchasedCustomization other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Purchaseid != other.Purchaseid) return false;
          if (CustomizationType != other.CustomizationType) return false;
          if (Level != other.Level) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPurchaseid) hash ^= Purchaseid.GetHashCode();
          if (HasCustomizationType) hash ^= CustomizationType.GetHashCode();
          if (HasLevel) hash ^= Level.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPurchaseid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Purchaseid);
          }
          if (HasCustomizationType) {
            output.WriteRawTag(16);
            output.WriteEnum((int) CustomizationType);
          }
          if (HasLevel) {
            output.WriteRawTag(24);
            output.WriteUInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPurchaseid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Purchaseid);
          }
          if (HasCustomizationType) {
            output.WriteRawTag(16);
            output.WriteEnum((int) CustomizationType);
          }
          if (HasLevel) {
            output.WriteRawTag(24);
            output.WriteUInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPurchaseid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Purchaseid);
          }
          if (HasCustomizationType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomizationType);
          }
          if (HasLevel) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PurchasedCustomization other) {
          if (other == null) {
            return;
          }
          if (other.HasPurchaseid) {
            Purchaseid = other.Purchaseid;
          }
          if (other.HasCustomizationType) {
            CustomizationType = other.CustomizationType;
          }
          if (other.HasLevel) {
            Level = other.Level;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Purchaseid = input.ReadUInt64();
                break;
              }
              case 16: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
              case 24: {
                Level = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Purchaseid = input.ReadUInt64();
                break;
              }
              case 16: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
              case 24: {
                Level = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPurchasedProfileCustomizations_Request : pb::IMessage<CPlayer_GetPurchasedProfileCustomizations_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPurchasedProfileCustomizations_Request> _parser = new pb::MessageParser<CPlayer_GetPurchasedProfileCustomizations_Request>(() => new CPlayer_GetPurchasedProfileCustomizations_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPurchasedProfileCustomizations_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedProfileCustomizations_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedProfileCustomizations_Request(CPlayer_GetPurchasedProfileCustomizations_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedProfileCustomizations_Request Clone() {
      return new CPlayer_GetPurchasedProfileCustomizations_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPurchasedProfileCustomizations_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPurchasedProfileCustomizations_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPurchasedProfileCustomizations_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPurchasedProfileCustomizations_Response : pb::IMessage<CPlayer_GetPurchasedProfileCustomizations_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPurchasedProfileCustomizations_Response> _parser = new pb::MessageParser<CPlayer_GetPurchasedProfileCustomizations_Response>(() => new CPlayer_GetPurchasedProfileCustomizations_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPurchasedProfileCustomizations_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedProfileCustomizations_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedProfileCustomizations_Response(CPlayer_GetPurchasedProfileCustomizations_Response other) : this() {
      purchasedCustomizations_ = other.purchasedCustomizations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedProfileCustomizations_Response Clone() {
      return new CPlayer_GetPurchasedProfileCustomizations_Response(this);
    }

    /// <summary>Field number for the "purchased_customizations" field.</summary>
    public const int PurchasedCustomizationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization> _repeated_purchasedCustomizations_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization> purchasedCustomizations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Types.PurchasedCustomization> PurchasedCustomizations {
      get { return purchasedCustomizations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPurchasedProfileCustomizations_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPurchasedProfileCustomizations_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!purchasedCustomizations_.Equals(other.purchasedCustomizations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= purchasedCustomizations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      purchasedCustomizations_.WriteTo(output, _repeated_purchasedCustomizations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      purchasedCustomizations_.WriteTo(ref output, _repeated_purchasedCustomizations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += purchasedCustomizations_.CalculateSize(_repeated_purchasedCustomizations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPurchasedProfileCustomizations_Response other) {
      if (other == null) {
        return;
      }
      purchasedCustomizations_.Add(other.purchasedCustomizations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            purchasedCustomizations_.AddEntriesFrom(input, _repeated_purchasedCustomizations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            purchasedCustomizations_.AddEntriesFrom(ref input, _repeated_purchasedCustomizations_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetPurchasedProfileCustomizations_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PurchasedCustomization : pb::IMessage<PurchasedCustomization>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PurchasedCustomization> _parser = new pb::MessageParser<PurchasedCustomization>(() => new PurchasedCustomization());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PurchasedCustomization> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedProfileCustomizations_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization(PurchasedCustomization other) : this() {
          _hasBits0 = other._hasBits0;
          purchaseid_ = other.purchaseid_;
          customizationType_ = other.customizationType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization Clone() {
          return new PurchasedCustomization(this);
        }

        /// <summary>Field number for the "purchaseid" field.</summary>
        public const int PurchaseidFieldNumber = 1;
        private readonly static ulong PurchaseidDefaultValue = 0UL;

        private ulong purchaseid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Purchaseid {
          get { if ((_hasBits0 & 1) != 0) { return purchaseid_; } else { return PurchaseidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            purchaseid_ = value;
          }
        }
        /// <summary>Gets whether the "purchaseid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPurchaseid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "purchaseid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPurchaseid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "customization_type" field.</summary>
        public const int CustomizationTypeFieldNumber = 2;
        private readonly static global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationTypeDefaultValue = global::OpenSteamworks.Protobuf.EProfileCustomizationType.Invalid;

        private global::OpenSteamworks.Protobuf.EProfileCustomizationType customizationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationType {
          get { if ((_hasBits0 & 2) != 0) { return customizationType_; } else { return CustomizationTypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            customizationType_ = value;
          }
        }
        /// <summary>Gets whether the "customization_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCustomizationType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "customization_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCustomizationType() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PurchasedCustomization);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PurchasedCustomization other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Purchaseid != other.Purchaseid) return false;
          if (CustomizationType != other.CustomizationType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPurchaseid) hash ^= Purchaseid.GetHashCode();
          if (HasCustomizationType) hash ^= CustomizationType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPurchaseid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Purchaseid);
          }
          if (HasCustomizationType) {
            output.WriteRawTag(16);
            output.WriteEnum((int) CustomizationType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPurchaseid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Purchaseid);
          }
          if (HasCustomizationType) {
            output.WriteRawTag(16);
            output.WriteEnum((int) CustomizationType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPurchaseid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Purchaseid);
          }
          if (HasCustomizationType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomizationType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PurchasedCustomization other) {
          if (other == null) {
            return;
          }
          if (other.HasPurchaseid) {
            Purchaseid = other.Purchaseid;
          }
          if (other.HasCustomizationType) {
            CustomizationType = other.CustomizationType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Purchaseid = input.ReadUInt64();
                break;
              }
              case 16: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Purchaseid = input.ReadUInt64();
                break;
              }
              case 16: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request : pb::IMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request> _parser = new pb::MessageParser<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request>(() => new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request Clone() {
      return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response : pb::IMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response> _parser = new pb::MessageParser<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response>(() => new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response other) : this() {
      purchasedCustomizations_ = other.purchasedCustomizations_.Clone();
      upgradedCustomizations_ = other.upgradedCustomizations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response Clone() {
      return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response(this);
    }

    /// <summary>Field number for the "purchased_customizations" field.</summary>
    public const int PurchasedCustomizationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization> _repeated_purchasedCustomizations_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization> purchasedCustomizations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.PurchasedCustomization> PurchasedCustomizations {
      get { return purchasedCustomizations_; }
    }

    /// <summary>Field number for the "upgraded_customizations" field.</summary>
    public const int UpgradedCustomizationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization> _repeated_upgradedCustomizations_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization> upgradedCustomizations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Types.UpgradedCustomization> UpgradedCustomizations {
      get { return upgradedCustomizations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!purchasedCustomizations_.Equals(other.purchasedCustomizations_)) return false;
      if(!upgradedCustomizations_.Equals(other.upgradedCustomizations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= purchasedCustomizations_.GetHashCode();
      hash ^= upgradedCustomizations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      purchasedCustomizations_.WriteTo(output, _repeated_purchasedCustomizations_codec);
      upgradedCustomizations_.WriteTo(output, _repeated_upgradedCustomizations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      purchasedCustomizations_.WriteTo(ref output, _repeated_purchasedCustomizations_codec);
      upgradedCustomizations_.WriteTo(ref output, _repeated_upgradedCustomizations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += purchasedCustomizations_.CalculateSize(_repeated_purchasedCustomizations_codec);
      size += upgradedCustomizations_.CalculateSize(_repeated_upgradedCustomizations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response other) {
      if (other == null) {
        return;
      }
      purchasedCustomizations_.Add(other.purchasedCustomizations_);
      upgradedCustomizations_.Add(other.upgradedCustomizations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            purchasedCustomizations_.AddEntriesFrom(input, _repeated_purchasedCustomizations_codec);
            break;
          }
          case 18: {
            upgradedCustomizations_.AddEntriesFrom(input, _repeated_upgradedCustomizations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            purchasedCustomizations_.AddEntriesFrom(ref input, _repeated_purchasedCustomizations_codec);
            break;
          }
          case 18: {
            upgradedCustomizations_.AddEntriesFrom(ref input, _repeated_upgradedCustomizations_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PurchasedCustomization : pb::IMessage<PurchasedCustomization>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PurchasedCustomization> _parser = new pb::MessageParser<PurchasedCustomization>(() => new PurchasedCustomization());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PurchasedCustomization> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization(PurchasedCustomization other) : this() {
          _hasBits0 = other._hasBits0;
          customizationType_ = other.customizationType_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PurchasedCustomization Clone() {
          return new PurchasedCustomization(this);
        }

        /// <summary>Field number for the "customization_type" field.</summary>
        public const int CustomizationTypeFieldNumber = 1;
        private readonly static global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationTypeDefaultValue = global::OpenSteamworks.Protobuf.EProfileCustomizationType.Invalid;

        private global::OpenSteamworks.Protobuf.EProfileCustomizationType customizationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationType {
          get { if ((_hasBits0 & 1) != 0) { return customizationType_; } else { return CustomizationTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            customizationType_ = value;
          }
        }
        /// <summary>Gets whether the "customization_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCustomizationType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "customization_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCustomizationType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private readonly static uint CountDefaultValue = 0;

        private uint count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Count {
          get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
          set {
            _hasBits0 |= 2;
            count_ = value;
          }
        }
        /// <summary>Gets whether the "count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCount {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCount() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PurchasedCustomization);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PurchasedCustomization other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CustomizationType != other.CustomizationType) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasCustomizationType) hash ^= CustomizationType.GetHashCode();
          if (HasCount) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasCustomizationType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) CustomizationType);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasCustomizationType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) CustomizationType);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasCustomizationType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomizationType);
          }
          if (HasCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PurchasedCustomization other) {
          if (other == null) {
            return;
          }
          if (other.HasCustomizationType) {
            CustomizationType = other.CustomizationType;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class UpgradedCustomization : pb::IMessage<UpgradedCustomization>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpgradedCustomization> _parser = new pb::MessageParser<UpgradedCustomization>(() => new UpgradedCustomization());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UpgradedCustomization> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UpgradedCustomization() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UpgradedCustomization(UpgradedCustomization other) : this() {
          _hasBits0 = other._hasBits0;
          customizationType_ = other.customizationType_;
          level_ = other.level_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UpgradedCustomization Clone() {
          return new UpgradedCustomization(this);
        }

        /// <summary>Field number for the "customization_type" field.</summary>
        public const int CustomizationTypeFieldNumber = 1;
        private readonly static global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationTypeDefaultValue = global::OpenSteamworks.Protobuf.EProfileCustomizationType.Invalid;

        private global::OpenSteamworks.Protobuf.EProfileCustomizationType customizationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EProfileCustomizationType CustomizationType {
          get { if ((_hasBits0 & 1) != 0) { return customizationType_; } else { return CustomizationTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            customizationType_ = value;
          }
        }
        /// <summary>Gets whether the "customization_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCustomizationType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "customization_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCustomizationType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 2;
        private readonly static uint LevelDefaultValue = 0;

        private uint level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Level {
          get { if ((_hasBits0 & 2) != 0) { return level_; } else { return LevelDefaultValue; } }
          set {
            _hasBits0 |= 2;
            level_ = value;
          }
        }
        /// <summary>Gets whether the "level" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLevel {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "level" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLevel() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UpgradedCustomization);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UpgradedCustomization other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CustomizationType != other.CustomizationType) return false;
          if (Level != other.Level) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasCustomizationType) hash ^= CustomizationType.GetHashCode();
          if (HasLevel) hash ^= Level.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasCustomizationType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) CustomizationType);
          }
          if (HasLevel) {
            output.WriteRawTag(16);
            output.WriteUInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasCustomizationType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) CustomizationType);
          }
          if (HasLevel) {
            output.WriteRawTag(16);
            output.WriteUInt32(Level);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasCustomizationType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomizationType);
          }
          if (HasLevel) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UpgradedCustomization other) {
          if (other == null) {
            return;
          }
          if (other.HasCustomizationType) {
            CustomizationType = other.CustomizationType;
          }
          if (other.HasLevel) {
            Level = other.Level;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
              case 16: {
                Level = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                CustomizationType = (global::OpenSteamworks.Protobuf.EProfileCustomizationType) input.ReadEnum();
                break;
              }
              case 16: {
                Level = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileThemesAvailable_Request : pb::IMessage<CPlayer_GetProfileThemesAvailable_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileThemesAvailable_Request> _parser = new pb::MessageParser<CPlayer_GetProfileThemesAvailable_Request>(() => new CPlayer_GetProfileThemesAvailable_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileThemesAvailable_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileThemesAvailable_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileThemesAvailable_Request(CPlayer_GetProfileThemesAvailable_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileThemesAvailable_Request Clone() {
      return new CPlayer_GetProfileThemesAvailable_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileThemesAvailable_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileThemesAvailable_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileThemesAvailable_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetProfileThemesAvailable_Response : pb::IMessage<CPlayer_GetProfileThemesAvailable_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetProfileThemesAvailable_Response> _parser = new pb::MessageParser<CPlayer_GetProfileThemesAvailable_Response>(() => new CPlayer_GetProfileThemesAvailable_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetProfileThemesAvailable_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileThemesAvailable_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileThemesAvailable_Response(CPlayer_GetProfileThemesAvailable_Response other) : this() {
      profileThemes_ = other.profileThemes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetProfileThemesAvailable_Response Clone() {
      return new CPlayer_GetProfileThemesAvailable_Response(this);
    }

    /// <summary>Field number for the "profile_themes" field.</summary>
    public const int ProfileThemesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.ProfileTheme> _repeated_profileThemes_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.ProfileTheme.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileTheme> profileThemes_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileTheme>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.ProfileTheme> ProfileThemes {
      get { return profileThemes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetProfileThemesAvailable_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetProfileThemesAvailable_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profileThemes_.Equals(other.profileThemes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profileThemes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      profileThemes_.WriteTo(output, _repeated_profileThemes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      profileThemes_.WriteTo(ref output, _repeated_profileThemes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += profileThemes_.CalculateSize(_repeated_profileThemes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetProfileThemesAvailable_Response other) {
      if (other == null) {
        return;
      }
      profileThemes_.Add(other.profileThemes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profileThemes_.AddEntriesFrom(input, _repeated_profileThemes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            profileThemes_.AddEntriesFrom(ref input, _repeated_profileThemes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetProfileTheme_Request : pb::IMessage<CPlayer_SetProfileTheme_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetProfileTheme_Request> _parser = new pb::MessageParser<CPlayer_SetProfileTheme_Request>(() => new CPlayer_SetProfileTheme_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetProfileTheme_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileTheme_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileTheme_Request(CPlayer_SetProfileTheme_Request other) : this() {
      themeId_ = other.themeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileTheme_Request Clone() {
      return new CPlayer_SetProfileTheme_Request(this);
    }

    /// <summary>Field number for the "theme_id" field.</summary>
    public const int ThemeIdFieldNumber = 1;
    private readonly static string ThemeIdDefaultValue = "";

    private string themeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThemeId {
      get { return themeId_ ?? ThemeIdDefaultValue; }
      set {
        themeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "theme_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThemeId {
      get { return themeId_ != null; }
    }
    /// <summary>Clears the value of the "theme_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThemeId() {
      themeId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetProfileTheme_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetProfileTheme_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThemeId != other.ThemeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasThemeId) hash ^= ThemeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasThemeId) {
        output.WriteRawTag(10);
        output.WriteString(ThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasThemeId) {
        output.WriteRawTag(10);
        output.WriteString(ThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasThemeId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThemeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetProfileTheme_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasThemeId) {
        ThemeId = other.ThemeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ThemeId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ThemeId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetProfileTheme_Response : pb::IMessage<CPlayer_SetProfileTheme_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetProfileTheme_Response> _parser = new pb::MessageParser<CPlayer_SetProfileTheme_Response>(() => new CPlayer_SetProfileTheme_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetProfileTheme_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileTheme_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileTheme_Response(CPlayer_SetProfileTheme_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfileTheme_Response Clone() {
      return new CPlayer_SetProfileTheme_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetProfileTheme_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetProfileTheme_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetProfileTheme_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetProfilePreferences_Request : pb::IMessage<CPlayer_SetProfilePreferences_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetProfilePreferences_Request> _parser = new pb::MessageParser<CPlayer_SetProfilePreferences_Request>(() => new CPlayer_SetProfilePreferences_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetProfilePreferences_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfilePreferences_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfilePreferences_Request(CPlayer_SetProfilePreferences_Request other) : this() {
      profilePreferences_ = other.profilePreferences_ != null ? other.profilePreferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfilePreferences_Request Clone() {
      return new CPlayer_SetProfilePreferences_Request(this);
    }

    /// <summary>Field number for the "profile_preferences" field.</summary>
    public const int ProfilePreferencesFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.ProfilePreferences profilePreferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ProfilePreferences ProfilePreferences {
      get { return profilePreferences_; }
      set {
        profilePreferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetProfilePreferences_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetProfilePreferences_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProfilePreferences, other.ProfilePreferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (profilePreferences_ != null) hash ^= ProfilePreferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (profilePreferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfilePreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (profilePreferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProfilePreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (profilePreferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfilePreferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetProfilePreferences_Request other) {
      if (other == null) {
        return;
      }
      if (other.profilePreferences_ != null) {
        if (profilePreferences_ == null) {
          ProfilePreferences = new global::OpenSteamworks.Protobuf.ProfilePreferences();
        }
        ProfilePreferences.MergeFrom(other.ProfilePreferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (profilePreferences_ == null) {
              ProfilePreferences = new global::OpenSteamworks.Protobuf.ProfilePreferences();
            }
            input.ReadMessage(ProfilePreferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (profilePreferences_ == null) {
              ProfilePreferences = new global::OpenSteamworks.Protobuf.ProfilePreferences();
            }
            input.ReadMessage(ProfilePreferences);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetProfilePreferences_Response : pb::IMessage<CPlayer_SetProfilePreferences_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetProfilePreferences_Response> _parser = new pb::MessageParser<CPlayer_SetProfilePreferences_Response>(() => new CPlayer_SetProfilePreferences_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetProfilePreferences_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfilePreferences_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfilePreferences_Response(CPlayer_SetProfilePreferences_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetProfilePreferences_Response Clone() {
      return new CPlayer_SetProfilePreferences_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetProfilePreferences_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetProfilePreferences_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetProfilePreferences_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_PostStatusToFriends_Request : pb::IMessage<CPlayer_PostStatusToFriends_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_PostStatusToFriends_Request> _parser = new pb::MessageParser<CPlayer_PostStatusToFriends_Request>(() => new CPlayer_PostStatusToFriends_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_PostStatusToFriends_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PostStatusToFriends_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PostStatusToFriends_Request(CPlayer_PostStatusToFriends_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      statusText_ = other.statusText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PostStatusToFriends_Request Clone() {
      return new CPlayer_PostStatusToFriends_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status_text" field.</summary>
    public const int StatusTextFieldNumber = 2;
    private readonly static string StatusTextDefaultValue = "";

    private string statusText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatusText {
      get { return statusText_ ?? StatusTextDefaultValue; }
      set {
        statusText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatusText {
      get { return statusText_ != null; }
    }
    /// <summary>Clears the value of the "status_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatusText() {
      statusText_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_PostStatusToFriends_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_PostStatusToFriends_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (StatusText != other.StatusText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasStatusText) hash ^= StatusText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasStatusText) {
        output.WriteRawTag(18);
        output.WriteString(StatusText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasStatusText) {
        output.WriteRawTag(18);
        output.WriteString(StatusText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasStatusText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_PostStatusToFriends_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasStatusText) {
        StatusText = other.StatusText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            StatusText = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            StatusText = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_PostStatusToFriends_Response : pb::IMessage<CPlayer_PostStatusToFriends_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_PostStatusToFriends_Response> _parser = new pb::MessageParser<CPlayer_PostStatusToFriends_Response>(() => new CPlayer_PostStatusToFriends_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_PostStatusToFriends_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PostStatusToFriends_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PostStatusToFriends_Response(CPlayer_PostStatusToFriends_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PostStatusToFriends_Response Clone() {
      return new CPlayer_PostStatusToFriends_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_PostStatusToFriends_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_PostStatusToFriends_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_PostStatusToFriends_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPostedStatus_Request : pb::IMessage<CPlayer_GetPostedStatus_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPostedStatus_Request> _parser = new pb::MessageParser<CPlayer_GetPostedStatus_Request>(() => new CPlayer_GetPostedStatus_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPostedStatus_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPostedStatus_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPostedStatus_Request(CPlayer_GetPostedStatus_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      postid_ = other.postid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPostedStatus_Request Clone() {
      return new CPlayer_GetPostedStatus_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "postid" field.</summary>
    public const int PostidFieldNumber = 2;
    private readonly static ulong PostidDefaultValue = 0UL;

    private ulong postid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Postid {
      get { if ((_hasBits0 & 2) != 0) { return postid_; } else { return PostidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        postid_ = value;
      }
    }
    /// <summary>Gets whether the "postid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPostid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "postid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPostid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPostedStatus_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPostedStatus_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Postid != other.Postid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasPostid) hash ^= Postid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasPostid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Postid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasPostid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Postid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasPostid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Postid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPostedStatus_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasPostid) {
        Postid = other.Postid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            Postid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            Postid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPostedStatus_Response : pb::IMessage<CPlayer_GetPostedStatus_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPostedStatus_Response> _parser = new pb::MessageParser<CPlayer_GetPostedStatus_Response>(() => new CPlayer_GetPostedStatus_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPostedStatus_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPostedStatus_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPostedStatus_Response(CPlayer_GetPostedStatus_Response other) : this() {
      _hasBits0 = other._hasBits0;
      accountid_ = other.accountid_;
      postid_ = other.postid_;
      statusText_ = other.statusText_;
      deleted_ = other.deleted_;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPostedStatus_Response Clone() {
      return new CPlayer_GetPostedStatus_Response(this);
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 1;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Accountid {
      get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "postid" field.</summary>
    public const int PostidFieldNumber = 2;
    private readonly static ulong PostidDefaultValue = 0UL;

    private ulong postid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Postid {
      get { if ((_hasBits0 & 2) != 0) { return postid_; } else { return PostidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        postid_ = value;
      }
    }
    /// <summary>Gets whether the "postid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPostid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "postid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPostid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "status_text" field.</summary>
    public const int StatusTextFieldNumber = 3;
    private readonly static string StatusTextDefaultValue = "";

    private string statusText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatusText {
      get { return statusText_ ?? StatusTextDefaultValue; }
      set {
        statusText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatusText {
      get { return statusText_ != null; }
    }
    /// <summary>Clears the value of the "status_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatusText() {
      statusText_ = null;
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 4;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Deleted {
      get { if ((_hasBits0 & 4) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeleted {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeleted() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 5;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 8) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPostedStatus_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPostedStatus_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accountid != other.Accountid) return false;
      if (Postid != other.Postid) return false;
      if (StatusText != other.StatusText) return false;
      if (Deleted != other.Deleted) return false;
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (HasPostid) hash ^= Postid.GetHashCode();
      if (HasStatusText) hash ^= StatusText.GetHashCode();
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Accountid);
      }
      if (HasPostid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Postid);
      }
      if (HasStatusText) {
        output.WriteRawTag(26);
        output.WriteString(StatusText);
      }
      if (HasDeleted) {
        output.WriteRawTag(32);
        output.WriteBool(Deleted);
      }
      if (HasAppid) {
        output.WriteRawTag(40);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Accountid);
      }
      if (HasPostid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Postid);
      }
      if (HasStatusText) {
        output.WriteRawTag(26);
        output.WriteString(StatusText);
      }
      if (HasDeleted) {
        output.WriteRawTag(32);
        output.WriteBool(Deleted);
      }
      if (HasAppid) {
        output.WriteRawTag(40);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
      }
      if (HasPostid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Postid);
      }
      if (HasStatusText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusText);
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPostedStatus_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.HasPostid) {
        Postid = other.Postid;
      }
      if (other.HasStatusText) {
        StatusText = other.StatusText;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accountid = input.ReadUInt32();
            break;
          }
          case 16: {
            Postid = input.ReadUInt64();
            break;
          }
          case 26: {
            StatusText = input.ReadString();
            break;
          }
          case 32: {
            Deleted = input.ReadBool();
            break;
          }
          case 40: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accountid = input.ReadUInt32();
            break;
          }
          case 16: {
            Postid = input.ReadUInt64();
            break;
          }
          case 26: {
            StatusText = input.ReadString();
            break;
          }
          case 32: {
            Deleted = input.ReadBool();
            break;
          }
          case 40: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_DeletePostedStatus_Request : pb::IMessage<CPlayer_DeletePostedStatus_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_DeletePostedStatus_Request> _parser = new pb::MessageParser<CPlayer_DeletePostedStatus_Request>(() => new CPlayer_DeletePostedStatus_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_DeletePostedStatus_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_DeletePostedStatus_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_DeletePostedStatus_Request(CPlayer_DeletePostedStatus_Request other) : this() {
      _hasBits0 = other._hasBits0;
      postid_ = other.postid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_DeletePostedStatus_Request Clone() {
      return new CPlayer_DeletePostedStatus_Request(this);
    }

    /// <summary>Field number for the "postid" field.</summary>
    public const int PostidFieldNumber = 1;
    private readonly static ulong PostidDefaultValue = 0UL;

    private ulong postid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Postid {
      get { if ((_hasBits0 & 1) != 0) { return postid_; } else { return PostidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        postid_ = value;
      }
    }
    /// <summary>Gets whether the "postid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPostid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "postid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPostid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_DeletePostedStatus_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_DeletePostedStatus_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Postid != other.Postid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPostid) hash ^= Postid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPostid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Postid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPostid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Postid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPostid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Postid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_DeletePostedStatus_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasPostid) {
        Postid = other.Postid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Postid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Postid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_DeletePostedStatus_Response : pb::IMessage<CPlayer_DeletePostedStatus_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_DeletePostedStatus_Response> _parser = new pb::MessageParser<CPlayer_DeletePostedStatus_Response>(() => new CPlayer_DeletePostedStatus_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_DeletePostedStatus_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_DeletePostedStatus_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_DeletePostedStatus_Response(CPlayer_DeletePostedStatus_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_DeletePostedStatus_Response Clone() {
      return new CPlayer_DeletePostedStatus_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_DeletePostedStatus_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_DeletePostedStatus_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_DeletePostedStatus_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetLastPlayedTimes_Request : pb::IMessage<CPlayer_GetLastPlayedTimes_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetLastPlayedTimes_Request> _parser = new pb::MessageParser<CPlayer_GetLastPlayedTimes_Request>(() => new CPlayer_GetLastPlayedTimes_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetLastPlayedTimes_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetLastPlayedTimes_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetLastPlayedTimes_Request(CPlayer_GetLastPlayedTimes_Request other) : this() {
      _hasBits0 = other._hasBits0;
      minLastPlayed_ = other.minLastPlayed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetLastPlayedTimes_Request Clone() {
      return new CPlayer_GetLastPlayedTimes_Request(this);
    }

    /// <summary>Field number for the "min_last_played" field.</summary>
    public const int MinLastPlayedFieldNumber = 1;
    private readonly static uint MinLastPlayedDefaultValue = 0;

    private uint minLastPlayed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinLastPlayed {
      get { if ((_hasBits0 & 1) != 0) { return minLastPlayed_; } else { return MinLastPlayedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        minLastPlayed_ = value;
      }
    }
    /// <summary>Gets whether the "min_last_played" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinLastPlayed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min_last_played" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinLastPlayed() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetLastPlayedTimes_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetLastPlayedTimes_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinLastPlayed != other.MinLastPlayed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMinLastPlayed) hash ^= MinLastPlayed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMinLastPlayed) {
        output.WriteRawTag(8);
        output.WriteUInt32(MinLastPlayed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMinLastPlayed) {
        output.WriteRawTag(8);
        output.WriteUInt32(MinLastPlayed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMinLastPlayed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinLastPlayed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetLastPlayedTimes_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasMinLastPlayed) {
        MinLastPlayed = other.MinLastPlayed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinLastPlayed = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinLastPlayed = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetLastPlayedTimes_Response : pb::IMessage<CPlayer_GetLastPlayedTimes_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetLastPlayedTimes_Response> _parser = new pb::MessageParser<CPlayer_GetLastPlayedTimes_Response>(() => new CPlayer_GetLastPlayedTimes_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetLastPlayedTimes_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetLastPlayedTimes_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetLastPlayedTimes_Response(CPlayer_GetLastPlayedTimes_Response other) : this() {
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetLastPlayedTimes_Response Clone() {
      return new CPlayer_GetLastPlayedTimes_Response(this);
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game> _repeated_games_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game> games_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetLastPlayedTimes_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetLastPlayedTimes_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      games_.WriteTo(ref output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetLastPlayedTimes_Response other) {
      if (other == null) {
        return;
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetLastPlayedTimes_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Game : pb::IMessage<Game>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Game> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game(Game other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          lastPlaytime_ = other.lastPlaytime_;
          playtime2Weeks_ = other.playtime2Weeks_;
          playtimeForever_ = other.playtimeForever_;
          firstPlaytime_ = other.firstPlaytime_;
          playtimeWindowsForever_ = other.playtimeWindowsForever_;
          playtimeMacForever_ = other.playtimeMacForever_;
          playtimeLinuxForever_ = other.playtimeLinuxForever_;
          firstWindowsPlaytime_ = other.firstWindowsPlaytime_;
          firstMacPlaytime_ = other.firstMacPlaytime_;
          firstLinuxPlaytime_ = other.firstLinuxPlaytime_;
          lastWindowsPlaytime_ = other.lastWindowsPlaytime_;
          lastMacPlaytime_ = other.lastMacPlaytime_;
          lastLinuxPlaytime_ = other.lastLinuxPlaytime_;
          playtimeDisconnected_ = other.playtimeDisconnected_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Game Clone() {
          return new Game(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static int AppidDefaultValue = 0;

        private int appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "last_playtime" field.</summary>
        public const int LastPlaytimeFieldNumber = 2;
        private readonly static uint LastPlaytimeDefaultValue = 0;

        private uint lastPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LastPlaytime {
          get { if ((_hasBits0 & 2) != 0) { return lastPlaytime_; } else { return LastPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            lastPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "last_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLastPlaytime {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "last_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLastPlaytime() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "playtime_2weeks" field.</summary>
        public const int Playtime2WeeksFieldNumber = 3;
        private readonly static int Playtime2WeeksDefaultValue = 0;

        private int playtime2Weeks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Playtime2Weeks {
          get { if ((_hasBits0 & 4) != 0) { return playtime2Weeks_; } else { return Playtime2WeeksDefaultValue; } }
          set {
            _hasBits0 |= 4;
            playtime2Weeks_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_2weeks" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytime2Weeks {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "playtime_2weeks" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytime2Weeks() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "playtime_forever" field.</summary>
        public const int PlaytimeForeverFieldNumber = 4;
        private readonly static int PlaytimeForeverDefaultValue = 0;

        private int playtimeForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeForever {
          get { if ((_hasBits0 & 8) != 0) { return playtimeForever_; } else { return PlaytimeForeverDefaultValue; } }
          set {
            _hasBits0 |= 8;
            playtimeForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeForever {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "playtime_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeForever() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "first_playtime" field.</summary>
        public const int FirstPlaytimeFieldNumber = 5;
        private readonly static uint FirstPlaytimeDefaultValue = 0;

        private uint firstPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FirstPlaytime {
          get { if ((_hasBits0 & 16) != 0) { return firstPlaytime_; } else { return FirstPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 16;
            firstPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "first_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFirstPlaytime {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "first_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFirstPlaytime() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "playtime_windows_forever" field.</summary>
        public const int PlaytimeWindowsForeverFieldNumber = 6;
        private readonly static int PlaytimeWindowsForeverDefaultValue = 0;

        private int playtimeWindowsForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeWindowsForever {
          get { if ((_hasBits0 & 32) != 0) { return playtimeWindowsForever_; } else { return PlaytimeWindowsForeverDefaultValue; } }
          set {
            _hasBits0 |= 32;
            playtimeWindowsForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_windows_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeWindowsForever {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "playtime_windows_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeWindowsForever() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "playtime_mac_forever" field.</summary>
        public const int PlaytimeMacForeverFieldNumber = 7;
        private readonly static int PlaytimeMacForeverDefaultValue = 0;

        private int playtimeMacForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeMacForever {
          get { if ((_hasBits0 & 64) != 0) { return playtimeMacForever_; } else { return PlaytimeMacForeverDefaultValue; } }
          set {
            _hasBits0 |= 64;
            playtimeMacForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_mac_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeMacForever {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "playtime_mac_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeMacForever() {
          _hasBits0 &= ~64;
        }

        /// <summary>Field number for the "playtime_linux_forever" field.</summary>
        public const int PlaytimeLinuxForeverFieldNumber = 8;
        private readonly static int PlaytimeLinuxForeverDefaultValue = 0;

        private int playtimeLinuxForever_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlaytimeLinuxForever {
          get { if ((_hasBits0 & 128) != 0) { return playtimeLinuxForever_; } else { return PlaytimeLinuxForeverDefaultValue; } }
          set {
            _hasBits0 |= 128;
            playtimeLinuxForever_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_linux_forever" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeLinuxForever {
          get { return (_hasBits0 & 128) != 0; }
        }
        /// <summary>Clears the value of the "playtime_linux_forever" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeLinuxForever() {
          _hasBits0 &= ~128;
        }

        /// <summary>Field number for the "first_windows_playtime" field.</summary>
        public const int FirstWindowsPlaytimeFieldNumber = 9;
        private readonly static uint FirstWindowsPlaytimeDefaultValue = 0;

        private uint firstWindowsPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FirstWindowsPlaytime {
          get { if ((_hasBits0 & 256) != 0) { return firstWindowsPlaytime_; } else { return FirstWindowsPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 256;
            firstWindowsPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "first_windows_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFirstWindowsPlaytime {
          get { return (_hasBits0 & 256) != 0; }
        }
        /// <summary>Clears the value of the "first_windows_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFirstWindowsPlaytime() {
          _hasBits0 &= ~256;
        }

        /// <summary>Field number for the "first_mac_playtime" field.</summary>
        public const int FirstMacPlaytimeFieldNumber = 10;
        private readonly static uint FirstMacPlaytimeDefaultValue = 0;

        private uint firstMacPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FirstMacPlaytime {
          get { if ((_hasBits0 & 512) != 0) { return firstMacPlaytime_; } else { return FirstMacPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 512;
            firstMacPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "first_mac_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFirstMacPlaytime {
          get { return (_hasBits0 & 512) != 0; }
        }
        /// <summary>Clears the value of the "first_mac_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFirstMacPlaytime() {
          _hasBits0 &= ~512;
        }

        /// <summary>Field number for the "first_linux_playtime" field.</summary>
        public const int FirstLinuxPlaytimeFieldNumber = 11;
        private readonly static uint FirstLinuxPlaytimeDefaultValue = 0;

        private uint firstLinuxPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FirstLinuxPlaytime {
          get { if ((_hasBits0 & 1024) != 0) { return firstLinuxPlaytime_; } else { return FirstLinuxPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 1024;
            firstLinuxPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "first_linux_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFirstLinuxPlaytime {
          get { return (_hasBits0 & 1024) != 0; }
        }
        /// <summary>Clears the value of the "first_linux_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFirstLinuxPlaytime() {
          _hasBits0 &= ~1024;
        }

        /// <summary>Field number for the "last_windows_playtime" field.</summary>
        public const int LastWindowsPlaytimeFieldNumber = 12;
        private readonly static uint LastWindowsPlaytimeDefaultValue = 0;

        private uint lastWindowsPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LastWindowsPlaytime {
          get { if ((_hasBits0 & 2048) != 0) { return lastWindowsPlaytime_; } else { return LastWindowsPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 2048;
            lastWindowsPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "last_windows_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLastWindowsPlaytime {
          get { return (_hasBits0 & 2048) != 0; }
        }
        /// <summary>Clears the value of the "last_windows_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLastWindowsPlaytime() {
          _hasBits0 &= ~2048;
        }

        /// <summary>Field number for the "last_mac_playtime" field.</summary>
        public const int LastMacPlaytimeFieldNumber = 13;
        private readonly static uint LastMacPlaytimeDefaultValue = 0;

        private uint lastMacPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LastMacPlaytime {
          get { if ((_hasBits0 & 4096) != 0) { return lastMacPlaytime_; } else { return LastMacPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 4096;
            lastMacPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "last_mac_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLastMacPlaytime {
          get { return (_hasBits0 & 4096) != 0; }
        }
        /// <summary>Clears the value of the "last_mac_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLastMacPlaytime() {
          _hasBits0 &= ~4096;
        }

        /// <summary>Field number for the "last_linux_playtime" field.</summary>
        public const int LastLinuxPlaytimeFieldNumber = 14;
        private readonly static uint LastLinuxPlaytimeDefaultValue = 0;

        private uint lastLinuxPlaytime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LastLinuxPlaytime {
          get { if ((_hasBits0 & 8192) != 0) { return lastLinuxPlaytime_; } else { return LastLinuxPlaytimeDefaultValue; } }
          set {
            _hasBits0 |= 8192;
            lastLinuxPlaytime_ = value;
          }
        }
        /// <summary>Gets whether the "last_linux_playtime" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLastLinuxPlaytime {
          get { return (_hasBits0 & 8192) != 0; }
        }
        /// <summary>Clears the value of the "last_linux_playtime" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLastLinuxPlaytime() {
          _hasBits0 &= ~8192;
        }

        /// <summary>Field number for the "playtime_disconnected" field.</summary>
        public const int PlaytimeDisconnectedFieldNumber = 15;
        private readonly static uint PlaytimeDisconnectedDefaultValue = 0;

        private uint playtimeDisconnected_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint PlaytimeDisconnected {
          get { if ((_hasBits0 & 16384) != 0) { return playtimeDisconnected_; } else { return PlaytimeDisconnectedDefaultValue; } }
          set {
            _hasBits0 |= 16384;
            playtimeDisconnected_ = value;
          }
        }
        /// <summary>Gets whether the "playtime_disconnected" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaytimeDisconnected {
          get { return (_hasBits0 & 16384) != 0; }
        }
        /// <summary>Clears the value of the "playtime_disconnected" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaytimeDisconnected() {
          _hasBits0 &= ~16384;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Game);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Game other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (LastPlaytime != other.LastPlaytime) return false;
          if (Playtime2Weeks != other.Playtime2Weeks) return false;
          if (PlaytimeForever != other.PlaytimeForever) return false;
          if (FirstPlaytime != other.FirstPlaytime) return false;
          if (PlaytimeWindowsForever != other.PlaytimeWindowsForever) return false;
          if (PlaytimeMacForever != other.PlaytimeMacForever) return false;
          if (PlaytimeLinuxForever != other.PlaytimeLinuxForever) return false;
          if (FirstWindowsPlaytime != other.FirstWindowsPlaytime) return false;
          if (FirstMacPlaytime != other.FirstMacPlaytime) return false;
          if (FirstLinuxPlaytime != other.FirstLinuxPlaytime) return false;
          if (LastWindowsPlaytime != other.LastWindowsPlaytime) return false;
          if (LastMacPlaytime != other.LastMacPlaytime) return false;
          if (LastLinuxPlaytime != other.LastLinuxPlaytime) return false;
          if (PlaytimeDisconnected != other.PlaytimeDisconnected) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasLastPlaytime) hash ^= LastPlaytime.GetHashCode();
          if (HasPlaytime2Weeks) hash ^= Playtime2Weeks.GetHashCode();
          if (HasPlaytimeForever) hash ^= PlaytimeForever.GetHashCode();
          if (HasFirstPlaytime) hash ^= FirstPlaytime.GetHashCode();
          if (HasPlaytimeWindowsForever) hash ^= PlaytimeWindowsForever.GetHashCode();
          if (HasPlaytimeMacForever) hash ^= PlaytimeMacForever.GetHashCode();
          if (HasPlaytimeLinuxForever) hash ^= PlaytimeLinuxForever.GetHashCode();
          if (HasFirstWindowsPlaytime) hash ^= FirstWindowsPlaytime.GetHashCode();
          if (HasFirstMacPlaytime) hash ^= FirstMacPlaytime.GetHashCode();
          if (HasFirstLinuxPlaytime) hash ^= FirstLinuxPlaytime.GetHashCode();
          if (HasLastWindowsPlaytime) hash ^= LastWindowsPlaytime.GetHashCode();
          if (HasLastMacPlaytime) hash ^= LastMacPlaytime.GetHashCode();
          if (HasLastLinuxPlaytime) hash ^= LastLinuxPlaytime.GetHashCode();
          if (HasPlaytimeDisconnected) hash ^= PlaytimeDisconnected.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteInt32(Appid);
          }
          if (HasLastPlaytime) {
            output.WriteRawTag(16);
            output.WriteUInt32(LastPlaytime);
          }
          if (HasPlaytime2Weeks) {
            output.WriteRawTag(24);
            output.WriteInt32(Playtime2Weeks);
          }
          if (HasPlaytimeForever) {
            output.WriteRawTag(32);
            output.WriteInt32(PlaytimeForever);
          }
          if (HasFirstPlaytime) {
            output.WriteRawTag(40);
            output.WriteUInt32(FirstPlaytime);
          }
          if (HasPlaytimeWindowsForever) {
            output.WriteRawTag(48);
            output.WriteInt32(PlaytimeWindowsForever);
          }
          if (HasPlaytimeMacForever) {
            output.WriteRawTag(56);
            output.WriteInt32(PlaytimeMacForever);
          }
          if (HasPlaytimeLinuxForever) {
            output.WriteRawTag(64);
            output.WriteInt32(PlaytimeLinuxForever);
          }
          if (HasFirstWindowsPlaytime) {
            output.WriteRawTag(72);
            output.WriteUInt32(FirstWindowsPlaytime);
          }
          if (HasFirstMacPlaytime) {
            output.WriteRawTag(80);
            output.WriteUInt32(FirstMacPlaytime);
          }
          if (HasFirstLinuxPlaytime) {
            output.WriteRawTag(88);
            output.WriteUInt32(FirstLinuxPlaytime);
          }
          if (HasLastWindowsPlaytime) {
            output.WriteRawTag(96);
            output.WriteUInt32(LastWindowsPlaytime);
          }
          if (HasLastMacPlaytime) {
            output.WriteRawTag(104);
            output.WriteUInt32(LastMacPlaytime);
          }
          if (HasLastLinuxPlaytime) {
            output.WriteRawTag(112);
            output.WriteUInt32(LastLinuxPlaytime);
          }
          if (HasPlaytimeDisconnected) {
            output.WriteRawTag(120);
            output.WriteUInt32(PlaytimeDisconnected);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteInt32(Appid);
          }
          if (HasLastPlaytime) {
            output.WriteRawTag(16);
            output.WriteUInt32(LastPlaytime);
          }
          if (HasPlaytime2Weeks) {
            output.WriteRawTag(24);
            output.WriteInt32(Playtime2Weeks);
          }
          if (HasPlaytimeForever) {
            output.WriteRawTag(32);
            output.WriteInt32(PlaytimeForever);
          }
          if (HasFirstPlaytime) {
            output.WriteRawTag(40);
            output.WriteUInt32(FirstPlaytime);
          }
          if (HasPlaytimeWindowsForever) {
            output.WriteRawTag(48);
            output.WriteInt32(PlaytimeWindowsForever);
          }
          if (HasPlaytimeMacForever) {
            output.WriteRawTag(56);
            output.WriteInt32(PlaytimeMacForever);
          }
          if (HasPlaytimeLinuxForever) {
            output.WriteRawTag(64);
            output.WriteInt32(PlaytimeLinuxForever);
          }
          if (HasFirstWindowsPlaytime) {
            output.WriteRawTag(72);
            output.WriteUInt32(FirstWindowsPlaytime);
          }
          if (HasFirstMacPlaytime) {
            output.WriteRawTag(80);
            output.WriteUInt32(FirstMacPlaytime);
          }
          if (HasFirstLinuxPlaytime) {
            output.WriteRawTag(88);
            output.WriteUInt32(FirstLinuxPlaytime);
          }
          if (HasLastWindowsPlaytime) {
            output.WriteRawTag(96);
            output.WriteUInt32(LastWindowsPlaytime);
          }
          if (HasLastMacPlaytime) {
            output.WriteRawTag(104);
            output.WriteUInt32(LastMacPlaytime);
          }
          if (HasLastLinuxPlaytime) {
            output.WriteRawTag(112);
            output.WriteUInt32(LastLinuxPlaytime);
          }
          if (HasPlaytimeDisconnected) {
            output.WriteRawTag(120);
            output.WriteUInt32(PlaytimeDisconnected);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Appid);
          }
          if (HasLastPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastPlaytime);
          }
          if (HasPlaytime2Weeks) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Playtime2Weeks);
          }
          if (HasPlaytimeForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeForever);
          }
          if (HasFirstPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstPlaytime);
          }
          if (HasPlaytimeWindowsForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeWindowsForever);
          }
          if (HasPlaytimeMacForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeMacForever);
          }
          if (HasPlaytimeLinuxForever) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaytimeLinuxForever);
          }
          if (HasFirstWindowsPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstWindowsPlaytime);
          }
          if (HasFirstMacPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstMacPlaytime);
          }
          if (HasFirstLinuxPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstLinuxPlaytime);
          }
          if (HasLastWindowsPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastWindowsPlaytime);
          }
          if (HasLastMacPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastMacPlaytime);
          }
          if (HasLastLinuxPlaytime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastLinuxPlaytime);
          }
          if (HasPlaytimeDisconnected) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlaytimeDisconnected);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Game other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasLastPlaytime) {
            LastPlaytime = other.LastPlaytime;
          }
          if (other.HasPlaytime2Weeks) {
            Playtime2Weeks = other.Playtime2Weeks;
          }
          if (other.HasPlaytimeForever) {
            PlaytimeForever = other.PlaytimeForever;
          }
          if (other.HasFirstPlaytime) {
            FirstPlaytime = other.FirstPlaytime;
          }
          if (other.HasPlaytimeWindowsForever) {
            PlaytimeWindowsForever = other.PlaytimeWindowsForever;
          }
          if (other.HasPlaytimeMacForever) {
            PlaytimeMacForever = other.PlaytimeMacForever;
          }
          if (other.HasPlaytimeLinuxForever) {
            PlaytimeLinuxForever = other.PlaytimeLinuxForever;
          }
          if (other.HasFirstWindowsPlaytime) {
            FirstWindowsPlaytime = other.FirstWindowsPlaytime;
          }
          if (other.HasFirstMacPlaytime) {
            FirstMacPlaytime = other.FirstMacPlaytime;
          }
          if (other.HasFirstLinuxPlaytime) {
            FirstLinuxPlaytime = other.FirstLinuxPlaytime;
          }
          if (other.HasLastWindowsPlaytime) {
            LastWindowsPlaytime = other.LastWindowsPlaytime;
          }
          if (other.HasLastMacPlaytime) {
            LastMacPlaytime = other.LastMacPlaytime;
          }
          if (other.HasLastLinuxPlaytime) {
            LastLinuxPlaytime = other.LastLinuxPlaytime;
          }
          if (other.HasPlaytimeDisconnected) {
            PlaytimeDisconnected = other.PlaytimeDisconnected;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadInt32();
                break;
              }
              case 16: {
                LastPlaytime = input.ReadUInt32();
                break;
              }
              case 24: {
                Playtime2Weeks = input.ReadInt32();
                break;
              }
              case 32: {
                PlaytimeForever = input.ReadInt32();
                break;
              }
              case 40: {
                FirstPlaytime = input.ReadUInt32();
                break;
              }
              case 48: {
                PlaytimeWindowsForever = input.ReadInt32();
                break;
              }
              case 56: {
                PlaytimeMacForever = input.ReadInt32();
                break;
              }
              case 64: {
                PlaytimeLinuxForever = input.ReadInt32();
                break;
              }
              case 72: {
                FirstWindowsPlaytime = input.ReadUInt32();
                break;
              }
              case 80: {
                FirstMacPlaytime = input.ReadUInt32();
                break;
              }
              case 88: {
                FirstLinuxPlaytime = input.ReadUInt32();
                break;
              }
              case 96: {
                LastWindowsPlaytime = input.ReadUInt32();
                break;
              }
              case 104: {
                LastMacPlaytime = input.ReadUInt32();
                break;
              }
              case 112: {
                LastLinuxPlaytime = input.ReadUInt32();
                break;
              }
              case 120: {
                PlaytimeDisconnected = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadInt32();
                break;
              }
              case 16: {
                LastPlaytime = input.ReadUInt32();
                break;
              }
              case 24: {
                Playtime2Weeks = input.ReadInt32();
                break;
              }
              case 32: {
                PlaytimeForever = input.ReadInt32();
                break;
              }
              case 40: {
                FirstPlaytime = input.ReadUInt32();
                break;
              }
              case 48: {
                PlaytimeWindowsForever = input.ReadInt32();
                break;
              }
              case 56: {
                PlaytimeMacForever = input.ReadInt32();
                break;
              }
              case 64: {
                PlaytimeLinuxForever = input.ReadInt32();
                break;
              }
              case 72: {
                FirstWindowsPlaytime = input.ReadUInt32();
                break;
              }
              case 80: {
                FirstMacPlaytime = input.ReadUInt32();
                break;
              }
              case 88: {
                FirstLinuxPlaytime = input.ReadUInt32();
                break;
              }
              case 96: {
                LastWindowsPlaytime = input.ReadUInt32();
                break;
              }
              case 104: {
                LastMacPlaytime = input.ReadUInt32();
                break;
              }
              case 112: {
                LastLinuxPlaytime = input.ReadUInt32();
                break;
              }
              case 120: {
                PlaytimeDisconnected = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetTimeSSAAccepted_Request : pb::IMessage<CPlayer_GetTimeSSAAccepted_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetTimeSSAAccepted_Request> _parser = new pb::MessageParser<CPlayer_GetTimeSSAAccepted_Request>(() => new CPlayer_GetTimeSSAAccepted_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetTimeSSAAccepted_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTimeSSAAccepted_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTimeSSAAccepted_Request(CPlayer_GetTimeSSAAccepted_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTimeSSAAccepted_Request Clone() {
      return new CPlayer_GetTimeSSAAccepted_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetTimeSSAAccepted_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetTimeSSAAccepted_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetTimeSSAAccepted_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetTimeSSAAccepted_Response : pb::IMessage<CPlayer_GetTimeSSAAccepted_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetTimeSSAAccepted_Response> _parser = new pb::MessageParser<CPlayer_GetTimeSSAAccepted_Response>(() => new CPlayer_GetTimeSSAAccepted_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetTimeSSAAccepted_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTimeSSAAccepted_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTimeSSAAccepted_Response(CPlayer_GetTimeSSAAccepted_Response other) : this() {
      _hasBits0 = other._hasBits0;
      timeSsaAccepted_ = other.timeSsaAccepted_;
      timeSsaUpdated_ = other.timeSsaUpdated_;
      timeChinassaAccepted_ = other.timeChinassaAccepted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTimeSSAAccepted_Response Clone() {
      return new CPlayer_GetTimeSSAAccepted_Response(this);
    }

    /// <summary>Field number for the "time_ssa_accepted" field.</summary>
    public const int TimeSsaAcceptedFieldNumber = 1;
    private readonly static uint TimeSsaAcceptedDefaultValue = 0;

    private uint timeSsaAccepted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeSsaAccepted {
      get { if ((_hasBits0 & 1) != 0) { return timeSsaAccepted_; } else { return TimeSsaAcceptedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timeSsaAccepted_ = value;
      }
    }
    /// <summary>Gets whether the "time_ssa_accepted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeSsaAccepted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "time_ssa_accepted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeSsaAccepted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time_ssa_updated" field.</summary>
    public const int TimeSsaUpdatedFieldNumber = 2;
    private readonly static uint TimeSsaUpdatedDefaultValue = 0;

    private uint timeSsaUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeSsaUpdated {
      get { if ((_hasBits0 & 2) != 0) { return timeSsaUpdated_; } else { return TimeSsaUpdatedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timeSsaUpdated_ = value;
      }
    }
    /// <summary>Gets whether the "time_ssa_updated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeSsaUpdated {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time_ssa_updated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeSsaUpdated() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "time_chinassa_accepted" field.</summary>
    public const int TimeChinassaAcceptedFieldNumber = 3;
    private readonly static uint TimeChinassaAcceptedDefaultValue = 0;

    private uint timeChinassaAccepted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeChinassaAccepted {
      get { if ((_hasBits0 & 4) != 0) { return timeChinassaAccepted_; } else { return TimeChinassaAcceptedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        timeChinassaAccepted_ = value;
      }
    }
    /// <summary>Gets whether the "time_chinassa_accepted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeChinassaAccepted {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "time_chinassa_accepted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeChinassaAccepted() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetTimeSSAAccepted_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetTimeSSAAccepted_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeSsaAccepted != other.TimeSsaAccepted) return false;
      if (TimeSsaUpdated != other.TimeSsaUpdated) return false;
      if (TimeChinassaAccepted != other.TimeChinassaAccepted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimeSsaAccepted) hash ^= TimeSsaAccepted.GetHashCode();
      if (HasTimeSsaUpdated) hash ^= TimeSsaUpdated.GetHashCode();
      if (HasTimeChinassaAccepted) hash ^= TimeChinassaAccepted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimeSsaAccepted) {
        output.WriteRawTag(8);
        output.WriteUInt32(TimeSsaAccepted);
      }
      if (HasTimeSsaUpdated) {
        output.WriteRawTag(16);
        output.WriteUInt32(TimeSsaUpdated);
      }
      if (HasTimeChinassaAccepted) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimeChinassaAccepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimeSsaAccepted) {
        output.WriteRawTag(8);
        output.WriteUInt32(TimeSsaAccepted);
      }
      if (HasTimeSsaUpdated) {
        output.WriteRawTag(16);
        output.WriteUInt32(TimeSsaUpdated);
      }
      if (HasTimeChinassaAccepted) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimeChinassaAccepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTimeSsaAccepted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeSsaAccepted);
      }
      if (HasTimeSsaUpdated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeSsaUpdated);
      }
      if (HasTimeChinassaAccepted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeChinassaAccepted);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetTimeSSAAccepted_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasTimeSsaAccepted) {
        TimeSsaAccepted = other.TimeSsaAccepted;
      }
      if (other.HasTimeSsaUpdated) {
        TimeSsaUpdated = other.TimeSsaUpdated;
      }
      if (other.HasTimeChinassaAccepted) {
        TimeChinassaAccepted = other.TimeChinassaAccepted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeSsaAccepted = input.ReadUInt32();
            break;
          }
          case 16: {
            TimeSsaUpdated = input.ReadUInt32();
            break;
          }
          case 24: {
            TimeChinassaAccepted = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeSsaAccepted = input.ReadUInt32();
            break;
          }
          case 16: {
            TimeSsaUpdated = input.ReadUInt32();
            break;
          }
          case 24: {
            TimeChinassaAccepted = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_AcceptSSA_Request : pb::IMessage<CPlayer_AcceptSSA_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_AcceptSSA_Request> _parser = new pb::MessageParser<CPlayer_AcceptSSA_Request>(() => new CPlayer_AcceptSSA_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_AcceptSSA_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AcceptSSA_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AcceptSSA_Request(CPlayer_AcceptSSA_Request other) : this() {
      _hasBits0 = other._hasBits0;
      agreementType_ = other.agreementType_;
      timeSignedUtc_ = other.timeSignedUtc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AcceptSSA_Request Clone() {
      return new CPlayer_AcceptSSA_Request(this);
    }

    /// <summary>Field number for the "agreement_type" field.</summary>
    public const int AgreementTypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EAgreementType AgreementTypeDefaultValue = global::OpenSteamworks.Protobuf.EAgreementType.Invalid;

    private global::OpenSteamworks.Protobuf.EAgreementType agreementType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EAgreementType AgreementType {
      get { if ((_hasBits0 & 1) != 0) { return agreementType_; } else { return AgreementTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agreementType_ = value;
      }
    }
    /// <summary>Gets whether the "agreement_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgreementType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agreement_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgreementType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time_signed_utc" field.</summary>
    public const int TimeSignedUtcFieldNumber = 2;
    private readonly static uint TimeSignedUtcDefaultValue = 0;

    private uint timeSignedUtc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeSignedUtc {
      get { if ((_hasBits0 & 2) != 0) { return timeSignedUtc_; } else { return TimeSignedUtcDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timeSignedUtc_ = value;
      }
    }
    /// <summary>Gets whether the "time_signed_utc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeSignedUtc {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time_signed_utc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeSignedUtc() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_AcceptSSA_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_AcceptSSA_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AgreementType != other.AgreementType) return false;
      if (TimeSignedUtc != other.TimeSignedUtc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgreementType) hash ^= AgreementType.GetHashCode();
      if (HasTimeSignedUtc) hash ^= TimeSignedUtc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAgreementType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AgreementType);
      }
      if (HasTimeSignedUtc) {
        output.WriteRawTag(16);
        output.WriteUInt32(TimeSignedUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAgreementType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AgreementType);
      }
      if (HasTimeSignedUtc) {
        output.WriteRawTag(16);
        output.WriteUInt32(TimeSignedUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAgreementType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AgreementType);
      }
      if (HasTimeSignedUtc) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeSignedUtc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_AcceptSSA_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAgreementType) {
        AgreementType = other.AgreementType;
      }
      if (other.HasTimeSignedUtc) {
        TimeSignedUtc = other.TimeSignedUtc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AgreementType = (global::OpenSteamworks.Protobuf.EAgreementType) input.ReadEnum();
            break;
          }
          case 16: {
            TimeSignedUtc = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AgreementType = (global::OpenSteamworks.Protobuf.EAgreementType) input.ReadEnum();
            break;
          }
          case 16: {
            TimeSignedUtc = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_AcceptSSA_Response : pb::IMessage<CPlayer_AcceptSSA_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_AcceptSSA_Response> _parser = new pb::MessageParser<CPlayer_AcceptSSA_Response>(() => new CPlayer_AcceptSSA_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_AcceptSSA_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AcceptSSA_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AcceptSSA_Response(CPlayer_AcceptSSA_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AcceptSSA_Response Clone() {
      return new CPlayer_AcceptSSA_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_AcceptSSA_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_AcceptSSA_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_AcceptSSA_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetNicknameList_Request : pb::IMessage<CPlayer_GetNicknameList_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetNicknameList_Request> _parser = new pb::MessageParser<CPlayer_GetNicknameList_Request>(() => new CPlayer_GetNicknameList_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetNicknameList_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNicknameList_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNicknameList_Request(CPlayer_GetNicknameList_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNicknameList_Request Clone() {
      return new CPlayer_GetNicknameList_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetNicknameList_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetNicknameList_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetNicknameList_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetNicknameList_Response : pb::IMessage<CPlayer_GetNicknameList_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetNicknameList_Response> _parser = new pb::MessageParser<CPlayer_GetNicknameList_Response>(() => new CPlayer_GetNicknameList_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetNicknameList_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNicknameList_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNicknameList_Response(CPlayer_GetNicknameList_Response other) : this() {
      nicknames_ = other.nicknames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNicknameList_Response Clone() {
      return new CPlayer_GetNicknameList_Response(this);
    }

    /// <summary>Field number for the "nicknames" field.</summary>
    public const int NicknamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname> _repeated_nicknames_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname> nicknames_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Types.PlayerNickname> Nicknames {
      get { return nicknames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetNicknameList_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetNicknameList_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nicknames_.Equals(other.nicknames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nicknames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      nicknames_.WriteTo(output, _repeated_nicknames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      nicknames_.WriteTo(ref output, _repeated_nicknames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nicknames_.CalculateSize(_repeated_nicknames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetNicknameList_Response other) {
      if (other == null) {
        return;
      }
      nicknames_.Add(other.nicknames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nicknames_.AddEntriesFrom(input, _repeated_nicknames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            nicknames_.AddEntriesFrom(ref input, _repeated_nicknames_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_GetNicknameList_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PlayerNickname : pb::IMessage<PlayerNickname>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayerNickname> _parser = new pb::MessageParser<PlayerNickname>(() => new PlayerNickname());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlayerNickname> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_GetNicknameList_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayerNickname() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayerNickname(PlayerNickname other) : this() {
          _hasBits0 = other._hasBits0;
          accountid_ = other.accountid_;
          nickname_ = other.nickname_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayerNickname Clone() {
          return new PlayerNickname(this);
        }

        /// <summary>Field number for the "accountid" field.</summary>
        public const int AccountidFieldNumber = 1;
        private readonly static uint AccountidDefaultValue = 0;

        private uint accountid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Accountid {
          get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            accountid_ = value;
          }
        }
        /// <summary>Gets whether the "accountid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAccountid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "accountid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAccountid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "nickname" field.</summary>
        public const int NicknameFieldNumber = 2;
        private readonly static string NicknameDefaultValue = "";

        private string nickname_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Nickname {
          get { return nickname_ ?? NicknameDefaultValue; }
          set {
            nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "nickname" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNickname {
          get { return nickname_ != null; }
        }
        /// <summary>Clears the value of the "nickname" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNickname() {
          nickname_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlayerNickname);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlayerNickname other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accountid != other.Accountid) return false;
          if (Nickname != other.Nickname) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAccountid) hash ^= Accountid.GetHashCode();
          if (HasNickname) hash ^= Nickname.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAccountid) {
            output.WriteRawTag(13);
            output.WriteFixed32(Accountid);
          }
          if (HasNickname) {
            output.WriteRawTag(18);
            output.WriteString(Nickname);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAccountid) {
            output.WriteRawTag(13);
            output.WriteFixed32(Accountid);
          }
          if (HasNickname) {
            output.WriteRawTag(18);
            output.WriteString(Nickname);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAccountid) {
            size += 1 + 4;
          }
          if (HasNickname) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlayerNickname other) {
          if (other == null) {
            return;
          }
          if (other.HasAccountid) {
            Accountid = other.Accountid;
          }
          if (other.HasNickname) {
            Nickname = other.Nickname;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Accountid = input.ReadFixed32();
                break;
              }
              case 18: {
                Nickname = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 13: {
                Accountid = input.ReadFixed32();
                break;
              }
              case 18: {
                Nickname = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPerFriendPreferences_Request : pb::IMessage<CPlayer_GetPerFriendPreferences_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPerFriendPreferences_Request> _parser = new pb::MessageParser<CPlayer_GetPerFriendPreferences_Request>(() => new CPlayer_GetPerFriendPreferences_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPerFriendPreferences_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPerFriendPreferences_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPerFriendPreferences_Request(CPlayer_GetPerFriendPreferences_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPerFriendPreferences_Request Clone() {
      return new CPlayer_GetPerFriendPreferences_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPerFriendPreferences_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPerFriendPreferences_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPerFriendPreferences_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PerFriendPreferences : pb::IMessage<PerFriendPreferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PerFriendPreferences> _parser = new pb::MessageParser<PerFriendPreferences>(() => new PerFriendPreferences());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PerFriendPreferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerFriendPreferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerFriendPreferences(PerFriendPreferences other) : this() {
      _hasBits0 = other._hasBits0;
      accountid_ = other.accountid_;
      nickname_ = other.nickname_;
      notificationsShowingame_ = other.notificationsShowingame_;
      notificationsShowonline_ = other.notificationsShowonline_;
      notificationsShowmessages_ = other.notificationsShowmessages_;
      soundsShowingame_ = other.soundsShowingame_;
      soundsShowonline_ = other.soundsShowonline_;
      soundsShowmessages_ = other.soundsShowmessages_;
      notificationsSendmobile_ = other.notificationsSendmobile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PerFriendPreferences Clone() {
      return new PerFriendPreferences(this);
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 1;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Accountid {
      get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private readonly static string NicknameDefaultValue = "";

    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? NicknameDefaultValue; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "notifications_showingame" field.</summary>
    public const int NotificationsShowingameFieldNumber = 3;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsShowingameDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting notificationsShowingame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsShowingame {
      get { if ((_hasBits0 & 2) != 0) { return notificationsShowingame_; } else { return NotificationsShowingameDefaultValue; } }
      set {
        _hasBits0 |= 2;
        notificationsShowingame_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_showingame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowingame {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "notifications_showingame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowingame() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "notifications_showonline" field.</summary>
    public const int NotificationsShowonlineFieldNumber = 4;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsShowonlineDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting notificationsShowonline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsShowonline {
      get { if ((_hasBits0 & 4) != 0) { return notificationsShowonline_; } else { return NotificationsShowonlineDefaultValue; } }
      set {
        _hasBits0 |= 4;
        notificationsShowonline_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_showonline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowonline {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "notifications_showonline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowonline() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "notifications_showmessages" field.</summary>
    public const int NotificationsShowmessagesFieldNumber = 5;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsShowmessagesDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting notificationsShowmessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsShowmessages {
      get { if ((_hasBits0 & 8) != 0) { return notificationsShowmessages_; } else { return NotificationsShowmessagesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        notificationsShowmessages_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_showmessages" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowmessages {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "notifications_showmessages" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowmessages() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "sounds_showingame" field.</summary>
    public const int SoundsShowingameFieldNumber = 6;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting SoundsShowingameDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting soundsShowingame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting SoundsShowingame {
      get { if ((_hasBits0 & 16) != 0) { return soundsShowingame_; } else { return SoundsShowingameDefaultValue; } }
      set {
        _hasBits0 |= 16;
        soundsShowingame_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_showingame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsShowingame {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "sounds_showingame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsShowingame() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sounds_showonline" field.</summary>
    public const int SoundsShowonlineFieldNumber = 7;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting SoundsShowonlineDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting soundsShowonline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting SoundsShowonline {
      get { if ((_hasBits0 & 32) != 0) { return soundsShowonline_; } else { return SoundsShowonlineDefaultValue; } }
      set {
        _hasBits0 |= 32;
        soundsShowonline_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_showonline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsShowonline {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sounds_showonline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsShowonline() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "sounds_showmessages" field.</summary>
    public const int SoundsShowmessagesFieldNumber = 8;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting SoundsShowmessagesDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting soundsShowmessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting SoundsShowmessages {
      get { if ((_hasBits0 & 64) != 0) { return soundsShowmessages_; } else { return SoundsShowmessagesDefaultValue; } }
      set {
        _hasBits0 |= 64;
        soundsShowmessages_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_showmessages" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsShowmessages {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "sounds_showmessages" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsShowmessages() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "notifications_sendmobile" field.</summary>
    public const int NotificationsSendmobileFieldNumber = 9;
    private readonly static global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsSendmobileDefaultValue = global::OpenSteamworks.Protobuf.ENotificationSetting.NotifyUseDefault;

    private global::OpenSteamworks.Protobuf.ENotificationSetting notificationsSendmobile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENotificationSetting NotificationsSendmobile {
      get { if ((_hasBits0 & 128) != 0) { return notificationsSendmobile_; } else { return NotificationsSendmobileDefaultValue; } }
      set {
        _hasBits0 |= 128;
        notificationsSendmobile_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_sendmobile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsSendmobile {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "notifications_sendmobile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsSendmobile() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PerFriendPreferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PerFriendPreferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accountid != other.Accountid) return false;
      if (Nickname != other.Nickname) return false;
      if (NotificationsShowingame != other.NotificationsShowingame) return false;
      if (NotificationsShowonline != other.NotificationsShowonline) return false;
      if (NotificationsShowmessages != other.NotificationsShowmessages) return false;
      if (SoundsShowingame != other.SoundsShowingame) return false;
      if (SoundsShowonline != other.SoundsShowonline) return false;
      if (SoundsShowmessages != other.SoundsShowmessages) return false;
      if (NotificationsSendmobile != other.NotificationsSendmobile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasNotificationsShowingame) hash ^= NotificationsShowingame.GetHashCode();
      if (HasNotificationsShowonline) hash ^= NotificationsShowonline.GetHashCode();
      if (HasNotificationsShowmessages) hash ^= NotificationsShowmessages.GetHashCode();
      if (HasSoundsShowingame) hash ^= SoundsShowingame.GetHashCode();
      if (HasSoundsShowonline) hash ^= SoundsShowonline.GetHashCode();
      if (HasSoundsShowmessages) hash ^= SoundsShowmessages.GetHashCode();
      if (HasNotificationsSendmobile) hash ^= NotificationsSendmobile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (HasNickname) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (HasNotificationsShowingame) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NotificationsShowingame);
      }
      if (HasNotificationsShowonline) {
        output.WriteRawTag(32);
        output.WriteEnum((int) NotificationsShowonline);
      }
      if (HasNotificationsShowmessages) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NotificationsShowmessages);
      }
      if (HasSoundsShowingame) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SoundsShowingame);
      }
      if (HasSoundsShowonline) {
        output.WriteRawTag(56);
        output.WriteEnum((int) SoundsShowonline);
      }
      if (HasSoundsShowmessages) {
        output.WriteRawTag(64);
        output.WriteEnum((int) SoundsShowmessages);
      }
      if (HasNotificationsSendmobile) {
        output.WriteRawTag(72);
        output.WriteEnum((int) NotificationsSendmobile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (HasNickname) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (HasNotificationsShowingame) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NotificationsShowingame);
      }
      if (HasNotificationsShowonline) {
        output.WriteRawTag(32);
        output.WriteEnum((int) NotificationsShowonline);
      }
      if (HasNotificationsShowmessages) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NotificationsShowmessages);
      }
      if (HasSoundsShowingame) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SoundsShowingame);
      }
      if (HasSoundsShowonline) {
        output.WriteRawTag(56);
        output.WriteEnum((int) SoundsShowonline);
      }
      if (HasSoundsShowmessages) {
        output.WriteRawTag(64);
        output.WriteEnum((int) SoundsShowmessages);
      }
      if (HasNotificationsSendmobile) {
        output.WriteRawTag(72);
        output.WriteEnum((int) NotificationsSendmobile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountid) {
        size += 1 + 4;
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasNotificationsShowingame) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationsShowingame);
      }
      if (HasNotificationsShowonline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationsShowonline);
      }
      if (HasNotificationsShowmessages) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationsShowmessages);
      }
      if (HasSoundsShowingame) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SoundsShowingame);
      }
      if (HasSoundsShowonline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SoundsShowonline);
      }
      if (HasSoundsShowmessages) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SoundsShowmessages);
      }
      if (HasNotificationsSendmobile) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationsSendmobile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PerFriendPreferences other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasNotificationsShowingame) {
        NotificationsShowingame = other.NotificationsShowingame;
      }
      if (other.HasNotificationsShowonline) {
        NotificationsShowonline = other.NotificationsShowonline;
      }
      if (other.HasNotificationsShowmessages) {
        NotificationsShowmessages = other.NotificationsShowmessages;
      }
      if (other.HasSoundsShowingame) {
        SoundsShowingame = other.SoundsShowingame;
      }
      if (other.HasSoundsShowonline) {
        SoundsShowonline = other.SoundsShowonline;
      }
      if (other.HasSoundsShowmessages) {
        SoundsShowmessages = other.SoundsShowmessages;
      }
      if (other.HasNotificationsSendmobile) {
        NotificationsSendmobile = other.NotificationsSendmobile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            NotificationsShowingame = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 32: {
            NotificationsShowonline = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 40: {
            NotificationsShowmessages = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 48: {
            SoundsShowingame = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 56: {
            SoundsShowonline = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 64: {
            SoundsShowmessages = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 72: {
            NotificationsSendmobile = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            NotificationsShowingame = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 32: {
            NotificationsShowonline = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 40: {
            NotificationsShowmessages = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 48: {
            SoundsShowingame = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 56: {
            SoundsShowonline = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 64: {
            SoundsShowmessages = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
          case 72: {
            NotificationsSendmobile = (global::OpenSteamworks.Protobuf.ENotificationSetting) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPerFriendPreferences_Response : pb::IMessage<CPlayer_GetPerFriendPreferences_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPerFriendPreferences_Response> _parser = new pb::MessageParser<CPlayer_GetPerFriendPreferences_Response>(() => new CPlayer_GetPerFriendPreferences_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPerFriendPreferences_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPerFriendPreferences_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPerFriendPreferences_Response(CPlayer_GetPerFriendPreferences_Response other) : this() {
      preferences_ = other.preferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPerFriendPreferences_Response Clone() {
      return new CPlayer_GetPerFriendPreferences_Response(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.PerFriendPreferences> _repeated_preferences_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.PerFriendPreferences.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.PerFriendPreferences> preferences_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.PerFriendPreferences>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.PerFriendPreferences> Preferences {
      get { return preferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPerFriendPreferences_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPerFriendPreferences_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!preferences_.Equals(other.preferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= preferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      preferences_.WriteTo(output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      preferences_.WriteTo(ref output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += preferences_.CalculateSize(_repeated_preferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPerFriendPreferences_Response other) {
      if (other == null) {
        return;
      }
      preferences_.Add(other.preferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(input, _repeated_preferences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(ref input, _repeated_preferences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetPerFriendPreferences_Request : pb::IMessage<CPlayer_SetPerFriendPreferences_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetPerFriendPreferences_Request> _parser = new pb::MessageParser<CPlayer_SetPerFriendPreferences_Request>(() => new CPlayer_SetPerFriendPreferences_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetPerFriendPreferences_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetPerFriendPreferences_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetPerFriendPreferences_Request(CPlayer_SetPerFriendPreferences_Request other) : this() {
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetPerFriendPreferences_Request Clone() {
      return new CPlayer_SetPerFriendPreferences_Request(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.PerFriendPreferences preferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.PerFriendPreferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetPerFriendPreferences_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetPerFriendPreferences_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Preferences, other.Preferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetPerFriendPreferences_Request other) {
      if (other == null) {
        return;
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::OpenSteamworks.Protobuf.PerFriendPreferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.PerFriendPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.PerFriendPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetPerFriendPreferences_Response : pb::IMessage<CPlayer_SetPerFriendPreferences_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetPerFriendPreferences_Response> _parser = new pb::MessageParser<CPlayer_SetPerFriendPreferences_Response>(() => new CPlayer_SetPerFriendPreferences_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetPerFriendPreferences_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetPerFriendPreferences_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetPerFriendPreferences_Response(CPlayer_SetPerFriendPreferences_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetPerFriendPreferences_Response Clone() {
      return new CPlayer_SetPerFriendPreferences_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetPerFriendPreferences_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetPerFriendPreferences_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetPerFriendPreferences_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_AddFriend_Request : pb::IMessage<CPlayer_AddFriend_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_AddFriend_Request> _parser = new pb::MessageParser<CPlayer_AddFriend_Request>(() => new CPlayer_AddFriend_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_AddFriend_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AddFriend_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AddFriend_Request(CPlayer_AddFriend_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AddFriend_Request Clone() {
      return new CPlayer_AddFriend_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_AddFriend_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_AddFriend_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_AddFriend_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_AddFriend_Response : pb::IMessage<CPlayer_AddFriend_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_AddFriend_Response> _parser = new pb::MessageParser<CPlayer_AddFriend_Response>(() => new CPlayer_AddFriend_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_AddFriend_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AddFriend_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AddFriend_Response(CPlayer_AddFriend_Response other) : this() {
      _hasBits0 = other._hasBits0;
      inviteSent_ = other.inviteSent_;
      friendRelationship_ = other.friendRelationship_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_AddFriend_Response Clone() {
      return new CPlayer_AddFriend_Response(this);
    }

    /// <summary>Field number for the "invite_sent" field.</summary>
    public const int InviteSentFieldNumber = 1;
    private readonly static bool InviteSentDefaultValue = false;

    private bool inviteSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InviteSent {
      get { if ((_hasBits0 & 1) != 0) { return inviteSent_; } else { return InviteSentDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inviteSent_ = value;
      }
    }
    /// <summary>Gets whether the "invite_sent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInviteSent {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invite_sent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInviteSent() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "friend_relationship" field.</summary>
    public const int FriendRelationshipFieldNumber = 2;
    private readonly static uint FriendRelationshipDefaultValue = 0;

    private uint friendRelationship_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendRelationship {
      get { if ((_hasBits0 & 2) != 0) { return friendRelationship_; } else { return FriendRelationshipDefaultValue; } }
      set {
        _hasBits0 |= 2;
        friendRelationship_ = value;
      }
    }
    /// <summary>Gets whether the "friend_relationship" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendRelationship {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "friend_relationship" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendRelationship() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 3;
    private readonly static int ResultDefaultValue = 0;

    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Result {
      get { if ((_hasBits0 & 4) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 4;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_AddFriend_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_AddFriend_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviteSent != other.InviteSent) return false;
      if (FriendRelationship != other.FriendRelationship) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInviteSent) hash ^= InviteSent.GetHashCode();
      if (HasFriendRelationship) hash ^= FriendRelationship.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInviteSent) {
        output.WriteRawTag(8);
        output.WriteBool(InviteSent);
      }
      if (HasFriendRelationship) {
        output.WriteRawTag(16);
        output.WriteUInt32(FriendRelationship);
      }
      if (HasResult) {
        output.WriteRawTag(24);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInviteSent) {
        output.WriteRawTag(8);
        output.WriteBool(InviteSent);
      }
      if (HasFriendRelationship) {
        output.WriteRawTag(16);
        output.WriteUInt32(FriendRelationship);
      }
      if (HasResult) {
        output.WriteRawTag(24);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInviteSent) {
        size += 1 + 1;
      }
      if (HasFriendRelationship) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendRelationship);
      }
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_AddFriend_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasInviteSent) {
        InviteSent = other.InviteSent;
      }
      if (other.HasFriendRelationship) {
        FriendRelationship = other.FriendRelationship;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InviteSent = input.ReadBool();
            break;
          }
          case 16: {
            FriendRelationship = input.ReadUInt32();
            break;
          }
          case 24: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InviteSent = input.ReadBool();
            break;
          }
          case 16: {
            FriendRelationship = input.ReadUInt32();
            break;
          }
          case 24: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_RemoveFriend_Request : pb::IMessage<CPlayer_RemoveFriend_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_RemoveFriend_Request> _parser = new pb::MessageParser<CPlayer_RemoveFriend_Request>(() => new CPlayer_RemoveFriend_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_RemoveFriend_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RemoveFriend_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RemoveFriend_Request(CPlayer_RemoveFriend_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RemoveFriend_Request Clone() {
      return new CPlayer_RemoveFriend_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_RemoveFriend_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_RemoveFriend_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_RemoveFriend_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_RemoveFriend_Response : pb::IMessage<CPlayer_RemoveFriend_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_RemoveFriend_Response> _parser = new pb::MessageParser<CPlayer_RemoveFriend_Response>(() => new CPlayer_RemoveFriend_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_RemoveFriend_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RemoveFriend_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RemoveFriend_Response(CPlayer_RemoveFriend_Response other) : this() {
      _hasBits0 = other._hasBits0;
      friendRelationship_ = other.friendRelationship_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RemoveFriend_Response Clone() {
      return new CPlayer_RemoveFriend_Response(this);
    }

    /// <summary>Field number for the "friend_relationship" field.</summary>
    public const int FriendRelationshipFieldNumber = 1;
    private readonly static uint FriendRelationshipDefaultValue = 0;

    private uint friendRelationship_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendRelationship {
      get { if ((_hasBits0 & 1) != 0) { return friendRelationship_; } else { return FriendRelationshipDefaultValue; } }
      set {
        _hasBits0 |= 1;
        friendRelationship_ = value;
      }
    }
    /// <summary>Gets whether the "friend_relationship" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendRelationship {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "friend_relationship" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendRelationship() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_RemoveFriend_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_RemoveFriend_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendRelationship != other.FriendRelationship) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFriendRelationship) hash ^= FriendRelationship.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFriendRelationship) {
        output.WriteRawTag(8);
        output.WriteUInt32(FriendRelationship);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFriendRelationship) {
        output.WriteRawTag(8);
        output.WriteUInt32(FriendRelationship);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFriendRelationship) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendRelationship);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_RemoveFriend_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasFriendRelationship) {
        FriendRelationship = other.FriendRelationship;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendRelationship = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FriendRelationship = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_IgnoreFriend_Request : pb::IMessage<CPlayer_IgnoreFriend_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_IgnoreFriend_Request> _parser = new pb::MessageParser<CPlayer_IgnoreFriend_Request>(() => new CPlayer_IgnoreFriend_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_IgnoreFriend_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IgnoreFriend_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IgnoreFriend_Request(CPlayer_IgnoreFriend_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      unignore_ = other.unignore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IgnoreFriend_Request Clone() {
      return new CPlayer_IgnoreFriend_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unignore" field.</summary>
    public const int UnignoreFieldNumber = 2;
    private readonly static bool UnignoreDefaultValue = false;

    private bool unignore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unignore {
      get { if ((_hasBits0 & 2) != 0) { return unignore_; } else { return UnignoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        unignore_ = value;
      }
    }
    /// <summary>Gets whether the "unignore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnignore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "unignore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnignore() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_IgnoreFriend_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_IgnoreFriend_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Unignore != other.Unignore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasUnignore) hash ^= Unignore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasUnignore) {
        output.WriteRawTag(16);
        output.WriteBool(Unignore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasUnignore) {
        output.WriteRawTag(16);
        output.WriteBool(Unignore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasUnignore) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_IgnoreFriend_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasUnignore) {
        Unignore = other.Unignore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Unignore = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Unignore = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_IgnoreFriend_Response : pb::IMessage<CPlayer_IgnoreFriend_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_IgnoreFriend_Response> _parser = new pb::MessageParser<CPlayer_IgnoreFriend_Response>(() => new CPlayer_IgnoreFriend_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_IgnoreFriend_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IgnoreFriend_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IgnoreFriend_Response(CPlayer_IgnoreFriend_Response other) : this() {
      _hasBits0 = other._hasBits0;
      friendRelationship_ = other.friendRelationship_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_IgnoreFriend_Response Clone() {
      return new CPlayer_IgnoreFriend_Response(this);
    }

    /// <summary>Field number for the "friend_relationship" field.</summary>
    public const int FriendRelationshipFieldNumber = 1;
    private readonly static uint FriendRelationshipDefaultValue = 0;

    private uint friendRelationship_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendRelationship {
      get { if ((_hasBits0 & 1) != 0) { return friendRelationship_; } else { return FriendRelationshipDefaultValue; } }
      set {
        _hasBits0 |= 1;
        friendRelationship_ = value;
      }
    }
    /// <summary>Gets whether the "friend_relationship" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendRelationship {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "friend_relationship" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendRelationship() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_IgnoreFriend_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_IgnoreFriend_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendRelationship != other.FriendRelationship) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFriendRelationship) hash ^= FriendRelationship.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFriendRelationship) {
        output.WriteRawTag(8);
        output.WriteUInt32(FriendRelationship);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFriendRelationship) {
        output.WriteRawTag(8);
        output.WriteUInt32(FriendRelationship);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFriendRelationship) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendRelationship);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_IgnoreFriend_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasFriendRelationship) {
        FriendRelationship = other.FriendRelationship;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendRelationship = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FriendRelationship = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetCommunityPreferences_Request : pb::IMessage<CPlayer_GetCommunityPreferences_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetCommunityPreferences_Request> _parser = new pb::MessageParser<CPlayer_GetCommunityPreferences_Request>(() => new CPlayer_GetCommunityPreferences_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetCommunityPreferences_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityPreferences_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityPreferences_Request(CPlayer_GetCommunityPreferences_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityPreferences_Request Clone() {
      return new CPlayer_GetCommunityPreferences_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetCommunityPreferences_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetCommunityPreferences_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetCommunityPreferences_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_CommunityPreferences : pb::IMessage<CPlayer_CommunityPreferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_CommunityPreferences> _parser = new pb::MessageParser<CPlayer_CommunityPreferences>(() => new CPlayer_CommunityPreferences());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_CommunityPreferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_CommunityPreferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_CommunityPreferences(CPlayer_CommunityPreferences other) : this() {
      _hasBits0 = other._hasBits0;
      parenthesizeNicknames_ = other.parenthesizeNicknames_;
      textFilterSetting_ = other.textFilterSetting_;
      textFilterIgnoreFriends_ = other.textFilterIgnoreFriends_;
      textFilterWordsRevision_ = other.textFilterWordsRevision_;
      timestampUpdated_ = other.timestampUpdated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_CommunityPreferences Clone() {
      return new CPlayer_CommunityPreferences(this);
    }

    /// <summary>Field number for the "parenthesize_nicknames" field.</summary>
    public const int ParenthesizeNicknamesFieldNumber = 4;
    private readonly static bool ParenthesizeNicknamesDefaultValue = false;

    private bool parenthesizeNicknames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ParenthesizeNicknames {
      get { if ((_hasBits0 & 2) != 0) { return parenthesizeNicknames_; } else { return ParenthesizeNicknamesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        parenthesizeNicknames_ = value;
      }
    }
    /// <summary>Gets whether the "parenthesize_nicknames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasParenthesizeNicknames {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "parenthesize_nicknames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearParenthesizeNicknames() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "text_filter_setting" field.</summary>
    public const int TextFilterSettingFieldNumber = 5;
    private readonly static global::OpenSteamworks.Protobuf.ETextFilterSetting TextFilterSettingDefaultValue = global::OpenSteamworks.Protobuf.ETextFilterSetting.SteamLabOptedOut;

    private global::OpenSteamworks.Protobuf.ETextFilterSetting textFilterSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ETextFilterSetting TextFilterSetting {
      get { if ((_hasBits0 & 4) != 0) { return textFilterSetting_; } else { return TextFilterSettingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        textFilterSetting_ = value;
      }
    }
    /// <summary>Gets whether the "text_filter_setting" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextFilterSetting {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "text_filter_setting" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextFilterSetting() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "text_filter_ignore_friends" field.</summary>
    public const int TextFilterIgnoreFriendsFieldNumber = 6;
    private readonly static bool TextFilterIgnoreFriendsDefaultValue = true;

    private bool textFilterIgnoreFriends_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TextFilterIgnoreFriends {
      get { if ((_hasBits0 & 8) != 0) { return textFilterIgnoreFriends_; } else { return TextFilterIgnoreFriendsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        textFilterIgnoreFriends_ = value;
      }
    }
    /// <summary>Gets whether the "text_filter_ignore_friends" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextFilterIgnoreFriends {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "text_filter_ignore_friends" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextFilterIgnoreFriends() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "text_filter_words_revision" field.</summary>
    public const int TextFilterWordsRevisionFieldNumber = 7;
    private readonly static uint TextFilterWordsRevisionDefaultValue = 0;

    private uint textFilterWordsRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TextFilterWordsRevision {
      get { if ((_hasBits0 & 16) != 0) { return textFilterWordsRevision_; } else { return TextFilterWordsRevisionDefaultValue; } }
      set {
        _hasBits0 |= 16;
        textFilterWordsRevision_ = value;
      }
    }
    /// <summary>Gets whether the "text_filter_words_revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextFilterWordsRevision {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "text_filter_words_revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextFilterWordsRevision() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "timestamp_updated" field.</summary>
    public const int TimestampUpdatedFieldNumber = 3;
    private readonly static uint TimestampUpdatedDefaultValue = 0;

    private uint timestampUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimestampUpdated {
      get { if ((_hasBits0 & 1) != 0) { return timestampUpdated_; } else { return TimestampUpdatedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestampUpdated_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp_updated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestampUpdated {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp_updated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestampUpdated() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_CommunityPreferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_CommunityPreferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParenthesizeNicknames != other.ParenthesizeNicknames) return false;
      if (TextFilterSetting != other.TextFilterSetting) return false;
      if (TextFilterIgnoreFriends != other.TextFilterIgnoreFriends) return false;
      if (TextFilterWordsRevision != other.TextFilterWordsRevision) return false;
      if (TimestampUpdated != other.TimestampUpdated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasParenthesizeNicknames) hash ^= ParenthesizeNicknames.GetHashCode();
      if (HasTextFilterSetting) hash ^= TextFilterSetting.GetHashCode();
      if (HasTextFilterIgnoreFriends) hash ^= TextFilterIgnoreFriends.GetHashCode();
      if (HasTextFilterWordsRevision) hash ^= TextFilterWordsRevision.GetHashCode();
      if (HasTimestampUpdated) hash ^= TimestampUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimestampUpdated) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimestampUpdated);
      }
      if (HasParenthesizeNicknames) {
        output.WriteRawTag(32);
        output.WriteBool(ParenthesizeNicknames);
      }
      if (HasTextFilterSetting) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TextFilterSetting);
      }
      if (HasTextFilterIgnoreFriends) {
        output.WriteRawTag(48);
        output.WriteBool(TextFilterIgnoreFriends);
      }
      if (HasTextFilterWordsRevision) {
        output.WriteRawTag(56);
        output.WriteUInt32(TextFilterWordsRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimestampUpdated) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimestampUpdated);
      }
      if (HasParenthesizeNicknames) {
        output.WriteRawTag(32);
        output.WriteBool(ParenthesizeNicknames);
      }
      if (HasTextFilterSetting) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TextFilterSetting);
      }
      if (HasTextFilterIgnoreFriends) {
        output.WriteRawTag(48);
        output.WriteBool(TextFilterIgnoreFriends);
      }
      if (HasTextFilterWordsRevision) {
        output.WriteRawTag(56);
        output.WriteUInt32(TextFilterWordsRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasParenthesizeNicknames) {
        size += 1 + 1;
      }
      if (HasTextFilterSetting) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TextFilterSetting);
      }
      if (HasTextFilterIgnoreFriends) {
        size += 1 + 1;
      }
      if (HasTextFilterWordsRevision) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TextFilterWordsRevision);
      }
      if (HasTimestampUpdated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimestampUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_CommunityPreferences other) {
      if (other == null) {
        return;
      }
      if (other.HasParenthesizeNicknames) {
        ParenthesizeNicknames = other.ParenthesizeNicknames;
      }
      if (other.HasTextFilterSetting) {
        TextFilterSetting = other.TextFilterSetting;
      }
      if (other.HasTextFilterIgnoreFriends) {
        TextFilterIgnoreFriends = other.TextFilterIgnoreFriends;
      }
      if (other.HasTextFilterWordsRevision) {
        TextFilterWordsRevision = other.TextFilterWordsRevision;
      }
      if (other.HasTimestampUpdated) {
        TimestampUpdated = other.TimestampUpdated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            TimestampUpdated = input.ReadUInt32();
            break;
          }
          case 32: {
            ParenthesizeNicknames = input.ReadBool();
            break;
          }
          case 40: {
            TextFilterSetting = (global::OpenSteamworks.Protobuf.ETextFilterSetting) input.ReadEnum();
            break;
          }
          case 48: {
            TextFilterIgnoreFriends = input.ReadBool();
            break;
          }
          case 56: {
            TextFilterWordsRevision = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            TimestampUpdated = input.ReadUInt32();
            break;
          }
          case 32: {
            ParenthesizeNicknames = input.ReadBool();
            break;
          }
          case 40: {
            TextFilterSetting = (global::OpenSteamworks.Protobuf.ETextFilterSetting) input.ReadEnum();
            break;
          }
          case 48: {
            TextFilterIgnoreFriends = input.ReadBool();
            break;
          }
          case 56: {
            TextFilterWordsRevision = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetCommunityPreferences_Response : pb::IMessage<CPlayer_GetCommunityPreferences_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetCommunityPreferences_Response> _parser = new pb::MessageParser<CPlayer_GetCommunityPreferences_Response>(() => new CPlayer_GetCommunityPreferences_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetCommunityPreferences_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityPreferences_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityPreferences_Response(CPlayer_GetCommunityPreferences_Response other) : this() {
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      contentDescriptorPreferences_ = other.contentDescriptorPreferences_ != null ? other.contentDescriptorPreferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetCommunityPreferences_Response Clone() {
      return new CPlayer_GetCommunityPreferences_Response(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences preferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    /// <summary>Field number for the "content_descriptor_preferences" field.</summary>
    public const int ContentDescriptorPreferencesFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences contentDescriptorPreferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences ContentDescriptorPreferences {
      get { return contentDescriptorPreferences_; }
      set {
        contentDescriptorPreferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetCommunityPreferences_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetCommunityPreferences_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Preferences, other.Preferences)) return false;
      if (!object.Equals(ContentDescriptorPreferences, other.ContentDescriptorPreferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (contentDescriptorPreferences_ != null) hash ^= ContentDescriptorPreferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (contentDescriptorPreferences_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentDescriptorPreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (contentDescriptorPreferences_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentDescriptorPreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (contentDescriptorPreferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentDescriptorPreferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetCommunityPreferences_Response other) {
      if (other == null) {
        return;
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      if (other.contentDescriptorPreferences_ != null) {
        if (contentDescriptorPreferences_ == null) {
          ContentDescriptorPreferences = new global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences();
        }
        ContentDescriptorPreferences.MergeFrom(other.ContentDescriptorPreferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
          case 18: {
            if (contentDescriptorPreferences_ == null) {
              ContentDescriptorPreferences = new global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences();
            }
            input.ReadMessage(ContentDescriptorPreferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
          case 18: {
            if (contentDescriptorPreferences_ == null) {
              ContentDescriptorPreferences = new global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences();
            }
            input.ReadMessage(ContentDescriptorPreferences);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetCommunityPreferences_Request : pb::IMessage<CPlayer_SetCommunityPreferences_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetCommunityPreferences_Request> _parser = new pb::MessageParser<CPlayer_SetCommunityPreferences_Request>(() => new CPlayer_SetCommunityPreferences_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetCommunityPreferences_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetCommunityPreferences_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetCommunityPreferences_Request(CPlayer_SetCommunityPreferences_Request other) : this() {
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetCommunityPreferences_Request Clone() {
      return new CPlayer_SetCommunityPreferences_Request(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences preferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetCommunityPreferences_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetCommunityPreferences_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Preferences, other.Preferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetCommunityPreferences_Request other) {
      if (other == null) {
        return;
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_SetCommunityPreferences_Response : pb::IMessage<CPlayer_SetCommunityPreferences_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_SetCommunityPreferences_Response> _parser = new pb::MessageParser<CPlayer_SetCommunityPreferences_Response>(() => new CPlayer_SetCommunityPreferences_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_SetCommunityPreferences_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetCommunityPreferences_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetCommunityPreferences_Response(CPlayer_SetCommunityPreferences_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_SetCommunityPreferences_Response Clone() {
      return new CPlayer_SetCommunityPreferences_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_SetCommunityPreferences_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_SetCommunityPreferences_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_SetCommunityPreferences_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetTextFilterWords_Request : pb::IMessage<CPlayer_GetTextFilterWords_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetTextFilterWords_Request> _parser = new pb::MessageParser<CPlayer_GetTextFilterWords_Request>(() => new CPlayer_GetTextFilterWords_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetTextFilterWords_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTextFilterWords_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTextFilterWords_Request(CPlayer_GetTextFilterWords_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTextFilterWords_Request Clone() {
      return new CPlayer_GetTextFilterWords_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetTextFilterWords_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetTextFilterWords_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetTextFilterWords_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_TextFilterWords : pb::IMessage<CPlayer_TextFilterWords>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_TextFilterWords> _parser = new pb::MessageParser<CPlayer_TextFilterWords>(() => new CPlayer_TextFilterWords());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_TextFilterWords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_TextFilterWords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_TextFilterWords(CPlayer_TextFilterWords other) : this() {
      _hasBits0 = other._hasBits0;
      textFilterCustomBannedWords_ = other.textFilterCustomBannedWords_.Clone();
      textFilterCustomCleanWords_ = other.textFilterCustomCleanWords_.Clone();
      textFilterWordsRevision_ = other.textFilterWordsRevision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_TextFilterWords Clone() {
      return new CPlayer_TextFilterWords(this);
    }

    /// <summary>Field number for the "text_filter_custom_banned_words" field.</summary>
    public const int TextFilterCustomBannedWordsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_textFilterCustomBannedWords_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> textFilterCustomBannedWords_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TextFilterCustomBannedWords {
      get { return textFilterCustomBannedWords_; }
    }

    /// <summary>Field number for the "text_filter_custom_clean_words" field.</summary>
    public const int TextFilterCustomCleanWordsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_textFilterCustomCleanWords_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> textFilterCustomCleanWords_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TextFilterCustomCleanWords {
      get { return textFilterCustomCleanWords_; }
    }

    /// <summary>Field number for the "text_filter_words_revision" field.</summary>
    public const int TextFilterWordsRevisionFieldNumber = 3;
    private readonly static uint TextFilterWordsRevisionDefaultValue = 0;

    private uint textFilterWordsRevision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TextFilterWordsRevision {
      get { if ((_hasBits0 & 1) != 0) { return textFilterWordsRevision_; } else { return TextFilterWordsRevisionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        textFilterWordsRevision_ = value;
      }
    }
    /// <summary>Gets whether the "text_filter_words_revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextFilterWordsRevision {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "text_filter_words_revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextFilterWordsRevision() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_TextFilterWords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_TextFilterWords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!textFilterCustomBannedWords_.Equals(other.textFilterCustomBannedWords_)) return false;
      if(!textFilterCustomCleanWords_.Equals(other.textFilterCustomCleanWords_)) return false;
      if (TextFilterWordsRevision != other.TextFilterWordsRevision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= textFilterCustomBannedWords_.GetHashCode();
      hash ^= textFilterCustomCleanWords_.GetHashCode();
      if (HasTextFilterWordsRevision) hash ^= TextFilterWordsRevision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      textFilterCustomBannedWords_.WriteTo(output, _repeated_textFilterCustomBannedWords_codec);
      textFilterCustomCleanWords_.WriteTo(output, _repeated_textFilterCustomCleanWords_codec);
      if (HasTextFilterWordsRevision) {
        output.WriteRawTag(24);
        output.WriteUInt32(TextFilterWordsRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      textFilterCustomBannedWords_.WriteTo(ref output, _repeated_textFilterCustomBannedWords_codec);
      textFilterCustomCleanWords_.WriteTo(ref output, _repeated_textFilterCustomCleanWords_codec);
      if (HasTextFilterWordsRevision) {
        output.WriteRawTag(24);
        output.WriteUInt32(TextFilterWordsRevision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += textFilterCustomBannedWords_.CalculateSize(_repeated_textFilterCustomBannedWords_codec);
      size += textFilterCustomCleanWords_.CalculateSize(_repeated_textFilterCustomCleanWords_codec);
      if (HasTextFilterWordsRevision) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TextFilterWordsRevision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_TextFilterWords other) {
      if (other == null) {
        return;
      }
      textFilterCustomBannedWords_.Add(other.textFilterCustomBannedWords_);
      textFilterCustomCleanWords_.Add(other.textFilterCustomCleanWords_);
      if (other.HasTextFilterWordsRevision) {
        TextFilterWordsRevision = other.TextFilterWordsRevision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            textFilterCustomBannedWords_.AddEntriesFrom(input, _repeated_textFilterCustomBannedWords_codec);
            break;
          }
          case 18: {
            textFilterCustomCleanWords_.AddEntriesFrom(input, _repeated_textFilterCustomCleanWords_codec);
            break;
          }
          case 24: {
            TextFilterWordsRevision = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            textFilterCustomBannedWords_.AddEntriesFrom(ref input, _repeated_textFilterCustomBannedWords_codec);
            break;
          }
          case 18: {
            textFilterCustomCleanWords_.AddEntriesFrom(ref input, _repeated_textFilterCustomCleanWords_codec);
            break;
          }
          case 24: {
            TextFilterWordsRevision = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetTextFilterWords_Response : pb::IMessage<CPlayer_GetTextFilterWords_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetTextFilterWords_Response> _parser = new pb::MessageParser<CPlayer_GetTextFilterWords_Response>(() => new CPlayer_GetTextFilterWords_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetTextFilterWords_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTextFilterWords_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTextFilterWords_Response(CPlayer_GetTextFilterWords_Response other) : this() {
      words_ = other.words_ != null ? other.words_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetTextFilterWords_Response Clone() {
      return new CPlayer_GetTextFilterWords_Response(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int WordsFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords words_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords Words {
      get { return words_; }
      set {
        words_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetTextFilterWords_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetTextFilterWords_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Words, other.Words)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (words_ != null) hash ^= Words.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (words_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Words);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (words_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Words);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (words_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Words);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetTextFilterWords_Response other) {
      if (other == null) {
        return;
      }
      if (other.words_ != null) {
        if (words_ == null) {
          Words = new global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords();
        }
        Words.MergeFrom(other.Words);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (words_ == null) {
              Words = new global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords();
            }
            input.ReadMessage(Words);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (words_ == null) {
              Words = new global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords();
            }
            input.ReadMessage(Words);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetNewSteamAnnouncementState_Request : pb::IMessage<CPlayer_GetNewSteamAnnouncementState_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetNewSteamAnnouncementState_Request> _parser = new pb::MessageParser<CPlayer_GetNewSteamAnnouncementState_Request>(() => new CPlayer_GetNewSteamAnnouncementState_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetNewSteamAnnouncementState_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNewSteamAnnouncementState_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNewSteamAnnouncementState_Request(CPlayer_GetNewSteamAnnouncementState_Request other) : this() {
      _hasBits0 = other._hasBits0;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNewSteamAnnouncementState_Request Clone() {
      return new CPlayer_GetNewSteamAnnouncementState_Request(this);
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 1;
    private readonly static int LanguageDefaultValue = 0;

    private int language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Language {
      get { if ((_hasBits0 & 1) != 0) { return language_; } else { return LanguageDefaultValue; } }
      set {
        _hasBits0 |= 1;
        language_ = value;
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetNewSteamAnnouncementState_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetNewSteamAnnouncementState_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLanguage) {
        output.WriteRawTag(8);
        output.WriteInt32(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLanguage) {
        output.WriteRawTag(8);
        output.WriteInt32(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetNewSteamAnnouncementState_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Language = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Language = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetNewSteamAnnouncementState_Response : pb::IMessage<CPlayer_GetNewSteamAnnouncementState_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetNewSteamAnnouncementState_Response> _parser = new pb::MessageParser<CPlayer_GetNewSteamAnnouncementState_Response>(() => new CPlayer_GetNewSteamAnnouncementState_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetNewSteamAnnouncementState_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNewSteamAnnouncementState_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNewSteamAnnouncementState_Response(CPlayer_GetNewSteamAnnouncementState_Response other) : this() {
      _hasBits0 = other._hasBits0;
      state_ = other.state_;
      announcementHeadline_ = other.announcementHeadline_;
      announcementUrl_ = other.announcementUrl_;
      timePosted_ = other.timePosted_;
      announcementGid_ = other.announcementGid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetNewSteamAnnouncementState_Response Clone() {
      return new CPlayer_GetNewSteamAnnouncementState_Response(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState StateDefaultValue = global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState.Invalid;

    private global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "announcement_headline" field.</summary>
    public const int AnnouncementHeadlineFieldNumber = 2;
    private readonly static string AnnouncementHeadlineDefaultValue = "";

    private string announcementHeadline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnnouncementHeadline {
      get { return announcementHeadline_ ?? AnnouncementHeadlineDefaultValue; }
      set {
        announcementHeadline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "announcement_headline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementHeadline {
      get { return announcementHeadline_ != null; }
    }
    /// <summary>Clears the value of the "announcement_headline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementHeadline() {
      announcementHeadline_ = null;
    }

    /// <summary>Field number for the "announcement_url" field.</summary>
    public const int AnnouncementUrlFieldNumber = 3;
    private readonly static string AnnouncementUrlDefaultValue = "";

    private string announcementUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnnouncementUrl {
      get { return announcementUrl_ ?? AnnouncementUrlDefaultValue; }
      set {
        announcementUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "announcement_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementUrl {
      get { return announcementUrl_ != null; }
    }
    /// <summary>Clears the value of the "announcement_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementUrl() {
      announcementUrl_ = null;
    }

    /// <summary>Field number for the "time_posted" field.</summary>
    public const int TimePostedFieldNumber = 4;
    private readonly static uint TimePostedDefaultValue = 0;

    private uint timePosted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimePosted {
      get { if ((_hasBits0 & 2) != 0) { return timePosted_; } else { return TimePostedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timePosted_ = value;
      }
    }
    /// <summary>Gets whether the "time_posted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimePosted {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time_posted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimePosted() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "announcement_gid" field.</summary>
    public const int AnnouncementGidFieldNumber = 5;
    private readonly static ulong AnnouncementGidDefaultValue = 0UL;

    private ulong announcementGid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AnnouncementGid {
      get { if ((_hasBits0 & 4) != 0) { return announcementGid_; } else { return AnnouncementGidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        announcementGid_ = value;
      }
    }
    /// <summary>Gets whether the "announcement_gid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementGid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "announcement_gid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementGid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetNewSteamAnnouncementState_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetNewSteamAnnouncementState_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (AnnouncementHeadline != other.AnnouncementHeadline) return false;
      if (AnnouncementUrl != other.AnnouncementUrl) return false;
      if (TimePosted != other.TimePosted) return false;
      if (AnnouncementGid != other.AnnouncementGid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (HasAnnouncementHeadline) hash ^= AnnouncementHeadline.GetHashCode();
      if (HasAnnouncementUrl) hash ^= AnnouncementUrl.GetHashCode();
      if (HasTimePosted) hash ^= TimePosted.GetHashCode();
      if (HasAnnouncementGid) hash ^= AnnouncementGid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (HasAnnouncementHeadline) {
        output.WriteRawTag(18);
        output.WriteString(AnnouncementHeadline);
      }
      if (HasAnnouncementUrl) {
        output.WriteRawTag(26);
        output.WriteString(AnnouncementUrl);
      }
      if (HasTimePosted) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimePosted);
      }
      if (HasAnnouncementGid) {
        output.WriteRawTag(40);
        output.WriteUInt64(AnnouncementGid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (HasAnnouncementHeadline) {
        output.WriteRawTag(18);
        output.WriteString(AnnouncementHeadline);
      }
      if (HasAnnouncementUrl) {
        output.WriteRawTag(26);
        output.WriteString(AnnouncementUrl);
      }
      if (HasTimePosted) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimePosted);
      }
      if (HasAnnouncementGid) {
        output.WriteRawTag(40);
        output.WriteUInt64(AnnouncementGid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasAnnouncementHeadline) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnouncementHeadline);
      }
      if (HasAnnouncementUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnouncementUrl);
      }
      if (HasTimePosted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimePosted);
      }
      if (HasAnnouncementGid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AnnouncementGid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetNewSteamAnnouncementState_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasAnnouncementHeadline) {
        AnnouncementHeadline = other.AnnouncementHeadline;
      }
      if (other.HasAnnouncementUrl) {
        AnnouncementUrl = other.AnnouncementUrl;
      }
      if (other.HasTimePosted) {
        TimePosted = other.TimePosted;
      }
      if (other.HasAnnouncementGid) {
        AnnouncementGid = other.AnnouncementGid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState) input.ReadEnum();
            break;
          }
          case 18: {
            AnnouncementHeadline = input.ReadString();
            break;
          }
          case 26: {
            AnnouncementUrl = input.ReadString();
            break;
          }
          case 32: {
            TimePosted = input.ReadUInt32();
            break;
          }
          case 40: {
            AnnouncementGid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState) input.ReadEnum();
            break;
          }
          case 18: {
            AnnouncementHeadline = input.ReadString();
            break;
          }
          case 26: {
            AnnouncementUrl = input.ReadString();
            break;
          }
          case 32: {
            TimePosted = input.ReadUInt32();
            break;
          }
          case 40: {
            AnnouncementGid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_UpdateSteamAnnouncementLastRead_Request : pb::IMessage<CPlayer_UpdateSteamAnnouncementLastRead_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_UpdateSteamAnnouncementLastRead_Request> _parser = new pb::MessageParser<CPlayer_UpdateSteamAnnouncementLastRead_Request>(() => new CPlayer_UpdateSteamAnnouncementLastRead_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_UpdateSteamAnnouncementLastRead_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_UpdateSteamAnnouncementLastRead_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_UpdateSteamAnnouncementLastRead_Request(CPlayer_UpdateSteamAnnouncementLastRead_Request other) : this() {
      _hasBits0 = other._hasBits0;
      announcementGid_ = other.announcementGid_;
      timePosted_ = other.timePosted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_UpdateSteamAnnouncementLastRead_Request Clone() {
      return new CPlayer_UpdateSteamAnnouncementLastRead_Request(this);
    }

    /// <summary>Field number for the "announcement_gid" field.</summary>
    public const int AnnouncementGidFieldNumber = 1;
    private readonly static ulong AnnouncementGidDefaultValue = 0UL;

    private ulong announcementGid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AnnouncementGid {
      get { if ((_hasBits0 & 1) != 0) { return announcementGid_; } else { return AnnouncementGidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        announcementGid_ = value;
      }
    }
    /// <summary>Gets whether the "announcement_gid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementGid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "announcement_gid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementGid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time_posted" field.</summary>
    public const int TimePostedFieldNumber = 2;
    private readonly static uint TimePostedDefaultValue = 0;

    private uint timePosted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimePosted {
      get { if ((_hasBits0 & 2) != 0) { return timePosted_; } else { return TimePostedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timePosted_ = value;
      }
    }
    /// <summary>Gets whether the "time_posted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimePosted {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time_posted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimePosted() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_UpdateSteamAnnouncementLastRead_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_UpdateSteamAnnouncementLastRead_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnnouncementGid != other.AnnouncementGid) return false;
      if (TimePosted != other.TimePosted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAnnouncementGid) hash ^= AnnouncementGid.GetHashCode();
      if (HasTimePosted) hash ^= TimePosted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAnnouncementGid) {
        output.WriteRawTag(8);
        output.WriteUInt64(AnnouncementGid);
      }
      if (HasTimePosted) {
        output.WriteRawTag(16);
        output.WriteUInt32(TimePosted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAnnouncementGid) {
        output.WriteRawTag(8);
        output.WriteUInt64(AnnouncementGid);
      }
      if (HasTimePosted) {
        output.WriteRawTag(16);
        output.WriteUInt32(TimePosted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAnnouncementGid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AnnouncementGid);
      }
      if (HasTimePosted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimePosted);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_UpdateSteamAnnouncementLastRead_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAnnouncementGid) {
        AnnouncementGid = other.AnnouncementGid;
      }
      if (other.HasTimePosted) {
        TimePosted = other.TimePosted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AnnouncementGid = input.ReadUInt64();
            break;
          }
          case 16: {
            TimePosted = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AnnouncementGid = input.ReadUInt64();
            break;
          }
          case 16: {
            TimePosted = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_UpdateSteamAnnouncementLastRead_Response : pb::IMessage<CPlayer_UpdateSteamAnnouncementLastRead_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_UpdateSteamAnnouncementLastRead_Response> _parser = new pb::MessageParser<CPlayer_UpdateSteamAnnouncementLastRead_Response>(() => new CPlayer_UpdateSteamAnnouncementLastRead_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_UpdateSteamAnnouncementLastRead_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_UpdateSteamAnnouncementLastRead_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_UpdateSteamAnnouncementLastRead_Response(CPlayer_UpdateSteamAnnouncementLastRead_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_UpdateSteamAnnouncementLastRead_Response Clone() {
      return new CPlayer_UpdateSteamAnnouncementLastRead_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_UpdateSteamAnnouncementLastRead_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_UpdateSteamAnnouncementLastRead_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_UpdateSteamAnnouncementLastRead_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPrivacySettings_Request : pb::IMessage<CPlayer_GetPrivacySettings_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPrivacySettings_Request> _parser = new pb::MessageParser<CPlayer_GetPrivacySettings_Request>(() => new CPlayer_GetPrivacySettings_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPrivacySettings_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPrivacySettings_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPrivacySettings_Request(CPlayer_GetPrivacySettings_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPrivacySettings_Request Clone() {
      return new CPlayer_GetPrivacySettings_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPrivacySettings_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPrivacySettings_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPrivacySettings_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPrivacySettings : pb::IMessage<CPrivacySettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPrivacySettings> _parser = new pb::MessageParser<CPrivacySettings>(() => new CPrivacySettings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPrivacySettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPrivacySettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPrivacySettings(CPrivacySettings other) : this() {
      _hasBits0 = other._hasBits0;
      privacyState_ = other.privacyState_;
      privacyStateInventory_ = other.privacyStateInventory_;
      privacyStateGifts_ = other.privacyStateGifts_;
      privacyStateOwnedgames_ = other.privacyStateOwnedgames_;
      privacyStatePlaytime_ = other.privacyStatePlaytime_;
      privacyStateFriendslist_ = other.privacyStateFriendslist_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPrivacySettings Clone() {
      return new CPrivacySettings(this);
    }

    /// <summary>Field number for the "privacy_state" field.</summary>
    public const int PrivacyStateFieldNumber = 1;
    private readonly static int PrivacyStateDefaultValue = 0;

    private int privacyState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyState {
      get { if ((_hasBits0 & 1) != 0) { return privacyState_; } else { return PrivacyStateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        privacyState_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "privacy_state_inventory" field.</summary>
    public const int PrivacyStateInventoryFieldNumber = 2;
    private readonly static int PrivacyStateInventoryDefaultValue = 0;

    private int privacyStateInventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyStateInventory {
      get { if ((_hasBits0 & 2) != 0) { return privacyStateInventory_; } else { return PrivacyStateInventoryDefaultValue; } }
      set {
        _hasBits0 |= 2;
        privacyStateInventory_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state_inventory" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyStateInventory {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state_inventory" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyStateInventory() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "privacy_state_gifts" field.</summary>
    public const int PrivacyStateGiftsFieldNumber = 3;
    private readonly static int PrivacyStateGiftsDefaultValue = 0;

    private int privacyStateGifts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyStateGifts {
      get { if ((_hasBits0 & 4) != 0) { return privacyStateGifts_; } else { return PrivacyStateGiftsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        privacyStateGifts_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state_gifts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyStateGifts {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state_gifts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyStateGifts() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "privacy_state_ownedgames" field.</summary>
    public const int PrivacyStateOwnedgamesFieldNumber = 4;
    private readonly static int PrivacyStateOwnedgamesDefaultValue = 0;

    private int privacyStateOwnedgames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyStateOwnedgames {
      get { if ((_hasBits0 & 8) != 0) { return privacyStateOwnedgames_; } else { return PrivacyStateOwnedgamesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        privacyStateOwnedgames_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state_ownedgames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyStateOwnedgames {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state_ownedgames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyStateOwnedgames() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "privacy_state_playtime" field.</summary>
    public const int PrivacyStatePlaytimeFieldNumber = 5;
    private readonly static int PrivacyStatePlaytimeDefaultValue = 0;

    private int privacyStatePlaytime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyStatePlaytime {
      get { if ((_hasBits0 & 16) != 0) { return privacyStatePlaytime_; } else { return PrivacyStatePlaytimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        privacyStatePlaytime_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state_playtime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyStatePlaytime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state_playtime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyStatePlaytime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "privacy_state_friendslist" field.</summary>
    public const int PrivacyStateFriendslistFieldNumber = 6;
    private readonly static int PrivacyStateFriendslistDefaultValue = 0;

    private int privacyStateFriendslist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrivacyStateFriendslist {
      get { if ((_hasBits0 & 32) != 0) { return privacyStateFriendslist_; } else { return PrivacyStateFriendslistDefaultValue; } }
      set {
        _hasBits0 |= 32;
        privacyStateFriendslist_ = value;
      }
    }
    /// <summary>Gets whether the "privacy_state_friendslist" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivacyStateFriendslist {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "privacy_state_friendslist" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivacyStateFriendslist() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPrivacySettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPrivacySettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivacyState != other.PrivacyState) return false;
      if (PrivacyStateInventory != other.PrivacyStateInventory) return false;
      if (PrivacyStateGifts != other.PrivacyStateGifts) return false;
      if (PrivacyStateOwnedgames != other.PrivacyStateOwnedgames) return false;
      if (PrivacyStatePlaytime != other.PrivacyStatePlaytime) return false;
      if (PrivacyStateFriendslist != other.PrivacyStateFriendslist) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPrivacyState) hash ^= PrivacyState.GetHashCode();
      if (HasPrivacyStateInventory) hash ^= PrivacyStateInventory.GetHashCode();
      if (HasPrivacyStateGifts) hash ^= PrivacyStateGifts.GetHashCode();
      if (HasPrivacyStateOwnedgames) hash ^= PrivacyStateOwnedgames.GetHashCode();
      if (HasPrivacyStatePlaytime) hash ^= PrivacyStatePlaytime.GetHashCode();
      if (HasPrivacyStateFriendslist) hash ^= PrivacyStateFriendslist.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPrivacyState) {
        output.WriteRawTag(8);
        output.WriteInt32(PrivacyState);
      }
      if (HasPrivacyStateInventory) {
        output.WriteRawTag(16);
        output.WriteInt32(PrivacyStateInventory);
      }
      if (HasPrivacyStateGifts) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivacyStateGifts);
      }
      if (HasPrivacyStateOwnedgames) {
        output.WriteRawTag(32);
        output.WriteInt32(PrivacyStateOwnedgames);
      }
      if (HasPrivacyStatePlaytime) {
        output.WriteRawTag(40);
        output.WriteInt32(PrivacyStatePlaytime);
      }
      if (HasPrivacyStateFriendslist) {
        output.WriteRawTag(48);
        output.WriteInt32(PrivacyStateFriendslist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPrivacyState) {
        output.WriteRawTag(8);
        output.WriteInt32(PrivacyState);
      }
      if (HasPrivacyStateInventory) {
        output.WriteRawTag(16);
        output.WriteInt32(PrivacyStateInventory);
      }
      if (HasPrivacyStateGifts) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivacyStateGifts);
      }
      if (HasPrivacyStateOwnedgames) {
        output.WriteRawTag(32);
        output.WriteInt32(PrivacyStateOwnedgames);
      }
      if (HasPrivacyStatePlaytime) {
        output.WriteRawTag(40);
        output.WriteInt32(PrivacyStatePlaytime);
      }
      if (HasPrivacyStateFriendslist) {
        output.WriteRawTag(48);
        output.WriteInt32(PrivacyStateFriendslist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPrivacyState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyState);
      }
      if (HasPrivacyStateInventory) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyStateInventory);
      }
      if (HasPrivacyStateGifts) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyStateGifts);
      }
      if (HasPrivacyStateOwnedgames) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyStateOwnedgames);
      }
      if (HasPrivacyStatePlaytime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyStatePlaytime);
      }
      if (HasPrivacyStateFriendslist) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivacyStateFriendslist);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPrivacySettings other) {
      if (other == null) {
        return;
      }
      if (other.HasPrivacyState) {
        PrivacyState = other.PrivacyState;
      }
      if (other.HasPrivacyStateInventory) {
        PrivacyStateInventory = other.PrivacyStateInventory;
      }
      if (other.HasPrivacyStateGifts) {
        PrivacyStateGifts = other.PrivacyStateGifts;
      }
      if (other.HasPrivacyStateOwnedgames) {
        PrivacyStateOwnedgames = other.PrivacyStateOwnedgames;
      }
      if (other.HasPrivacyStatePlaytime) {
        PrivacyStatePlaytime = other.PrivacyStatePlaytime;
      }
      if (other.HasPrivacyStateFriendslist) {
        PrivacyStateFriendslist = other.PrivacyStateFriendslist;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PrivacyState = input.ReadInt32();
            break;
          }
          case 16: {
            PrivacyStateInventory = input.ReadInt32();
            break;
          }
          case 24: {
            PrivacyStateGifts = input.ReadInt32();
            break;
          }
          case 32: {
            PrivacyStateOwnedgames = input.ReadInt32();
            break;
          }
          case 40: {
            PrivacyStatePlaytime = input.ReadInt32();
            break;
          }
          case 48: {
            PrivacyStateFriendslist = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PrivacyState = input.ReadInt32();
            break;
          }
          case 16: {
            PrivacyStateInventory = input.ReadInt32();
            break;
          }
          case 24: {
            PrivacyStateGifts = input.ReadInt32();
            break;
          }
          case 32: {
            PrivacyStateOwnedgames = input.ReadInt32();
            break;
          }
          case 40: {
            PrivacyStatePlaytime = input.ReadInt32();
            break;
          }
          case 48: {
            PrivacyStateFriendslist = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetPrivacySettings_Response : pb::IMessage<CPlayer_GetPrivacySettings_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetPrivacySettings_Response> _parser = new pb::MessageParser<CPlayer_GetPrivacySettings_Response>(() => new CPlayer_GetPrivacySettings_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetPrivacySettings_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPrivacySettings_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPrivacySettings_Response(CPlayer_GetPrivacySettings_Response other) : this() {
      privacySettings_ = other.privacySettings_ != null ? other.privacySettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetPrivacySettings_Response Clone() {
      return new CPlayer_GetPrivacySettings_Response(this);
    }

    /// <summary>Field number for the "privacy_settings" field.</summary>
    public const int PrivacySettingsFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPrivacySettings privacySettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPrivacySettings PrivacySettings {
      get { return privacySettings_; }
      set {
        privacySettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetPrivacySettings_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetPrivacySettings_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrivacySettings, other.PrivacySettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (privacySettings_ != null) hash ^= PrivacySettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (privacySettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrivacySettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (privacySettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrivacySettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (privacySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivacySettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetPrivacySettings_Response other) {
      if (other == null) {
        return;
      }
      if (other.privacySettings_ != null) {
        if (privacySettings_ == null) {
          PrivacySettings = new global::OpenSteamworks.Protobuf.CPrivacySettings();
        }
        PrivacySettings.MergeFrom(other.PrivacySettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (privacySettings_ == null) {
              PrivacySettings = new global::OpenSteamworks.Protobuf.CPrivacySettings();
            }
            input.ReadMessage(PrivacySettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (privacySettings_ == null) {
              PrivacySettings = new global::OpenSteamworks.Protobuf.CPrivacySettings();
            }
            input.ReadMessage(PrivacySettings);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetDurationControl_Request : pb::IMessage<CPlayer_GetDurationControl_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetDurationControl_Request> _parser = new pb::MessageParser<CPlayer_GetDurationControl_Request>(() => new CPlayer_GetDurationControl_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetDurationControl_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetDurationControl_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetDurationControl_Request(CPlayer_GetDurationControl_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetDurationControl_Request Clone() {
      return new CPlayer_GetDurationControl_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetDurationControl_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetDurationControl_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetDurationControl_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_GetDurationControl_Response : pb::IMessage<CPlayer_GetDurationControl_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_GetDurationControl_Response> _parser = new pb::MessageParser<CPlayer_GetDurationControl_Response>(() => new CPlayer_GetDurationControl_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_GetDurationControl_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetDurationControl_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetDurationControl_Response(CPlayer_GetDurationControl_Response other) : this() {
      _hasBits0 = other._hasBits0;
      isEnabled_ = other.isEnabled_;
      seconds_ = other.seconds_;
      secondsToday_ = other.secondsToday_;
      isSteamchinaAccount_ = other.isSteamchinaAccount_;
      isAgeVerified_ = other.isAgeVerified_;
      secondsAllowedToday_ = other.secondsAllowedToday_;
      ageVerificationPending_ = other.ageVerificationPending_;
      blocminors_ = other.blocminors_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_GetDurationControl_Response Clone() {
      return new CPlayer_GetDurationControl_Response(this);
    }

    /// <summary>Field number for the "is_enabled" field.</summary>
    public const int IsEnabledFieldNumber = 1;
    private readonly static bool IsEnabledDefaultValue = false;

    private bool isEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEnabled {
      get { if ((_hasBits0 & 1) != 0) { return isEnabled_; } else { return IsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "is_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 2;
    private readonly static int SecondsDefaultValue = 0;

    private int seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seconds {
      get { if ((_hasBits0 & 2) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seconds_ = value;
      }
    }
    /// <summary>Gets whether the "seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seconds_today" field.</summary>
    public const int SecondsTodayFieldNumber = 3;
    private readonly static int SecondsTodayDefaultValue = 0;

    private int secondsToday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SecondsToday {
      get { if ((_hasBits0 & 4) != 0) { return secondsToday_; } else { return SecondsTodayDefaultValue; } }
      set {
        _hasBits0 |= 4;
        secondsToday_ = value;
      }
    }
    /// <summary>Gets whether the "seconds_today" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsToday {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "seconds_today" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsToday() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_steamchina_account" field.</summary>
    public const int IsSteamchinaAccountFieldNumber = 4;
    private readonly static bool IsSteamchinaAccountDefaultValue = false;

    private bool isSteamchinaAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSteamchinaAccount {
      get { if ((_hasBits0 & 8) != 0) { return isSteamchinaAccount_; } else { return IsSteamchinaAccountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isSteamchinaAccount_ = value;
      }
    }
    /// <summary>Gets whether the "is_steamchina_account" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSteamchinaAccount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_steamchina_account" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSteamchinaAccount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "is_age_verified" field.</summary>
    public const int IsAgeVerifiedFieldNumber = 5;
    private readonly static bool IsAgeVerifiedDefaultValue = false;

    private bool isAgeVerified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAgeVerified {
      get { if ((_hasBits0 & 16) != 0) { return isAgeVerified_; } else { return IsAgeVerifiedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isAgeVerified_ = value;
      }
    }
    /// <summary>Gets whether the "is_age_verified" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAgeVerified {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_age_verified" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAgeVerified() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "seconds_allowed_today" field.</summary>
    public const int SecondsAllowedTodayFieldNumber = 6;
    private readonly static uint SecondsAllowedTodayDefaultValue = 0;

    private uint secondsAllowedToday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SecondsAllowedToday {
      get { if ((_hasBits0 & 32) != 0) { return secondsAllowedToday_; } else { return SecondsAllowedTodayDefaultValue; } }
      set {
        _hasBits0 |= 32;
        secondsAllowedToday_ = value;
      }
    }
    /// <summary>Gets whether the "seconds_allowed_today" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsAllowedToday {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "seconds_allowed_today" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsAllowedToday() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "age_verification_pending" field.</summary>
    public const int AgeVerificationPendingFieldNumber = 7;
    private readonly static bool AgeVerificationPendingDefaultValue = false;

    private bool ageVerificationPending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AgeVerificationPending {
      get { if ((_hasBits0 & 64) != 0) { return ageVerificationPending_; } else { return AgeVerificationPendingDefaultValue; } }
      set {
        _hasBits0 |= 64;
        ageVerificationPending_ = value;
      }
    }
    /// <summary>Gets whether the "age_verification_pending" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgeVerificationPending {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "age_verification_pending" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgeVerificationPending() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "blocminors" field.</summary>
    public const int BlocminorsFieldNumber = 8;
    private readonly static bool BlocminorsDefaultValue = false;

    private bool blocminors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Blocminors {
      get { if ((_hasBits0 & 128) != 0) { return blocminors_; } else { return BlocminorsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        blocminors_ = value;
      }
    }
    /// <summary>Gets whether the "blocminors" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlocminors {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "blocminors" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlocminors() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_GetDurationControl_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_GetDurationControl_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsEnabled != other.IsEnabled) return false;
      if (Seconds != other.Seconds) return false;
      if (SecondsToday != other.SecondsToday) return false;
      if (IsSteamchinaAccount != other.IsSteamchinaAccount) return false;
      if (IsAgeVerified != other.IsAgeVerified) return false;
      if (SecondsAllowedToday != other.SecondsAllowedToday) return false;
      if (AgeVerificationPending != other.AgeVerificationPending) return false;
      if (Blocminors != other.Blocminors) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsEnabled) hash ^= IsEnabled.GetHashCode();
      if (HasSeconds) hash ^= Seconds.GetHashCode();
      if (HasSecondsToday) hash ^= SecondsToday.GetHashCode();
      if (HasIsSteamchinaAccount) hash ^= IsSteamchinaAccount.GetHashCode();
      if (HasIsAgeVerified) hash ^= IsAgeVerified.GetHashCode();
      if (HasSecondsAllowedToday) hash ^= SecondsAllowedToday.GetHashCode();
      if (HasAgeVerificationPending) hash ^= AgeVerificationPending.GetHashCode();
      if (HasBlocminors) hash ^= Blocminors.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnabled);
      }
      if (HasSeconds) {
        output.WriteRawTag(16);
        output.WriteInt32(Seconds);
      }
      if (HasSecondsToday) {
        output.WriteRawTag(24);
        output.WriteInt32(SecondsToday);
      }
      if (HasIsSteamchinaAccount) {
        output.WriteRawTag(32);
        output.WriteBool(IsSteamchinaAccount);
      }
      if (HasIsAgeVerified) {
        output.WriteRawTag(40);
        output.WriteBool(IsAgeVerified);
      }
      if (HasSecondsAllowedToday) {
        output.WriteRawTag(48);
        output.WriteUInt32(SecondsAllowedToday);
      }
      if (HasAgeVerificationPending) {
        output.WriteRawTag(56);
        output.WriteBool(AgeVerificationPending);
      }
      if (HasBlocminors) {
        output.WriteRawTag(64);
        output.WriteBool(Blocminors);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnabled);
      }
      if (HasSeconds) {
        output.WriteRawTag(16);
        output.WriteInt32(Seconds);
      }
      if (HasSecondsToday) {
        output.WriteRawTag(24);
        output.WriteInt32(SecondsToday);
      }
      if (HasIsSteamchinaAccount) {
        output.WriteRawTag(32);
        output.WriteBool(IsSteamchinaAccount);
      }
      if (HasIsAgeVerified) {
        output.WriteRawTag(40);
        output.WriteBool(IsAgeVerified);
      }
      if (HasSecondsAllowedToday) {
        output.WriteRawTag(48);
        output.WriteUInt32(SecondsAllowedToday);
      }
      if (HasAgeVerificationPending) {
        output.WriteRawTag(56);
        output.WriteBool(AgeVerificationPending);
      }
      if (HasBlocminors) {
        output.WriteRawTag(64);
        output.WriteBool(Blocminors);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsEnabled) {
        size += 1 + 1;
      }
      if (HasSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seconds);
      }
      if (HasSecondsToday) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondsToday);
      }
      if (HasIsSteamchinaAccount) {
        size += 1 + 1;
      }
      if (HasIsAgeVerified) {
        size += 1 + 1;
      }
      if (HasSecondsAllowedToday) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsAllowedToday);
      }
      if (HasAgeVerificationPending) {
        size += 1 + 1;
      }
      if (HasBlocminors) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_GetDurationControl_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasIsEnabled) {
        IsEnabled = other.IsEnabled;
      }
      if (other.HasSeconds) {
        Seconds = other.Seconds;
      }
      if (other.HasSecondsToday) {
        SecondsToday = other.SecondsToday;
      }
      if (other.HasIsSteamchinaAccount) {
        IsSteamchinaAccount = other.IsSteamchinaAccount;
      }
      if (other.HasIsAgeVerified) {
        IsAgeVerified = other.IsAgeVerified;
      }
      if (other.HasSecondsAllowedToday) {
        SecondsAllowedToday = other.SecondsAllowedToday;
      }
      if (other.HasAgeVerificationPending) {
        AgeVerificationPending = other.AgeVerificationPending;
      }
      if (other.HasBlocminors) {
        Blocminors = other.Blocminors;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsEnabled = input.ReadBool();
            break;
          }
          case 16: {
            Seconds = input.ReadInt32();
            break;
          }
          case 24: {
            SecondsToday = input.ReadInt32();
            break;
          }
          case 32: {
            IsSteamchinaAccount = input.ReadBool();
            break;
          }
          case 40: {
            IsAgeVerified = input.ReadBool();
            break;
          }
          case 48: {
            SecondsAllowedToday = input.ReadUInt32();
            break;
          }
          case 56: {
            AgeVerificationPending = input.ReadBool();
            break;
          }
          case 64: {
            Blocminors = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsEnabled = input.ReadBool();
            break;
          }
          case 16: {
            Seconds = input.ReadInt32();
            break;
          }
          case 24: {
            SecondsToday = input.ReadInt32();
            break;
          }
          case 32: {
            IsSteamchinaAccount = input.ReadBool();
            break;
          }
          case 40: {
            IsAgeVerified = input.ReadBool();
            break;
          }
          case 48: {
            SecondsAllowedToday = input.ReadUInt32();
            break;
          }
          case 56: {
            AgeVerificationPending = input.ReadBool();
            break;
          }
          case 64: {
            Blocminors = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_RecordDisconnectedPlaytime_Request : pb::IMessage<CPlayer_RecordDisconnectedPlaytime_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_RecordDisconnectedPlaytime_Request> _parser = new pb::MessageParser<CPlayer_RecordDisconnectedPlaytime_Request>(() => new CPlayer_RecordDisconnectedPlaytime_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_RecordDisconnectedPlaytime_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RecordDisconnectedPlaytime_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RecordDisconnectedPlaytime_Request(CPlayer_RecordDisconnectedPlaytime_Request other) : this() {
      playSessions_ = other.playSessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RecordDisconnectedPlaytime_Request Clone() {
      return new CPlayer_RecordDisconnectedPlaytime_Request(this);
    }

    /// <summary>Field number for the "play_sessions" field.</summary>
    public const int PlaySessionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory> _repeated_playSessions_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory> playSessions_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Types.PlayHistory> PlaySessions {
      get { return playSessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_RecordDisconnectedPlaytime_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_RecordDisconnectedPlaytime_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playSessions_.Equals(other.playSessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playSessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playSessions_.WriteTo(output, _repeated_playSessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playSessions_.WriteTo(ref output, _repeated_playSessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += playSessions_.CalculateSize(_repeated_playSessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_RecordDisconnectedPlaytime_Request other) {
      if (other == null) {
        return;
      }
      playSessions_.Add(other.playSessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            playSessions_.AddEntriesFrom(input, _repeated_playSessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            playSessions_.AddEntriesFrom(ref input, _repeated_playSessions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CPlayer_RecordDisconnectedPlaytime_Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PlayHistory : pb::IMessage<PlayHistory>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlayHistory> _parser = new pb::MessageParser<PlayHistory>(() => new PlayHistory());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlayHistory> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CPlayer_RecordDisconnectedPlaytime_Request.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayHistory() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayHistory(PlayHistory other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          sessionTimeStart_ = other.sessionTimeStart_;
          seconds_ = other.seconds_;
          offline_ = other.offline_;
          owner_ = other.owner_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlayHistory Clone() {
          return new PlayHistory(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "session_time_start" field.</summary>
        public const int SessionTimeStartFieldNumber = 2;
        private readonly static uint SessionTimeStartDefaultValue = 0;

        private uint sessionTimeStart_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint SessionTimeStart {
          get { if ((_hasBits0 & 2) != 0) { return sessionTimeStart_; } else { return SessionTimeStartDefaultValue; } }
          set {
            _hasBits0 |= 2;
            sessionTimeStart_ = value;
          }
        }
        /// <summary>Gets whether the "session_time_start" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSessionTimeStart {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "session_time_start" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSessionTimeStart() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "seconds" field.</summary>
        public const int SecondsFieldNumber = 3;
        private readonly static uint SecondsDefaultValue = 0;

        private uint seconds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Seconds {
          get { if ((_hasBits0 & 4) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
          set {
            _hasBits0 |= 4;
            seconds_ = value;
          }
        }
        /// <summary>Gets whether the "seconds" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSeconds {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "seconds" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSeconds() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "offline" field.</summary>
        public const int OfflineFieldNumber = 4;
        private readonly static bool OfflineDefaultValue = false;

        private bool offline_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Offline {
          get { if ((_hasBits0 & 8) != 0) { return offline_; } else { return OfflineDefaultValue; } }
          set {
            _hasBits0 |= 8;
            offline_ = value;
          }
        }
        /// <summary>Gets whether the "offline" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOffline {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "offline" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOffline() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "owner" field.</summary>
        public const int OwnerFieldNumber = 5;
        private readonly static uint OwnerDefaultValue = 0;

        private uint owner_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Owner {
          get { if ((_hasBits0 & 16) != 0) { return owner_; } else { return OwnerDefaultValue; } }
          set {
            _hasBits0 |= 16;
            owner_ = value;
          }
        }
        /// <summary>Gets whether the "owner" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOwner {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "owner" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOwner() {
          _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlayHistory);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlayHistory other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (SessionTimeStart != other.SessionTimeStart) return false;
          if (Seconds != other.Seconds) return false;
          if (Offline != other.Offline) return false;
          if (Owner != other.Owner) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasSessionTimeStart) hash ^= SessionTimeStart.GetHashCode();
          if (HasSeconds) hash ^= Seconds.GetHashCode();
          if (HasOffline) hash ^= Offline.GetHashCode();
          if (HasOwner) hash ^= Owner.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasSessionTimeStart) {
            output.WriteRawTag(16);
            output.WriteUInt32(SessionTimeStart);
          }
          if (HasSeconds) {
            output.WriteRawTag(24);
            output.WriteUInt32(Seconds);
          }
          if (HasOffline) {
            output.WriteRawTag(32);
            output.WriteBool(Offline);
          }
          if (HasOwner) {
            output.WriteRawTag(40);
            output.WriteUInt32(Owner);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasSessionTimeStart) {
            output.WriteRawTag(16);
            output.WriteUInt32(SessionTimeStart);
          }
          if (HasSeconds) {
            output.WriteRawTag(24);
            output.WriteUInt32(Seconds);
          }
          if (HasOffline) {
            output.WriteRawTag(32);
            output.WriteBool(Offline);
          }
          if (HasOwner) {
            output.WriteRawTag(40);
            output.WriteUInt32(Owner);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (HasSessionTimeStart) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SessionTimeStart);
          }
          if (HasSeconds) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seconds);
          }
          if (HasOffline) {
            size += 1 + 1;
          }
          if (HasOwner) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Owner);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlayHistory other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasSessionTimeStart) {
            SessionTimeStart = other.SessionTimeStart;
          }
          if (other.HasSeconds) {
            Seconds = other.Seconds;
          }
          if (other.HasOffline) {
            Offline = other.Offline;
          }
          if (other.HasOwner) {
            Owner = other.Owner;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 16: {
                SessionTimeStart = input.ReadUInt32();
                break;
              }
              case 24: {
                Seconds = input.ReadUInt32();
                break;
              }
              case 32: {
                Offline = input.ReadBool();
                break;
              }
              case 40: {
                Owner = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 16: {
                SessionTimeStart = input.ReadUInt32();
                break;
              }
              case 24: {
                Seconds = input.ReadUInt32();
                break;
              }
              case 32: {
                Offline = input.ReadBool();
                break;
              }
              case 40: {
                Owner = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_RecordDisconnectedPlaytime_Response : pb::IMessage<CPlayer_RecordDisconnectedPlaytime_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_RecordDisconnectedPlaytime_Response> _parser = new pb::MessageParser<CPlayer_RecordDisconnectedPlaytime_Response>(() => new CPlayer_RecordDisconnectedPlaytime_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_RecordDisconnectedPlaytime_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RecordDisconnectedPlaytime_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RecordDisconnectedPlaytime_Response(CPlayer_RecordDisconnectedPlaytime_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_RecordDisconnectedPlaytime_Response Clone() {
      return new CPlayer_RecordDisconnectedPlaytime_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_RecordDisconnectedPlaytime_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_RecordDisconnectedPlaytime_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_RecordDisconnectedPlaytime_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_LastPlayedTimes_Notification : pb::IMessage<CPlayer_LastPlayedTimes_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_LastPlayedTimes_Notification> _parser = new pb::MessageParser<CPlayer_LastPlayedTimes_Notification>(() => new CPlayer_LastPlayedTimes_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_LastPlayedTimes_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_LastPlayedTimes_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_LastPlayedTimes_Notification(CPlayer_LastPlayedTimes_Notification other) : this() {
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_LastPlayedTimes_Notification Clone() {
      return new CPlayer_LastPlayedTimes_Notification(this);
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game> _repeated_games_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game> games_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CPlayer_GetLastPlayedTimes_Response.Types.Game> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_LastPlayedTimes_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_LastPlayedTimes_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      games_.WriteTo(ref output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_LastPlayedTimes_Notification other) {
      if (other == null) {
        return;
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_FriendNicknameChanged_Notification : pb::IMessage<CPlayer_FriendNicknameChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_FriendNicknameChanged_Notification> _parser = new pb::MessageParser<CPlayer_FriendNicknameChanged_Notification>(() => new CPlayer_FriendNicknameChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_FriendNicknameChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_FriendNicknameChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_FriendNicknameChanged_Notification(CPlayer_FriendNicknameChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      accountid_ = other.accountid_;
      nickname_ = other.nickname_;
      isEchoToSelf_ = other.isEchoToSelf_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_FriendNicknameChanged_Notification Clone() {
      return new CPlayer_FriendNicknameChanged_Notification(this);
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 1;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Accountid {
      get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private readonly static string NicknameDefaultValue = "";

    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? NicknameDefaultValue; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "is_echo_to_self" field.</summary>
    public const int IsEchoToSelfFieldNumber = 3;
    private readonly static bool IsEchoToSelfDefaultValue = false;

    private bool isEchoToSelf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEchoToSelf {
      get { if ((_hasBits0 & 2) != 0) { return isEchoToSelf_; } else { return IsEchoToSelfDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isEchoToSelf_ = value;
      }
    }
    /// <summary>Gets whether the "is_echo_to_self" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEchoToSelf {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_echo_to_self" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEchoToSelf() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_FriendNicknameChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_FriendNicknameChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accountid != other.Accountid) return false;
      if (Nickname != other.Nickname) return false;
      if (IsEchoToSelf != other.IsEchoToSelf) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasIsEchoToSelf) hash ^= IsEchoToSelf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (HasNickname) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (HasIsEchoToSelf) {
        output.WriteRawTag(24);
        output.WriteBool(IsEchoToSelf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (HasNickname) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (HasIsEchoToSelf) {
        output.WriteRawTag(24);
        output.WriteBool(IsEchoToSelf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountid) {
        size += 1 + 4;
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasIsEchoToSelf) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_FriendNicknameChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasIsEchoToSelf) {
        IsEchoToSelf = other.IsEchoToSelf;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            IsEchoToSelf = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            IsEchoToSelf = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_FriendEquippedProfileItemsChanged_Notification : pb::IMessage<CPlayer_FriendEquippedProfileItemsChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_FriendEquippedProfileItemsChanged_Notification> _parser = new pb::MessageParser<CPlayer_FriendEquippedProfileItemsChanged_Notification>(() => new CPlayer_FriendEquippedProfileItemsChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_FriendEquippedProfileItemsChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_FriendEquippedProfileItemsChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_FriendEquippedProfileItemsChanged_Notification(CPlayer_FriendEquippedProfileItemsChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      accountid_ = other.accountid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_FriendEquippedProfileItemsChanged_Notification Clone() {
      return new CPlayer_FriendEquippedProfileItemsChanged_Notification(this);
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 1;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Accountid {
      get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_FriendEquippedProfileItemsChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_FriendEquippedProfileItemsChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accountid != other.Accountid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountid) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_FriendEquippedProfileItemsChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_NewSteamAnnouncementState_Notification : pb::IMessage<CPlayer_NewSteamAnnouncementState_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_NewSteamAnnouncementState_Notification> _parser = new pb::MessageParser<CPlayer_NewSteamAnnouncementState_Notification>(() => new CPlayer_NewSteamAnnouncementState_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_NewSteamAnnouncementState_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_NewSteamAnnouncementState_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_NewSteamAnnouncementState_Notification(CPlayer_NewSteamAnnouncementState_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      state_ = other.state_;
      announcementHeadline_ = other.announcementHeadline_;
      announcementUrl_ = other.announcementUrl_;
      timePosted_ = other.timePosted_;
      announcementGid_ = other.announcementGid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_NewSteamAnnouncementState_Notification Clone() {
      return new CPlayer_NewSteamAnnouncementState_Notification(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState StateDefaultValue = global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState.Invalid;

    private global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState State {
      get { if ((_hasBits0 & 1) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "announcement_headline" field.</summary>
    public const int AnnouncementHeadlineFieldNumber = 2;
    private readonly static string AnnouncementHeadlineDefaultValue = "";

    private string announcementHeadline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnnouncementHeadline {
      get { return announcementHeadline_ ?? AnnouncementHeadlineDefaultValue; }
      set {
        announcementHeadline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "announcement_headline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementHeadline {
      get { return announcementHeadline_ != null; }
    }
    /// <summary>Clears the value of the "announcement_headline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementHeadline() {
      announcementHeadline_ = null;
    }

    /// <summary>Field number for the "announcement_url" field.</summary>
    public const int AnnouncementUrlFieldNumber = 3;
    private readonly static string AnnouncementUrlDefaultValue = "";

    private string announcementUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnnouncementUrl {
      get { return announcementUrl_ ?? AnnouncementUrlDefaultValue; }
      set {
        announcementUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "announcement_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementUrl {
      get { return announcementUrl_ != null; }
    }
    /// <summary>Clears the value of the "announcement_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementUrl() {
      announcementUrl_ = null;
    }

    /// <summary>Field number for the "time_posted" field.</summary>
    public const int TimePostedFieldNumber = 4;
    private readonly static uint TimePostedDefaultValue = 0;

    private uint timePosted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimePosted {
      get { if ((_hasBits0 & 2) != 0) { return timePosted_; } else { return TimePostedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timePosted_ = value;
      }
    }
    /// <summary>Gets whether the "time_posted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimePosted {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time_posted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimePosted() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "announcement_gid" field.</summary>
    public const int AnnouncementGidFieldNumber = 5;
    private readonly static ulong AnnouncementGidDefaultValue = 0UL;

    private ulong announcementGid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AnnouncementGid {
      get { if ((_hasBits0 & 4) != 0) { return announcementGid_; } else { return AnnouncementGidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        announcementGid_ = value;
      }
    }
    /// <summary>Gets whether the "announcement_gid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnnouncementGid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "announcement_gid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnnouncementGid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_NewSteamAnnouncementState_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_NewSteamAnnouncementState_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (AnnouncementHeadline != other.AnnouncementHeadline) return false;
      if (AnnouncementUrl != other.AnnouncementUrl) return false;
      if (TimePosted != other.TimePosted) return false;
      if (AnnouncementGid != other.AnnouncementGid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (HasAnnouncementHeadline) hash ^= AnnouncementHeadline.GetHashCode();
      if (HasAnnouncementUrl) hash ^= AnnouncementUrl.GetHashCode();
      if (HasTimePosted) hash ^= TimePosted.GetHashCode();
      if (HasAnnouncementGid) hash ^= AnnouncementGid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (HasAnnouncementHeadline) {
        output.WriteRawTag(18);
        output.WriteString(AnnouncementHeadline);
      }
      if (HasAnnouncementUrl) {
        output.WriteRawTag(26);
        output.WriteString(AnnouncementUrl);
      }
      if (HasTimePosted) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimePosted);
      }
      if (HasAnnouncementGid) {
        output.WriteRawTag(40);
        output.WriteUInt64(AnnouncementGid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (HasAnnouncementHeadline) {
        output.WriteRawTag(18);
        output.WriteString(AnnouncementHeadline);
      }
      if (HasAnnouncementUrl) {
        output.WriteRawTag(26);
        output.WriteString(AnnouncementUrl);
      }
      if (HasTimePosted) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimePosted);
      }
      if (HasAnnouncementGid) {
        output.WriteRawTag(40);
        output.WriteUInt64(AnnouncementGid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasAnnouncementHeadline) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnouncementHeadline);
      }
      if (HasAnnouncementUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnouncementUrl);
      }
      if (HasTimePosted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimePosted);
      }
      if (HasAnnouncementGid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AnnouncementGid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_NewSteamAnnouncementState_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasAnnouncementHeadline) {
        AnnouncementHeadline = other.AnnouncementHeadline;
      }
      if (other.HasAnnouncementUrl) {
        AnnouncementUrl = other.AnnouncementUrl;
      }
      if (other.HasTimePosted) {
        TimePosted = other.TimePosted;
      }
      if (other.HasAnnouncementGid) {
        AnnouncementGid = other.AnnouncementGid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState) input.ReadEnum();
            break;
          }
          case 18: {
            AnnouncementHeadline = input.ReadString();
            break;
          }
          case 26: {
            AnnouncementUrl = input.ReadString();
            break;
          }
          case 32: {
            TimePosted = input.ReadUInt32();
            break;
          }
          case 40: {
            AnnouncementGid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::OpenSteamworks.Protobuf.ENewSteamAnnouncementState) input.ReadEnum();
            break;
          }
          case 18: {
            AnnouncementHeadline = input.ReadString();
            break;
          }
          case 26: {
            AnnouncementUrl = input.ReadString();
            break;
          }
          case 32: {
            TimePosted = input.ReadUInt32();
            break;
          }
          case 40: {
            AnnouncementGid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_CommunityPreferencesChanged_Notification : pb::IMessage<CPlayer_CommunityPreferencesChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_CommunityPreferencesChanged_Notification> _parser = new pb::MessageParser<CPlayer_CommunityPreferencesChanged_Notification>(() => new CPlayer_CommunityPreferencesChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_CommunityPreferencesChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_CommunityPreferencesChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_CommunityPreferencesChanged_Notification(CPlayer_CommunityPreferencesChanged_Notification other) : this() {
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      contentDescriptorPreferences_ = other.contentDescriptorPreferences_ != null ? other.contentDescriptorPreferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_CommunityPreferencesChanged_Notification Clone() {
      return new CPlayer_CommunityPreferencesChanged_Notification(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences preferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    /// <summary>Field number for the "content_descriptor_preferences" field.</summary>
    public const int ContentDescriptorPreferencesFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences contentDescriptorPreferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences ContentDescriptorPreferences {
      get { return contentDescriptorPreferences_; }
      set {
        contentDescriptorPreferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_CommunityPreferencesChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_CommunityPreferencesChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Preferences, other.Preferences)) return false;
      if (!object.Equals(ContentDescriptorPreferences, other.ContentDescriptorPreferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (contentDescriptorPreferences_ != null) hash ^= ContentDescriptorPreferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (contentDescriptorPreferences_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentDescriptorPreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (preferences_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Preferences);
      }
      if (contentDescriptorPreferences_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentDescriptorPreferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (contentDescriptorPreferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentDescriptorPreferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_CommunityPreferencesChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      if (other.contentDescriptorPreferences_ != null) {
        if (contentDescriptorPreferences_ == null) {
          ContentDescriptorPreferences = new global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences();
        }
        ContentDescriptorPreferences.MergeFrom(other.ContentDescriptorPreferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
          case 18: {
            if (contentDescriptorPreferences_ == null) {
              ContentDescriptorPreferences = new global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences();
            }
            input.ReadMessage(ContentDescriptorPreferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.CPlayer_CommunityPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
          case 18: {
            if (contentDescriptorPreferences_ == null) {
              ContentDescriptorPreferences = new global::OpenSteamworks.Protobuf.UserContentDescriptorPreferences();
            }
            input.ReadMessage(ContentDescriptorPreferences);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_TextFilterWordsChanged_Notification : pb::IMessage<CPlayer_TextFilterWordsChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_TextFilterWordsChanged_Notification> _parser = new pb::MessageParser<CPlayer_TextFilterWordsChanged_Notification>(() => new CPlayer_TextFilterWordsChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_TextFilterWordsChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_TextFilterWordsChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_TextFilterWordsChanged_Notification(CPlayer_TextFilterWordsChanged_Notification other) : this() {
      words_ = other.words_ != null ? other.words_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_TextFilterWordsChanged_Notification Clone() {
      return new CPlayer_TextFilterWordsChanged_Notification(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int WordsFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords words_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords Words {
      get { return words_; }
      set {
        words_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_TextFilterWordsChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_TextFilterWordsChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Words, other.Words)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (words_ != null) hash ^= Words.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (words_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Words);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (words_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Words);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (words_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Words);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_TextFilterWordsChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.words_ != null) {
        if (words_ == null) {
          Words = new global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords();
        }
        Words.MergeFrom(other.Words);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (words_ == null) {
              Words = new global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords();
            }
            input.ReadMessage(Words);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (words_ == null) {
              Words = new global::OpenSteamworks.Protobuf.CPlayer_TextFilterWords();
            }
            input.ReadMessage(Words);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_PerFriendPreferencesChanged_Notification : pb::IMessage<CPlayer_PerFriendPreferencesChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_PerFriendPreferencesChanged_Notification> _parser = new pb::MessageParser<CPlayer_PerFriendPreferencesChanged_Notification>(() => new CPlayer_PerFriendPreferencesChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_PerFriendPreferencesChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PerFriendPreferencesChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PerFriendPreferencesChanged_Notification(CPlayer_PerFriendPreferencesChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      accountid_ = other.accountid_;
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PerFriendPreferencesChanged_Notification Clone() {
      return new CPlayer_PerFriendPreferencesChanged_Notification(this);
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 1;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Accountid {
      get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.PerFriendPreferences preferences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.PerFriendPreferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_PerFriendPreferencesChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_PerFriendPreferencesChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accountid != other.Accountid) return false;
      if (!object.Equals(Preferences, other.Preferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (preferences_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountid) {
        output.WriteRawTag(13);
        output.WriteFixed32(Accountid);
      }
      if (preferences_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountid) {
        size += 1 + 4;
      }
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_PerFriendPreferencesChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::OpenSteamworks.Protobuf.PerFriendPreferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
          case 18: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.PerFriendPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Accountid = input.ReadFixed32();
            break;
          }
          case 18: {
            if (preferences_ == null) {
              Preferences = new global::OpenSteamworks.Protobuf.PerFriendPreferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPlayer_PrivacySettingsChanged_Notification : pb::IMessage<CPlayer_PrivacySettingsChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPlayer_PrivacySettingsChanged_Notification> _parser = new pb::MessageParser<CPlayer_PrivacySettingsChanged_Notification>(() => new CPlayer_PrivacySettingsChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPlayer_PrivacySettingsChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesPlayerSteamclientReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PrivacySettingsChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PrivacySettingsChanged_Notification(CPlayer_PrivacySettingsChanged_Notification other) : this() {
      privacySettings_ = other.privacySettings_ != null ? other.privacySettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPlayer_PrivacySettingsChanged_Notification Clone() {
      return new CPlayer_PrivacySettingsChanged_Notification(this);
    }

    /// <summary>Field number for the "privacy_settings" field.</summary>
    public const int PrivacySettingsFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CPrivacySettings privacySettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CPrivacySettings PrivacySettings {
      get { return privacySettings_; }
      set {
        privacySettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPlayer_PrivacySettingsChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPlayer_PrivacySettingsChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrivacySettings, other.PrivacySettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (privacySettings_ != null) hash ^= PrivacySettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (privacySettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrivacySettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (privacySettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrivacySettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (privacySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivacySettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPlayer_PrivacySettingsChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.privacySettings_ != null) {
        if (privacySettings_ == null) {
          PrivacySettings = new global::OpenSteamworks.Protobuf.CPrivacySettings();
        }
        PrivacySettings.MergeFrom(other.PrivacySettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (privacySettings_ == null) {
              PrivacySettings = new global::OpenSteamworks.Protobuf.CPrivacySettings();
            }
            input.ReadMessage(PrivacySettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (privacySettings_ == null) {
              PrivacySettings = new global::OpenSteamworks.Protobuf.CPrivacySettings();
            }
            input.ReadMessage(PrivacySettings);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
