// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_chatusability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_chatusability.proto</summary>
  public static partial class ServiceChatusabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for service_chatusability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceChatusabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtzZXJ2aWNlX2NoYXR1c2FiaWxpdHkucHJvdG8aIGdvb2dsZS9wcm90b2J1",
            "Zi9kZXNjcmlwdG9yLnByb3RvGhFjb21tb25fYmFzZS5wcm90byLTAwoyQ0No",
            "YXRVc2FiaWxpdHlfQ2xpZW50VXNhYmlsaXR5TWV0cmljc19Ob3RpZmljYXRp",
            "b24SFgoObWV0cmljc19ydW5faWQYASABKA0SFAoMY2xpZW50X2J1aWxkGAIg",
            "ASgNEhcKD21ldHJpY3NfdmVyc2lvbhgDIAEoDRIOCgZpbl93ZWIYBCABKAgS",
            "TgoIc2V0dGluZ3MYCiABKAsyPC5DQ2hhdFVzYWJpbGl0eV9DbGllbnRVc2Fi",
            "aWxpdHlNZXRyaWNzX05vdGlmaWNhdGlvbl9TZXR0aW5ncxJZCg52b2ljZV9z",
            "ZXR0aW5ncxgLIAEoCzJBLkNDaGF0VXNhYmlsaXR5X0NsaWVudFVzYWJpbGl0",
            "eU1ldHJpY3NfTm90aWZpY2F0aW9uX1ZvaWNlU2V0dGluZ3MSTQoIdWlfc3Rh",
            "dGUYDCABKAsyOy5DQ2hhdFVzYWJpbGl0eV9DbGllbnRVc2FiaWxpdHlNZXRy",
            "aWNzX05vdGlmaWNhdGlvbl9VSVN0YXRlEkwKB21ldHJpY3MYDSABKAsyOy5D",
            "Q2hhdFVzYWJpbGl0eV9DbGllbnRVc2FiaWxpdHlNZXRyaWNzX05vdGlmaWNh",
            "dGlvbl9NZXRyaWNzIvMCCjpDQ2hhdFVzYWJpbGl0eV9DbGllbnRVc2FiaWxp",
            "dHlNZXRyaWNzX05vdGlmaWNhdGlvbl9NZXRyaWNzEhUKDWZyaWVuZHNfY291",
            "bnQYASABKAUSHgoWZnJpZW5kc19jYXRlZ29yeV9jb3VudBgCIAEoBRIhChlm",
            "cmllbmRzX2NhdGVnb3JpemVkX2NvdW50GAMgASgFEhwKFGZyaWVuZHNfb25s",
            "aW5lX2NvdW50GAQgASgFEh0KFWZyaWVuZHNfaW5fZ2FtZV9jb3VudBgFIAEo",
            "BRInCh9mcmllbmRzX2luX2dhbWVfc2luZ2xldG9uX2NvdW50GAYgASgFEhgK",
            "EGdhbWVfZ3JvdXBfY291bnQYByABKAUSHgoWZnJpZW5kc19mYXZvcml0ZV9j",
            "b3VudBgIIAEoBRIYChBncm91cF9jaGF0X2NvdW50GAkgASgFEiEKGWdyb3Vw",
            "X2NoYXRfZmF2b3JpdGVfY291bnQYCiABKAUiigcKO0NDaGF0VXNhYmlsaXR5",
            "X0NsaWVudFVzYWJpbGl0eU1ldHJpY3NfTm90aWZpY2F0aW9uX1NldHRpbmdz",
            "EiEKGW5vdGlmaWNhdGlvbnNfc2hvd19pbmdhbWUYASABKAgSIQoZbm90aWZp",
            "Y2F0aW9uc19zaG93X29ubGluZRgCIAEoCBIiChpub3RpZmljYXRpb25zX3No",
            "b3dfbWVzc2FnZRgDIAEoCBIuCiZub3RpZmljYXRpb25zX2V2ZW50c19hbmRf",
            "YW5ub3VuY2VtZW50cxgEIAEoCBIaChJzb3VuZHNfcGxheV9pbmdhbWUYBSAB",
            "KAgSGgoSc291bmRzX3BsYXlfb25saW5lGAYgASgIEhsKE3NvdW5kc19wbGF5",
            "X21lc3NhZ2UYByABKAgSJwofc291bmRzX2V2ZW50c19hbmRfYW5ub3VuY2Vt",
            "ZW50cxgIIAEoCBIeChZhbHdheXNfbmV3X2NoYXRfd2luZG93GAkgASgIEicK",
            "H2ZvcmNlX2FscGhhYmV0aWNfZnJpZW5kX3NvcnRpbmcYCiABKAgSFwoPY2hh",
            "dF9mbGFzaF9tb2RlGAsgASgFEhsKE3JlbWVtYmVyX29wZW5fY2hhdHMYDCAB",
            "KAgSGgoSY29tcGFjdF9xdWljYWNjZXNzGA0gASgIEhwKFGNvbXBhY3RfZnJp",
            "ZW5kc19saXN0GA4gASgIEjEKKW5vdGlmaWNhdGlvbnNfc2hvd19jaGF0X3Jv",
            "b21fbm90aWZpY2F0aW9uGA8gASgIEioKInNvdW5kc19wbGF5X2NoYXRfcm9v",
            "bV9ub3RpZmljYXRpb24YECABKAgSKgoiaGlkZV9vZmZsaW5lX2ZyaWVuZHNf",
            "aW5fdGFnX2dyb3VwcxgRIAEoCBIgChhoaWRlX2NhdGVnb3JpemVkX2ZyaWVu",
            "ZHMYEiABKAgSKgoiY2F0ZWdvcml6ZV9pbl9nYW1lX2ZyaWVuZHNfYnlfZ2Ft",
            "ZRgTIAEoCBIWCg5jaGF0X2ZvbnRfc2l6ZRgUIAEoBRIXCg91c2UyNGhvdXJf",
            "Y2xvY2sYFSABKAgSGwoTZG9fbm90X2Rpc3R1cmJfbW9kZRgWIAEoCBIeChZk",
            "aXNhYmxlX2VtYmVkX2lubGluaW5nGBcgASgIEhkKEXNpZ25faW50b19mcmll",
            "bmRzGBggASgIEhgKEGFuaW1hdGVkX2F2YXRhcnMYGSABKAgiiQUKOkNDaGF0",
            "VXNhYmlsaXR5X0NsaWVudFVzYWJpbGl0eU1ldHJpY3NfTm90aWZpY2F0aW9u",
            "X1VJU3RhdGUSGwoTZnJpZW5kc19saXN0X2hlaWdodBgBIAEoBRIaChJmcmll",
            "bmRzX2xpc3Rfd2lkdGgYAiABKAUSGwoTZnJpZW5kc19saXN0X2RvY2tlZBgD",
            "IAEoCBIeChZmcmllbmRzX2xpc3RfY29sbGFwc2VkGAQgASgIEicKH2ZyaWVu",
            "ZHNfbGlzdF9ncm91cF9jaGF0c19oZWlnaHQYBSABKAUSHAoUZnJpZW5kc19s",
            "aXN0X3Zpc2libGUYBiABKAgSGgoSY2hhdF9wb3B1cHNfb3BlbmVkGAcgASgF",
            "Eh4KFmdyb3VwX2NoYXRfdGFic19vcGVuZWQYCCABKAUSHwoXZnJpZW5kX2No",
            "YXRfdGFic19vcGVuZWQYCSABKAUSGQoRY2hhdF93aW5kb3dfd2lkdGgYCiAB",
            "KAUSGgoSY2hhdF93aW5kb3dfaGVpZ2h0GAsgASgFEmwKEWNhdGVnb3J5X2Nv",
            "bGxhcHNlGAwgASgLMlEuQ0NoYXRVc2FiaWxpdHlfQ2xpZW50VXNhYmlsaXR5",
            "TWV0cmljc19Ob3RpZmljYXRpb25fVUlTdGF0ZV9DYXRlZ29yeUNvbGxhcHNl",
            "U3RhdGUSJQodZ3JvdXBfY2hhdF9sZWZ0X2NvbF9jb2xsYXBzZWQYDSABKAUS",
            "JgoeZ3JvdXBfY2hhdF9yaWdodF9jb2xfY29sbGFwc2VkGA4gASgFEiAKGGlu",
            "X29uZV9vbl9vbmVfdm9pY2VfY2hhdBgPIAEoCBIbChNpbl9ncm91cF92b2lj",
            "ZV9jaGF0GBAgASgIIt8BClBDQ2hhdFVzYWJpbGl0eV9DbGllbnRVc2FiaWxp",
            "dHlNZXRyaWNzX05vdGlmaWNhdGlvbl9VSVN0YXRlX0NhdGVnb3J5Q29sbGFw",
            "c2VTdGF0ZRIZChFpbl9nYW1lX2NvbGxhcHNlZBgBIAEoCBIYChBvbmxpbmVf",
            "Y29sbGFwc2VkGAIgASgIEhkKEW9mZmxpbmVfY29sbGFwc2VkGAMgASgIEh0K",
            "FWdhbWVfZ3JvdXBzX2NvbGxhcHNlZBgEIAEoBRIcChRjYXRlZ29yaWVzX2Nv",
            "bGxhcHNlZBgFIAEoBSKbAwpAQ0NoYXRVc2FiaWxpdHlfQ2xpZW50VXNhYmls",
            "aXR5TWV0cmljc19Ob3RpZmljYXRpb25fVm9pY2VTZXR0aW5ncxIYChB2b2lj",
            "ZV9pbnB1dF9nYWluGAEgASgCEhkKEXZvaWNlX291dHB1dF9nYWluGAIgASgC",
            "EhgKEG5vaXNlX2dhdGVfbGV2ZWwYAyABKAUSIwobdm9pY2VfdXNlX2VjaG9f",
            "Y2FuY2VsbGF0aW9uGAQgASgIEiQKHHZvaWNlX3VzZV9ub2lzZV9jYW5jZWxs",
            "YXRpb24YBSABKAgSIwobdm9pY2VfdXNlX2F1dG9fZ2Fpbl9jb250cm9sGAYg",
            "ASgIEiAKGHNlbGVjdGVkX25vbl9kZWZhdWx0X21pYxgHIAEoCBIjChtzZWxl",
            "Y3RlZF9ub25fZGVmYXVsdF9vdXRwdXQYCCABKAgSGgoScHVzaF90b190YWxl",
            "bmFibGVkGAkgASgIEhwKFHB1c2hfdG9fbXV0ZV9lbmFibGVkGAogASgIEhcK",
            "D3BsYXlfcHR0X3NvdW5kcxgLIAEoCCJTCjlDQ2hhdFVzYWJpbGl0eV9SZXF1",
            "ZXN0Q2xpZW50VXNhYmlsaXR5TWV0cmljc19Ob3RpZmljYXRpb24SFgoObWV0",
            "cmljc19ydW5faWQYASABKA0ycQoNQ2hhdFVzYWJpbGl0eRJgChxOb3RpZnlD",
            "bGllbnRVc2FiaWxpdHlNZXRyaWNzEjMuQ0NoYXRVc2FiaWxpdHlfQ2xpZW50",
            "VXNhYmlsaXR5TWV0cmljc19Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlMoUB",
            "ChNDaGF0VXNhYmlsaXR5Q2xpZW50Em4KI05vdGlmeVJlcXVlc3RDbGllbnRV",
            "c2FiaWxpdHlNZXRyaWNzEjouQ0NoYXRVc2FiaWxpdHlfUmVxdWVzdENsaWVu",
            "dFVzYWJpbGl0eU1ldHJpY3NfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZUIg",
            "qgIdT3BlblN0ZWFtd29ya3MuUHJvdG9idWYuV2ViVUk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.WebUI.CommonBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification.Parser, new[]{ "MetricsRunId", "ClientBuild", "MetricsVersion", "InWeb", "Settings", "VoiceSettings", "UiState", "Metrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics.Parser, new[]{ "FriendsCount", "FriendsCategoryCount", "FriendsCategorizedCount", "FriendsOnlineCount", "FriendsInGameCount", "FriendsInGameSingletonCount", "GameGroupCount", "FriendsFavoriteCount", "GroupChatCount", "GroupChatFavoriteCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings.Parser, new[]{ "NotificationsShowIngame", "NotificationsShowOnline", "NotificationsShowMessage", "NotificationsEventsAndAnnouncements", "SoundsPlayIngame", "SoundsPlayOnline", "SoundsPlayMessage", "SoundsEventsAndAnnouncements", "AlwaysNewChatWindow", "ForceAlphabeticFriendSorting", "ChatFlashMode", "RememberOpenChats", "CompactQuicaccess", "CompactFriendsList", "NotificationsShowChatRoomNotification", "SoundsPlayChatRoomNotification", "HideOfflineFriendsInTagGroups", "HideCategorizedFriends", "CategorizeInGameFriendsByGame", "ChatFontSize", "Use24HourClock", "DoNotDisturbMode", "DisableEmbedInlining", "SignIntoFriends", "AnimatedAvatars" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState.Parser, new[]{ "FriendsListHeight", "FriendsListWidth", "FriendsListDocked", "FriendsListCollapsed", "FriendsListGroupChatsHeight", "FriendsListVisible", "ChatPopupsOpened", "GroupChatTabsOpened", "FriendChatTabsOpened", "ChatWindowWidth", "ChatWindowHeight", "CategoryCollapse", "GroupChatLeftColCollapsed", "GroupChatRightColCollapsed", "InOneOnOneVoiceChat", "InGroupVoiceChat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState.Parser, new[]{ "InGameCollapsed", "OnlineCollapsed", "OfflineCollapsed", "GameGroupsCollapsed", "CategoriesCollapsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings.Parser, new[]{ "VoiceInputGain", "VoiceOutputGain", "NoiseGateLevel", "VoiceUseEchoCancellation", "VoiceUseNoiseCancellation", "VoiceUseAutoGainControl", "SelectedNonDefaultMic", "SelectedNonDefaultOutput", "PushToTalenabled", "PushToMuteEnabled", "PlayPttSounds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CChatUsability_RequestClientUsabilityMetrics_Notification), global::OpenSteamworks.Protobuf.WebUI.CChatUsability_RequestClientUsabilityMetrics_Notification.Parser, new[]{ "MetricsRunId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_ClientUsabilityMetrics_Notification : pb::IMessage<CChatUsability_ClientUsabilityMetrics_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification> _parser = new pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification>(() => new CChatUsability_ClientUsabilityMetrics_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification(CChatUsability_ClientUsabilityMetrics_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      metricsRunId_ = other.metricsRunId_;
      clientBuild_ = other.clientBuild_;
      metricsVersion_ = other.metricsVersion_;
      inWeb_ = other.inWeb_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      voiceSettings_ = other.voiceSettings_ != null ? other.voiceSettings_.Clone() : null;
      uiState_ = other.uiState_ != null ? other.uiState_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification Clone() {
      return new CChatUsability_ClientUsabilityMetrics_Notification(this);
    }

    /// <summary>Field number for the "metrics_run_id" field.</summary>
    public const int MetricsRunIdFieldNumber = 1;
    private readonly static uint MetricsRunIdDefaultValue = 0;

    private uint metricsRunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MetricsRunId {
      get { if ((_hasBits0 & 1) != 0) { return metricsRunId_; } else { return MetricsRunIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        metricsRunId_ = value;
      }
    }
    /// <summary>Gets whether the "metrics_run_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetricsRunId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "metrics_run_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetricsRunId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_build" field.</summary>
    public const int ClientBuildFieldNumber = 2;
    private readonly static uint ClientBuildDefaultValue = 0;

    private uint clientBuild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientBuild {
      get { if ((_hasBits0 & 2) != 0) { return clientBuild_; } else { return ClientBuildDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clientBuild_ = value;
      }
    }
    /// <summary>Gets whether the "client_build" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientBuild {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "client_build" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientBuild() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "metrics_version" field.</summary>
    public const int MetricsVersionFieldNumber = 3;
    private readonly static uint MetricsVersionDefaultValue = 0;

    private uint metricsVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MetricsVersion {
      get { if ((_hasBits0 & 4) != 0) { return metricsVersion_; } else { return MetricsVersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        metricsVersion_ = value;
      }
    }
    /// <summary>Gets whether the "metrics_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetricsVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "metrics_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetricsVersion() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "in_web" field.</summary>
    public const int InWebFieldNumber = 4;
    private readonly static bool InWebDefaultValue = false;

    private bool inWeb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InWeb {
      get { if ((_hasBits0 & 8) != 0) { return inWeb_; } else { return InWebDefaultValue; } }
      set {
        _hasBits0 |= 8;
        inWeb_ = value;
      }
    }
    /// <summary>Gets whether the "in_web" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInWeb {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "in_web" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInWeb() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 10;
    private global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings settings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    /// <summary>Field number for the "voice_settings" field.</summary>
    public const int VoiceSettingsFieldNumber = 11;
    private global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings voiceSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings VoiceSettings {
      get { return voiceSettings_; }
      set {
        voiceSettings_ = value;
      }
    }

    /// <summary>Field number for the "ui_state" field.</summary>
    public const int UiStateFieldNumber = 12;
    private global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState uiState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState UiState {
      get { return uiState_; }
      set {
        uiState_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 13;
    private global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics metrics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_ClientUsabilityMetrics_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_ClientUsabilityMetrics_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MetricsRunId != other.MetricsRunId) return false;
      if (ClientBuild != other.ClientBuild) return false;
      if (MetricsVersion != other.MetricsVersion) return false;
      if (InWeb != other.InWeb) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      if (!object.Equals(VoiceSettings, other.VoiceSettings)) return false;
      if (!object.Equals(UiState, other.UiState)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMetricsRunId) hash ^= MetricsRunId.GetHashCode();
      if (HasClientBuild) hash ^= ClientBuild.GetHashCode();
      if (HasMetricsVersion) hash ^= MetricsVersion.GetHashCode();
      if (HasInWeb) hash ^= InWeb.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (voiceSettings_ != null) hash ^= VoiceSettings.GetHashCode();
      if (uiState_ != null) hash ^= UiState.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMetricsRunId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MetricsRunId);
      }
      if (HasClientBuild) {
        output.WriteRawTag(16);
        output.WriteUInt32(ClientBuild);
      }
      if (HasMetricsVersion) {
        output.WriteRawTag(24);
        output.WriteUInt32(MetricsVersion);
      }
      if (HasInWeb) {
        output.WriteRawTag(32);
        output.WriteBool(InWeb);
      }
      if (settings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Settings);
      }
      if (voiceSettings_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VoiceSettings);
      }
      if (uiState_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UiState);
      }
      if (metrics_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Metrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMetricsRunId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MetricsRunId);
      }
      if (HasClientBuild) {
        output.WriteRawTag(16);
        output.WriteUInt32(ClientBuild);
      }
      if (HasMetricsVersion) {
        output.WriteRawTag(24);
        output.WriteUInt32(MetricsVersion);
      }
      if (HasInWeb) {
        output.WriteRawTag(32);
        output.WriteBool(InWeb);
      }
      if (settings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Settings);
      }
      if (voiceSettings_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VoiceSettings);
      }
      if (uiState_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UiState);
      }
      if (metrics_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Metrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMetricsRunId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MetricsRunId);
      }
      if (HasClientBuild) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientBuild);
      }
      if (HasMetricsVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MetricsVersion);
      }
      if (HasInWeb) {
        size += 1 + 1;
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (voiceSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoiceSettings);
      }
      if (uiState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UiState);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_ClientUsabilityMetrics_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasMetricsRunId) {
        MetricsRunId = other.MetricsRunId;
      }
      if (other.HasClientBuild) {
        ClientBuild = other.ClientBuild;
      }
      if (other.HasMetricsVersion) {
        MetricsVersion = other.MetricsVersion;
      }
      if (other.HasInWeb) {
        InWeb = other.InWeb;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings();
        }
        Settings.MergeFrom(other.Settings);
      }
      if (other.voiceSettings_ != null) {
        if (voiceSettings_ == null) {
          VoiceSettings = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings();
        }
        VoiceSettings.MergeFrom(other.VoiceSettings);
      }
      if (other.uiState_ != null) {
        if (uiState_ == null) {
          UiState = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState();
        }
        UiState.MergeFrom(other.UiState);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MetricsRunId = input.ReadUInt32();
            break;
          }
          case 16: {
            ClientBuild = input.ReadUInt32();
            break;
          }
          case 24: {
            MetricsVersion = input.ReadUInt32();
            break;
          }
          case 32: {
            InWeb = input.ReadBool();
            break;
          }
          case 82: {
            if (settings_ == null) {
              Settings = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 90: {
            if (voiceSettings_ == null) {
              VoiceSettings = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings();
            }
            input.ReadMessage(VoiceSettings);
            break;
          }
          case 98: {
            if (uiState_ == null) {
              UiState = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState();
            }
            input.ReadMessage(UiState);
            break;
          }
          case 106: {
            if (metrics_ == null) {
              Metrics = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MetricsRunId = input.ReadUInt32();
            break;
          }
          case 16: {
            ClientBuild = input.ReadUInt32();
            break;
          }
          case 24: {
            MetricsVersion = input.ReadUInt32();
            break;
          }
          case 32: {
            InWeb = input.ReadBool();
            break;
          }
          case 82: {
            if (settings_ == null) {
              Settings = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Settings();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 90: {
            if (voiceSettings_ == null) {
              VoiceSettings = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings();
            }
            input.ReadMessage(VoiceSettings);
            break;
          }
          case 98: {
            if (uiState_ == null) {
              UiState = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState();
            }
            input.ReadMessage(UiState);
            break;
          }
          case 106: {
            if (metrics_ == null) {
              Metrics = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_ClientUsabilityMetrics_Notification_Metrics : pb::IMessage<CChatUsability_ClientUsabilityMetrics_Notification_Metrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_Metrics> _parser = new pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(() => new CChatUsability_ClientUsabilityMetrics_Notification_Metrics());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_Metrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_Metrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_Metrics(CChatUsability_ClientUsabilityMetrics_Notification_Metrics other) : this() {
      _hasBits0 = other._hasBits0;
      friendsCount_ = other.friendsCount_;
      friendsCategoryCount_ = other.friendsCategoryCount_;
      friendsCategorizedCount_ = other.friendsCategorizedCount_;
      friendsOnlineCount_ = other.friendsOnlineCount_;
      friendsInGameCount_ = other.friendsInGameCount_;
      friendsInGameSingletonCount_ = other.friendsInGameSingletonCount_;
      gameGroupCount_ = other.gameGroupCount_;
      friendsFavoriteCount_ = other.friendsFavoriteCount_;
      groupChatCount_ = other.groupChatCount_;
      groupChatFavoriteCount_ = other.groupChatFavoriteCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_Metrics Clone() {
      return new CChatUsability_ClientUsabilityMetrics_Notification_Metrics(this);
    }

    /// <summary>Field number for the "friends_count" field.</summary>
    public const int FriendsCountFieldNumber = 1;
    private readonly static int FriendsCountDefaultValue = 0;

    private int friendsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsCount {
      get { if ((_hasBits0 & 1) != 0) { return friendsCount_; } else { return FriendsCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        friendsCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "friends_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "friends_category_count" field.</summary>
    public const int FriendsCategoryCountFieldNumber = 2;
    private readonly static int FriendsCategoryCountDefaultValue = 0;

    private int friendsCategoryCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsCategoryCount {
      get { if ((_hasBits0 & 2) != 0) { return friendsCategoryCount_; } else { return FriendsCategoryCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        friendsCategoryCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_category_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsCategoryCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "friends_category_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsCategoryCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "friends_categorized_count" field.</summary>
    public const int FriendsCategorizedCountFieldNumber = 3;
    private readonly static int FriendsCategorizedCountDefaultValue = 0;

    private int friendsCategorizedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsCategorizedCount {
      get { if ((_hasBits0 & 4) != 0) { return friendsCategorizedCount_; } else { return FriendsCategorizedCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        friendsCategorizedCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_categorized_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsCategorizedCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "friends_categorized_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsCategorizedCount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "friends_online_count" field.</summary>
    public const int FriendsOnlineCountFieldNumber = 4;
    private readonly static int FriendsOnlineCountDefaultValue = 0;

    private int friendsOnlineCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsOnlineCount {
      get { if ((_hasBits0 & 8) != 0) { return friendsOnlineCount_; } else { return FriendsOnlineCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        friendsOnlineCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_online_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsOnlineCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "friends_online_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsOnlineCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "friends_in_game_count" field.</summary>
    public const int FriendsInGameCountFieldNumber = 5;
    private readonly static int FriendsInGameCountDefaultValue = 0;

    private int friendsInGameCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsInGameCount {
      get { if ((_hasBits0 & 16) != 0) { return friendsInGameCount_; } else { return FriendsInGameCountDefaultValue; } }
      set {
        _hasBits0 |= 16;
        friendsInGameCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_in_game_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsInGameCount {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "friends_in_game_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsInGameCount() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "friends_in_game_singleton_count" field.</summary>
    public const int FriendsInGameSingletonCountFieldNumber = 6;
    private readonly static int FriendsInGameSingletonCountDefaultValue = 0;

    private int friendsInGameSingletonCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsInGameSingletonCount {
      get { if ((_hasBits0 & 32) != 0) { return friendsInGameSingletonCount_; } else { return FriendsInGameSingletonCountDefaultValue; } }
      set {
        _hasBits0 |= 32;
        friendsInGameSingletonCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_in_game_singleton_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsInGameSingletonCount {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "friends_in_game_singleton_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsInGameSingletonCount() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "game_group_count" field.</summary>
    public const int GameGroupCountFieldNumber = 7;
    private readonly static int GameGroupCountDefaultValue = 0;

    private int gameGroupCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameGroupCount {
      get { if ((_hasBits0 & 64) != 0) { return gameGroupCount_; } else { return GameGroupCountDefaultValue; } }
      set {
        _hasBits0 |= 64;
        gameGroupCount_ = value;
      }
    }
    /// <summary>Gets whether the "game_group_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameGroupCount {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "game_group_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameGroupCount() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "friends_favorite_count" field.</summary>
    public const int FriendsFavoriteCountFieldNumber = 8;
    private readonly static int FriendsFavoriteCountDefaultValue = 0;

    private int friendsFavoriteCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsFavoriteCount {
      get { if ((_hasBits0 & 128) != 0) { return friendsFavoriteCount_; } else { return FriendsFavoriteCountDefaultValue; } }
      set {
        _hasBits0 |= 128;
        friendsFavoriteCount_ = value;
      }
    }
    /// <summary>Gets whether the "friends_favorite_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsFavoriteCount {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "friends_favorite_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsFavoriteCount() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "group_chat_count" field.</summary>
    public const int GroupChatCountFieldNumber = 9;
    private readonly static int GroupChatCountDefaultValue = 0;

    private int groupChatCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupChatCount {
      get { if ((_hasBits0 & 256) != 0) { return groupChatCount_; } else { return GroupChatCountDefaultValue; } }
      set {
        _hasBits0 |= 256;
        groupChatCount_ = value;
      }
    }
    /// <summary>Gets whether the "group_chat_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupChatCount {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "group_chat_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupChatCount() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "group_chat_favorite_count" field.</summary>
    public const int GroupChatFavoriteCountFieldNumber = 10;
    private readonly static int GroupChatFavoriteCountDefaultValue = 0;

    private int groupChatFavoriteCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupChatFavoriteCount {
      get { if ((_hasBits0 & 512) != 0) { return groupChatFavoriteCount_; } else { return GroupChatFavoriteCountDefaultValue; } }
      set {
        _hasBits0 |= 512;
        groupChatFavoriteCount_ = value;
      }
    }
    /// <summary>Gets whether the "group_chat_favorite_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupChatFavoriteCount {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "group_chat_favorite_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupChatFavoriteCount() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_ClientUsabilityMetrics_Notification_Metrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_ClientUsabilityMetrics_Notification_Metrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendsCount != other.FriendsCount) return false;
      if (FriendsCategoryCount != other.FriendsCategoryCount) return false;
      if (FriendsCategorizedCount != other.FriendsCategorizedCount) return false;
      if (FriendsOnlineCount != other.FriendsOnlineCount) return false;
      if (FriendsInGameCount != other.FriendsInGameCount) return false;
      if (FriendsInGameSingletonCount != other.FriendsInGameSingletonCount) return false;
      if (GameGroupCount != other.GameGroupCount) return false;
      if (FriendsFavoriteCount != other.FriendsFavoriteCount) return false;
      if (GroupChatCount != other.GroupChatCount) return false;
      if (GroupChatFavoriteCount != other.GroupChatFavoriteCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFriendsCount) hash ^= FriendsCount.GetHashCode();
      if (HasFriendsCategoryCount) hash ^= FriendsCategoryCount.GetHashCode();
      if (HasFriendsCategorizedCount) hash ^= FriendsCategorizedCount.GetHashCode();
      if (HasFriendsOnlineCount) hash ^= FriendsOnlineCount.GetHashCode();
      if (HasFriendsInGameCount) hash ^= FriendsInGameCount.GetHashCode();
      if (HasFriendsInGameSingletonCount) hash ^= FriendsInGameSingletonCount.GetHashCode();
      if (HasGameGroupCount) hash ^= GameGroupCount.GetHashCode();
      if (HasFriendsFavoriteCount) hash ^= FriendsFavoriteCount.GetHashCode();
      if (HasGroupChatCount) hash ^= GroupChatCount.GetHashCode();
      if (HasGroupChatFavoriteCount) hash ^= GroupChatFavoriteCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFriendsCount) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendsCount);
      }
      if (HasFriendsCategoryCount) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendsCategoryCount);
      }
      if (HasFriendsCategorizedCount) {
        output.WriteRawTag(24);
        output.WriteInt32(FriendsCategorizedCount);
      }
      if (HasFriendsOnlineCount) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendsOnlineCount);
      }
      if (HasFriendsInGameCount) {
        output.WriteRawTag(40);
        output.WriteInt32(FriendsInGameCount);
      }
      if (HasFriendsInGameSingletonCount) {
        output.WriteRawTag(48);
        output.WriteInt32(FriendsInGameSingletonCount);
      }
      if (HasGameGroupCount) {
        output.WriteRawTag(56);
        output.WriteInt32(GameGroupCount);
      }
      if (HasFriendsFavoriteCount) {
        output.WriteRawTag(64);
        output.WriteInt32(FriendsFavoriteCount);
      }
      if (HasGroupChatCount) {
        output.WriteRawTag(72);
        output.WriteInt32(GroupChatCount);
      }
      if (HasGroupChatFavoriteCount) {
        output.WriteRawTag(80);
        output.WriteInt32(GroupChatFavoriteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFriendsCount) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendsCount);
      }
      if (HasFriendsCategoryCount) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendsCategoryCount);
      }
      if (HasFriendsCategorizedCount) {
        output.WriteRawTag(24);
        output.WriteInt32(FriendsCategorizedCount);
      }
      if (HasFriendsOnlineCount) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendsOnlineCount);
      }
      if (HasFriendsInGameCount) {
        output.WriteRawTag(40);
        output.WriteInt32(FriendsInGameCount);
      }
      if (HasFriendsInGameSingletonCount) {
        output.WriteRawTag(48);
        output.WriteInt32(FriendsInGameSingletonCount);
      }
      if (HasGameGroupCount) {
        output.WriteRawTag(56);
        output.WriteInt32(GameGroupCount);
      }
      if (HasFriendsFavoriteCount) {
        output.WriteRawTag(64);
        output.WriteInt32(FriendsFavoriteCount);
      }
      if (HasGroupChatCount) {
        output.WriteRawTag(72);
        output.WriteInt32(GroupChatCount);
      }
      if (HasGroupChatFavoriteCount) {
        output.WriteRawTag(80);
        output.WriteInt32(GroupChatFavoriteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFriendsCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsCount);
      }
      if (HasFriendsCategoryCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsCategoryCount);
      }
      if (HasFriendsCategorizedCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsCategorizedCount);
      }
      if (HasFriendsOnlineCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsOnlineCount);
      }
      if (HasFriendsInGameCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsInGameCount);
      }
      if (HasFriendsInGameSingletonCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsInGameSingletonCount);
      }
      if (HasGameGroupCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameGroupCount);
      }
      if (HasFriendsFavoriteCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsFavoriteCount);
      }
      if (HasGroupChatCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupChatCount);
      }
      if (HasGroupChatFavoriteCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupChatFavoriteCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_ClientUsabilityMetrics_Notification_Metrics other) {
      if (other == null) {
        return;
      }
      if (other.HasFriendsCount) {
        FriendsCount = other.FriendsCount;
      }
      if (other.HasFriendsCategoryCount) {
        FriendsCategoryCount = other.FriendsCategoryCount;
      }
      if (other.HasFriendsCategorizedCount) {
        FriendsCategorizedCount = other.FriendsCategorizedCount;
      }
      if (other.HasFriendsOnlineCount) {
        FriendsOnlineCount = other.FriendsOnlineCount;
      }
      if (other.HasFriendsInGameCount) {
        FriendsInGameCount = other.FriendsInGameCount;
      }
      if (other.HasFriendsInGameSingletonCount) {
        FriendsInGameSingletonCount = other.FriendsInGameSingletonCount;
      }
      if (other.HasGameGroupCount) {
        GameGroupCount = other.GameGroupCount;
      }
      if (other.HasFriendsFavoriteCount) {
        FriendsFavoriteCount = other.FriendsFavoriteCount;
      }
      if (other.HasGroupChatCount) {
        GroupChatCount = other.GroupChatCount;
      }
      if (other.HasGroupChatFavoriteCount) {
        GroupChatFavoriteCount = other.GroupChatFavoriteCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendsCount = input.ReadInt32();
            break;
          }
          case 16: {
            FriendsCategoryCount = input.ReadInt32();
            break;
          }
          case 24: {
            FriendsCategorizedCount = input.ReadInt32();
            break;
          }
          case 32: {
            FriendsOnlineCount = input.ReadInt32();
            break;
          }
          case 40: {
            FriendsInGameCount = input.ReadInt32();
            break;
          }
          case 48: {
            FriendsInGameSingletonCount = input.ReadInt32();
            break;
          }
          case 56: {
            GameGroupCount = input.ReadInt32();
            break;
          }
          case 64: {
            FriendsFavoriteCount = input.ReadInt32();
            break;
          }
          case 72: {
            GroupChatCount = input.ReadInt32();
            break;
          }
          case 80: {
            GroupChatFavoriteCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FriendsCount = input.ReadInt32();
            break;
          }
          case 16: {
            FriendsCategoryCount = input.ReadInt32();
            break;
          }
          case 24: {
            FriendsCategorizedCount = input.ReadInt32();
            break;
          }
          case 32: {
            FriendsOnlineCount = input.ReadInt32();
            break;
          }
          case 40: {
            FriendsInGameCount = input.ReadInt32();
            break;
          }
          case 48: {
            FriendsInGameSingletonCount = input.ReadInt32();
            break;
          }
          case 56: {
            GameGroupCount = input.ReadInt32();
            break;
          }
          case 64: {
            FriendsFavoriteCount = input.ReadInt32();
            break;
          }
          case 72: {
            GroupChatCount = input.ReadInt32();
            break;
          }
          case 80: {
            GroupChatFavoriteCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_ClientUsabilityMetrics_Notification_Settings : pb::IMessage<CChatUsability_ClientUsabilityMetrics_Notification_Settings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_Settings> _parser = new pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_Settings>(() => new CChatUsability_ClientUsabilityMetrics_Notification_Settings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_Settings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_Settings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_Settings(CChatUsability_ClientUsabilityMetrics_Notification_Settings other) : this() {
      _hasBits0 = other._hasBits0;
      notificationsShowIngame_ = other.notificationsShowIngame_;
      notificationsShowOnline_ = other.notificationsShowOnline_;
      notificationsShowMessage_ = other.notificationsShowMessage_;
      notificationsEventsAndAnnouncements_ = other.notificationsEventsAndAnnouncements_;
      soundsPlayIngame_ = other.soundsPlayIngame_;
      soundsPlayOnline_ = other.soundsPlayOnline_;
      soundsPlayMessage_ = other.soundsPlayMessage_;
      soundsEventsAndAnnouncements_ = other.soundsEventsAndAnnouncements_;
      alwaysNewChatWindow_ = other.alwaysNewChatWindow_;
      forceAlphabeticFriendSorting_ = other.forceAlphabeticFriendSorting_;
      chatFlashMode_ = other.chatFlashMode_;
      rememberOpenChats_ = other.rememberOpenChats_;
      compactQuicaccess_ = other.compactQuicaccess_;
      compactFriendsList_ = other.compactFriendsList_;
      notificationsShowChatRoomNotification_ = other.notificationsShowChatRoomNotification_;
      soundsPlayChatRoomNotification_ = other.soundsPlayChatRoomNotification_;
      hideOfflineFriendsInTagGroups_ = other.hideOfflineFriendsInTagGroups_;
      hideCategorizedFriends_ = other.hideCategorizedFriends_;
      categorizeInGameFriendsByGame_ = other.categorizeInGameFriendsByGame_;
      chatFontSize_ = other.chatFontSize_;
      use24HourClock_ = other.use24HourClock_;
      doNotDisturbMode_ = other.doNotDisturbMode_;
      disableEmbedInlining_ = other.disableEmbedInlining_;
      signIntoFriends_ = other.signIntoFriends_;
      animatedAvatars_ = other.animatedAvatars_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_Settings Clone() {
      return new CChatUsability_ClientUsabilityMetrics_Notification_Settings(this);
    }

    /// <summary>Field number for the "notifications_show_ingame" field.</summary>
    public const int NotificationsShowIngameFieldNumber = 1;
    private readonly static bool NotificationsShowIngameDefaultValue = false;

    private bool notificationsShowIngame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotificationsShowIngame {
      get { if ((_hasBits0 & 1) != 0) { return notificationsShowIngame_; } else { return NotificationsShowIngameDefaultValue; } }
      set {
        _hasBits0 |= 1;
        notificationsShowIngame_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_show_ingame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowIngame {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "notifications_show_ingame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowIngame() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "notifications_show_online" field.</summary>
    public const int NotificationsShowOnlineFieldNumber = 2;
    private readonly static bool NotificationsShowOnlineDefaultValue = false;

    private bool notificationsShowOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotificationsShowOnline {
      get { if ((_hasBits0 & 2) != 0) { return notificationsShowOnline_; } else { return NotificationsShowOnlineDefaultValue; } }
      set {
        _hasBits0 |= 2;
        notificationsShowOnline_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_show_online" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowOnline {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "notifications_show_online" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowOnline() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "notifications_show_message" field.</summary>
    public const int NotificationsShowMessageFieldNumber = 3;
    private readonly static bool NotificationsShowMessageDefaultValue = false;

    private bool notificationsShowMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotificationsShowMessage {
      get { if ((_hasBits0 & 4) != 0) { return notificationsShowMessage_; } else { return NotificationsShowMessageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        notificationsShowMessage_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_show_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowMessage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "notifications_show_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowMessage() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "notifications_events_and_announcements" field.</summary>
    public const int NotificationsEventsAndAnnouncementsFieldNumber = 4;
    private readonly static bool NotificationsEventsAndAnnouncementsDefaultValue = false;

    private bool notificationsEventsAndAnnouncements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotificationsEventsAndAnnouncements {
      get { if ((_hasBits0 & 8) != 0) { return notificationsEventsAndAnnouncements_; } else { return NotificationsEventsAndAnnouncementsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        notificationsEventsAndAnnouncements_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_events_and_announcements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsEventsAndAnnouncements {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "notifications_events_and_announcements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsEventsAndAnnouncements() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "sounds_play_ingame" field.</summary>
    public const int SoundsPlayIngameFieldNumber = 5;
    private readonly static bool SoundsPlayIngameDefaultValue = false;

    private bool soundsPlayIngame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SoundsPlayIngame {
      get { if ((_hasBits0 & 16) != 0) { return soundsPlayIngame_; } else { return SoundsPlayIngameDefaultValue; } }
      set {
        _hasBits0 |= 16;
        soundsPlayIngame_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_play_ingame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsPlayIngame {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "sounds_play_ingame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsPlayIngame() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sounds_play_online" field.</summary>
    public const int SoundsPlayOnlineFieldNumber = 6;
    private readonly static bool SoundsPlayOnlineDefaultValue = false;

    private bool soundsPlayOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SoundsPlayOnline {
      get { if ((_hasBits0 & 32) != 0) { return soundsPlayOnline_; } else { return SoundsPlayOnlineDefaultValue; } }
      set {
        _hasBits0 |= 32;
        soundsPlayOnline_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_play_online" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsPlayOnline {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sounds_play_online" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsPlayOnline() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "sounds_play_message" field.</summary>
    public const int SoundsPlayMessageFieldNumber = 7;
    private readonly static bool SoundsPlayMessageDefaultValue = false;

    private bool soundsPlayMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SoundsPlayMessage {
      get { if ((_hasBits0 & 64) != 0) { return soundsPlayMessage_; } else { return SoundsPlayMessageDefaultValue; } }
      set {
        _hasBits0 |= 64;
        soundsPlayMessage_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_play_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsPlayMessage {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "sounds_play_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsPlayMessage() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "sounds_events_and_announcements" field.</summary>
    public const int SoundsEventsAndAnnouncementsFieldNumber = 8;
    private readonly static bool SoundsEventsAndAnnouncementsDefaultValue = false;

    private bool soundsEventsAndAnnouncements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SoundsEventsAndAnnouncements {
      get { if ((_hasBits0 & 128) != 0) { return soundsEventsAndAnnouncements_; } else { return SoundsEventsAndAnnouncementsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        soundsEventsAndAnnouncements_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_events_and_announcements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsEventsAndAnnouncements {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "sounds_events_and_announcements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsEventsAndAnnouncements() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "always_new_chat_window" field.</summary>
    public const int AlwaysNewChatWindowFieldNumber = 9;
    private readonly static bool AlwaysNewChatWindowDefaultValue = false;

    private bool alwaysNewChatWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AlwaysNewChatWindow {
      get { if ((_hasBits0 & 256) != 0) { return alwaysNewChatWindow_; } else { return AlwaysNewChatWindowDefaultValue; } }
      set {
        _hasBits0 |= 256;
        alwaysNewChatWindow_ = value;
      }
    }
    /// <summary>Gets whether the "always_new_chat_window" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlwaysNewChatWindow {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "always_new_chat_window" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlwaysNewChatWindow() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "force_alphabetic_friend_sorting" field.</summary>
    public const int ForceAlphabeticFriendSortingFieldNumber = 10;
    private readonly static bool ForceAlphabeticFriendSortingDefaultValue = false;

    private bool forceAlphabeticFriendSorting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceAlphabeticFriendSorting {
      get { if ((_hasBits0 & 512) != 0) { return forceAlphabeticFriendSorting_; } else { return ForceAlphabeticFriendSortingDefaultValue; } }
      set {
        _hasBits0 |= 512;
        forceAlphabeticFriendSorting_ = value;
      }
    }
    /// <summary>Gets whether the "force_alphabetic_friend_sorting" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceAlphabeticFriendSorting {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "force_alphabetic_friend_sorting" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceAlphabeticFriendSorting() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "chat_flash_mode" field.</summary>
    public const int ChatFlashModeFieldNumber = 11;
    private readonly static int ChatFlashModeDefaultValue = 0;

    private int chatFlashMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChatFlashMode {
      get { if ((_hasBits0 & 1024) != 0) { return chatFlashMode_; } else { return ChatFlashModeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        chatFlashMode_ = value;
      }
    }
    /// <summary>Gets whether the "chat_flash_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChatFlashMode {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "chat_flash_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChatFlashMode() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "remember_open_chats" field.</summary>
    public const int RememberOpenChatsFieldNumber = 12;
    private readonly static bool RememberOpenChatsDefaultValue = false;

    private bool rememberOpenChats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RememberOpenChats {
      get { if ((_hasBits0 & 2048) != 0) { return rememberOpenChats_; } else { return RememberOpenChatsDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        rememberOpenChats_ = value;
      }
    }
    /// <summary>Gets whether the "remember_open_chats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRememberOpenChats {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "remember_open_chats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRememberOpenChats() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "compact_quicaccess" field.</summary>
    public const int CompactQuicaccessFieldNumber = 13;
    private readonly static bool CompactQuicaccessDefaultValue = false;

    private bool compactQuicaccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CompactQuicaccess {
      get { if ((_hasBits0 & 4096) != 0) { return compactQuicaccess_; } else { return CompactQuicaccessDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        compactQuicaccess_ = value;
      }
    }
    /// <summary>Gets whether the "compact_quicaccess" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCompactQuicaccess {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "compact_quicaccess" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCompactQuicaccess() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "compact_friends_list" field.</summary>
    public const int CompactFriendsListFieldNumber = 14;
    private readonly static bool CompactFriendsListDefaultValue = false;

    private bool compactFriendsList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CompactFriendsList {
      get { if ((_hasBits0 & 8192) != 0) { return compactFriendsList_; } else { return CompactFriendsListDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        compactFriendsList_ = value;
      }
    }
    /// <summary>Gets whether the "compact_friends_list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCompactFriendsList {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "compact_friends_list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCompactFriendsList() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "notifications_show_chat_room_notification" field.</summary>
    public const int NotificationsShowChatRoomNotificationFieldNumber = 15;
    private readonly static bool NotificationsShowChatRoomNotificationDefaultValue = false;

    private bool notificationsShowChatRoomNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotificationsShowChatRoomNotification {
      get { if ((_hasBits0 & 16384) != 0) { return notificationsShowChatRoomNotification_; } else { return NotificationsShowChatRoomNotificationDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        notificationsShowChatRoomNotification_ = value;
      }
    }
    /// <summary>Gets whether the "notifications_show_chat_room_notification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationsShowChatRoomNotification {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "notifications_show_chat_room_notification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationsShowChatRoomNotification() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "sounds_play_chat_room_notification" field.</summary>
    public const int SoundsPlayChatRoomNotificationFieldNumber = 16;
    private readonly static bool SoundsPlayChatRoomNotificationDefaultValue = false;

    private bool soundsPlayChatRoomNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SoundsPlayChatRoomNotification {
      get { if ((_hasBits0 & 32768) != 0) { return soundsPlayChatRoomNotification_; } else { return SoundsPlayChatRoomNotificationDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        soundsPlayChatRoomNotification_ = value;
      }
    }
    /// <summary>Gets whether the "sounds_play_chat_room_notification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundsPlayChatRoomNotification {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "sounds_play_chat_room_notification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundsPlayChatRoomNotification() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "hide_offline_friends_in_tag_groups" field.</summary>
    public const int HideOfflineFriendsInTagGroupsFieldNumber = 17;
    private readonly static bool HideOfflineFriendsInTagGroupsDefaultValue = false;

    private bool hideOfflineFriendsInTagGroups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HideOfflineFriendsInTagGroups {
      get { if ((_hasBits0 & 65536) != 0) { return hideOfflineFriendsInTagGroups_; } else { return HideOfflineFriendsInTagGroupsDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        hideOfflineFriendsInTagGroups_ = value;
      }
    }
    /// <summary>Gets whether the "hide_offline_friends_in_tag_groups" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHideOfflineFriendsInTagGroups {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "hide_offline_friends_in_tag_groups" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHideOfflineFriendsInTagGroups() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "hide_categorized_friends" field.</summary>
    public const int HideCategorizedFriendsFieldNumber = 18;
    private readonly static bool HideCategorizedFriendsDefaultValue = false;

    private bool hideCategorizedFriends_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HideCategorizedFriends {
      get { if ((_hasBits0 & 131072) != 0) { return hideCategorizedFriends_; } else { return HideCategorizedFriendsDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        hideCategorizedFriends_ = value;
      }
    }
    /// <summary>Gets whether the "hide_categorized_friends" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHideCategorizedFriends {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "hide_categorized_friends" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHideCategorizedFriends() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "categorize_in_game_friends_by_game" field.</summary>
    public const int CategorizeInGameFriendsByGameFieldNumber = 19;
    private readonly static bool CategorizeInGameFriendsByGameDefaultValue = false;

    private bool categorizeInGameFriendsByGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CategorizeInGameFriendsByGame {
      get { if ((_hasBits0 & 262144) != 0) { return categorizeInGameFriendsByGame_; } else { return CategorizeInGameFriendsByGameDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        categorizeInGameFriendsByGame_ = value;
      }
    }
    /// <summary>Gets whether the "categorize_in_game_friends_by_game" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCategorizeInGameFriendsByGame {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "categorize_in_game_friends_by_game" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCategorizeInGameFriendsByGame() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "chat_font_size" field.</summary>
    public const int ChatFontSizeFieldNumber = 20;
    private readonly static int ChatFontSizeDefaultValue = 0;

    private int chatFontSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChatFontSize {
      get { if ((_hasBits0 & 524288) != 0) { return chatFontSize_; } else { return ChatFontSizeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        chatFontSize_ = value;
      }
    }
    /// <summary>Gets whether the "chat_font_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChatFontSize {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "chat_font_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChatFontSize() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "use24hour_clock" field.</summary>
    public const int Use24HourClockFieldNumber = 21;
    private readonly static bool Use24HourClockDefaultValue = false;

    private bool use24HourClock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Use24HourClock {
      get { if ((_hasBits0 & 1048576) != 0) { return use24HourClock_; } else { return Use24HourClockDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        use24HourClock_ = value;
      }
    }
    /// <summary>Gets whether the "use24hour_clock" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUse24HourClock {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "use24hour_clock" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUse24HourClock() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "do_not_disturb_mode" field.</summary>
    public const int DoNotDisturbModeFieldNumber = 22;
    private readonly static bool DoNotDisturbModeDefaultValue = false;

    private bool doNotDisturbMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DoNotDisturbMode {
      get { if ((_hasBits0 & 2097152) != 0) { return doNotDisturbMode_; } else { return DoNotDisturbModeDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        doNotDisturbMode_ = value;
      }
    }
    /// <summary>Gets whether the "do_not_disturb_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDoNotDisturbMode {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "do_not_disturb_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDoNotDisturbMode() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "disable_embed_inlining" field.</summary>
    public const int DisableEmbedInliningFieldNumber = 23;
    private readonly static bool DisableEmbedInliningDefaultValue = false;

    private bool disableEmbedInlining_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableEmbedInlining {
      get { if ((_hasBits0 & 4194304) != 0) { return disableEmbedInlining_; } else { return DisableEmbedInliningDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        disableEmbedInlining_ = value;
      }
    }
    /// <summary>Gets whether the "disable_embed_inlining" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableEmbedInlining {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "disable_embed_inlining" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableEmbedInlining() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "sign_into_friends" field.</summary>
    public const int SignIntoFriendsFieldNumber = 24;
    private readonly static bool SignIntoFriendsDefaultValue = false;

    private bool signIntoFriends_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SignIntoFriends {
      get { if ((_hasBits0 & 8388608) != 0) { return signIntoFriends_; } else { return SignIntoFriendsDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        signIntoFriends_ = value;
      }
    }
    /// <summary>Gets whether the "sign_into_friends" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignIntoFriends {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "sign_into_friends" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignIntoFriends() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "animated_avatars" field.</summary>
    public const int AnimatedAvatarsFieldNumber = 25;
    private readonly static bool AnimatedAvatarsDefaultValue = false;

    private bool animatedAvatars_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AnimatedAvatars {
      get { if ((_hasBits0 & 16777216) != 0) { return animatedAvatars_; } else { return AnimatedAvatarsDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        animatedAvatars_ = value;
      }
    }
    /// <summary>Gets whether the "animated_avatars" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnimatedAvatars {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "animated_avatars" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnimatedAvatars() {
      _hasBits0 &= ~16777216;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_ClientUsabilityMetrics_Notification_Settings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_ClientUsabilityMetrics_Notification_Settings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationsShowIngame != other.NotificationsShowIngame) return false;
      if (NotificationsShowOnline != other.NotificationsShowOnline) return false;
      if (NotificationsShowMessage != other.NotificationsShowMessage) return false;
      if (NotificationsEventsAndAnnouncements != other.NotificationsEventsAndAnnouncements) return false;
      if (SoundsPlayIngame != other.SoundsPlayIngame) return false;
      if (SoundsPlayOnline != other.SoundsPlayOnline) return false;
      if (SoundsPlayMessage != other.SoundsPlayMessage) return false;
      if (SoundsEventsAndAnnouncements != other.SoundsEventsAndAnnouncements) return false;
      if (AlwaysNewChatWindow != other.AlwaysNewChatWindow) return false;
      if (ForceAlphabeticFriendSorting != other.ForceAlphabeticFriendSorting) return false;
      if (ChatFlashMode != other.ChatFlashMode) return false;
      if (RememberOpenChats != other.RememberOpenChats) return false;
      if (CompactQuicaccess != other.CompactQuicaccess) return false;
      if (CompactFriendsList != other.CompactFriendsList) return false;
      if (NotificationsShowChatRoomNotification != other.NotificationsShowChatRoomNotification) return false;
      if (SoundsPlayChatRoomNotification != other.SoundsPlayChatRoomNotification) return false;
      if (HideOfflineFriendsInTagGroups != other.HideOfflineFriendsInTagGroups) return false;
      if (HideCategorizedFriends != other.HideCategorizedFriends) return false;
      if (CategorizeInGameFriendsByGame != other.CategorizeInGameFriendsByGame) return false;
      if (ChatFontSize != other.ChatFontSize) return false;
      if (Use24HourClock != other.Use24HourClock) return false;
      if (DoNotDisturbMode != other.DoNotDisturbMode) return false;
      if (DisableEmbedInlining != other.DisableEmbedInlining) return false;
      if (SignIntoFriends != other.SignIntoFriends) return false;
      if (AnimatedAvatars != other.AnimatedAvatars) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationsShowIngame) hash ^= NotificationsShowIngame.GetHashCode();
      if (HasNotificationsShowOnline) hash ^= NotificationsShowOnline.GetHashCode();
      if (HasNotificationsShowMessage) hash ^= NotificationsShowMessage.GetHashCode();
      if (HasNotificationsEventsAndAnnouncements) hash ^= NotificationsEventsAndAnnouncements.GetHashCode();
      if (HasSoundsPlayIngame) hash ^= SoundsPlayIngame.GetHashCode();
      if (HasSoundsPlayOnline) hash ^= SoundsPlayOnline.GetHashCode();
      if (HasSoundsPlayMessage) hash ^= SoundsPlayMessage.GetHashCode();
      if (HasSoundsEventsAndAnnouncements) hash ^= SoundsEventsAndAnnouncements.GetHashCode();
      if (HasAlwaysNewChatWindow) hash ^= AlwaysNewChatWindow.GetHashCode();
      if (HasForceAlphabeticFriendSorting) hash ^= ForceAlphabeticFriendSorting.GetHashCode();
      if (HasChatFlashMode) hash ^= ChatFlashMode.GetHashCode();
      if (HasRememberOpenChats) hash ^= RememberOpenChats.GetHashCode();
      if (HasCompactQuicaccess) hash ^= CompactQuicaccess.GetHashCode();
      if (HasCompactFriendsList) hash ^= CompactFriendsList.GetHashCode();
      if (HasNotificationsShowChatRoomNotification) hash ^= NotificationsShowChatRoomNotification.GetHashCode();
      if (HasSoundsPlayChatRoomNotification) hash ^= SoundsPlayChatRoomNotification.GetHashCode();
      if (HasHideOfflineFriendsInTagGroups) hash ^= HideOfflineFriendsInTagGroups.GetHashCode();
      if (HasHideCategorizedFriends) hash ^= HideCategorizedFriends.GetHashCode();
      if (HasCategorizeInGameFriendsByGame) hash ^= CategorizeInGameFriendsByGame.GetHashCode();
      if (HasChatFontSize) hash ^= ChatFontSize.GetHashCode();
      if (HasUse24HourClock) hash ^= Use24HourClock.GetHashCode();
      if (HasDoNotDisturbMode) hash ^= DoNotDisturbMode.GetHashCode();
      if (HasDisableEmbedInlining) hash ^= DisableEmbedInlining.GetHashCode();
      if (HasSignIntoFriends) hash ^= SignIntoFriends.GetHashCode();
      if (HasAnimatedAvatars) hash ^= AnimatedAvatars.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNotificationsShowIngame) {
        output.WriteRawTag(8);
        output.WriteBool(NotificationsShowIngame);
      }
      if (HasNotificationsShowOnline) {
        output.WriteRawTag(16);
        output.WriteBool(NotificationsShowOnline);
      }
      if (HasNotificationsShowMessage) {
        output.WriteRawTag(24);
        output.WriteBool(NotificationsShowMessage);
      }
      if (HasNotificationsEventsAndAnnouncements) {
        output.WriteRawTag(32);
        output.WriteBool(NotificationsEventsAndAnnouncements);
      }
      if (HasSoundsPlayIngame) {
        output.WriteRawTag(40);
        output.WriteBool(SoundsPlayIngame);
      }
      if (HasSoundsPlayOnline) {
        output.WriteRawTag(48);
        output.WriteBool(SoundsPlayOnline);
      }
      if (HasSoundsPlayMessage) {
        output.WriteRawTag(56);
        output.WriteBool(SoundsPlayMessage);
      }
      if (HasSoundsEventsAndAnnouncements) {
        output.WriteRawTag(64);
        output.WriteBool(SoundsEventsAndAnnouncements);
      }
      if (HasAlwaysNewChatWindow) {
        output.WriteRawTag(72);
        output.WriteBool(AlwaysNewChatWindow);
      }
      if (HasForceAlphabeticFriendSorting) {
        output.WriteRawTag(80);
        output.WriteBool(ForceAlphabeticFriendSorting);
      }
      if (HasChatFlashMode) {
        output.WriteRawTag(88);
        output.WriteInt32(ChatFlashMode);
      }
      if (HasRememberOpenChats) {
        output.WriteRawTag(96);
        output.WriteBool(RememberOpenChats);
      }
      if (HasCompactQuicaccess) {
        output.WriteRawTag(104);
        output.WriteBool(CompactQuicaccess);
      }
      if (HasCompactFriendsList) {
        output.WriteRawTag(112);
        output.WriteBool(CompactFriendsList);
      }
      if (HasNotificationsShowChatRoomNotification) {
        output.WriteRawTag(120);
        output.WriteBool(NotificationsShowChatRoomNotification);
      }
      if (HasSoundsPlayChatRoomNotification) {
        output.WriteRawTag(128, 1);
        output.WriteBool(SoundsPlayChatRoomNotification);
      }
      if (HasHideOfflineFriendsInTagGroups) {
        output.WriteRawTag(136, 1);
        output.WriteBool(HideOfflineFriendsInTagGroups);
      }
      if (HasHideCategorizedFriends) {
        output.WriteRawTag(144, 1);
        output.WriteBool(HideCategorizedFriends);
      }
      if (HasCategorizeInGameFriendsByGame) {
        output.WriteRawTag(152, 1);
        output.WriteBool(CategorizeInGameFriendsByGame);
      }
      if (HasChatFontSize) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ChatFontSize);
      }
      if (HasUse24HourClock) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Use24HourClock);
      }
      if (HasDoNotDisturbMode) {
        output.WriteRawTag(176, 1);
        output.WriteBool(DoNotDisturbMode);
      }
      if (HasDisableEmbedInlining) {
        output.WriteRawTag(184, 1);
        output.WriteBool(DisableEmbedInlining);
      }
      if (HasSignIntoFriends) {
        output.WriteRawTag(192, 1);
        output.WriteBool(SignIntoFriends);
      }
      if (HasAnimatedAvatars) {
        output.WriteRawTag(200, 1);
        output.WriteBool(AnimatedAvatars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNotificationsShowIngame) {
        output.WriteRawTag(8);
        output.WriteBool(NotificationsShowIngame);
      }
      if (HasNotificationsShowOnline) {
        output.WriteRawTag(16);
        output.WriteBool(NotificationsShowOnline);
      }
      if (HasNotificationsShowMessage) {
        output.WriteRawTag(24);
        output.WriteBool(NotificationsShowMessage);
      }
      if (HasNotificationsEventsAndAnnouncements) {
        output.WriteRawTag(32);
        output.WriteBool(NotificationsEventsAndAnnouncements);
      }
      if (HasSoundsPlayIngame) {
        output.WriteRawTag(40);
        output.WriteBool(SoundsPlayIngame);
      }
      if (HasSoundsPlayOnline) {
        output.WriteRawTag(48);
        output.WriteBool(SoundsPlayOnline);
      }
      if (HasSoundsPlayMessage) {
        output.WriteRawTag(56);
        output.WriteBool(SoundsPlayMessage);
      }
      if (HasSoundsEventsAndAnnouncements) {
        output.WriteRawTag(64);
        output.WriteBool(SoundsEventsAndAnnouncements);
      }
      if (HasAlwaysNewChatWindow) {
        output.WriteRawTag(72);
        output.WriteBool(AlwaysNewChatWindow);
      }
      if (HasForceAlphabeticFriendSorting) {
        output.WriteRawTag(80);
        output.WriteBool(ForceAlphabeticFriendSorting);
      }
      if (HasChatFlashMode) {
        output.WriteRawTag(88);
        output.WriteInt32(ChatFlashMode);
      }
      if (HasRememberOpenChats) {
        output.WriteRawTag(96);
        output.WriteBool(RememberOpenChats);
      }
      if (HasCompactQuicaccess) {
        output.WriteRawTag(104);
        output.WriteBool(CompactQuicaccess);
      }
      if (HasCompactFriendsList) {
        output.WriteRawTag(112);
        output.WriteBool(CompactFriendsList);
      }
      if (HasNotificationsShowChatRoomNotification) {
        output.WriteRawTag(120);
        output.WriteBool(NotificationsShowChatRoomNotification);
      }
      if (HasSoundsPlayChatRoomNotification) {
        output.WriteRawTag(128, 1);
        output.WriteBool(SoundsPlayChatRoomNotification);
      }
      if (HasHideOfflineFriendsInTagGroups) {
        output.WriteRawTag(136, 1);
        output.WriteBool(HideOfflineFriendsInTagGroups);
      }
      if (HasHideCategorizedFriends) {
        output.WriteRawTag(144, 1);
        output.WriteBool(HideCategorizedFriends);
      }
      if (HasCategorizeInGameFriendsByGame) {
        output.WriteRawTag(152, 1);
        output.WriteBool(CategorizeInGameFriendsByGame);
      }
      if (HasChatFontSize) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ChatFontSize);
      }
      if (HasUse24HourClock) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Use24HourClock);
      }
      if (HasDoNotDisturbMode) {
        output.WriteRawTag(176, 1);
        output.WriteBool(DoNotDisturbMode);
      }
      if (HasDisableEmbedInlining) {
        output.WriteRawTag(184, 1);
        output.WriteBool(DisableEmbedInlining);
      }
      if (HasSignIntoFriends) {
        output.WriteRawTag(192, 1);
        output.WriteBool(SignIntoFriends);
      }
      if (HasAnimatedAvatars) {
        output.WriteRawTag(200, 1);
        output.WriteBool(AnimatedAvatars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationsShowIngame) {
        size += 1 + 1;
      }
      if (HasNotificationsShowOnline) {
        size += 1 + 1;
      }
      if (HasNotificationsShowMessage) {
        size += 1 + 1;
      }
      if (HasNotificationsEventsAndAnnouncements) {
        size += 1 + 1;
      }
      if (HasSoundsPlayIngame) {
        size += 1 + 1;
      }
      if (HasSoundsPlayOnline) {
        size += 1 + 1;
      }
      if (HasSoundsPlayMessage) {
        size += 1 + 1;
      }
      if (HasSoundsEventsAndAnnouncements) {
        size += 1 + 1;
      }
      if (HasAlwaysNewChatWindow) {
        size += 1 + 1;
      }
      if (HasForceAlphabeticFriendSorting) {
        size += 1 + 1;
      }
      if (HasChatFlashMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatFlashMode);
      }
      if (HasRememberOpenChats) {
        size += 1 + 1;
      }
      if (HasCompactQuicaccess) {
        size += 1 + 1;
      }
      if (HasCompactFriendsList) {
        size += 1 + 1;
      }
      if (HasNotificationsShowChatRoomNotification) {
        size += 1 + 1;
      }
      if (HasSoundsPlayChatRoomNotification) {
        size += 2 + 1;
      }
      if (HasHideOfflineFriendsInTagGroups) {
        size += 2 + 1;
      }
      if (HasHideCategorizedFriends) {
        size += 2 + 1;
      }
      if (HasCategorizeInGameFriendsByGame) {
        size += 2 + 1;
      }
      if (HasChatFontSize) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChatFontSize);
      }
      if (HasUse24HourClock) {
        size += 2 + 1;
      }
      if (HasDoNotDisturbMode) {
        size += 2 + 1;
      }
      if (HasDisableEmbedInlining) {
        size += 2 + 1;
      }
      if (HasSignIntoFriends) {
        size += 2 + 1;
      }
      if (HasAnimatedAvatars) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_ClientUsabilityMetrics_Notification_Settings other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationsShowIngame) {
        NotificationsShowIngame = other.NotificationsShowIngame;
      }
      if (other.HasNotificationsShowOnline) {
        NotificationsShowOnline = other.NotificationsShowOnline;
      }
      if (other.HasNotificationsShowMessage) {
        NotificationsShowMessage = other.NotificationsShowMessage;
      }
      if (other.HasNotificationsEventsAndAnnouncements) {
        NotificationsEventsAndAnnouncements = other.NotificationsEventsAndAnnouncements;
      }
      if (other.HasSoundsPlayIngame) {
        SoundsPlayIngame = other.SoundsPlayIngame;
      }
      if (other.HasSoundsPlayOnline) {
        SoundsPlayOnline = other.SoundsPlayOnline;
      }
      if (other.HasSoundsPlayMessage) {
        SoundsPlayMessage = other.SoundsPlayMessage;
      }
      if (other.HasSoundsEventsAndAnnouncements) {
        SoundsEventsAndAnnouncements = other.SoundsEventsAndAnnouncements;
      }
      if (other.HasAlwaysNewChatWindow) {
        AlwaysNewChatWindow = other.AlwaysNewChatWindow;
      }
      if (other.HasForceAlphabeticFriendSorting) {
        ForceAlphabeticFriendSorting = other.ForceAlphabeticFriendSorting;
      }
      if (other.HasChatFlashMode) {
        ChatFlashMode = other.ChatFlashMode;
      }
      if (other.HasRememberOpenChats) {
        RememberOpenChats = other.RememberOpenChats;
      }
      if (other.HasCompactQuicaccess) {
        CompactQuicaccess = other.CompactQuicaccess;
      }
      if (other.HasCompactFriendsList) {
        CompactFriendsList = other.CompactFriendsList;
      }
      if (other.HasNotificationsShowChatRoomNotification) {
        NotificationsShowChatRoomNotification = other.NotificationsShowChatRoomNotification;
      }
      if (other.HasSoundsPlayChatRoomNotification) {
        SoundsPlayChatRoomNotification = other.SoundsPlayChatRoomNotification;
      }
      if (other.HasHideOfflineFriendsInTagGroups) {
        HideOfflineFriendsInTagGroups = other.HideOfflineFriendsInTagGroups;
      }
      if (other.HasHideCategorizedFriends) {
        HideCategorizedFriends = other.HideCategorizedFriends;
      }
      if (other.HasCategorizeInGameFriendsByGame) {
        CategorizeInGameFriendsByGame = other.CategorizeInGameFriendsByGame;
      }
      if (other.HasChatFontSize) {
        ChatFontSize = other.ChatFontSize;
      }
      if (other.HasUse24HourClock) {
        Use24HourClock = other.Use24HourClock;
      }
      if (other.HasDoNotDisturbMode) {
        DoNotDisturbMode = other.DoNotDisturbMode;
      }
      if (other.HasDisableEmbedInlining) {
        DisableEmbedInlining = other.DisableEmbedInlining;
      }
      if (other.HasSignIntoFriends) {
        SignIntoFriends = other.SignIntoFriends;
      }
      if (other.HasAnimatedAvatars) {
        AnimatedAvatars = other.AnimatedAvatars;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotificationsShowIngame = input.ReadBool();
            break;
          }
          case 16: {
            NotificationsShowOnline = input.ReadBool();
            break;
          }
          case 24: {
            NotificationsShowMessage = input.ReadBool();
            break;
          }
          case 32: {
            NotificationsEventsAndAnnouncements = input.ReadBool();
            break;
          }
          case 40: {
            SoundsPlayIngame = input.ReadBool();
            break;
          }
          case 48: {
            SoundsPlayOnline = input.ReadBool();
            break;
          }
          case 56: {
            SoundsPlayMessage = input.ReadBool();
            break;
          }
          case 64: {
            SoundsEventsAndAnnouncements = input.ReadBool();
            break;
          }
          case 72: {
            AlwaysNewChatWindow = input.ReadBool();
            break;
          }
          case 80: {
            ForceAlphabeticFriendSorting = input.ReadBool();
            break;
          }
          case 88: {
            ChatFlashMode = input.ReadInt32();
            break;
          }
          case 96: {
            RememberOpenChats = input.ReadBool();
            break;
          }
          case 104: {
            CompactQuicaccess = input.ReadBool();
            break;
          }
          case 112: {
            CompactFriendsList = input.ReadBool();
            break;
          }
          case 120: {
            NotificationsShowChatRoomNotification = input.ReadBool();
            break;
          }
          case 128: {
            SoundsPlayChatRoomNotification = input.ReadBool();
            break;
          }
          case 136: {
            HideOfflineFriendsInTagGroups = input.ReadBool();
            break;
          }
          case 144: {
            HideCategorizedFriends = input.ReadBool();
            break;
          }
          case 152: {
            CategorizeInGameFriendsByGame = input.ReadBool();
            break;
          }
          case 160: {
            ChatFontSize = input.ReadInt32();
            break;
          }
          case 168: {
            Use24HourClock = input.ReadBool();
            break;
          }
          case 176: {
            DoNotDisturbMode = input.ReadBool();
            break;
          }
          case 184: {
            DisableEmbedInlining = input.ReadBool();
            break;
          }
          case 192: {
            SignIntoFriends = input.ReadBool();
            break;
          }
          case 200: {
            AnimatedAvatars = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NotificationsShowIngame = input.ReadBool();
            break;
          }
          case 16: {
            NotificationsShowOnline = input.ReadBool();
            break;
          }
          case 24: {
            NotificationsShowMessage = input.ReadBool();
            break;
          }
          case 32: {
            NotificationsEventsAndAnnouncements = input.ReadBool();
            break;
          }
          case 40: {
            SoundsPlayIngame = input.ReadBool();
            break;
          }
          case 48: {
            SoundsPlayOnline = input.ReadBool();
            break;
          }
          case 56: {
            SoundsPlayMessage = input.ReadBool();
            break;
          }
          case 64: {
            SoundsEventsAndAnnouncements = input.ReadBool();
            break;
          }
          case 72: {
            AlwaysNewChatWindow = input.ReadBool();
            break;
          }
          case 80: {
            ForceAlphabeticFriendSorting = input.ReadBool();
            break;
          }
          case 88: {
            ChatFlashMode = input.ReadInt32();
            break;
          }
          case 96: {
            RememberOpenChats = input.ReadBool();
            break;
          }
          case 104: {
            CompactQuicaccess = input.ReadBool();
            break;
          }
          case 112: {
            CompactFriendsList = input.ReadBool();
            break;
          }
          case 120: {
            NotificationsShowChatRoomNotification = input.ReadBool();
            break;
          }
          case 128: {
            SoundsPlayChatRoomNotification = input.ReadBool();
            break;
          }
          case 136: {
            HideOfflineFriendsInTagGroups = input.ReadBool();
            break;
          }
          case 144: {
            HideCategorizedFriends = input.ReadBool();
            break;
          }
          case 152: {
            CategorizeInGameFriendsByGame = input.ReadBool();
            break;
          }
          case 160: {
            ChatFontSize = input.ReadInt32();
            break;
          }
          case 168: {
            Use24HourClock = input.ReadBool();
            break;
          }
          case 176: {
            DoNotDisturbMode = input.ReadBool();
            break;
          }
          case 184: {
            DisableEmbedInlining = input.ReadBool();
            break;
          }
          case 192: {
            SignIntoFriends = input.ReadBool();
            break;
          }
          case 200: {
            AnimatedAvatars = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_ClientUsabilityMetrics_Notification_UIState : pb::IMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_UIState> _parser = new pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_UIState>(() => new CChatUsability_ClientUsabilityMetrics_Notification_UIState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_UIState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_UIState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_UIState(CChatUsability_ClientUsabilityMetrics_Notification_UIState other) : this() {
      _hasBits0 = other._hasBits0;
      friendsListHeight_ = other.friendsListHeight_;
      friendsListWidth_ = other.friendsListWidth_;
      friendsListDocked_ = other.friendsListDocked_;
      friendsListCollapsed_ = other.friendsListCollapsed_;
      friendsListGroupChatsHeight_ = other.friendsListGroupChatsHeight_;
      friendsListVisible_ = other.friendsListVisible_;
      chatPopupsOpened_ = other.chatPopupsOpened_;
      groupChatTabsOpened_ = other.groupChatTabsOpened_;
      friendChatTabsOpened_ = other.friendChatTabsOpened_;
      chatWindowWidth_ = other.chatWindowWidth_;
      chatWindowHeight_ = other.chatWindowHeight_;
      categoryCollapse_ = other.categoryCollapse_ != null ? other.categoryCollapse_.Clone() : null;
      groupChatLeftColCollapsed_ = other.groupChatLeftColCollapsed_;
      groupChatRightColCollapsed_ = other.groupChatRightColCollapsed_;
      inOneOnOneVoiceChat_ = other.inOneOnOneVoiceChat_;
      inGroupVoiceChat_ = other.inGroupVoiceChat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_UIState Clone() {
      return new CChatUsability_ClientUsabilityMetrics_Notification_UIState(this);
    }

    /// <summary>Field number for the "friends_list_height" field.</summary>
    public const int FriendsListHeightFieldNumber = 1;
    private readonly static int FriendsListHeightDefaultValue = 0;

    private int friendsListHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsListHeight {
      get { if ((_hasBits0 & 1) != 0) { return friendsListHeight_; } else { return FriendsListHeightDefaultValue; } }
      set {
        _hasBits0 |= 1;
        friendsListHeight_ = value;
      }
    }
    /// <summary>Gets whether the "friends_list_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsListHeight {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "friends_list_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsListHeight() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "friends_list_width" field.</summary>
    public const int FriendsListWidthFieldNumber = 2;
    private readonly static int FriendsListWidthDefaultValue = 0;

    private int friendsListWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsListWidth {
      get { if ((_hasBits0 & 2) != 0) { return friendsListWidth_; } else { return FriendsListWidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        friendsListWidth_ = value;
      }
    }
    /// <summary>Gets whether the "friends_list_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsListWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "friends_list_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsListWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "friends_list_docked" field.</summary>
    public const int FriendsListDockedFieldNumber = 3;
    private readonly static bool FriendsListDockedDefaultValue = false;

    private bool friendsListDocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FriendsListDocked {
      get { if ((_hasBits0 & 4) != 0) { return friendsListDocked_; } else { return FriendsListDockedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        friendsListDocked_ = value;
      }
    }
    /// <summary>Gets whether the "friends_list_docked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsListDocked {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "friends_list_docked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsListDocked() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "friends_list_collapsed" field.</summary>
    public const int FriendsListCollapsedFieldNumber = 4;
    private readonly static bool FriendsListCollapsedDefaultValue = false;

    private bool friendsListCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FriendsListCollapsed {
      get { if ((_hasBits0 & 8) != 0) { return friendsListCollapsed_; } else { return FriendsListCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        friendsListCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "friends_list_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsListCollapsed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "friends_list_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsListCollapsed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "friends_list_group_chats_height" field.</summary>
    public const int FriendsListGroupChatsHeightFieldNumber = 5;
    private readonly static int FriendsListGroupChatsHeightDefaultValue = 0;

    private int friendsListGroupChatsHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendsListGroupChatsHeight {
      get { if ((_hasBits0 & 16) != 0) { return friendsListGroupChatsHeight_; } else { return FriendsListGroupChatsHeightDefaultValue; } }
      set {
        _hasBits0 |= 16;
        friendsListGroupChatsHeight_ = value;
      }
    }
    /// <summary>Gets whether the "friends_list_group_chats_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsListGroupChatsHeight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "friends_list_group_chats_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsListGroupChatsHeight() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "friends_list_visible" field.</summary>
    public const int FriendsListVisibleFieldNumber = 6;
    private readonly static bool FriendsListVisibleDefaultValue = false;

    private bool friendsListVisible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FriendsListVisible {
      get { if ((_hasBits0 & 32) != 0) { return friendsListVisible_; } else { return FriendsListVisibleDefaultValue; } }
      set {
        _hasBits0 |= 32;
        friendsListVisible_ = value;
      }
    }
    /// <summary>Gets whether the "friends_list_visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendsListVisible {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "friends_list_visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendsListVisible() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "chat_popups_opened" field.</summary>
    public const int ChatPopupsOpenedFieldNumber = 7;
    private readonly static int ChatPopupsOpenedDefaultValue = 0;

    private int chatPopupsOpened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChatPopupsOpened {
      get { if ((_hasBits0 & 64) != 0) { return chatPopupsOpened_; } else { return ChatPopupsOpenedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        chatPopupsOpened_ = value;
      }
    }
    /// <summary>Gets whether the "chat_popups_opened" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChatPopupsOpened {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "chat_popups_opened" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChatPopupsOpened() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "group_chat_tabs_opened" field.</summary>
    public const int GroupChatTabsOpenedFieldNumber = 8;
    private readonly static int GroupChatTabsOpenedDefaultValue = 0;

    private int groupChatTabsOpened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupChatTabsOpened {
      get { if ((_hasBits0 & 128) != 0) { return groupChatTabsOpened_; } else { return GroupChatTabsOpenedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        groupChatTabsOpened_ = value;
      }
    }
    /// <summary>Gets whether the "group_chat_tabs_opened" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupChatTabsOpened {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "group_chat_tabs_opened" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupChatTabsOpened() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "friend_chat_tabs_opened" field.</summary>
    public const int FriendChatTabsOpenedFieldNumber = 9;
    private readonly static int FriendChatTabsOpenedDefaultValue = 0;

    private int friendChatTabsOpened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FriendChatTabsOpened {
      get { if ((_hasBits0 & 256) != 0) { return friendChatTabsOpened_; } else { return FriendChatTabsOpenedDefaultValue; } }
      set {
        _hasBits0 |= 256;
        friendChatTabsOpened_ = value;
      }
    }
    /// <summary>Gets whether the "friend_chat_tabs_opened" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendChatTabsOpened {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "friend_chat_tabs_opened" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendChatTabsOpened() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "chat_window_width" field.</summary>
    public const int ChatWindowWidthFieldNumber = 10;
    private readonly static int ChatWindowWidthDefaultValue = 0;

    private int chatWindowWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChatWindowWidth {
      get { if ((_hasBits0 & 512) != 0) { return chatWindowWidth_; } else { return ChatWindowWidthDefaultValue; } }
      set {
        _hasBits0 |= 512;
        chatWindowWidth_ = value;
      }
    }
    /// <summary>Gets whether the "chat_window_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChatWindowWidth {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "chat_window_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChatWindowWidth() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "chat_window_height" field.</summary>
    public const int ChatWindowHeightFieldNumber = 11;
    private readonly static int ChatWindowHeightDefaultValue = 0;

    private int chatWindowHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChatWindowHeight {
      get { if ((_hasBits0 & 1024) != 0) { return chatWindowHeight_; } else { return ChatWindowHeightDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        chatWindowHeight_ = value;
      }
    }
    /// <summary>Gets whether the "chat_window_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChatWindowHeight {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "chat_window_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChatWindowHeight() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "category_collapse" field.</summary>
    public const int CategoryCollapseFieldNumber = 12;
    private global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState categoryCollapse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState CategoryCollapse {
      get { return categoryCollapse_; }
      set {
        categoryCollapse_ = value;
      }
    }

    /// <summary>Field number for the "group_chat_left_col_collapsed" field.</summary>
    public const int GroupChatLeftColCollapsedFieldNumber = 13;
    private readonly static int GroupChatLeftColCollapsedDefaultValue = 0;

    private int groupChatLeftColCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupChatLeftColCollapsed {
      get { if ((_hasBits0 & 2048) != 0) { return groupChatLeftColCollapsed_; } else { return GroupChatLeftColCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        groupChatLeftColCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "group_chat_left_col_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupChatLeftColCollapsed {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "group_chat_left_col_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupChatLeftColCollapsed() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "group_chat_right_col_collapsed" field.</summary>
    public const int GroupChatRightColCollapsedFieldNumber = 14;
    private readonly static int GroupChatRightColCollapsedDefaultValue = 0;

    private int groupChatRightColCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupChatRightColCollapsed {
      get { if ((_hasBits0 & 4096) != 0) { return groupChatRightColCollapsed_; } else { return GroupChatRightColCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        groupChatRightColCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "group_chat_right_col_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupChatRightColCollapsed {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "group_chat_right_col_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupChatRightColCollapsed() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "in_one_on_one_voice_chat" field.</summary>
    public const int InOneOnOneVoiceChatFieldNumber = 15;
    private readonly static bool InOneOnOneVoiceChatDefaultValue = false;

    private bool inOneOnOneVoiceChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InOneOnOneVoiceChat {
      get { if ((_hasBits0 & 8192) != 0) { return inOneOnOneVoiceChat_; } else { return InOneOnOneVoiceChatDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        inOneOnOneVoiceChat_ = value;
      }
    }
    /// <summary>Gets whether the "in_one_on_one_voice_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInOneOnOneVoiceChat {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "in_one_on_one_voice_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInOneOnOneVoiceChat() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "in_group_voice_chat" field.</summary>
    public const int InGroupVoiceChatFieldNumber = 16;
    private readonly static bool InGroupVoiceChatDefaultValue = false;

    private bool inGroupVoiceChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InGroupVoiceChat {
      get { if ((_hasBits0 & 16384) != 0) { return inGroupVoiceChat_; } else { return InGroupVoiceChatDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        inGroupVoiceChat_ = value;
      }
    }
    /// <summary>Gets whether the "in_group_voice_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInGroupVoiceChat {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "in_group_voice_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInGroupVoiceChat() {
      _hasBits0 &= ~16384;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_ClientUsabilityMetrics_Notification_UIState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_ClientUsabilityMetrics_Notification_UIState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FriendsListHeight != other.FriendsListHeight) return false;
      if (FriendsListWidth != other.FriendsListWidth) return false;
      if (FriendsListDocked != other.FriendsListDocked) return false;
      if (FriendsListCollapsed != other.FriendsListCollapsed) return false;
      if (FriendsListGroupChatsHeight != other.FriendsListGroupChatsHeight) return false;
      if (FriendsListVisible != other.FriendsListVisible) return false;
      if (ChatPopupsOpened != other.ChatPopupsOpened) return false;
      if (GroupChatTabsOpened != other.GroupChatTabsOpened) return false;
      if (FriendChatTabsOpened != other.FriendChatTabsOpened) return false;
      if (ChatWindowWidth != other.ChatWindowWidth) return false;
      if (ChatWindowHeight != other.ChatWindowHeight) return false;
      if (!object.Equals(CategoryCollapse, other.CategoryCollapse)) return false;
      if (GroupChatLeftColCollapsed != other.GroupChatLeftColCollapsed) return false;
      if (GroupChatRightColCollapsed != other.GroupChatRightColCollapsed) return false;
      if (InOneOnOneVoiceChat != other.InOneOnOneVoiceChat) return false;
      if (InGroupVoiceChat != other.InGroupVoiceChat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFriendsListHeight) hash ^= FriendsListHeight.GetHashCode();
      if (HasFriendsListWidth) hash ^= FriendsListWidth.GetHashCode();
      if (HasFriendsListDocked) hash ^= FriendsListDocked.GetHashCode();
      if (HasFriendsListCollapsed) hash ^= FriendsListCollapsed.GetHashCode();
      if (HasFriendsListGroupChatsHeight) hash ^= FriendsListGroupChatsHeight.GetHashCode();
      if (HasFriendsListVisible) hash ^= FriendsListVisible.GetHashCode();
      if (HasChatPopupsOpened) hash ^= ChatPopupsOpened.GetHashCode();
      if (HasGroupChatTabsOpened) hash ^= GroupChatTabsOpened.GetHashCode();
      if (HasFriendChatTabsOpened) hash ^= FriendChatTabsOpened.GetHashCode();
      if (HasChatWindowWidth) hash ^= ChatWindowWidth.GetHashCode();
      if (HasChatWindowHeight) hash ^= ChatWindowHeight.GetHashCode();
      if (categoryCollapse_ != null) hash ^= CategoryCollapse.GetHashCode();
      if (HasGroupChatLeftColCollapsed) hash ^= GroupChatLeftColCollapsed.GetHashCode();
      if (HasGroupChatRightColCollapsed) hash ^= GroupChatRightColCollapsed.GetHashCode();
      if (HasInOneOnOneVoiceChat) hash ^= InOneOnOneVoiceChat.GetHashCode();
      if (HasInGroupVoiceChat) hash ^= InGroupVoiceChat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFriendsListHeight) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendsListHeight);
      }
      if (HasFriendsListWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendsListWidth);
      }
      if (HasFriendsListDocked) {
        output.WriteRawTag(24);
        output.WriteBool(FriendsListDocked);
      }
      if (HasFriendsListCollapsed) {
        output.WriteRawTag(32);
        output.WriteBool(FriendsListCollapsed);
      }
      if (HasFriendsListGroupChatsHeight) {
        output.WriteRawTag(40);
        output.WriteInt32(FriendsListGroupChatsHeight);
      }
      if (HasFriendsListVisible) {
        output.WriteRawTag(48);
        output.WriteBool(FriendsListVisible);
      }
      if (HasChatPopupsOpened) {
        output.WriteRawTag(56);
        output.WriteInt32(ChatPopupsOpened);
      }
      if (HasGroupChatTabsOpened) {
        output.WriteRawTag(64);
        output.WriteInt32(GroupChatTabsOpened);
      }
      if (HasFriendChatTabsOpened) {
        output.WriteRawTag(72);
        output.WriteInt32(FriendChatTabsOpened);
      }
      if (HasChatWindowWidth) {
        output.WriteRawTag(80);
        output.WriteInt32(ChatWindowWidth);
      }
      if (HasChatWindowHeight) {
        output.WriteRawTag(88);
        output.WriteInt32(ChatWindowHeight);
      }
      if (categoryCollapse_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CategoryCollapse);
      }
      if (HasGroupChatLeftColCollapsed) {
        output.WriteRawTag(104);
        output.WriteInt32(GroupChatLeftColCollapsed);
      }
      if (HasGroupChatRightColCollapsed) {
        output.WriteRawTag(112);
        output.WriteInt32(GroupChatRightColCollapsed);
      }
      if (HasInOneOnOneVoiceChat) {
        output.WriteRawTag(120);
        output.WriteBool(InOneOnOneVoiceChat);
      }
      if (HasInGroupVoiceChat) {
        output.WriteRawTag(128, 1);
        output.WriteBool(InGroupVoiceChat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFriendsListHeight) {
        output.WriteRawTag(8);
        output.WriteInt32(FriendsListHeight);
      }
      if (HasFriendsListWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendsListWidth);
      }
      if (HasFriendsListDocked) {
        output.WriteRawTag(24);
        output.WriteBool(FriendsListDocked);
      }
      if (HasFriendsListCollapsed) {
        output.WriteRawTag(32);
        output.WriteBool(FriendsListCollapsed);
      }
      if (HasFriendsListGroupChatsHeight) {
        output.WriteRawTag(40);
        output.WriteInt32(FriendsListGroupChatsHeight);
      }
      if (HasFriendsListVisible) {
        output.WriteRawTag(48);
        output.WriteBool(FriendsListVisible);
      }
      if (HasChatPopupsOpened) {
        output.WriteRawTag(56);
        output.WriteInt32(ChatPopupsOpened);
      }
      if (HasGroupChatTabsOpened) {
        output.WriteRawTag(64);
        output.WriteInt32(GroupChatTabsOpened);
      }
      if (HasFriendChatTabsOpened) {
        output.WriteRawTag(72);
        output.WriteInt32(FriendChatTabsOpened);
      }
      if (HasChatWindowWidth) {
        output.WriteRawTag(80);
        output.WriteInt32(ChatWindowWidth);
      }
      if (HasChatWindowHeight) {
        output.WriteRawTag(88);
        output.WriteInt32(ChatWindowHeight);
      }
      if (categoryCollapse_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CategoryCollapse);
      }
      if (HasGroupChatLeftColCollapsed) {
        output.WriteRawTag(104);
        output.WriteInt32(GroupChatLeftColCollapsed);
      }
      if (HasGroupChatRightColCollapsed) {
        output.WriteRawTag(112);
        output.WriteInt32(GroupChatRightColCollapsed);
      }
      if (HasInOneOnOneVoiceChat) {
        output.WriteRawTag(120);
        output.WriteBool(InOneOnOneVoiceChat);
      }
      if (HasInGroupVoiceChat) {
        output.WriteRawTag(128, 1);
        output.WriteBool(InGroupVoiceChat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFriendsListHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsListHeight);
      }
      if (HasFriendsListWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsListWidth);
      }
      if (HasFriendsListDocked) {
        size += 1 + 1;
      }
      if (HasFriendsListCollapsed) {
        size += 1 + 1;
      }
      if (HasFriendsListGroupChatsHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendsListGroupChatsHeight);
      }
      if (HasFriendsListVisible) {
        size += 1 + 1;
      }
      if (HasChatPopupsOpened) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatPopupsOpened);
      }
      if (HasGroupChatTabsOpened) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupChatTabsOpened);
      }
      if (HasFriendChatTabsOpened) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendChatTabsOpened);
      }
      if (HasChatWindowWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatWindowWidth);
      }
      if (HasChatWindowHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatWindowHeight);
      }
      if (categoryCollapse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CategoryCollapse);
      }
      if (HasGroupChatLeftColCollapsed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupChatLeftColCollapsed);
      }
      if (HasGroupChatRightColCollapsed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupChatRightColCollapsed);
      }
      if (HasInOneOnOneVoiceChat) {
        size += 1 + 1;
      }
      if (HasInGroupVoiceChat) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_ClientUsabilityMetrics_Notification_UIState other) {
      if (other == null) {
        return;
      }
      if (other.HasFriendsListHeight) {
        FriendsListHeight = other.FriendsListHeight;
      }
      if (other.HasFriendsListWidth) {
        FriendsListWidth = other.FriendsListWidth;
      }
      if (other.HasFriendsListDocked) {
        FriendsListDocked = other.FriendsListDocked;
      }
      if (other.HasFriendsListCollapsed) {
        FriendsListCollapsed = other.FriendsListCollapsed;
      }
      if (other.HasFriendsListGroupChatsHeight) {
        FriendsListGroupChatsHeight = other.FriendsListGroupChatsHeight;
      }
      if (other.HasFriendsListVisible) {
        FriendsListVisible = other.FriendsListVisible;
      }
      if (other.HasChatPopupsOpened) {
        ChatPopupsOpened = other.ChatPopupsOpened;
      }
      if (other.HasGroupChatTabsOpened) {
        GroupChatTabsOpened = other.GroupChatTabsOpened;
      }
      if (other.HasFriendChatTabsOpened) {
        FriendChatTabsOpened = other.FriendChatTabsOpened;
      }
      if (other.HasChatWindowWidth) {
        ChatWindowWidth = other.ChatWindowWidth;
      }
      if (other.HasChatWindowHeight) {
        ChatWindowHeight = other.ChatWindowHeight;
      }
      if (other.categoryCollapse_ != null) {
        if (categoryCollapse_ == null) {
          CategoryCollapse = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState();
        }
        CategoryCollapse.MergeFrom(other.CategoryCollapse);
      }
      if (other.HasGroupChatLeftColCollapsed) {
        GroupChatLeftColCollapsed = other.GroupChatLeftColCollapsed;
      }
      if (other.HasGroupChatRightColCollapsed) {
        GroupChatRightColCollapsed = other.GroupChatRightColCollapsed;
      }
      if (other.HasInOneOnOneVoiceChat) {
        InOneOnOneVoiceChat = other.InOneOnOneVoiceChat;
      }
      if (other.HasInGroupVoiceChat) {
        InGroupVoiceChat = other.InGroupVoiceChat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FriendsListHeight = input.ReadInt32();
            break;
          }
          case 16: {
            FriendsListWidth = input.ReadInt32();
            break;
          }
          case 24: {
            FriendsListDocked = input.ReadBool();
            break;
          }
          case 32: {
            FriendsListCollapsed = input.ReadBool();
            break;
          }
          case 40: {
            FriendsListGroupChatsHeight = input.ReadInt32();
            break;
          }
          case 48: {
            FriendsListVisible = input.ReadBool();
            break;
          }
          case 56: {
            ChatPopupsOpened = input.ReadInt32();
            break;
          }
          case 64: {
            GroupChatTabsOpened = input.ReadInt32();
            break;
          }
          case 72: {
            FriendChatTabsOpened = input.ReadInt32();
            break;
          }
          case 80: {
            ChatWindowWidth = input.ReadInt32();
            break;
          }
          case 88: {
            ChatWindowHeight = input.ReadInt32();
            break;
          }
          case 98: {
            if (categoryCollapse_ == null) {
              CategoryCollapse = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState();
            }
            input.ReadMessage(CategoryCollapse);
            break;
          }
          case 104: {
            GroupChatLeftColCollapsed = input.ReadInt32();
            break;
          }
          case 112: {
            GroupChatRightColCollapsed = input.ReadInt32();
            break;
          }
          case 120: {
            InOneOnOneVoiceChat = input.ReadBool();
            break;
          }
          case 128: {
            InGroupVoiceChat = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FriendsListHeight = input.ReadInt32();
            break;
          }
          case 16: {
            FriendsListWidth = input.ReadInt32();
            break;
          }
          case 24: {
            FriendsListDocked = input.ReadBool();
            break;
          }
          case 32: {
            FriendsListCollapsed = input.ReadBool();
            break;
          }
          case 40: {
            FriendsListGroupChatsHeight = input.ReadInt32();
            break;
          }
          case 48: {
            FriendsListVisible = input.ReadBool();
            break;
          }
          case 56: {
            ChatPopupsOpened = input.ReadInt32();
            break;
          }
          case 64: {
            GroupChatTabsOpened = input.ReadInt32();
            break;
          }
          case 72: {
            FriendChatTabsOpened = input.ReadInt32();
            break;
          }
          case 80: {
            ChatWindowWidth = input.ReadInt32();
            break;
          }
          case 88: {
            ChatWindowHeight = input.ReadInt32();
            break;
          }
          case 98: {
            if (categoryCollapse_ == null) {
              CategoryCollapse = new global::OpenSteamworks.Protobuf.WebUI.CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState();
            }
            input.ReadMessage(CategoryCollapse);
            break;
          }
          case 104: {
            GroupChatLeftColCollapsed = input.ReadInt32();
            break;
          }
          case 112: {
            GroupChatRightColCollapsed = input.ReadInt32();
            break;
          }
          case 120: {
            InOneOnOneVoiceChat = input.ReadBool();
            break;
          }
          case 128: {
            InGroupVoiceChat = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState : pb::IMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState> _parser = new pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(() => new CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState other) : this() {
      _hasBits0 = other._hasBits0;
      inGameCollapsed_ = other.inGameCollapsed_;
      onlineCollapsed_ = other.onlineCollapsed_;
      offlineCollapsed_ = other.offlineCollapsed_;
      gameGroupsCollapsed_ = other.gameGroupsCollapsed_;
      categoriesCollapsed_ = other.categoriesCollapsed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState Clone() {
      return new CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(this);
    }

    /// <summary>Field number for the "in_game_collapsed" field.</summary>
    public const int InGameCollapsedFieldNumber = 1;
    private readonly static bool InGameCollapsedDefaultValue = false;

    private bool inGameCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InGameCollapsed {
      get { if ((_hasBits0 & 1) != 0) { return inGameCollapsed_; } else { return InGameCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inGameCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "in_game_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInGameCollapsed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "in_game_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInGameCollapsed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "online_collapsed" field.</summary>
    public const int OnlineCollapsedFieldNumber = 2;
    private readonly static bool OnlineCollapsedDefaultValue = false;

    private bool onlineCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnlineCollapsed {
      get { if ((_hasBits0 & 2) != 0) { return onlineCollapsed_; } else { return OnlineCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        onlineCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "online_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnlineCollapsed {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "online_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnlineCollapsed() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "offline_collapsed" field.</summary>
    public const int OfflineCollapsedFieldNumber = 3;
    private readonly static bool OfflineCollapsedDefaultValue = false;

    private bool offlineCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OfflineCollapsed {
      get { if ((_hasBits0 & 4) != 0) { return offlineCollapsed_; } else { return OfflineCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        offlineCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "offline_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfflineCollapsed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "offline_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfflineCollapsed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "game_groups_collapsed" field.</summary>
    public const int GameGroupsCollapsedFieldNumber = 4;
    private readonly static int GameGroupsCollapsedDefaultValue = 0;

    private int gameGroupsCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameGroupsCollapsed {
      get { if ((_hasBits0 & 8) != 0) { return gameGroupsCollapsed_; } else { return GameGroupsCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gameGroupsCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "game_groups_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameGroupsCollapsed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "game_groups_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameGroupsCollapsed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "categories_collapsed" field.</summary>
    public const int CategoriesCollapsedFieldNumber = 5;
    private readonly static int CategoriesCollapsedDefaultValue = 0;

    private int categoriesCollapsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CategoriesCollapsed {
      get { if ((_hasBits0 & 16) != 0) { return categoriesCollapsed_; } else { return CategoriesCollapsedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        categoriesCollapsed_ = value;
      }
    }
    /// <summary>Gets whether the "categories_collapsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCategoriesCollapsed {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "categories_collapsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCategoriesCollapsed() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InGameCollapsed != other.InGameCollapsed) return false;
      if (OnlineCollapsed != other.OnlineCollapsed) return false;
      if (OfflineCollapsed != other.OfflineCollapsed) return false;
      if (GameGroupsCollapsed != other.GameGroupsCollapsed) return false;
      if (CategoriesCollapsed != other.CategoriesCollapsed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInGameCollapsed) hash ^= InGameCollapsed.GetHashCode();
      if (HasOnlineCollapsed) hash ^= OnlineCollapsed.GetHashCode();
      if (HasOfflineCollapsed) hash ^= OfflineCollapsed.GetHashCode();
      if (HasGameGroupsCollapsed) hash ^= GameGroupsCollapsed.GetHashCode();
      if (HasCategoriesCollapsed) hash ^= CategoriesCollapsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInGameCollapsed) {
        output.WriteRawTag(8);
        output.WriteBool(InGameCollapsed);
      }
      if (HasOnlineCollapsed) {
        output.WriteRawTag(16);
        output.WriteBool(OnlineCollapsed);
      }
      if (HasOfflineCollapsed) {
        output.WriteRawTag(24);
        output.WriteBool(OfflineCollapsed);
      }
      if (HasGameGroupsCollapsed) {
        output.WriteRawTag(32);
        output.WriteInt32(GameGroupsCollapsed);
      }
      if (HasCategoriesCollapsed) {
        output.WriteRawTag(40);
        output.WriteInt32(CategoriesCollapsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInGameCollapsed) {
        output.WriteRawTag(8);
        output.WriteBool(InGameCollapsed);
      }
      if (HasOnlineCollapsed) {
        output.WriteRawTag(16);
        output.WriteBool(OnlineCollapsed);
      }
      if (HasOfflineCollapsed) {
        output.WriteRawTag(24);
        output.WriteBool(OfflineCollapsed);
      }
      if (HasGameGroupsCollapsed) {
        output.WriteRawTag(32);
        output.WriteInt32(GameGroupsCollapsed);
      }
      if (HasCategoriesCollapsed) {
        output.WriteRawTag(40);
        output.WriteInt32(CategoriesCollapsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInGameCollapsed) {
        size += 1 + 1;
      }
      if (HasOnlineCollapsed) {
        size += 1 + 1;
      }
      if (HasOfflineCollapsed) {
        size += 1 + 1;
      }
      if (HasGameGroupsCollapsed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameGroupsCollapsed);
      }
      if (HasCategoriesCollapsed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoriesCollapsed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState other) {
      if (other == null) {
        return;
      }
      if (other.HasInGameCollapsed) {
        InGameCollapsed = other.InGameCollapsed;
      }
      if (other.HasOnlineCollapsed) {
        OnlineCollapsed = other.OnlineCollapsed;
      }
      if (other.HasOfflineCollapsed) {
        OfflineCollapsed = other.OfflineCollapsed;
      }
      if (other.HasGameGroupsCollapsed) {
        GameGroupsCollapsed = other.GameGroupsCollapsed;
      }
      if (other.HasCategoriesCollapsed) {
        CategoriesCollapsed = other.CategoriesCollapsed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InGameCollapsed = input.ReadBool();
            break;
          }
          case 16: {
            OnlineCollapsed = input.ReadBool();
            break;
          }
          case 24: {
            OfflineCollapsed = input.ReadBool();
            break;
          }
          case 32: {
            GameGroupsCollapsed = input.ReadInt32();
            break;
          }
          case 40: {
            CategoriesCollapsed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InGameCollapsed = input.ReadBool();
            break;
          }
          case 16: {
            OnlineCollapsed = input.ReadBool();
            break;
          }
          case 24: {
            OfflineCollapsed = input.ReadBool();
            break;
          }
          case 32: {
            GameGroupsCollapsed = input.ReadInt32();
            break;
          }
          case 40: {
            CategoriesCollapsed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings : pb::IMessage<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings> _parser = new pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(() => new CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings other) : this() {
      _hasBits0 = other._hasBits0;
      voiceInputGain_ = other.voiceInputGain_;
      voiceOutputGain_ = other.voiceOutputGain_;
      noiseGateLevel_ = other.noiseGateLevel_;
      voiceUseEchoCancellation_ = other.voiceUseEchoCancellation_;
      voiceUseNoiseCancellation_ = other.voiceUseNoiseCancellation_;
      voiceUseAutoGainControl_ = other.voiceUseAutoGainControl_;
      selectedNonDefaultMic_ = other.selectedNonDefaultMic_;
      selectedNonDefaultOutput_ = other.selectedNonDefaultOutput_;
      pushToTalenabled_ = other.pushToTalenabled_;
      pushToMuteEnabled_ = other.pushToMuteEnabled_;
      playPttSounds_ = other.playPttSounds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings Clone() {
      return new CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(this);
    }

    /// <summary>Field number for the "voice_input_gain" field.</summary>
    public const int VoiceInputGainFieldNumber = 1;
    private readonly static float VoiceInputGainDefaultValue = 0F;

    private float voiceInputGain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VoiceInputGain {
      get { if ((_hasBits0 & 1) != 0) { return voiceInputGain_; } else { return VoiceInputGainDefaultValue; } }
      set {
        _hasBits0 |= 1;
        voiceInputGain_ = value;
      }
    }
    /// <summary>Gets whether the "voice_input_gain" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoiceInputGain {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "voice_input_gain" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVoiceInputGain() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "voice_output_gain" field.</summary>
    public const int VoiceOutputGainFieldNumber = 2;
    private readonly static float VoiceOutputGainDefaultValue = 0F;

    private float voiceOutputGain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VoiceOutputGain {
      get { if ((_hasBits0 & 2) != 0) { return voiceOutputGain_; } else { return VoiceOutputGainDefaultValue; } }
      set {
        _hasBits0 |= 2;
        voiceOutputGain_ = value;
      }
    }
    /// <summary>Gets whether the "voice_output_gain" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoiceOutputGain {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "voice_output_gain" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVoiceOutputGain() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "noise_gate_level" field.</summary>
    public const int NoiseGateLevelFieldNumber = 3;
    private readonly static int NoiseGateLevelDefaultValue = 0;

    private int noiseGateLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NoiseGateLevel {
      get { if ((_hasBits0 & 4) != 0) { return noiseGateLevel_; } else { return NoiseGateLevelDefaultValue; } }
      set {
        _hasBits0 |= 4;
        noiseGateLevel_ = value;
      }
    }
    /// <summary>Gets whether the "noise_gate_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNoiseGateLevel {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "noise_gate_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNoiseGateLevel() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "voice_use_echo_cancellation" field.</summary>
    public const int VoiceUseEchoCancellationFieldNumber = 4;
    private readonly static bool VoiceUseEchoCancellationDefaultValue = false;

    private bool voiceUseEchoCancellation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VoiceUseEchoCancellation {
      get { if ((_hasBits0 & 8) != 0) { return voiceUseEchoCancellation_; } else { return VoiceUseEchoCancellationDefaultValue; } }
      set {
        _hasBits0 |= 8;
        voiceUseEchoCancellation_ = value;
      }
    }
    /// <summary>Gets whether the "voice_use_echo_cancellation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoiceUseEchoCancellation {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "voice_use_echo_cancellation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVoiceUseEchoCancellation() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "voice_use_noise_cancellation" field.</summary>
    public const int VoiceUseNoiseCancellationFieldNumber = 5;
    private readonly static bool VoiceUseNoiseCancellationDefaultValue = false;

    private bool voiceUseNoiseCancellation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VoiceUseNoiseCancellation {
      get { if ((_hasBits0 & 16) != 0) { return voiceUseNoiseCancellation_; } else { return VoiceUseNoiseCancellationDefaultValue; } }
      set {
        _hasBits0 |= 16;
        voiceUseNoiseCancellation_ = value;
      }
    }
    /// <summary>Gets whether the "voice_use_noise_cancellation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoiceUseNoiseCancellation {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "voice_use_noise_cancellation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVoiceUseNoiseCancellation() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "voice_use_auto_gain_control" field.</summary>
    public const int VoiceUseAutoGainControlFieldNumber = 6;
    private readonly static bool VoiceUseAutoGainControlDefaultValue = false;

    private bool voiceUseAutoGainControl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VoiceUseAutoGainControl {
      get { if ((_hasBits0 & 32) != 0) { return voiceUseAutoGainControl_; } else { return VoiceUseAutoGainControlDefaultValue; } }
      set {
        _hasBits0 |= 32;
        voiceUseAutoGainControl_ = value;
      }
    }
    /// <summary>Gets whether the "voice_use_auto_gain_control" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoiceUseAutoGainControl {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "voice_use_auto_gain_control" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVoiceUseAutoGainControl() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "selected_non_default_mic" field.</summary>
    public const int SelectedNonDefaultMicFieldNumber = 7;
    private readonly static bool SelectedNonDefaultMicDefaultValue = false;

    private bool selectedNonDefaultMic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SelectedNonDefaultMic {
      get { if ((_hasBits0 & 64) != 0) { return selectedNonDefaultMic_; } else { return SelectedNonDefaultMicDefaultValue; } }
      set {
        _hasBits0 |= 64;
        selectedNonDefaultMic_ = value;
      }
    }
    /// <summary>Gets whether the "selected_non_default_mic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectedNonDefaultMic {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "selected_non_default_mic" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectedNonDefaultMic() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "selected_non_default_output" field.</summary>
    public const int SelectedNonDefaultOutputFieldNumber = 8;
    private readonly static bool SelectedNonDefaultOutputDefaultValue = false;

    private bool selectedNonDefaultOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SelectedNonDefaultOutput {
      get { if ((_hasBits0 & 128) != 0) { return selectedNonDefaultOutput_; } else { return SelectedNonDefaultOutputDefaultValue; } }
      set {
        _hasBits0 |= 128;
        selectedNonDefaultOutput_ = value;
      }
    }
    /// <summary>Gets whether the "selected_non_default_output" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectedNonDefaultOutput {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "selected_non_default_output" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectedNonDefaultOutput() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "push_to_talenabled" field.</summary>
    public const int PushToTalenabledFieldNumber = 9;
    private readonly static bool PushToTalenabledDefaultValue = false;

    private bool pushToTalenabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PushToTalenabled {
      get { if ((_hasBits0 & 256) != 0) { return pushToTalenabled_; } else { return PushToTalenabledDefaultValue; } }
      set {
        _hasBits0 |= 256;
        pushToTalenabled_ = value;
      }
    }
    /// <summary>Gets whether the "push_to_talenabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPushToTalenabled {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "push_to_talenabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPushToTalenabled() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "push_to_mute_enabled" field.</summary>
    public const int PushToMuteEnabledFieldNumber = 10;
    private readonly static bool PushToMuteEnabledDefaultValue = false;

    private bool pushToMuteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PushToMuteEnabled {
      get { if ((_hasBits0 & 512) != 0) { return pushToMuteEnabled_; } else { return PushToMuteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 512;
        pushToMuteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "push_to_mute_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPushToMuteEnabled {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "push_to_mute_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPushToMuteEnabled() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "play_ptt_sounds" field.</summary>
    public const int PlayPttSoundsFieldNumber = 11;
    private readonly static bool PlayPttSoundsDefaultValue = false;

    private bool playPttSounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayPttSounds {
      get { if ((_hasBits0 & 1024) != 0) { return playPttSounds_; } else { return PlayPttSoundsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        playPttSounds_ = value;
      }
    }
    /// <summary>Gets whether the "play_ptt_sounds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayPttSounds {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "play_ptt_sounds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayPttSounds() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VoiceInputGain, other.VoiceInputGain)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VoiceOutputGain, other.VoiceOutputGain)) return false;
      if (NoiseGateLevel != other.NoiseGateLevel) return false;
      if (VoiceUseEchoCancellation != other.VoiceUseEchoCancellation) return false;
      if (VoiceUseNoiseCancellation != other.VoiceUseNoiseCancellation) return false;
      if (VoiceUseAutoGainControl != other.VoiceUseAutoGainControl) return false;
      if (SelectedNonDefaultMic != other.SelectedNonDefaultMic) return false;
      if (SelectedNonDefaultOutput != other.SelectedNonDefaultOutput) return false;
      if (PushToTalenabled != other.PushToTalenabled) return false;
      if (PushToMuteEnabled != other.PushToMuteEnabled) return false;
      if (PlayPttSounds != other.PlayPttSounds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVoiceInputGain) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VoiceInputGain);
      if (HasVoiceOutputGain) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VoiceOutputGain);
      if (HasNoiseGateLevel) hash ^= NoiseGateLevel.GetHashCode();
      if (HasVoiceUseEchoCancellation) hash ^= VoiceUseEchoCancellation.GetHashCode();
      if (HasVoiceUseNoiseCancellation) hash ^= VoiceUseNoiseCancellation.GetHashCode();
      if (HasVoiceUseAutoGainControl) hash ^= VoiceUseAutoGainControl.GetHashCode();
      if (HasSelectedNonDefaultMic) hash ^= SelectedNonDefaultMic.GetHashCode();
      if (HasSelectedNonDefaultOutput) hash ^= SelectedNonDefaultOutput.GetHashCode();
      if (HasPushToTalenabled) hash ^= PushToTalenabled.GetHashCode();
      if (HasPushToMuteEnabled) hash ^= PushToMuteEnabled.GetHashCode();
      if (HasPlayPttSounds) hash ^= PlayPttSounds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVoiceInputGain) {
        output.WriteRawTag(13);
        output.WriteFloat(VoiceInputGain);
      }
      if (HasVoiceOutputGain) {
        output.WriteRawTag(21);
        output.WriteFloat(VoiceOutputGain);
      }
      if (HasNoiseGateLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(NoiseGateLevel);
      }
      if (HasVoiceUseEchoCancellation) {
        output.WriteRawTag(32);
        output.WriteBool(VoiceUseEchoCancellation);
      }
      if (HasVoiceUseNoiseCancellation) {
        output.WriteRawTag(40);
        output.WriteBool(VoiceUseNoiseCancellation);
      }
      if (HasVoiceUseAutoGainControl) {
        output.WriteRawTag(48);
        output.WriteBool(VoiceUseAutoGainControl);
      }
      if (HasSelectedNonDefaultMic) {
        output.WriteRawTag(56);
        output.WriteBool(SelectedNonDefaultMic);
      }
      if (HasSelectedNonDefaultOutput) {
        output.WriteRawTag(64);
        output.WriteBool(SelectedNonDefaultOutput);
      }
      if (HasPushToTalenabled) {
        output.WriteRawTag(72);
        output.WriteBool(PushToTalenabled);
      }
      if (HasPushToMuteEnabled) {
        output.WriteRawTag(80);
        output.WriteBool(PushToMuteEnabled);
      }
      if (HasPlayPttSounds) {
        output.WriteRawTag(88);
        output.WriteBool(PlayPttSounds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVoiceInputGain) {
        output.WriteRawTag(13);
        output.WriteFloat(VoiceInputGain);
      }
      if (HasVoiceOutputGain) {
        output.WriteRawTag(21);
        output.WriteFloat(VoiceOutputGain);
      }
      if (HasNoiseGateLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(NoiseGateLevel);
      }
      if (HasVoiceUseEchoCancellation) {
        output.WriteRawTag(32);
        output.WriteBool(VoiceUseEchoCancellation);
      }
      if (HasVoiceUseNoiseCancellation) {
        output.WriteRawTag(40);
        output.WriteBool(VoiceUseNoiseCancellation);
      }
      if (HasVoiceUseAutoGainControl) {
        output.WriteRawTag(48);
        output.WriteBool(VoiceUseAutoGainControl);
      }
      if (HasSelectedNonDefaultMic) {
        output.WriteRawTag(56);
        output.WriteBool(SelectedNonDefaultMic);
      }
      if (HasSelectedNonDefaultOutput) {
        output.WriteRawTag(64);
        output.WriteBool(SelectedNonDefaultOutput);
      }
      if (HasPushToTalenabled) {
        output.WriteRawTag(72);
        output.WriteBool(PushToTalenabled);
      }
      if (HasPushToMuteEnabled) {
        output.WriteRawTag(80);
        output.WriteBool(PushToMuteEnabled);
      }
      if (HasPlayPttSounds) {
        output.WriteRawTag(88);
        output.WriteBool(PlayPttSounds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVoiceInputGain) {
        size += 1 + 4;
      }
      if (HasVoiceOutputGain) {
        size += 1 + 4;
      }
      if (HasNoiseGateLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoiseGateLevel);
      }
      if (HasVoiceUseEchoCancellation) {
        size += 1 + 1;
      }
      if (HasVoiceUseNoiseCancellation) {
        size += 1 + 1;
      }
      if (HasVoiceUseAutoGainControl) {
        size += 1 + 1;
      }
      if (HasSelectedNonDefaultMic) {
        size += 1 + 1;
      }
      if (HasSelectedNonDefaultOutput) {
        size += 1 + 1;
      }
      if (HasPushToTalenabled) {
        size += 1 + 1;
      }
      if (HasPushToMuteEnabled) {
        size += 1 + 1;
      }
      if (HasPlayPttSounds) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings other) {
      if (other == null) {
        return;
      }
      if (other.HasVoiceInputGain) {
        VoiceInputGain = other.VoiceInputGain;
      }
      if (other.HasVoiceOutputGain) {
        VoiceOutputGain = other.VoiceOutputGain;
      }
      if (other.HasNoiseGateLevel) {
        NoiseGateLevel = other.NoiseGateLevel;
      }
      if (other.HasVoiceUseEchoCancellation) {
        VoiceUseEchoCancellation = other.VoiceUseEchoCancellation;
      }
      if (other.HasVoiceUseNoiseCancellation) {
        VoiceUseNoiseCancellation = other.VoiceUseNoiseCancellation;
      }
      if (other.HasVoiceUseAutoGainControl) {
        VoiceUseAutoGainControl = other.VoiceUseAutoGainControl;
      }
      if (other.HasSelectedNonDefaultMic) {
        SelectedNonDefaultMic = other.SelectedNonDefaultMic;
      }
      if (other.HasSelectedNonDefaultOutput) {
        SelectedNonDefaultOutput = other.SelectedNonDefaultOutput;
      }
      if (other.HasPushToTalenabled) {
        PushToTalenabled = other.PushToTalenabled;
      }
      if (other.HasPushToMuteEnabled) {
        PushToMuteEnabled = other.PushToMuteEnabled;
      }
      if (other.HasPlayPttSounds) {
        PlayPttSounds = other.PlayPttSounds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            VoiceInputGain = input.ReadFloat();
            break;
          }
          case 21: {
            VoiceOutputGain = input.ReadFloat();
            break;
          }
          case 24: {
            NoiseGateLevel = input.ReadInt32();
            break;
          }
          case 32: {
            VoiceUseEchoCancellation = input.ReadBool();
            break;
          }
          case 40: {
            VoiceUseNoiseCancellation = input.ReadBool();
            break;
          }
          case 48: {
            VoiceUseAutoGainControl = input.ReadBool();
            break;
          }
          case 56: {
            SelectedNonDefaultMic = input.ReadBool();
            break;
          }
          case 64: {
            SelectedNonDefaultOutput = input.ReadBool();
            break;
          }
          case 72: {
            PushToTalenabled = input.ReadBool();
            break;
          }
          case 80: {
            PushToMuteEnabled = input.ReadBool();
            break;
          }
          case 88: {
            PlayPttSounds = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            VoiceInputGain = input.ReadFloat();
            break;
          }
          case 21: {
            VoiceOutputGain = input.ReadFloat();
            break;
          }
          case 24: {
            NoiseGateLevel = input.ReadInt32();
            break;
          }
          case 32: {
            VoiceUseEchoCancellation = input.ReadBool();
            break;
          }
          case 40: {
            VoiceUseNoiseCancellation = input.ReadBool();
            break;
          }
          case 48: {
            VoiceUseAutoGainControl = input.ReadBool();
            break;
          }
          case 56: {
            SelectedNonDefaultMic = input.ReadBool();
            break;
          }
          case 64: {
            SelectedNonDefaultOutput = input.ReadBool();
            break;
          }
          case 72: {
            PushToTalenabled = input.ReadBool();
            break;
          }
          case 80: {
            PushToMuteEnabled = input.ReadBool();
            break;
          }
          case 88: {
            PlayPttSounds = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CChatUsability_RequestClientUsabilityMetrics_Notification : pb::IMessage<CChatUsability_RequestClientUsabilityMetrics_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CChatUsability_RequestClientUsabilityMetrics_Notification> _parser = new pb::MessageParser<CChatUsability_RequestClientUsabilityMetrics_Notification>(() => new CChatUsability_RequestClientUsabilityMetrics_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CChatUsability_RequestClientUsabilityMetrics_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceChatusabilityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_RequestClientUsabilityMetrics_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_RequestClientUsabilityMetrics_Notification(CChatUsability_RequestClientUsabilityMetrics_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      metricsRunId_ = other.metricsRunId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CChatUsability_RequestClientUsabilityMetrics_Notification Clone() {
      return new CChatUsability_RequestClientUsabilityMetrics_Notification(this);
    }

    /// <summary>Field number for the "metrics_run_id" field.</summary>
    public const int MetricsRunIdFieldNumber = 1;
    private readonly static uint MetricsRunIdDefaultValue = 0;

    private uint metricsRunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MetricsRunId {
      get { if ((_hasBits0 & 1) != 0) { return metricsRunId_; } else { return MetricsRunIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        metricsRunId_ = value;
      }
    }
    /// <summary>Gets whether the "metrics_run_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetricsRunId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "metrics_run_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetricsRunId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CChatUsability_RequestClientUsabilityMetrics_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CChatUsability_RequestClientUsabilityMetrics_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MetricsRunId != other.MetricsRunId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMetricsRunId) hash ^= MetricsRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMetricsRunId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MetricsRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMetricsRunId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MetricsRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMetricsRunId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MetricsRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CChatUsability_RequestClientUsabilityMetrics_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasMetricsRunId) {
        MetricsRunId = other.MetricsRunId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MetricsRunId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MetricsRunId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
