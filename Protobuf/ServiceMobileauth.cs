// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_mobileauth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_mobileauth.proto</summary>
  public static partial class ServiceMobileauthReflection {

    #region Descriptor
    /// <summary>File descriptor for service_mobileauth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceMobileauthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhzZXJ2aWNlX21vYmlsZWF1dGgucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9k",
            "ZXNjcmlwdG9yLnByb3RvIq4BCihDTW9iaWxlQXV0aF9NaWdyYXRlTW9iaWxl",
            "U2Vzc2lvbl9SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYSDQoFdG9rZW4YAiAB",
            "KAkSEQoJc2lnbmF0dXJlGAMgASgMEk8KDmRldmljZV9kZXRhaWxzGAQgASgL",
            "MjcuQ01vYmlsZUF1dGhfTWlncmF0ZU1vYmlsZVNlc3Npb25fUmVxdWVzdF9E",
            "ZXZpY2VEZXRhaWxzIpoBCjZDTW9iaWxlQXV0aF9NaWdyYXRlTW9iaWxlU2Vz",
            "c2lvbl9SZXF1ZXN0X0RldmljZURldGFpbHMSHAoUZGV2aWNlX2ZyaWVuZGx5",
            "X25hbWUYASABKAkSFQoNcGxhdGZvcm1fdHlwZRgCIAEoDRIPCgdvc190eXBl",
            "GAMgASgFEhoKEmdhbWluZ19kZXZpY2VfdHlwZRgEIAEoDSJYCilDTW9iaWxl",
            "QXV0aF9NaWdyYXRlTW9iaWxlU2Vzc2lvbl9SZXNwb25zZRIVCg1yZWZyZXNo",
            "X3Rva2VuGAEgASgJEhQKDGFjY2Vzc190b2tlbhgCIAEoCTJ7CgpNb2JpbGVB",
            "dXRoEm0KFE1pZ3JhdGVNb2JpbGVTZXNzaW9uEikuQ01vYmlsZUF1dGhfTWln",
            "cmF0ZU1vYmlsZVNlc3Npb25fUmVxdWVzdBoqLkNNb2JpbGVBdXRoX01pZ3Jh",
            "dGVNb2JpbGVTZXNzaW9uX1Jlc3BvbnNlQiCqAh1PcGVuU3RlYW13b3Jrcy5Q",
            "cm90b2J1Zi5XZWJVSQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request), global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request.Parser, new[]{ "Steamid", "Token", "Signature", "DeviceDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails), global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails.Parser, new[]{ "DeviceFriendlyName", "PlatformType", "OsType", "GamingDeviceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Response), global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Response.Parser, new[]{ "RefreshToken", "AccessToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMobileAuth_MigrateMobileSession_Request : pb::IMessage<CMobileAuth_MigrateMobileSession_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMobileAuth_MigrateMobileSession_Request> _parser = new pb::MessageParser<CMobileAuth_MigrateMobileSession_Request>(() => new CMobileAuth_MigrateMobileSession_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMobileAuth_MigrateMobileSession_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceMobileauthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Request(CMobileAuth_MigrateMobileSession_Request other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      token_ = other.token_;
      signature_ = other.signature_;
      deviceDetails_ = other.deviceDetails_ != null ? other.deviceDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Request Clone() {
      return new CMobileAuth_MigrateMobileSession_Request(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignature() {
      signature_ = null;
    }

    /// <summary>Field number for the "device_details" field.</summary>
    public const int DeviceDetailsFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails deviceDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails DeviceDetails {
      get { return deviceDetails_; }
      set {
        deviceDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMobileAuth_MigrateMobileSession_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMobileAuth_MigrateMobileSession_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Token != other.Token) return false;
      if (Signature != other.Signature) return false;
      if (!object.Equals(DeviceDetails, other.DeviceDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (deviceDetails_ != null) hash ^= DeviceDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasSignature) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (deviceDetails_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DeviceDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasSignature) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (deviceDetails_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DeviceDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (deviceDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMobileAuth_MigrateMobileSession_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      if (other.deviceDetails_ != null) {
        if (deviceDetails_ == null) {
          DeviceDetails = new global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails();
        }
        DeviceDetails.MergeFrom(other.DeviceDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 34: {
            if (deviceDetails_ == null) {
              DeviceDetails = new global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails();
            }
            input.ReadMessage(DeviceDetails);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 34: {
            if (deviceDetails_ == null) {
              DeviceDetails = new global::OpenSteamworks.Protobuf.WebUI.CMobileAuth_MigrateMobileSession_Request_DeviceDetails();
            }
            input.ReadMessage(DeviceDetails);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMobileAuth_MigrateMobileSession_Request_DeviceDetails : pb::IMessage<CMobileAuth_MigrateMobileSession_Request_DeviceDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMobileAuth_MigrateMobileSession_Request_DeviceDetails> _parser = new pb::MessageParser<CMobileAuth_MigrateMobileSession_Request_DeviceDetails>(() => new CMobileAuth_MigrateMobileSession_Request_DeviceDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMobileAuth_MigrateMobileSession_Request_DeviceDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceMobileauthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Request_DeviceDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Request_DeviceDetails(CMobileAuth_MigrateMobileSession_Request_DeviceDetails other) : this() {
      _hasBits0 = other._hasBits0;
      deviceFriendlyName_ = other.deviceFriendlyName_;
      platformType_ = other.platformType_;
      osType_ = other.osType_;
      gamingDeviceType_ = other.gamingDeviceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Request_DeviceDetails Clone() {
      return new CMobileAuth_MigrateMobileSession_Request_DeviceDetails(this);
    }

    /// <summary>Field number for the "device_friendly_name" field.</summary>
    public const int DeviceFriendlyNameFieldNumber = 1;
    private readonly static string DeviceFriendlyNameDefaultValue = "";

    private string deviceFriendlyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceFriendlyName {
      get { return deviceFriendlyName_ ?? DeviceFriendlyNameDefaultValue; }
      set {
        deviceFriendlyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_friendly_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceFriendlyName {
      get { return deviceFriendlyName_ != null; }
    }
    /// <summary>Clears the value of the "device_friendly_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceFriendlyName() {
      deviceFriendlyName_ = null;
    }

    /// <summary>Field number for the "platform_type" field.</summary>
    public const int PlatformTypeFieldNumber = 2;
    private readonly static uint PlatformTypeDefaultValue = 0;

    private uint platformType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlatformType {
      get { if ((_hasBits0 & 1) != 0) { return platformType_; } else { return PlatformTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        platformType_ = value;
      }
    }
    /// <summary>Gets whether the "platform_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatformType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "platform_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatformType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "os_type" field.</summary>
    public const int OsTypeFieldNumber = 3;
    private readonly static int OsTypeDefaultValue = 0;

    private int osType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OsType {
      get { if ((_hasBits0 & 2) != 0) { return osType_; } else { return OsTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        osType_ = value;
      }
    }
    /// <summary>Gets whether the "os_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "os_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gaming_device_type" field.</summary>
    public const int GamingDeviceTypeFieldNumber = 4;
    private readonly static uint GamingDeviceTypeDefaultValue = 0;

    private uint gamingDeviceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GamingDeviceType {
      get { if ((_hasBits0 & 4) != 0) { return gamingDeviceType_; } else { return GamingDeviceTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gamingDeviceType_ = value;
      }
    }
    /// <summary>Gets whether the "gaming_device_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamingDeviceType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gaming_device_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamingDeviceType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMobileAuth_MigrateMobileSession_Request_DeviceDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMobileAuth_MigrateMobileSession_Request_DeviceDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceFriendlyName != other.DeviceFriendlyName) return false;
      if (PlatformType != other.PlatformType) return false;
      if (OsType != other.OsType) return false;
      if (GamingDeviceType != other.GamingDeviceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeviceFriendlyName) hash ^= DeviceFriendlyName.GetHashCode();
      if (HasPlatformType) hash ^= PlatformType.GetHashCode();
      if (HasOsType) hash ^= OsType.GetHashCode();
      if (HasGamingDeviceType) hash ^= GamingDeviceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeviceFriendlyName) {
        output.WriteRawTag(10);
        output.WriteString(DeviceFriendlyName);
      }
      if (HasPlatformType) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlatformType);
      }
      if (HasOsType) {
        output.WriteRawTag(24);
        output.WriteInt32(OsType);
      }
      if (HasGamingDeviceType) {
        output.WriteRawTag(32);
        output.WriteUInt32(GamingDeviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeviceFriendlyName) {
        output.WriteRawTag(10);
        output.WriteString(DeviceFriendlyName);
      }
      if (HasPlatformType) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlatformType);
      }
      if (HasOsType) {
        output.WriteRawTag(24);
        output.WriteInt32(OsType);
      }
      if (HasGamingDeviceType) {
        output.WriteRawTag(32);
        output.WriteUInt32(GamingDeviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDeviceFriendlyName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceFriendlyName);
      }
      if (HasPlatformType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlatformType);
      }
      if (HasOsType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OsType);
      }
      if (HasGamingDeviceType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GamingDeviceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMobileAuth_MigrateMobileSession_Request_DeviceDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasDeviceFriendlyName) {
        DeviceFriendlyName = other.DeviceFriendlyName;
      }
      if (other.HasPlatformType) {
        PlatformType = other.PlatformType;
      }
      if (other.HasOsType) {
        OsType = other.OsType;
      }
      if (other.HasGamingDeviceType) {
        GamingDeviceType = other.GamingDeviceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceFriendlyName = input.ReadString();
            break;
          }
          case 16: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 24: {
            OsType = input.ReadInt32();
            break;
          }
          case 32: {
            GamingDeviceType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceFriendlyName = input.ReadString();
            break;
          }
          case 16: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 24: {
            OsType = input.ReadInt32();
            break;
          }
          case 32: {
            GamingDeviceType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMobileAuth_MigrateMobileSession_Response : pb::IMessage<CMobileAuth_MigrateMobileSession_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMobileAuth_MigrateMobileSession_Response> _parser = new pb::MessageParser<CMobileAuth_MigrateMobileSession_Response>(() => new CMobileAuth_MigrateMobileSession_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMobileAuth_MigrateMobileSession_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceMobileauthReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Response(CMobileAuth_MigrateMobileSession_Response other) : this() {
      refreshToken_ = other.refreshToken_;
      accessToken_ = other.accessToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMobileAuth_MigrateMobileSession_Response Clone() {
      return new CMobileAuth_MigrateMobileSession_Response(this);
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 1;
    private readonly static string RefreshTokenDefaultValue = "";

    private string refreshToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RefreshToken {
      get { return refreshToken_ ?? RefreshTokenDefaultValue; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "refresh_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefreshToken {
      get { return refreshToken_ != null; }
    }
    /// <summary>Clears the value of the "refresh_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefreshToken() {
      refreshToken_ = null;
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private readonly static string AccessTokenDefaultValue = "";

    private string accessToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "access_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "access_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessToken() {
      accessToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMobileAuth_MigrateMobileSession_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMobileAuth_MigrateMobileSession_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshToken != other.RefreshToken) return false;
      if (AccessToken != other.AccessToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRefreshToken) hash ^= RefreshToken.GetHashCode();
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRefreshToken) {
        output.WriteRawTag(10);
        output.WriteString(RefreshToken);
      }
      if (HasAccessToken) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRefreshToken) {
        output.WriteRawTag(10);
        output.WriteString(RefreshToken);
      }
      if (HasAccessToken) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRefreshToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMobileAuth_MigrateMobileSession_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasRefreshToken) {
        RefreshToken = other.RefreshToken;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RefreshToken = input.ReadString();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RefreshToken = input.ReadString();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
