// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_remoteplay.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_remoteplay.proto</summary>
  public static partial class SteammessagesRemoteplayReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_remoteplay.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesRemoteplayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5zdGVhbW1lc3NhZ2VzX3JlbW90ZXBsYXkucHJvdG8aIGdvb2dsZS9wcm90",
            "b2J1Zi9kZXNjcmlwdG9yLnByb3RvIkgKFUNEaXNjb3ZlcnlQaW5nUmVxdWVz",
            "dBIQCghzZXF1ZW5jZRgBIAEoDRIdChVwYWNrZXRfc2l6ZV9yZXF1ZXN0ZWQY",
            "AiABKA0iSAoWQ0Rpc2NvdmVyeVBpbmdSZXNwb25zZRIQCghzZXF1ZW5jZRgB",
            "IAEoDRIcChRwYWNrZXRfc2l6ZV9yZWNlaXZlZBgCIAEoDSIzCh1DU3RyZWFt",
            "aW5nQ2xpZW50SGFuZHNoYWtlSW5mbxISCgpuZXR3b3J0ZXN0GAIgASgFIkMK",
            "E0NDbGllbnRIYW5kc2hha2VNc2cSLAoEaW5mbxgBIAIoCzIeLkNTdHJlYW1p",
            "bmdDbGllbnRIYW5kc2hha2VJbmZvIiwKHUNTdHJlYW1pbmdTZXJ2ZXJIYW5k",
            "c2hha2VJbmZvEgsKA210dRgBIAEoBSJDChNDU2VydmVySGFuZHNoYWtlTXNn",
            "EiwKBGluZm8YASACKAsyHi5DU3RyZWFtaW5nU2VydmVySGFuZHNoYWtlSW5m",
            "byJxChlDQXV0aGVudGljYXRpb25SZXF1ZXN0TXNnEg0KBXRva2VuGAEgASgM",
            "EjQKB3ZlcnNpb24YAiABKA4yDy5FU3RyZWFtVmVyc2lvbjoSRVN0cmVhbVZl",
            "cnNpb25Ob25lEg8KB3N0ZWFtaWQYAyABKAQi0gEKGkNBdXRoZW50aWNhdGlv",
            "blJlc3BvbnNlTXNnEksKBnJlc3VsdBgBIAEoDjIwLkNBdXRoZW50aWNhdGlv",
            "blJlc3BvbnNlTXNnLkF1dGhlbnRpY2F0aW9uUmVzdWx0OglTVUNDRUVERUQS",
            "NAoHdmVyc2lvbhgCIAEoDjIPLkVTdHJlYW1WZXJzaW9uOhJFU3RyZWFtVmVy",
            "c2lvbk5vbmUiMQoUQXV0aGVudGljYXRpb25SZXN1bHQSDQoJU1VDQ0VFREVE",
            "EAASCgoGRkFJTEVEEAEiDwoNQ0tlZXBBbGl2ZU1zZyKDAQoUQ1N0YXJ0TmV0",
            "d29ya1Rlc3RNc2cSDgoGZnJhbWVzGAEgASgNEhEKCWZyYW1lcmF0ZRgCIAEo",
            "DRIUCgxiaXRyYXRlX2ticHMYAyABKA0SGgoSYnVyc3RfYml0cmF0ZV9rYnBz",
            "GAQgASgNEhYKDmJhbmR3aWR0aF90ZXN0GAUgASgIIokBChBDU3RyZWFtVmlk",
            "ZW9Nb2RlEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDRIUCgxyZWZy",
            "ZXNoX3JhdGUYAyABKA0SHgoWcmVmcmVzaF9yYXRlX251bWVyYXRvchgEIAEo",
            "DRIgChhyZWZyZXNoX3JhdGVfZGVub21pbmF0b3IYBSABKA0ioAEKEUNTdHJl",
            "YW1WaWRlb0xpbWl0EjgKBWNvZGVjGAEgASgOMhIuRVN0cmVhbVZpZGVvQ29k",
            "ZWM6FUVTdHJlYW1WaWRlb0NvZGVjTm9uZRIfCgRtb2RlGAIgASgLMhEuQ1N0",
            "cmVhbVZpZGVvTW9kZRIUCgxiaXRyYXRlX2ticHMYAyABKAUSGgoSYnVyc3Rf",
            "Yml0cmF0ZV9rYnBzGAQgASgFIssDChRDU3RyZWFtaW5nQ2xpZW50Q2FwcxIT",
            "CgtzeXN0ZW1faW5mbxgBIAEoCRIaChJzeXN0ZW1fY2FuX3N1c3BlbmQYAiAB",
            "KAgSIwobbWF4aW11bV9kZWNvZGVfYml0cmF0ZV9rYnBzGAMgASgFEiIKGm1h",
            "eGltdW1fYnVyc3RfYml0cmF0ZV9rYnBzGAQgASgFEhsKE3N1cHBvcnRzX3Zp",
            "ZGVvX2hldmMYBSABKAgSGwoTZGlzYWJsZV9zdGVhbV9zdG9yZRgGIAEoCBId",
            "ChVkaXNhYmxlX2NsaWVudF9jdXJzb3IYByABKAgSJwofZGlzYWJsZV9pbnRl",
            "bF9oYXJkd2FyZV9lbmNvZGluZxgIIAEoCBIlCh1kaXNhYmxlX2FtZF9oYXJk",
            "d2FyZV9lbmNvZGluZxgJIAEoCBIoCiBkaXNhYmxlX252aWRpYV9oYXJkd2Fy",
            "ZV9lbmNvZGluZxgKIAEoCBITCgtmb3JtX2ZhY3RvchgLIAEoBRIeChZoYXNf",
            "b25fc2NyZWVuX2tleWJvYXJkGAwgASgIEjEKFXN1cHBvcnRlZF9jb2xvcnNw",
            "YWNlcxgNIAMoDjISLkVTdHJlYW1Db2xvcnNwYWNlIusHChZDU3RyZWFtaW5n",
            "Q2xpZW50Q29uZmlnEkIKB3F1YWxpdHkYASABKA4yGS5FU3RyZWFtUXVhbGl0",
            "eVByZWZlcmVuY2U6FkVTdHJlYW1RdWFsaXR5QmFsYW5jZWQSHAoUZGVzaXJl",
            "ZF9yZXNvbHV0aW9uX3gYAiABKA0SHAoUZGVzaXJlZF9yZXNvbHV0aW9uX3kY",
            "AyABKA0SIwobZGVzaXJlZF9mcmFtZXJhdGVfbnVtZXJhdG9yGAQgASgNEiUK",
            "HWRlc2lyZWRfZnJhbWVyYXRlX2Rlbm9taW5hdG9yGAUgASgNEiAKFGRlc2ly",
            "ZWRfYml0cmF0ZV9rYnBzGAYgASgFOgItMRImChhlbmFibGVfaGFyZHdhcmVf",
            "ZGVjb2RpbmcYByABKAg6BHRydWUSKQoaZW5hYmxlX3BlcmZvcm1hbmNlX292",
            "ZXJsYXkYCCABKAg6BWZhbHNlEiQKFmVuYWJsZV92aWRlb19zdHJlYW1pbmcY",
            "CSABKAg6BHRydWUSJAoWZW5hYmxlX2F1ZGlvX3N0cmVhbWluZxgKIAEoCDoE",
            "dHJ1ZRIkChZlbmFibGVfaW5wdXRfc3RyZWFtaW5nGAsgASgIOgR0cnVlEhkK",
            "DmF1ZGlvX2NoYW5uZWxzGAwgASgFOgEyEiAKEWVuYWJsZV92aWRlb19oZXZj",
            "GA0gASgIOgVmYWxzZRImChhlbmFibGVfcGVyZm9ybWFuY2VfaWNvbnMYDiAB",
            "KAg6BHRydWUSKgobZW5hYmxlX21pY3JvcGhvbmVfc3RyZWFtaW5nGA8gASgI",
            "OgVmYWxzZRIhChljb250cm9sbGVyX292ZXJsYXlfaG90a2V5GBAgASgJEi8K",
            "IGVuYWJsZV90b3VjaF9jb250cm9sbGVyX09CU09MRVRFGBEgASgIOgVmYWxz",
            "ZRI9CglwMnBfc2NvcGUYEyABKA4yEC5FU3RyZWFtUDJQU2NvcGU6GEVTdHJl",
            "YW1QMlBTY29wZUF1dG9tYXRpYxIoChllbmFibGVfYXVkaW9fdW5jb21wcmVz",
            "c2VkGBQgASgIOgVmYWxzZRIpCg1kaXNwbGF5X2xpbWl0GBUgASgLMhIuQ1N0",
            "cmVhbVZpZGVvTGltaXQSKQoNcXVhbGl0eV9saW1pdBgWIAEoCzISLkNTdHJl",
            "YW1WaWRlb0xpbWl0EikKDXJ1bnRpbWVfbGltaXQYFyABKAsyEi5DU3RyZWFt",
            "VmlkZW9MaW1pdBIpCg1kZWNvZGVyX2xpbWl0GBggAygLMhIuQ1N0cmVhbVZp",
            "ZGVvTGltaXQSJAoVZW5hYmxlX3VucmVsaWFibGVfZmVjGBkgASgIOgVmYWxz",
            "ZSKSAwoWQ1N0cmVhbWluZ1NlcnZlckNvbmZpZxIhChljaGFuZ2VfZGVza3Rv",
            "cF9yZXNvbHV0aW9uGAEgASgIEiUKHWR5bmFtaWNhbGx5X2FkanVzdF9yZXNv",
            "bHV0aW9uGAIgASgIEhwKFGVuYWJsZV9jYXB0dXJlX252ZmJjGAMgASgIEicK",
            "H2VuYWJsZV9oYXJkd2FyZV9lbmNvZGluZ19udmlkaWEYBCABKAgSJAocZW5h",
            "YmxlX2hhcmR3YXJlX2VuY29kaW5nX2FtZBgFIAEoCBImCh5lbmFibGVfaGFy",
            "ZHdhcmVfZW5jb2RpbmdfaW50ZWwYBiABKAgSIQoZc29mdHdhcmVfZW5jb2Rp",
            "bmdfdGhyZWFkcxgHIAEoBRIfChdlbmFibGVfdHJhZmZpY19wcmlvcml0eRgI",
            "IAEoCBJVCg9ob3N0X3BsYXlfYXVkaW8YCSABKA4yHy5FU3RyZWFtSG9zdFBs",
            "YXlBdWRpb1ByZWZlcmVuY2U6G0VTdHJlYW1Ib3N0UGxheUF1ZGlvRGVmYXVs",
            "dCLNAgoRQ05lZ290aWF0ZWRDb25maWcSFQoNcmVsaWFibGVfZGF0YRgBIAEo",
            "CBJHChRzZWxlY3RlZF9hdWRpb19jb2RlYxgCIAEoDjISLkVTdHJlYW1BdWRp",
            "b0NvZGVjOhVFU3RyZWFtQXVkaW9Db2RlY05vbmUSRwoUc2VsZWN0ZWRfdmlk",
            "ZW9fY29kZWMYAyABKA4yEi5FU3RyZWFtVmlkZW9Db2RlYzoVRVN0cmVhbVZp",
            "ZGVvQ29kZWNOb25lEjkKHmF2YWlsYWJsZV92aWRlb19tb2Rlc19PQlNPTEVU",
            "RRgEIAMoCzIRLkNTdHJlYW1WaWRlb01vZGUSGQoRZW5hYmxlX3JlbW90ZV9o",
            "aWQYBSABKAgSGgoSZW5hYmxlX3RvdWNoX2lucHV0GAYgASgIEh0KFWRpc2Fi",
            "bGVfY2xpZW50X2N1cnNvchgHIAEoCCLPAQoTQ05lZ290aWF0aW9uSW5pdE1z",
            "ZxIVCg1yZWxpYWJsZV9kYXRhGAEgASgIEjIKFnN1cHBvcnRlZF9hdWRpb19j",
            "b2RlY3MYAiADKA4yEi5FU3RyZWFtQXVkaW9Db2RlYxIyChZzdXBwb3J0ZWRf",
            "dmlkZW9fY29kZWNzGAMgAygOMhIuRVN0cmVhbVZpZGVvQ29kZWMSGwoTc3Vw",
            "cG9ydHNfcmVtb3RlX2hpZBgEIAEoCBIcChRzdXBwb3J0c190b3VjaF9pbnB1",
            "dBgFIAEoCCKuAQoYQ05lZ290aWF0aW9uU2V0Q29uZmlnTXNnEiIKBmNvbmZp",
            "ZxgBIAIoCzISLkNOZWdvdGlhdGVkQ29uZmlnEjgKF3N0cmVhbWluZ19jbGll",
            "bnRfY29uZmlnGAIgASgLMhcuQ1N0cmVhbWluZ0NsaWVudENvbmZpZxI0ChVz",
            "dHJlYW1pbmdfY2xpZW50X2NhcHMYAyABKAsyFS5DU3RyZWFtaW5nQ2xpZW50",
            "Q2FwcyIZChdDTmVnb3RpYXRpb25Db21wbGV0ZU1zZyKYAQoSQ1N0YXJ0QXVk",
            "aW9EYXRhTXNnEg8KB2NoYW5uZWwYAiACKA0SOAoFY29kZWMYAyABKA4yEi5F",
            "U3RyZWFtQXVkaW9Db2RlYzoVRVN0cmVhbUF1ZGlvQ29kZWNOb25lEhIKCmNv",
            "ZGVjX2RhdGEYBCABKAwSEQoJZnJlcXVlbmN5GAUgASgNEhAKCGNoYW5uZWxz",
            "GAYgASgNIhMKEUNTdG9wQXVkaW9EYXRhTXNnIpIBChJDU3RhcnRWaWRlb0Rh",
            "dGFNc2cSDwoHY2hhbm5lbBgBIAIoDRI4CgVjb2RlYxgCIAEoDjISLkVTdHJl",
            "YW1WaWRlb0NvZGVjOhVFU3RyZWFtVmlkZW9Db2RlY05vbmUSEgoKY29kZWNf",
            "ZGF0YRgDIAEoDBINCgV3aWR0aBgEIAEoDRIOCgZoZWlnaHQYBSABKA0iEwoR",
            "Q1N0b3BWaWRlb0RhdGFNc2ciJwoUQ1N0YXJ0TmVwdHVuZURhdGFNc2cSDwoH",
            "Y2hhbm5lbBgBIAIoDSIVChNDU3RvcE5lcHR1bmVEYXRhTXNnIsMECg5DUmVj",
            "b3JkZWRJbnB1dBJJCgR0eXBlGAEgASgOMhYuRVN0cmVhbUNvbnRyb2xNZXNz",
            "YWdlOiNFU3RyZWFtQ29udHJvbEF1dGhlbnRpY2F0aW9uUmVxdWVzdBIRCgl0",
            "aW1lc3RhbXAYAiABKA0SMAoLZmluZ2VyX2Rvd24YAyABKAsyGS5DSW5wdXRU",
            "b3VjaEZpbmdlckRvd25Nc2dIABI0Cg1maW5nZXJfbW90aW9uGAQgASgLMhsu",
            "Q0lucHV0VG91Y2hGaW5nZXJNb3Rpb25Nc2dIABIsCglmaW5nZXJfdXAYBSAB",
            "KAsyFy5DSW5wdXRUb3VjaEZpbmdlclVwTXNnSAASLQoMbW91c2VfbW90aW9u",
            "GAYgASgLMhUuQ0lucHV0TW91c2VNb3Rpb25Nc2dIABIrCgttb3VzZV93aGVl",
            "bBgHIAEoCzIULkNJbnB1dE1vdXNlV2hlZWxNc2dIABIpCgptb3VzZV9kb3du",
            "GAggASgLMhMuQ0lucHV0TW91c2VEb3duTXNnSAASJQoIbW91c2VfdXAYCSAB",
            "KAsyES5DSW5wdXRNb3VzZVVwTXNnSAASJQoIa2V5X2Rvd24YCiABKAsyES5D",
            "SW5wdXRLZXlEb3duTXNnSAASIQoGa2V5X3VwGAsgASgLMg8uQ0lucHV0S2V5",
            "VXBNc2dIABIeCgR0ZXh0GAwgASgLMg4uQ0lucHV0VGV4dE1zZ0gAEh0KA2hp",
            "ZBgNIAEoCzIOLkNSZW1vdGVISURNc2dIAEIGCgRkYXRhIjgKFENSZWNvcmRl",
            "ZElucHV0U3RyZWFtEiAKB2VudHJpZXMYASADKAsyDy5DUmVjb3JkZWRJbnB1",
            "dCI5ChRDSW5wdXRMYXRlbmN5VGVzdE1zZxISCgppbnB1dF9tYXJrGAEgAigN",
            "Eg0KBWNvbG9yGAIgASgNImwKGENJbnB1dFRvdWNoRmluZ2VyRG93bk1zZxIS",
            "CgppbnB1dF9tYXJrGAEgASgNEhAKCGZpbmdlcmlkGAIgASgEEhQKDHhfbm9y",
            "bWFsaXplZBgDIAEoAhIUCgx5X25vcm1hbGl6ZWQYBCABKAIibgoaQ0lucHV0",
            "VG91Y2hGaW5nZXJNb3Rpb25Nc2cSEgoKaW5wdXRfbWFyaxgBIAEoDRIQCghm",
            "aW5nZXJpZBgCIAEoBBIUCgx4X25vcm1hbGl6ZWQYAyABKAISFAoMeV9ub3Jt",
            "YWxpemVkGAQgASgCImoKFkNJbnB1dFRvdWNoRmluZ2VyVXBNc2cSEgoKaW5w",
            "dXRfbWFyaxgBIAEoDRIQCghmaW5nZXJpZBgCIAEoBBIUCgx4X25vcm1hbGl6",
            "ZWQYAyABKAISFAoMeV9ub3JtYWxpemVkGAQgASgCIm4KFENJbnB1dE1vdXNl",
            "TW90aW9uTXNnEhIKCmlucHV0X21hcmsYASABKA0SFAoMeF9ub3JtYWxpemVk",
            "GAIgASgCEhQKDHlfbm9ybWFsaXplZBgDIAEoAhIKCgJkeBgEIAEoBRIKCgJk",
            "eRgFIAEoBSJuChNDSW5wdXRNb3VzZVdoZWVsTXNnEhIKCmlucHV0X21hcmsY",
            "ASABKA0SQwoJZGlyZWN0aW9uGAIgAigOMhsuRVN0cmVhbU1vdXNlV2hlZWxE",
            "aXJlY3Rpb246E0VTdHJlYW1Nb3VzZVdoZWVsVXAiZQoSQ0lucHV0TW91c2VE",
            "b3duTXNnEhIKCmlucHV0X21hcmsYASABKA0SOwoGYnV0dG9uGAIgAigOMhMu",
            "RVN0cmVhbU1vdXNlQnV0dG9uOhZFU3RyZWFtTW91c2VCdXR0b25MZWZ0ImMK",
            "EENJbnB1dE1vdXNlVXBNc2cSEgoKaW5wdXRfbWFyaxgBIAEoDRI7CgZidXR0",
            "b24YAiACKA4yEy5FU3RyZWFtTW91c2VCdXR0b246FkVTdHJlYW1Nb3VzZUJ1",
            "dHRvbkxlZnQiOAoQQ0lucHV0S2V5RG93bk1zZxISCgppbnB1dF9tYXJrGAEg",
            "ASgNEhAKCHNjYW5jb2RlGAIgAigNIjYKDkNJbnB1dEtleVVwTXNnEhIKCmlu",
            "cHV0X21hcmsYASABKA0SEAoIc2NhbmNvZGUYAiACKA0iNgoNQ0lucHV0VGV4",
            "dE1zZxISCgppbnB1dF9tYXJrGAEgASgNEhEKCXRleHRfdXRmOBgCIAIoCSIc",
            "CgxDU2V0VGl0bGVNc2cSDAoEdGV4dBgBIAEoCSIzChJDU2V0Q2FwdHVyZVNp",
            "emVNc2cSDQoFd2lkdGgYASABKAUSDgoGaGVpZ2h0GAIgASgFIjsKC0NTZXRJ",
            "Y29uTXNnEg0KBXdpZHRoGAEgASgFEg4KBmhlaWdodBgCIAEoBRINCgVpbWFn",
            "ZRgDIAEoDCJFChFDU2V0Rmxhc2hTdGF0ZU1zZxINCgVmbGFncxgBIAEoDRIN",
            "CgVjb3VudBgCIAEoDRISCgp0aW1lb3V0X21zGAMgASgNIjwKDkNTaG93Q3Vy",
            "c29yTXNnEhQKDHhfbm9ybWFsaXplZBgBIAEoAhIUCgx5X25vcm1hbGl6ZWQY",
            "AiABKAIiEAoOQ0hpZGVDdXJzb3JNc2ciIgoNQ1NldEN1cnNvck1zZxIRCglj",
            "dXJzb3JfaWQYASACKAQiJwoSQ0dldEN1cnNvckltYWdlTXNnEhEKCWN1cnNv",
            "cl9pZBgBIAIoBCJzChJDU2V0Q3Vyc29ySW1hZ2VNc2cSEQoJY3Vyc29yX2lk",
            "GAEgAigEEg0KBXdpZHRoGAIgASgFEg4KBmhlaWdodBgDIAEoBRINCgVob3Rf",
            "eBgEIAEoBRINCgVob3RfeRgFIAEoBRINCgVpbWFnZRgGIAEoDCIjChJDU2V0",
            "Q3Vyc29yU2NhbGVNc2cSDQoFc2NhbGUYASABKAIiNQoUQ1ZpZGVvRGVjb2Rl",
            "ckluZm9Nc2cSDAoEaW5mbxgBIAEoCRIPCgd0aHJlYWRzGAIgASgFIiQKFENW",
            "aWRlb0VuY29kZXJJbmZvTXNnEgwKBGluZm8YASABKAkiCwoJQ1BhdXNlTXNn",
            "IgwKCkNSZXN1bWVNc2ciGgoYQ0VuYWJsZUhpZ2hSZXNDYXB0dXJlTXNnIhsK",
            "GUNEaXNhYmxlSGlnaFJlc0NhcHR1cmVNc2ciFwoVQ0VuYWJsZU5lcHR1bmVE",
            "YXRhTXNnIhgKFkNEaXNhYmxlTmVwdHVuZURhdGFNc2ciGgoYQ1BhdXNlQ29u",
            "dHJvbGxlcklucHV0TXNnIhsKGUNSZXN1bWVDb250cm9sbGVySW5wdXRNc2ci",
            "GQoXQ1RvZ2dsZU1hZ25pZmljYXRpb25Nc2ciIgoPQ1NldENhcHNsb2NrTXNn",
            "Eg8KB3ByZXNzZWQYASABKAgihAIKFUNTdHJlYW1pbmdLZXltYXBFbnRyeRIQ",
            "CghzY2FuY29kZRgBIAEoBRIWCg5ub3JtYWxfa2V5Y29kZRgCIAEoBRIVCg1z",
            "aGlmdF9rZXljb2RlGAMgASgFEhYKDmNhcHNsb2NrZXljb2RlGAQgASgFEhwK",
            "FHNoaWZ0X2NhcHNsb2NrZXljb2RlGAUgASgFEhUKDWFsdGdyX2tleWNvZGUY",
            "BiABKAUSGwoTYWx0Z3Jfc2hpZnRfa2V5Y29kZRgHIAEoBRIcChRhbHRncl9j",
            "YXBzbG9ja2V5Y29kZRgIIAEoBRIiChphbHRncl9zaGlmdF9jYXBzbG9ja2V5",
            "Y29kZRgJIAEoBSI7ChBDU3RyZWFtaW5nS2V5bWFwEicKB2VudHJpZXMYASAD",
            "KAsyFi5DU3RyZWFtaW5nS2V5bWFwRW50cnkiMgoNQ1NldEtleW1hcE1zZxIh",
            "CgZrZXltYXAYASABKAsyES5DU3RyZWFtaW5nS2V5bWFwIg4KDENTdG9wUmVx",
            "dWVzdCIOCgxDUXVpdFJlcXVlc3QiJQoQQ0RlbGV0ZUN1cnNvck1zZxIRCglj",
            "dXJzb3JfaWQYASACKAQiRAoZQ1NldFN0cmVhbWluZ0NsaWVudENvbmZpZxIn",
            "CgZjb25maWcYASACKAsyFy5DU3RyZWFtaW5nQ2xpZW50Q29uZmlnIh0KCkNT",
            "ZXRRb1NNc2cSDwoHdXNlX3FvcxgBIAIoCCJ4ChZDU2V0VGFyZ2V0RnJhbWVy",
            "YXRlTXNnEhEKCWZyYW1lcmF0ZRgBIAIoDRIPCgdyZWFzb25zGAIgASgNEhsK",
            "E2ZyYW1lcmF0ZV9udW1lcmF0b3IYAyABKA0SHQoVZnJhbWVyYXRlX2Rlbm9t",
            "aW5hdG9yGAQgASgNIicKFENTZXRUYXJnZXRCaXRyYXRlTXNnEg8KB2JpdHJh",
            "dGUYASACKAUiJQoSQ092ZXJsYXlFbmFibGVkTXNnEg8KB2VuYWJsZWQYASAC",
            "KAgiJgoQQ1NldEdhbW1hUmFtcE1zZxISCgpnYW1tYV9yYW1wGAEgASgMInwK",
            "D0NTZXRBY3Rpdml0eU1zZxI3CghhY3Rpdml0eRgBIAEoDjIQLkVTdHJlYW1B",
            "Y3Rpdml0eToTRVN0cmVhbUFjdGl2aXR5SWRsZRINCgVhcHBpZBgCIAEoDRIO",
            "CgZnYW1laWQYAyABKAQSEQoJZ2FtZV9uYW1lGAQgASgJIhMKEUNTeXN0ZW1T",
            "dXNwZW5kTXNnIioKFkNWaXJ0dWFsSGVyZVJlcXVlc3RNc2cSEAoIaG9zdG5h",
            "bWUYASABKAkiNQoUQ1ZpcnR1YWxIZXJlUmVhZHlNc2cSHQoVbGljZW5zZWRf",
            "ZGV2aWNlX2NvdW50GAEgASgNIjQKGkNWaXJ0dWFsSGVyZVNoYXJlRGV2aWNl",
            "TXNnEhYKDmRldmljZV9hZGRyZXNzGAEgASgJIicKFENTZXRTcGVjdGF0b3JN",
            "b2RlTXNnEg8KB2VuYWJsZWQYASABKAgiMwoNQ1JlbW90ZUhJRE1zZxIMCgRk",
            "YXRhGAEgASgMEhQKDGFjdGl2ZV9pbnB1dBgCIAEoCCJJChVDVG91Y2hDb25m",
            "aWdBY3RpdmVNc2cSDQoFYXBwaWQYASABKA0SEAoIcmV2aXNpb24YAiABKA0S",
            "DwoHY3JlYXRvchgDIAEoBCInChZDR2V0VG91Y2hDb25maWdEYXRhTXNnEg0K",
            "BWFwcGlkGAEgASgNImgKFkNTZXRUb3VjaENvbmZpZ0RhdGFNc2cSDQoFYXBw",
            "aWQYASABKA0SEAoIcmV2aXNpb24YAiABKA0SDAoEZGF0YRgDIAEoDBIOCgZs",
            "YXlvdXQYBCABKAwSDwoHY3JlYXRvchgFIAEoBCI6ChlDU2F2ZVRvdWNoQ29u",
            "ZmlnTGF5b3V0TXNnEg0KBWFwcGlkGAEgASgNEg4KBmxheW91dBgEIAEoDCI/",
            "ChhDVG91Y2hBY3Rpb25TZXRBY3RpdmVNc2cSDQoFYXBwaWQYASABKA0SFAoM",
            "YWN0aW9uc2V0X2lkGAIgASgFIkMKHENUb3VjaEFjdGlvblNldExheWVyQWRk",
            "ZWRNc2cSDQoFYXBwaWQYASABKA0SFAoMYWN0aW9uc2V0X2lkGAIgASgFIkUK",
            "HkNUb3VjaEFjdGlvblNldExheWVyUmVtb3ZlZE1zZxINCgVhcHBpZBgBIAEo",
            "DRIUCgxhY3Rpb25zZXRfaWQYAiABKAUiMwoUQ0dldFRvdWNoSWNvbkRhdGFN",
            "c2cSDQoFYXBwaWQYASABKA0SDAoEaWNvbhgCIAEoCSJBChRDU2V0VG91Y2hJ",
            "Y29uRGF0YU1zZxINCgVhcHBpZBgBIAEoDRIMCgRpY29uGAIgASgJEgwKBGRh",
            "dGEYAyABKAwi6gIKIUNSZW1vdGVQbGF5VG9nZXRoZXJHcm91cFVwZGF0ZU1z",
            "ZxI6CgdwbGF5ZXJzGAEgAygLMikuQ1JlbW90ZVBsYXlUb2dldGhlckdyb3Vw",
            "VXBkYXRlTXNnLlBsYXllchIUCgxwbGF5ZXJfaW5kZXgYAiABKAUSHAoUbWlu",
            "aXByb2ZpbGVfbG9jYXRpb24YAyABKAkSEQoJZ2FtZV9uYW1lGAQgASgJEhcK",
            "D2F2YXRhcl9sb2NhdGlvbhgFIAEoCRqoAQoGUGxheWVyEhEKCWFjY291bnRp",
            "ZBgBIAEoDRIPCgdndWVzdGlkGAIgASgNEhgKEGtleWJvYXJkX2VuYWJsZWQY",
            "AyABKAgSFQoNbW91c2VfZW5hYmxlZBgEIAEoCBIaChJjb250cm9sbGVyX2Vu",
            "YWJsZWQYBSABKAgSGAoQY29udHJvbGxlcl9zbG90cxgGIAMoDRITCgthdmF0",
            "YXJfaGFzaBgHIAEoDCIzCh9DU2V0SW5wdXRUZW1wb3JhcmlseURpc2FibGVk",
            "TXNnEhAKCGRpc2FibGVkGAEgASgIIicKFkNTZXRRdWFsaXR5T3ZlcnJpZGVN",
            "c2cSDQoFdmFsdWUYASABKAUiJwoWQ1NldEJpdHJhdGVPdmVycmlkZU1zZxIN",
            "CgV2YWx1ZRgBIAEoBSIaChhDU2hvd09uU2NyZWVuS2V5Ym9hcmRNc2cifgoj",
            "Q0NvbnRyb2xsZXJQZXJzb25hbGl6YXRpb25VcGRhdGVNc2cSFwoPY29udHJv",
            "bGxlcl9wYXRoGAEgASgJEhcKD2NvbnRyb2xsZXJfbmFtZRgCIAEoCRIlCh1y",
            "ZXZlcnNlX2RpYW1vbmRfYnV0dG9uX2xheW91dBgDIAEoCCIsChJDVlJDb25u",
            "ZWN0aW9uUmVhZHkSFgoOY29ubmVjdF9wYXJhbXMYASABKAkiJQoSQ1N0cmVh",
            "bURhdGFMb3N0TXNnEg8KB3BhY2tldHMYASADKA0iZAoMQ0F1ZGlvRm9ybWF0",
            "Ei8KBmZvcm1hdBgBIAIoDjINLkVBdWRpb0Zvcm1hdDoQRUF1ZGlvRm9ybWF0",
            "Tm9uZRIRCglmcmVxdWVuY3kYAiABKA0SEAoIY2hhbm5lbHMYAyABKA0iXgoM",
            "Q1ZpZGVvRm9ybWF0Ei8KBmZvcm1hdBgBIAIoDjINLkVWaWRlb0Zvcm1hdDoQ",
            "RVZpZGVvRm9ybWF0Tm9uZRINCgV3aWR0aBgCIAEoDRIOCgZoZWlnaHQYAyAB",
            "KA0iXgoLQ0ZyYW1lRXZlbnQSPAoIZXZlbnRfaWQYASACKA4yEi5FU3RyZWFt",
            "RnJhbWVFdmVudDoWRVN0cmVhbUlucHV0RXZlbnRTdGFydBIRCgl0aW1lc3Rh",
            "bXAYAiACKA0iywIKC0NGcmFtZVN0YXRzEhAKCGZyYW1lX2lkGAEgAigNEhIK",
            "CmlucHV0X21hcmsYAiABKA0SHAoGZXZlbnRzGAMgAygLMgwuQ0ZyYW1lRXZl",
            "bnQSPgoGcmVzdWx0GAQgAigOMhMuRVN0cmVhbUZyYW1lUmVzdWx0OhlFU3Ry",
            "ZWFtRnJhbWVSZXN1bHRQZW5kaW5nEhkKEWZyYW1lX3N0YXJ0X2RlbHRhGAUg",
            "ASgCEhsKE2ZyYW1lX2Rpc3BsYXlfZGVsdGEYBiABKAISEQoJcGluZ190aW1l",
            "GAcgASgCEhYKDnNlcnZlcl9iaXRyYXRlGAggASgCEhYKDmNsaWVudF9iaXRy",
            "YXRlGAkgASgCEhQKDGxpbmJhbmR3aWR0aBgKIAEoAhITCgtwYWNrZXRfbG9z",
            "cxgLIAEoAhISCgpmcmFtZV9zaXplGAwgASgNIoYBChpDRnJhbWVTdGF0QWNj",
            "dW11bGF0ZWRWYWx1ZRI4CglzdGF0X3R5cGUYASACKA4yFi5FRnJhbWVBY2N1",
            "bXVsYXRlZFN0YXQ6DUVGcmFtZVN0YXRGUFMSDQoFY291bnQYAiACKAUSDwoH",
            "YXZlcmFnZRgDIAIoAhIOCgZzdGRkZXYYBCABKAIivwEKEkNGcmFtZVN0YXRz",
            "TGlzdE1zZxI7CglkYXRhX3R5cGUYASACKA4yEy5FU3RyZWFtaW5nRGF0YVR5",
            "cGU6E0VTdHJlYW1pbmdBdWRpb0RhdGESGwoFc3RhdHMYAiADKAsyDC5DRnJh",
            "bWVTdGF0cxI2ChFhY2N1bXVsYXRlZF9zdGF0cxgDIAMoCzIbLkNGcmFtZVN0",
            "YXRBY2N1bXVsYXRlZFZhbHVlEhcKD2xhdGVzdF9mcmFtZV9pZBgEIAIoBSKH",
            "AQoWQ1N0cmVhbWluZ1Nlc3Npb25TdGF0cxIdChVmcmFtZV9sb3NzX3BlcmNl",
            "bnRhZ2UYASABKAISHQoVYXZlcmFnZV9uZXR3b3J0aW1lX21zGAIgASgCEhwK",
            "FHN0ZGRldl9uZXR3b3J0aW1lX21zGAMgASgCEhEKCXRlc3RfZGF0YRgEIAEo",
            "CSIjCg1DRGVidWdEdW1wTXNnEhIKCnNjcmVlbnNob3QYASABKAwiKAoHQ0xv",
            "Z01zZxIMCgR0eXBlGAEgASgFEg8KB21lc3NhZ2UYAiABKAkiTgoNQ0xvZ1Vw",
            "bG9hZE1zZxIvCgR0eXBlGAEgASgOMg0uRUxvZ0ZpbGVUeXBlOhJFTG9nRmls",
            "ZVN5c3RlbUJvb3QSDAoEZGF0YRgDIAEoDCKzAgoTQ1RyYW5zcG9ydFNpZ25h",
            "bE1zZxIyCgZ3ZWJydGMYASABKAsyIi5DVHJhbnNwb3J0U2lnbmFsTXNnLldl",
            "YlJUQ01lc3NhZ2USCwoDc2RyGAIgAygMGtoBCg1XZWJSVENNZXNzYWdlEhIK",
            "CGdyZWV0aW5nGAEgASgISAASDwoFb2ZmZXIYAiABKAlIABIQCgZhbnN3ZXIY",
            "AyABKAlIABJBCgljYW5kaWRhdGUYBCABKAsyLC5DVHJhbnNwb3J0U2lnbmFs",
            "TXNnLldlYlJUQ01lc3NhZ2UuQ2FuZGlkYXRlSAAaSAoJQ2FuZGlkYXRlEg8K",
            "B3NkcF9taWQYASABKAkSFwoPc2RwX21saW5lX2luZGV4GAIgASgFEhEKCWNh",
            "bmRpZGF0ZRgDIAEoCUIFCgNtc2ci3AYKFENDb250cm9sbGVyQ29uZmlnTXNn",
            "EloKBHR5cGUYASACKA4yGy5FU3RyZWFtQ29udHJvbGxlckNvbmZpZ01zZzov",
            "RVN0cmVhbUNvbnRyb2xsZXJDb25maWdNc2dfUmVxdWVzdENvbmZpZ3NGb3JB",
            "cHASFgoOY29udHJvbGxlclBhdGgYAiABKAkSDQoFYXBwaWQYAyABKA0SWAoX",
            "cGVyc29uYWxpemF0aW9uUmVzcG9uc2UYBCABKAsyNy5DQ29udHJvbGxlckNv",
            "bmZpZ01zZy5Db250cm9sbGVyUGVyc29uYWxpemF0aW9uUmVzcG9uc2USRgoO",
            "Y29uZmlnUmVzcG9uc2UYBiADKAsyLi5DQ29udHJvbGxlckNvbmZpZ01zZy5D",
            "b250cm9sbGVyQ29uZmlnUmVzcG9uc2USTgoVYWN0aXZlQ29uZmlnQ2hhbmdl",
            "TXNnGAcgASgLMi8uQ0NvbnRyb2xsZXJDb25maWdNc2cuQ29udHJvbGxlckFj",
            "dGl2ZUNvbmZpZ01zZxqZAQoYQ29udHJvbGxlckNvbmZpZ1Jlc3BvbnNlEg0K",
            "BWFwcGlkGAEgASgNEhEKCWNvbmZpZ1VSTBgCIAEoCRIWCg5jb250cm9sbGVy",
            "VHlwZRgDIAEoDRIWCg5jb250cm9sbGVyRGF0YRgEIAEoCRIWCg5zZWxlY3Rp",
            "b25PcmRlchgFIAEoDRITCgthY3Rpb25CbG9jaxgGIAEoCBpACiFDb250cm9s",
            "bGVyUGVyc29uYWxpemF0aW9uUmVzcG9uc2USGwoTcGVyc29uYWxpemF0aW9u",
            "RGF0YRgBIAEoCRqBAQokQ29udHJvbGxlckFjdGl2ZUNvbmZpZ0NoYW5nZVJl",
            "c3BvbnNlEhEKCWNvbmZpZ1VSTBgCIAEoCRIWCg5jb250cm9sbGVyVHlwZRgD",
            "IAEoDRIWCg5jb250cm9sbGVyRGF0YRgEIAEoCRIWCg5zZWxlY3Rpb25PcmRl",
            "chgFIAEoDRptChlDb250cm9sbGVyQWN0aXZlQ29uZmlnTXNnEg0KBWFwcGlk",
            "GAEgASgNEhEKCWNvbmZpZ1VSTBgCIAEoCRIWCg5jb250cm9sbGVyVHlwZRgD",
            "IAEoDRIWCg5jb250cm9sbGVyRGF0YRgEIAEoCSqpAQoORVN0cmVhbUNoYW5u",
            "ZWwSIgoVRVN0cmVhbUNoYW5uZWxJbnZhbGlkEP///////////wESGwoXRVN0",
            "cmVhbUNoYW5uZWxEaXNjb3ZlcnkQABIZChVFU3RyZWFtQ2hhbm5lbENvbnRy",
            "b2wQARIXChNFU3RyZWFtQ2hhbm5lbFN0YXRzEAISIgoeRVN0cmVhbUNoYW5u",
            "ZWxEYXRhQ2hhbm5lbFN0YXJ0EAMqXAoXRVN0cmVhbURpc2NvdmVyeU1lc3Nh",
            "Z2USHwobRVN0cmVhbURpc2NvdmVyeVBpbmdSZXF1ZXN0EAESIAocRVN0cmVh",
            "bURpc2NvdmVyeVBpbmdSZXNwb25zZRACKuIdChVFU3RyZWFtQ29udHJvbE1l",
            "c3NhZ2USJwojRVN0cmVhbUNvbnRyb2xBdXRoZW50aWNhdGlvblJlcXVlc3QQ",
            "ARIoCiRFU3RyZWFtQ29udHJvbEF1dGhlbnRpY2F0aW9uUmVzcG9uc2UQAhIh",
            "Ch1FU3RyZWFtQ29udHJvbE5lZ290aWF0aW9uSW5pdBADEiYKIkVTdHJlYW1D",
            "b250cm9sTmVnb3RpYXRpb25TZXRDb25maWcQBBIlCiFFU3RyZWFtQ29udHJv",
            "bE5lZ290aWF0aW9uQ29tcGxldGUQBRIhCh1FU3RyZWFtQ29udHJvbENsaWVu",
            "dEhhbmRzaGFrZRAGEiEKHUVTdHJlYW1Db250cm9sU2VydmVySGFuZHNoYWtl",
            "EAcSIgoeRVN0cmVhbUNvbnRyb2xTdGFydE5ldHdvcmtUZXN0EAgSGwoXRVN0",
            "cmVhbUNvbnRyb2xLZWVwQWxpdmUQCRIlCiFFU3RyZWFtQ29udHJvbF9MQVNU",
            "X1NFVFVQX01FU1NBR0UQDxIgChxFU3RyZWFtQ29udHJvbFN0YXJ0QXVkaW9E",
            "YXRhEDISHwobRVN0cmVhbUNvbnRyb2xTdG9wQXVkaW9EYXRhEDMSIAocRVN0",
            "cmVhbUNvbnRyb2xTdGFydFZpZGVvRGF0YRA0Eh8KG0VTdHJlYW1Db250cm9s",
            "U3RvcFZpZGVvRGF0YRA1EiIKHkVTdHJlYW1Db250cm9sSW5wdXRNb3VzZU1v",
            "dGlvbhA2EiEKHUVTdHJlYW1Db250cm9sSW5wdXRNb3VzZVdoZWVsEDcSIAoc",
            "RVN0cmVhbUNvbnRyb2xJbnB1dE1vdXNlRG93bhA4Eh4KGkVTdHJlYW1Db250",
            "cm9sSW5wdXRNb3VzZVVwEDkSHgoaRVN0cmVhbUNvbnRyb2xJbnB1dEtleURv",
            "d24QOhIcChhFU3RyZWFtQ29udHJvbElucHV0S2V5VXAQOxIvCitFU3RyZWFt",
            "Q29udHJvbElucHV0R2FtZXBhZEF0dGFjaGVkX09CU09MRVRFEDwSLAooRVN0",
            "cmVhbUNvbnRyb2xJbnB1dEdhbWVwYWRFdmVudF9PQlNPTEVURRA9Ei8KK0VT",
            "dHJlYW1Db250cm9sSW5wdXRHYW1lcGFkRGV0YWNoZWRfT0JTT0xFVEUQPhIc",
            "ChhFU3RyZWFtQ29udHJvbFNob3dDdXJzb3IQPxIcChhFU3RyZWFtQ29udHJv",
            "bEhpZGVDdXJzb3IQQBIbChdFU3RyZWFtQ29udHJvbFNldEN1cnNvchBBEiAK",
            "HEVTdHJlYW1Db250cm9sR2V0Q3Vyc29ySW1hZ2UQQhIgChxFU3RyZWFtQ29u",
            "dHJvbFNldEN1cnNvckltYWdlEEMSHgoaRVN0cmVhbUNvbnRyb2xEZWxldGVD",
            "dXJzb3IQRBIkCiBFU3RyZWFtQ29udHJvbFNldFRhcmdldEZyYW1lcmF0ZRBF",
            "EiIKHkVTdHJlYW1Db250cm9sSW5wdXRMYXRlbmN5VGVzdBBGEigKJEVTdHJl",
            "YW1Db250cm9sR2FtZXBhZFJ1bWJsZV9PQlNPTEVURRBHEiAKHEVTdHJlYW1D",
            "b250cm9sT3ZlcmxheUVuYWJsZWQQShIyCi5FU3RyZWFtQ29udHJvbElucHV0",
            "Q29udHJvbGxlckF0dGFjaGVkX09CU09MRVRFEEsSLworRVN0cmVhbUNvbnRy",
            "b2xJbnB1dENvbnRyb2xsZXJTdGF0ZV9PQlNPTEVURRBMEi0KKUVTdHJlYW1D",
            "b250cm9sVHJpZ2dlckhhcHRpY1B1bHNlX09CU09MRVRFEE0SMgouRVN0cmVh",
            "bUNvbnRyb2xJbnB1dENvbnRyb2xsZXJEZXRhY2hlZF9PQlNPTEVURRBOEiIK",
            "HkVTdHJlYW1Db250cm9sVmlkZW9EZWNvZGVySW5mbxBQEhoKFkVTdHJlYW1D",
            "b250cm9sU2V0VGl0bGUQURIZChVFU3RyZWFtQ29udHJvbFNldEljb24QUhId",
            "ChlFU3RyZWFtQ29udHJvbFF1aXRSZXF1ZXN0EFMSGAoURVN0cmVhbUNvbnRy",
            "b2xTZXRRb1MQVxI6CjZFU3RyZWFtQ29udHJvbElucHV0Q29udHJvbGxlcldp",
            "cmVsZXNzUHJlc2VuY2VfT0JTT0xFVEUQWBIeChpFU3RyZWFtQ29udHJvbFNl",
            "dEdhbW1hUmFtcBBZEiIKHkVTdHJlYW1Db250cm9sVmlkZW9FbmNvZGVySW5m",
            "bxBaEjIKLkVTdHJlYW1Db250cm9sSW5wdXRDb250cm9sbGVyU3RhdGVISURf",
            "T0JTT0xFVEUQXRIiCh5FU3RyZWFtQ29udHJvbFNldFRhcmdldEJpdHJhdGUQ",
            "XhI2CjJFU3RyZWFtQ29udHJvbFNldENvbnRyb2xsZXJQYWlyaW5nRW5hYmxl",
            "ZF9PQlNPTEVURRBfEjUKMUVTdHJlYW1Db250cm9sU2V0Q29udHJvbGxlclBh",
            "aXJpbmdSZXN1bHRfT0JTT0xFVEUQYBI2CjJFU3RyZWFtQ29udHJvbFRyaWdn",
            "ZXJDb250cm9sbGVyRGlzY29ubmVjdF9PQlNPTEVURRBhEh0KGUVTdHJlYW1D",
            "b250cm9sU2V0QWN0aXZpdHkQYhIqCiZFU3RyZWFtQ29udHJvbFNldFN0cmVh",
            "bWluZ0NsaWVudENvbmZpZxBjEh8KG0VTdHJlYW1Db250cm9sU3lzdGVtU3Vz",
            "cGVuZBBkEjAKLEVTdHJlYW1Db250cm9sU2V0Q29udHJvbGxlclNldHRpbmdz",
            "X09CU09MRVRFEGUSJAogRVN0cmVhbUNvbnRyb2xWaXJ0dWFsSGVyZVJlcXVl",
            "c3QQZhIiCh5FU3RyZWFtQ29udHJvbFZpcnR1YWxIZXJlUmVhZHkQZxIoCiRF",
            "U3RyZWFtQ29udHJvbFZpcnR1YWxIZXJlU2hhcmVEZXZpY2UQaBIiCh5FU3Ry",
            "ZWFtQ29udHJvbFNldFNwZWN0YXRvck1vZGUQaRIbChdFU3RyZWFtQ29udHJv",
            "bFJlbW90ZUhJRBBqEiUKIUVTdHJlYW1Db250cm9sU3RhcnRNaWNyb3Bob25l",
            "RGF0YRBrEiQKIEVTdHJlYW1Db250cm9sU3RvcE1pY3JvcGhvbmVEYXRhEGwS",
            "GwoXRVN0cmVhbUNvbnRyb2xJbnB1dFRleHQQbRIjCh9FU3RyZWFtQ29udHJv",
            "bFRvdWNoQ29uZmlnQWN0aXZlEG4SJAogRVN0cmVhbUNvbnRyb2xHZXRUb3Vj",
            "aENvbmZpZ0RhdGEQbxIkCiBFU3RyZWFtQ29udHJvbFNldFRvdWNoQ29uZmln",
            "RGF0YRBwEicKI0VTdHJlYW1Db250cm9sU2F2ZVRvdWNoQ29uZmlnTGF5b3V0",
            "EHESJgoiRVN0cmVhbUNvbnRyb2xUb3VjaEFjdGlvblNldEFjdGl2ZRByEiIK",
            "HkVTdHJlYW1Db250cm9sR2V0VG91Y2hJY29uRGF0YRBzEiIKHkVTdHJlYW1D",
            "b250cm9sU2V0VG91Y2hJY29uRGF0YRB0EiYKIkVTdHJlYW1Db250cm9sSW5w",
            "dXRUb3VjaEZpbmdlckRvd24QdRIoCiRFU3RyZWFtQ29udHJvbElucHV0VG91",
            "Y2hGaW5nZXJNb3Rpb24QdhIkCiBFU3RyZWFtQ29udHJvbElucHV0VG91Y2hG",
            "aW5nZXJVcBB3EiAKHEVTdHJlYW1Db250cm9sU2V0Q2FwdHVyZVNpemUQeBIf",
            "ChtFU3RyZWFtQ29udHJvbFNldEZsYXNoU3RhdGUQeRIXChNFU3RyZWFtQ29u",
            "dHJvbFBhdXNlEHoSGAoURVN0cmVhbUNvbnRyb2xSZXN1bWUQexImCiJFU3Ry",
            "ZWFtQ29udHJvbEVuYWJsZUhpZ2hSZXNDYXB0dXJlEHwSJwojRVN0cmVhbUNv",
            "bnRyb2xEaXNhYmxlSGlnaFJlc0NhcHR1cmUQfRIlCiFFU3RyZWFtQ29udHJv",
            "bFRvZ2dsZU1hZ25pZmljYXRpb24QfhIdChlFU3RyZWFtQ29udHJvbFNldENh",
            "cHNsb2NrEH8SHAoXRVN0cmVhbUNvbnRyb2xTZXRLZXltYXAQgAESHgoZRVN0",
            "cmVhbUNvbnRyb2xTdG9wUmVxdWVzdBCBARIrCiZFU3RyZWFtQ29udHJvbFRv",
            "dWNoQWN0aW9uU2V0TGF5ZXJBZGRlZBCCARItCihFU3RyZWFtQ29udHJvbFRv",
            "dWNoQWN0aW9uU2V0TGF5ZXJSZW1vdmVkEIMBEjAKK0VTdHJlYW1Db250cm9s",
            "UmVtb3RlUGxheVRvZ2V0aGVyR3JvdXBVcGRhdGUQhAESLgopRVN0cmVhbUNv",
            "bnRyb2xTZXRJbnB1dFRlbXBvcmFyaWx5RGlzYWJsZWQQhQESJQogRVN0cmVh",
            "bUNvbnRyb2xTZXRRdWFsaXR5T3ZlcnJpZGUQhgESJQogRVN0cmVhbUNvbnRy",
            "b2xTZXRCaXRyYXRlT3ZlcnJpZGUQhwESJwoiRVN0cmVhbUNvbnRyb2xTaG93",
            "T25TY3JlZW5LZXlib2FyZBCIARImCiFFU3RyZWFtQ29udHJvbENvbnRyb2xs",
            "ZXJDb25maWdNc2cQiQESMgotRVN0cmVhbUNvbnRyb2xDb250cm9sbGVyUGVy",
            "c29uYWxpemF0aW9uVXBkYXRlEIoBEiQKH0VTdHJlYW1Db250cm9sRW5hYmxl",
            "TmVwdHVuZURhdGEQiwESJQogRVN0cmVhbUNvbnRyb2xEaXNhYmxlTmVwdHVu",
            "ZURhdGEQjAESIwoeRVN0cmVhbUNvbnRyb2xTdGFydE5lcHR1bmVEYXRhEI0B",
            "EiIKHUVTdHJlYW1Db250cm9sU3RvcE5lcHR1bmVEYXRhEI4BEicKIkVTdHJl",
            "YW1Db250cm9sUGF1c2VDb250cm9sbGVySW5wdXQQjwESKAojRVN0cmVhbUNv",
            "bnRyb2xSZXN1bWVDb250cm9sbGVySW5wdXQQkAESJAofRVN0cmVhbUNvbnRy",
            "b2xWUkNvbm5lY3Rpb25SZWFkeRCRARIhChxFU3RyZWFtQ29udHJvbFNldEN1",
            "cnNvclNjYWxlEJIBKkMKDkVTdHJlYW1WZXJzaW9uEhYKEkVTdHJlYW1WZXJz",
            "aW9uTm9uZRAAEhkKFUVTdHJlYW1WZXJzaW9uQ3VycmVudBABKrQBChFFU3Ry",
            "ZWFtQXVkaW9Db2RlYxIZChVFU3RyZWFtQXVkaW9Db2RlY05vbmUQABIYChRF",
            "U3RyZWFtQXVkaW9Db2RlY1JhdxABEhsKF0VTdHJlYW1BdWRpb0NvZGVjVm9y",
            "YmlzEAISGQoVRVN0cmVhbUF1ZGlvQ29kZWNPcHVzEAMSGAoURVN0cmVhbUF1",
            "ZGlvQ29kZWNNUDMQBBIYChRFU3RyZWFtQXVkaW9Db2RlY0FBQxAFKuoBChFF",
            "U3RyZWFtVmlkZW9Db2RlYxIZChVFU3RyZWFtVmlkZW9Db2RlY05vbmUQABIY",
            "ChRFU3RyZWFtVmlkZW9Db2RlY1JhdxABEhgKFEVTdHJlYW1WaWRlb0NvZGVj",
            "VlA4EAISGAoURVN0cmVhbVZpZGVvQ29kZWNWUDkQAxIZChVFU3RyZWFtVmlk",
            "ZW9Db2RlY0gyNjQQBBIZChVFU3RyZWFtVmlkZW9Db2RlY0hFVkMQBRIaChZF",
            "U3RyZWFtVmlkZW9Db2RlY09SQlgxEAYSGgoWRVN0cmVhbVZpZGVvQ29kZWNP",
            "UkJYMhAHKpEBChhFU3RyZWFtUXVhbGl0eVByZWZlcmVuY2USJAoXRVN0cmVh",
            "bVF1YWxpdHlBdXRvbWF0aWMQ////////////ARIWChJFU3RyZWFtUXVhbGl0",
            "eUZhc3QQARIaChZFU3RyZWFtUXVhbGl0eUJhbGFuY2VkEAISGwoXRVN0cmVh",
            "bVF1YWxpdHlCZWF1dGlmdWwQAypUCg5FU3RyZWFtQml0cmF0ZRIlChhFU3Ry",
            "ZWFtQml0cmF0ZUF1dG9kZXRlY3QQ////////////ARIbChdFU3RyZWFtQml0",
            "cmF0ZVVubGltaXRlZBAAKs0BChFFU3RyZWFtQ29sb3JzcGFjZRIdChlFU3Ry",
            "ZWFtQ29sb3JzcGFjZV9Vbmtub3duEAASGwoXRVN0cmVhbUNvbG9yc3BhY2Vf",
            "QlQ2MDEQARIgChxFU3RyZWFtQ29sb3JzcGFjZV9CVDYwMV9GdWxsEAISGwoX",
            "RVN0cmVhbUNvbG9yc3BhY2VfQlQ3MDkQAxIgChxFU3RyZWFtQ29sb3JzcGFj",
            "ZV9CVDcwOV9GdWxsEAQSGwoXRVN0cmVhbUNvbG9yc3BhY2VfSERSMTAQBSqg",
            "AQoPRVN0cmVhbVAyUFNjb3BlEhwKGEVTdHJlYW1QMlBTY29wZUF1dG9tYXRp",
            "YxAAEhsKF0VTdHJlYW1QMlBTY29wZURpc2FibGVkEAESGQoVRVN0cmVhbVAy",
            "UFNjb3BlT25seU1lEAISGgoWRVN0cmVhbVAyUFNjb3BlRnJpZW5kcxADEhsK",
            "F0VTdHJlYW1QMlBTY29wZUV2ZXJ5b25lEAQqYQoeRVN0cmVhbUhvc3RQbGF5",
            "QXVkaW9QcmVmZXJlbmNlEh8KG0VTdHJlYW1Ib3N0UGxheUF1ZGlvRGVmYXVs",
            "dBAAEh4KGkVTdHJlYW1Ib3N0UGxheUF1ZGlvQWx3YXlzEAEqfwoSRVN0cmVh",
            "bWluZ0RhdGFUeXBlEhcKE0VTdHJlYW1pbmdBdWRpb0RhdGEQABIXChNFU3Ry",
            "ZWFtaW5nVmlkZW9EYXRhEAESHAoYRVN0cmVhbWluZ01pY3JvcGhvbmVEYXRh",
            "EAISGQoVRVN0cmVhbWluZ05lcHR1bmVEYXRhEAMqvwEKEkVTdHJlYW1Nb3Vz",
            "ZUJ1dHRvbhIaChZFU3RyZWFtTW91c2VCdXR0b25MZWZ0EAESGwoXRVN0cmVh",
            "bU1vdXNlQnV0dG9uUmlnaHQQAhIcChhFU3RyZWFtTW91c2VCdXR0b25NaWRk",
            "bGUQEBIYChRFU3RyZWFtTW91c2VCdXR0b25YMRAgEhgKFEVTdHJlYW1Nb3Vz",
            "ZUJ1dHRvblgyEEASHgoZRVN0cmVhbU1vdXNlQnV0dG9uVW5rbm93bhCAICqQ",
            "AQoaRVN0cmVhbU1vdXNlV2hlZWxEaXJlY3Rpb24SFwoTRVN0cmVhbU1vdXNl",
            "V2hlZWxVcBB4EiIKFUVTdHJlYW1Nb3VzZVdoZWVsRG93bhCI//////////8B",
            "EhkKFUVTdHJlYW1Nb3VzZVdoZWVsTGVmdBADEhoKFkVTdHJlYW1Nb3VzZVdo",
            "ZWVsUmlnaHQQBCr7AQoXRVN0cmVhbUZyYW1lcmF0ZUxpbWl0ZXISHwobRVN0",
            "cmVhbUZyYW1lcmF0ZVNsb3dDYXB0dXJlEAESHwobRVN0cmVhbUZyYW1lcmF0",
            "ZVNsb3dDb252ZXJ0EAISHgoaRVN0cmVhbUZyYW1lcmF0ZVNsb3dFbmNvZGUQ",
            "BBIfChtFU3RyZWFtRnJhbWVyYXRlU2xvd05ldHdvcmsQCBIeChpFU3RyZWFt",
            "RnJhbWVyYXRlU2xvd0RlY29kZRAQEhwKGEVTdHJlYW1GcmFtZXJhdGVTbG93",
            "R2FtZRAgEh8KG0VTdHJlYW1GcmFtZXJhdGVTbG93RGlzcGxheRBAKpsBCg9F",
            "U3RyZWFtQWN0aXZpdHkSFwoTRVN0cmVhbUFjdGl2aXR5SWRsZRABEhcKE0VT",
            "dHJlYW1BY3Rpdml0eUdhbWUQAhIaChZFU3RyZWFtQWN0aXZpdHlEZXNrdG9w",
            "EAMSIAocRVN0cmVhbUFjdGl2aXR5U2VjdXJlRGVza3RvcBAEEhgKFEVTdHJl",
            "YW1BY3Rpdml0eU11c2ljEAUqQAoSRVN0cmVhbURhdGFNZXNzYWdlEhUKEUVT",
            "dHJlYW1EYXRhUGFja2V0EAESEwoPRVN0cmVhbURhdGFMb3N0EAIqXgoMRUF1",
            "ZGlvRm9ybWF0EhQKEEVBdWRpb0Zvcm1hdE5vbmUQABIhCh1FQXVkaW9Gb3Jt",
            "YXQxNkJpdExpdHRsZUVuZGlhbhABEhUKEUVBdWRpb0Zvcm1hdEZsb2F0EAIq",
            "UQoMRVZpZGVvRm9ybWF0EhQKEEVWaWRlb0Zvcm1hdE5vbmUQABIUChBFVmlk",
            "ZW9Gb3JtYXRZVjEyEAESFQoRRVZpZGVvRm9ybWF0QWNjZWwQAirLAQoTRVN0",
            "cmVhbVN0YXRzTWVzc2FnZRIbChdFU3RyZWFtU3RhdHNGcmFtZUV2ZW50cxAB",
            "EhkKFUVTdHJlYW1TdGF0c0RlYnVnRHVtcBACEhoKFkVTdHJlYW1TdGF0c0xv",
            "Z01lc3NhZ2UQAxIeChpFU3RyZWFtU3RhdHNMb2dVcGxvYWRCZWdpbhAEEh0K",
            "GUVTdHJlYW1TdGF0c0xvZ1VwbG9hZERhdGEQBRIhCh1FU3RyZWFtU3RhdHNM",
            "b2dVcGxvYWRDb21wbGV0ZRAGKt8EChFFU3RyZWFtRnJhbWVFdmVudBIaChZF",
            "U3RyZWFtSW5wdXRFdmVudFN0YXJ0EAASGQoVRVN0cmVhbUlucHV0RXZlbnRT",
            "ZW5kEAESGQoVRVN0cmVhbUlucHV0RXZlbnRSZWN2EAISGwoXRVN0cmVhbUlu",
            "cHV0RXZlbnRRdWV1ZWQQAxIcChhFU3RyZWFtSW5wdXRFdmVudEhhbmRsZWQQ",
            "BBIaChZFU3RyZWFtRnJhbWVFdmVudFN0YXJ0EAUSIQodRVN0cmVhbUZyYW1l",
            "RXZlbnRDYXB0dXJlQmVnaW4QBhIfChtFU3RyZWFtRnJhbWVFdmVudENhcHR1",
            "cmVFbmQQBxIhCh1FU3RyZWFtRnJhbWVFdmVudENvbnZlcnRCZWdpbhAIEh8K",
            "G0VTdHJlYW1GcmFtZUV2ZW50Q29udmVydEVuZBAJEiAKHEVTdHJlYW1GcmFt",
            "ZUV2ZW50RW5jb2RlQmVnaW4QChIeChpFU3RyZWFtRnJhbWVFdmVudEVuY29k",
            "ZUVuZBALEhkKFUVTdHJlYW1GcmFtZUV2ZW50U2VuZBAMEhkKFUVTdHJlYW1G",
            "cmFtZUV2ZW50UmVjdhANEiAKHEVTdHJlYW1GcmFtZUV2ZW50RGVjb2RlQmVn",
            "aW4QDhIeChpFU3RyZWFtRnJhbWVFdmVudERlY29kZUVuZBAPEiAKHEVTdHJl",
            "YW1GcmFtZUV2ZW50VXBsb2FkQmVnaW4QEBIeChpFU3RyZWFtRnJhbWVFdmVu",
            "dFVwbG9hZEVuZBAREh0KGUVTdHJlYW1GcmFtZUV2ZW50Q29tcGxldGUQEirE",
            "AgoSRVN0cmVhbUZyYW1lUmVzdWx0Eh0KGUVTdHJlYW1GcmFtZVJlc3VsdFBl",
            "bmRpbmcQABIfChtFU3RyZWFtRnJhbWVSZXN1bHREaXNwbGF5ZWQQARIoCiRF",
            "U3RyZWFtRnJhbWVSZXN1bHREcm9wcGVkTmV0d29ya1Nsb3cQAhIoCiRFU3Ry",
            "ZWFtRnJhbWVSZXN1bHREcm9wcGVkTmV0d29ya0xvc3QQAxInCiNFU3RyZWFt",
            "RnJhbWVSZXN1bHREcm9wcGVkRGVjb2RlU2xvdxAEEioKJkVTdHJlYW1GcmFt",
            "ZVJlc3VsdERyb3BwZWREZWNvZGVDb3JydXB0EAUSIQodRVN0cmVhbUZyYW1l",
            "UmVzdWx0RHJvcHBlZExhdGUQBhIiCh5FU3RyZWFtRnJhbWVSZXN1bHREcm9w",
            "cGVkUmVzZXQQByr8BAoVRUZyYW1lQWNjdW11bGF0ZWRTdGF0EhEKDUVGcmFt",
            "ZVN0YXRGUFMQABIfChtFRnJhbWVTdGF0Q2FwdHVyZUR1cmF0aW9uTVMQARIf",
            "ChtFRnJhbWVTdGF0Q29udmVydER1cmF0aW9uTVMQAhIeChpFRnJhbWVTdGF0",
            "RW5jb2RlRHVyYXRpb25NUxADEh0KGUVGcmFtZVN0YXRTdGVhbUR1cmF0aW9u",
            "TVMQBBIeChpFRnJhbWVTdGF0U2VydmVyRHVyYXRpb25NUxAFEh8KG0VGcmFt",
            "ZVN0YXROZXR3b3JrRHVyYXRpb25NUxAGEh4KGkVGcmFtZVN0YXREZWNvZGVE",
            "dXJhdGlvbk1TEAcSHwobRUZyYW1lU3RhdERpc3BsYXlEdXJhdGlvbk1TEAgS",
            "HgoaRUZyYW1lU3RhdENsaWVudER1cmF0aW9uTVMQCRIdChlFRnJhbWVTdGF0",
            "RnJhbWVEdXJhdGlvbk1TEAoSHAoYRUZyYW1lU3RhdElucHV0TGF0ZW5jeU1T",
            "EAsSGwoXRUZyYW1lU3RhdEdhbWVMYXRlbmN5TVMQDBIgChxFRnJhbWVTdGF0",
            "Um91bmRUcmlwTGF0ZW5jeU1TEA0SGAoURUZyYW1lU3RhdFBpbmdUaW1lTVMQ",
            "DhIlCiFFRnJhbWVTdGF0U2VydmVyQml0cmF0ZUtiaXRQZXJTZWMQDxIlCiFF",
            "RnJhbWVTdGF0Q2xpZW50Qml0cmF0ZUtiaXRQZXJTZWMQEBIlCiFFRnJhbWVT",
            "dGF0TGlua0JhbmR3aWR0aEtiaXRQZXJTZWMQERIiCh5FRnJhbWVTdGF0UGFj",
            "a2V0TG9zc1BlcmNlbnRhZ2UQEipYCgxFTG9nRmlsZVR5cGUSFgoSRUxvZ0Zp",
            "bGVTeXN0ZW1Cb290EAASFwoTRUxvZ0ZpbGVTeXN0ZW1SZXNldBABEhcKE0VM",
            "b2dGaWxlU3lzdGVtRGVidWcQAiqfAgoaRVN0cmVhbUNvbnRyb2xsZXJDb25m",
            "aWdNc2cSMwovRVN0cmVhbUNvbnRyb2xsZXJDb25maWdNc2dfUmVxdWVzdENv",
            "bmZpZ3NGb3JBcHAQABItCilFU3RyZWFtQ29udHJvbGxlckNvbmZpZ01zZ19D",
            "b25maWdSZXNwb25zZRABEjYKMkVTdHJlYW1Db250cm9sbGVyQ29uZmlnTXNn",
            "X1BlcnNvbmFsaXphdGlvblJlc3BvbnNlEAISMQotRVN0cmVhbUNvbnRyb2xs",
            "ZXJDb25maWdNc2dfQWN0aXZlQ29uZmlnQ2hhbmdlEAMSMgouRVN0cmVhbUNv",
            "bnRyb2xsZXJDb25maWdNc2dfUmVxdWVzdEFjdGl2ZUNvbmZpZxAEQh9IAYAB",
            "AKoCF09wZW5TdGVhbXdvcmtzLlByb3RvYnVm"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenSteamworks.Protobuf.EStreamChannel), typeof(global::OpenSteamworks.Protobuf.EStreamDiscoveryMessage), typeof(global::OpenSteamworks.Protobuf.EStreamControlMessage), typeof(global::OpenSteamworks.Protobuf.EStreamVersion), typeof(global::OpenSteamworks.Protobuf.EStreamAudioCodec), typeof(global::OpenSteamworks.Protobuf.EStreamVideoCodec), typeof(global::OpenSteamworks.Protobuf.EStreamQualityPreference), typeof(global::OpenSteamworks.Protobuf.EStreamBitrate), typeof(global::OpenSteamworks.Protobuf.EStreamColorspace), typeof(global::OpenSteamworks.Protobuf.EStreamP2PScope), typeof(global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference), typeof(global::OpenSteamworks.Protobuf.EStreamingDataType), typeof(global::OpenSteamworks.Protobuf.EStreamMouseButton), typeof(global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection), typeof(global::OpenSteamworks.Protobuf.EStreamFramerateLimiter), typeof(global::OpenSteamworks.Protobuf.EStreamActivity), typeof(global::OpenSteamworks.Protobuf.EStreamDataMessage), typeof(global::OpenSteamworks.Protobuf.EAudioFormat), typeof(global::OpenSteamworks.Protobuf.EVideoFormat), typeof(global::OpenSteamworks.Protobuf.EStreamStatsMessage), typeof(global::OpenSteamworks.Protobuf.EStreamFrameEvent), typeof(global::OpenSteamworks.Protobuf.EStreamFrameResult), typeof(global::OpenSteamworks.Protobuf.EFrameAccumulatedStat), typeof(global::OpenSteamworks.Protobuf.ELogFileType), typeof(global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CDiscoveryPingRequest), global::OpenSteamworks.Protobuf.CDiscoveryPingRequest.Parser, new[]{ "Sequence", "PacketSizeRequested" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CDiscoveryPingResponse), global::OpenSteamworks.Protobuf.CDiscoveryPingResponse.Parser, new[]{ "Sequence", "PacketSizeReceived" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo), global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo.Parser, new[]{ "Networtest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientHandshakeMsg), global::OpenSteamworks.Protobuf.CClientHandshakeMsg.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo), global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo.Parser, new[]{ "Mtu" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CServerHandshakeMsg), global::OpenSteamworks.Protobuf.CServerHandshakeMsg.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CAuthenticationRequestMsg), global::OpenSteamworks.Protobuf.CAuthenticationRequestMsg.Parser, new[]{ "Token", "Version", "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg), global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Parser, new[]{ "Result", "Version" }, null, new[]{ typeof(global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CKeepAliveMsg), global::OpenSteamworks.Protobuf.CKeepAliveMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStartNetworkTestMsg), global::OpenSteamworks.Protobuf.CStartNetworkTestMsg.Parser, new[]{ "Frames", "Framerate", "BitrateKbps", "BurstBitrateKbps", "BandwidthTest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamVideoMode), global::OpenSteamworks.Protobuf.CStreamVideoMode.Parser, new[]{ "Width", "Height", "RefreshRate", "RefreshRateNumerator", "RefreshRateDenominator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamVideoLimit), global::OpenSteamworks.Protobuf.CStreamVideoLimit.Parser, new[]{ "Codec", "Mode", "BitrateKbps", "BurstBitrateKbps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingClientCaps), global::OpenSteamworks.Protobuf.CStreamingClientCaps.Parser, new[]{ "SystemInfo", "SystemCanSuspend", "MaximumDecodeBitrateKbps", "MaximumBurstBitrateKbps", "SupportsVideoHevc", "DisableSteamStore", "DisableClientCursor", "DisableIntelHardwareEncoding", "DisableAmdHardwareEncoding", "DisableNvidiaHardwareEncoding", "FormFactor", "HasOnScreenKeyboard", "SupportedColorspaces" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingClientConfig), global::OpenSteamworks.Protobuf.CStreamingClientConfig.Parser, new[]{ "Quality", "DesiredResolutionX", "DesiredResolutionY", "DesiredFramerateNumerator", "DesiredFramerateDenominator", "DesiredBitrateKbps", "EnableHardwareDecoding", "EnablePerformanceOverlay", "EnableVideoStreaming", "EnableAudioStreaming", "EnableInputStreaming", "AudioChannels", "EnableVideoHevc", "EnablePerformanceIcons", "EnableMicrophoneStreaming", "ControllerOverlayHotkey", "EnableTouchControllerOBSOLETE", "P2PScope", "EnableAudioUncompressed", "DisplayLimit", "QualityLimit", "RuntimeLimit", "DecoderLimit", "EnableUnreliableFec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingServerConfig), global::OpenSteamworks.Protobuf.CStreamingServerConfig.Parser, new[]{ "ChangeDesktopResolution", "DynamicallyAdjustResolution", "EnableCaptureNvfbc", "EnableHardwareEncodingNvidia", "EnableHardwareEncodingAmd", "EnableHardwareEncodingIntel", "SoftwareEncodingThreads", "EnableTrafficPriority", "HostPlayAudio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CNegotiatedConfig), global::OpenSteamworks.Protobuf.CNegotiatedConfig.Parser, new[]{ "ReliableData", "SelectedAudioCodec", "SelectedVideoCodec", "AvailableVideoModesOBSOLETE", "EnableRemoteHid", "EnableTouchInput", "DisableClientCursor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CNegotiationInitMsg), global::OpenSteamworks.Protobuf.CNegotiationInitMsg.Parser, new[]{ "ReliableData", "SupportedAudioCodecs", "SupportedVideoCodecs", "SupportsRemoteHid", "SupportsTouchInput" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CNegotiationSetConfigMsg), global::OpenSteamworks.Protobuf.CNegotiationSetConfigMsg.Parser, new[]{ "Config", "StreamingClientConfig", "StreamingClientCaps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CNegotiationCompleteMsg), global::OpenSteamworks.Protobuf.CNegotiationCompleteMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStartAudioDataMsg), global::OpenSteamworks.Protobuf.CStartAudioDataMsg.Parser, new[]{ "Channel", "Codec", "CodecData", "Frequency", "Channels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStopAudioDataMsg), global::OpenSteamworks.Protobuf.CStopAudioDataMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStartVideoDataMsg), global::OpenSteamworks.Protobuf.CStartVideoDataMsg.Parser, new[]{ "Channel", "Codec", "CodecData", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStopVideoDataMsg), global::OpenSteamworks.Protobuf.CStopVideoDataMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStartNeptuneDataMsg), global::OpenSteamworks.Protobuf.CStartNeptuneDataMsg.Parser, new[]{ "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStopNeptuneDataMsg), global::OpenSteamworks.Protobuf.CStopNeptuneDataMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CRecordedInput), global::OpenSteamworks.Protobuf.CRecordedInput.Parser, new[]{ "Type", "Timestamp", "FingerDown", "FingerMotion", "FingerUp", "MouseMotion", "MouseWheel", "MouseDown", "MouseUp", "KeyDown", "KeyUp", "Text", "Hid" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CRecordedInputStream), global::OpenSteamworks.Protobuf.CRecordedInputStream.Parser, new[]{ "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputLatencyTestMsg), global::OpenSteamworks.Protobuf.CInputLatencyTestMsg.Parser, new[]{ "InputMark", "Color" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg), global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg.Parser, new[]{ "InputMark", "Fingerid", "XNormalized", "YNormalized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg), global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg.Parser, new[]{ "InputMark", "Fingerid", "XNormalized", "YNormalized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg), global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg.Parser, new[]{ "InputMark", "Fingerid", "XNormalized", "YNormalized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputMouseMotionMsg), global::OpenSteamworks.Protobuf.CInputMouseMotionMsg.Parser, new[]{ "InputMark", "XNormalized", "YNormalized", "Dx", "Dy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputMouseWheelMsg), global::OpenSteamworks.Protobuf.CInputMouseWheelMsg.Parser, new[]{ "InputMark", "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputMouseDownMsg), global::OpenSteamworks.Protobuf.CInputMouseDownMsg.Parser, new[]{ "InputMark", "Button" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputMouseUpMsg), global::OpenSteamworks.Protobuf.CInputMouseUpMsg.Parser, new[]{ "InputMark", "Button" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputKeyDownMsg), global::OpenSteamworks.Protobuf.CInputKeyDownMsg.Parser, new[]{ "InputMark", "Scancode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputKeyUpMsg), global::OpenSteamworks.Protobuf.CInputKeyUpMsg.Parser, new[]{ "InputMark", "Scancode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CInputTextMsg), global::OpenSteamworks.Protobuf.CInputTextMsg.Parser, new[]{ "InputMark", "TextUtf8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetTitleMsg), global::OpenSteamworks.Protobuf.CSetTitleMsg.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetCaptureSizeMsg), global::OpenSteamworks.Protobuf.CSetCaptureSizeMsg.Parser, new[]{ "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetIconMsg), global::OpenSteamworks.Protobuf.CSetIconMsg.Parser, new[]{ "Width", "Height", "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetFlashStateMsg), global::OpenSteamworks.Protobuf.CSetFlashStateMsg.Parser, new[]{ "Flags", "Count", "TimeoutMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CShowCursorMsg), global::OpenSteamworks.Protobuf.CShowCursorMsg.Parser, new[]{ "XNormalized", "YNormalized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CHideCursorMsg), global::OpenSteamworks.Protobuf.CHideCursorMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetCursorMsg), global::OpenSteamworks.Protobuf.CSetCursorMsg.Parser, new[]{ "CursorId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGetCursorImageMsg), global::OpenSteamworks.Protobuf.CGetCursorImageMsg.Parser, new[]{ "CursorId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetCursorImageMsg), global::OpenSteamworks.Protobuf.CSetCursorImageMsg.Parser, new[]{ "CursorId", "Width", "Height", "HotX", "HotY", "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetCursorScaleMsg), global::OpenSteamworks.Protobuf.CSetCursorScaleMsg.Parser, new[]{ "Scale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideoDecoderInfoMsg), global::OpenSteamworks.Protobuf.CVideoDecoderInfoMsg.Parser, new[]{ "Info", "Threads" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideoEncoderInfoMsg), global::OpenSteamworks.Protobuf.CVideoEncoderInfoMsg.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPauseMsg), global::OpenSteamworks.Protobuf.CPauseMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CResumeMsg), global::OpenSteamworks.Protobuf.CResumeMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CEnableHighResCaptureMsg), global::OpenSteamworks.Protobuf.CEnableHighResCaptureMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CDisableHighResCaptureMsg), global::OpenSteamworks.Protobuf.CDisableHighResCaptureMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CEnableNeptuneDataMsg), global::OpenSteamworks.Protobuf.CEnableNeptuneDataMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CDisableNeptuneDataMsg), global::OpenSteamworks.Protobuf.CDisableNeptuneDataMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CPauseControllerInputMsg), global::OpenSteamworks.Protobuf.CPauseControllerInputMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CResumeControllerInputMsg), global::OpenSteamworks.Protobuf.CResumeControllerInputMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CToggleMagnificationMsg), global::OpenSteamworks.Protobuf.CToggleMagnificationMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetCapslockMsg), global::OpenSteamworks.Protobuf.CSetCapslockMsg.Parser, new[]{ "Pressed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingKeymapEntry), global::OpenSteamworks.Protobuf.CStreamingKeymapEntry.Parser, new[]{ "Scancode", "NormalKeycode", "ShiftKeycode", "Capslockeycode", "ShiftCapslockeycode", "AltgrKeycode", "AltgrShiftKeycode", "AltgrCapslockeycode", "AltgrShiftCapslockeycode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingKeymap), global::OpenSteamworks.Protobuf.CStreamingKeymap.Parser, new[]{ "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetKeymapMsg), global::OpenSteamworks.Protobuf.CSetKeymapMsg.Parser, new[]{ "Keymap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStopRequest), global::OpenSteamworks.Protobuf.CStopRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CQuitRequest), global::OpenSteamworks.Protobuf.CQuitRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CDeleteCursorMsg), global::OpenSteamworks.Protobuf.CDeleteCursorMsg.Parser, new[]{ "CursorId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetStreamingClientConfig), global::OpenSteamworks.Protobuf.CSetStreamingClientConfig.Parser, new[]{ "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetQoSMsg), global::OpenSteamworks.Protobuf.CSetQoSMsg.Parser, new[]{ "UseQos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetTargetFramerateMsg), global::OpenSteamworks.Protobuf.CSetTargetFramerateMsg.Parser, new[]{ "Framerate", "Reasons", "FramerateNumerator", "FramerateDenominator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetTargetBitrateMsg), global::OpenSteamworks.Protobuf.CSetTargetBitrateMsg.Parser, new[]{ "Bitrate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.COverlayEnabledMsg), global::OpenSteamworks.Protobuf.COverlayEnabledMsg.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetGammaRampMsg), global::OpenSteamworks.Protobuf.CSetGammaRampMsg.Parser, new[]{ "GammaRamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetActivityMsg), global::OpenSteamworks.Protobuf.CSetActivityMsg.Parser, new[]{ "Activity", "Appid", "Gameid", "GameName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSystemSuspendMsg), global::OpenSteamworks.Protobuf.CSystemSuspendMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVirtualHereRequestMsg), global::OpenSteamworks.Protobuf.CVirtualHereRequestMsg.Parser, new[]{ "Hostname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVirtualHereReadyMsg), global::OpenSteamworks.Protobuf.CVirtualHereReadyMsg.Parser, new[]{ "LicensedDeviceCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVirtualHereShareDeviceMsg), global::OpenSteamworks.Protobuf.CVirtualHereShareDeviceMsg.Parser, new[]{ "DeviceAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetSpectatorModeMsg), global::OpenSteamworks.Protobuf.CSetSpectatorModeMsg.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CRemoteHIDMsg), global::OpenSteamworks.Protobuf.CRemoteHIDMsg.Parser, new[]{ "Data", "ActiveInput" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTouchConfigActiveMsg), global::OpenSteamworks.Protobuf.CTouchConfigActiveMsg.Parser, new[]{ "Appid", "Revision", "Creator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGetTouchConfigDataMsg), global::OpenSteamworks.Protobuf.CGetTouchConfigDataMsg.Parser, new[]{ "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetTouchConfigDataMsg), global::OpenSteamworks.Protobuf.CSetTouchConfigDataMsg.Parser, new[]{ "Appid", "Revision", "Data", "Layout", "Creator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSaveTouchConfigLayoutMsg), global::OpenSteamworks.Protobuf.CSaveTouchConfigLayoutMsg.Parser, new[]{ "Appid", "Layout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTouchActionSetActiveMsg), global::OpenSteamworks.Protobuf.CTouchActionSetActiveMsg.Parser, new[]{ "Appid", "ActionsetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTouchActionSetLayerAddedMsg), global::OpenSteamworks.Protobuf.CTouchActionSetLayerAddedMsg.Parser, new[]{ "Appid", "ActionsetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTouchActionSetLayerRemovedMsg), global::OpenSteamworks.Protobuf.CTouchActionSetLayerRemovedMsg.Parser, new[]{ "Appid", "ActionsetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGetTouchIconDataMsg), global::OpenSteamworks.Protobuf.CGetTouchIconDataMsg.Parser, new[]{ "Appid", "Icon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetTouchIconDataMsg), global::OpenSteamworks.Protobuf.CSetTouchIconDataMsg.Parser, new[]{ "Appid", "Icon", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg), global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Parser, new[]{ "Players", "PlayerIndex", "MiniprofileLocation", "GameName", "AvatarLocation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player), global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player.Parser, new[]{ "Accountid", "Guestid", "KeyboardEnabled", "MouseEnabled", "ControllerEnabled", "ControllerSlots", "AvatarHash" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetInputTemporarilyDisabledMsg), global::OpenSteamworks.Protobuf.CSetInputTemporarilyDisabledMsg.Parser, new[]{ "Disabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetQualityOverrideMsg), global::OpenSteamworks.Protobuf.CSetQualityOverrideMsg.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSetBitrateOverrideMsg), global::OpenSteamworks.Protobuf.CSetBitrateOverrideMsg.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CShowOnScreenKeyboardMsg), global::OpenSteamworks.Protobuf.CShowOnScreenKeyboardMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CControllerPersonalizationUpdateMsg), global::OpenSteamworks.Protobuf.CControllerPersonalizationUpdateMsg.Parser, new[]{ "ControllerPath", "ControllerName", "ReverseDiamondButtonLayout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVRConnectionReady), global::OpenSteamworks.Protobuf.CVRConnectionReady.Parser, new[]{ "ConnectParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamDataLostMsg), global::OpenSteamworks.Protobuf.CStreamDataLostMsg.Parser, new[]{ "Packets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CAudioFormat), global::OpenSteamworks.Protobuf.CAudioFormat.Parser, new[]{ "Format", "Frequency", "Channels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideoFormat), global::OpenSteamworks.Protobuf.CVideoFormat.Parser, new[]{ "Format", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CFrameEvent), global::OpenSteamworks.Protobuf.CFrameEvent.Parser, new[]{ "EventId", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CFrameStats), global::OpenSteamworks.Protobuf.CFrameStats.Parser, new[]{ "FrameId", "InputMark", "Events", "Result", "FrameStartDelta", "FrameDisplayDelta", "PingTime", "ServerBitrate", "ClientBitrate", "Linbandwidth", "PacketLoss", "FrameSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue), global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue.Parser, new[]{ "StatType", "Count", "Average", "Stddev" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CFrameStatsListMsg), global::OpenSteamworks.Protobuf.CFrameStatsListMsg.Parser, new[]{ "DataType", "Stats", "AccumulatedStats", "LatestFrameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CStreamingSessionStats), global::OpenSteamworks.Protobuf.CStreamingSessionStats.Parser, new[]{ "FrameLossPercentage", "AverageNetwortimeMs", "StddevNetwortimeMs", "TestData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CDebugDumpMsg), global::OpenSteamworks.Protobuf.CDebugDumpMsg.Parser, new[]{ "Screenshot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CLogMsg), global::OpenSteamworks.Protobuf.CLogMsg.Parser, new[]{ "Type", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CLogUploadMsg), global::OpenSteamworks.Protobuf.CLogUploadMsg.Parser, new[]{ "Type", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTransportSignalMsg), global::OpenSteamworks.Protobuf.CTransportSignalMsg.Parser, new[]{ "Webrtc", "Sdr" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage), global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Parser, new[]{ "Greeting", "Offer", "Answer", "Candidate" }, new[]{ "Msg" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate), global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate.Parser, new[]{ "SdpMid", "SdpMlineIndex", "Candidate_" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CControllerConfigMsg), global::OpenSteamworks.Protobuf.CControllerConfigMsg.Parser, new[]{ "Type", "ControllerPath", "Appid", "PersonalizationResponse", "ConfigResponse", "ActiveConfigChangeMsg" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse), global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse.Parser, new[]{ "Appid", "ConfigURL", "ControllerType", "ControllerData", "SelectionOrder", "ActionBlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse), global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse.Parser, new[]{ "PersonalizationData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigChangeResponse), global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigChangeResponse.Parser, new[]{ "ConfigURL", "ControllerType", "ControllerData", "SelectionOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg), global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg.Parser, new[]{ "Appid", "ConfigURL", "ControllerType", "ControllerData" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum EStreamChannel {
    [pbr::OriginalName("EStreamChannelInvalid")] Invalid = -1,
    [pbr::OriginalName("EStreamChannelDiscovery")] Discovery = 0,
    [pbr::OriginalName("EStreamChannelControl")] Control = 1,
    [pbr::OriginalName("EStreamChannelStats")] Stats = 2,
    [pbr::OriginalName("EStreamChannelDataChannelStart")] DataChannelStart = 3,
  }

  public enum EStreamDiscoveryMessage {
    [pbr::OriginalName("EStreamDiscoveryPingRequest")] EstreamDiscoveryPingRequest = 1,
    [pbr::OriginalName("EStreamDiscoveryPingResponse")] EstreamDiscoveryPingResponse = 2,
  }

  public enum EStreamControlMessage {
    [pbr::OriginalName("EStreamControlAuthenticationRequest")] EstreamControlAuthenticationRequest = 1,
    [pbr::OriginalName("EStreamControlAuthenticationResponse")] EstreamControlAuthenticationResponse = 2,
    [pbr::OriginalName("EStreamControlNegotiationInit")] EstreamControlNegotiationInit = 3,
    [pbr::OriginalName("EStreamControlNegotiationSetConfig")] EstreamControlNegotiationSetConfig = 4,
    [pbr::OriginalName("EStreamControlNegotiationComplete")] EstreamControlNegotiationComplete = 5,
    [pbr::OriginalName("EStreamControlClientHandshake")] EstreamControlClientHandshake = 6,
    [pbr::OriginalName("EStreamControlServerHandshake")] EstreamControlServerHandshake = 7,
    [pbr::OriginalName("EStreamControlStartNetworkTest")] EstreamControlStartNetworkTest = 8,
    [pbr::OriginalName("EStreamControlKeepAlive")] EstreamControlKeepAlive = 9,
    [pbr::OriginalName("EStreamControl_LAST_SETUP_MESSAGE")] EstreamControlLastSetupMessage = 15,
    [pbr::OriginalName("EStreamControlStartAudioData")] EstreamControlStartAudioData = 50,
    [pbr::OriginalName("EStreamControlStopAudioData")] EstreamControlStopAudioData = 51,
    [pbr::OriginalName("EStreamControlStartVideoData")] EstreamControlStartVideoData = 52,
    [pbr::OriginalName("EStreamControlStopVideoData")] EstreamControlStopVideoData = 53,
    [pbr::OriginalName("EStreamControlInputMouseMotion")] EstreamControlInputMouseMotion = 54,
    [pbr::OriginalName("EStreamControlInputMouseWheel")] EstreamControlInputMouseWheel = 55,
    [pbr::OriginalName("EStreamControlInputMouseDown")] EstreamControlInputMouseDown = 56,
    [pbr::OriginalName("EStreamControlInputMouseUp")] EstreamControlInputMouseUp = 57,
    [pbr::OriginalName("EStreamControlInputKeyDown")] EstreamControlInputKeyDown = 58,
    [pbr::OriginalName("EStreamControlInputKeyUp")] EstreamControlInputKeyUp = 59,
    [pbr::OriginalName("EStreamControlInputGamepadAttached_OBSOLETE")] EstreamControlInputGamepadAttachedObsolete = 60,
    [pbr::OriginalName("EStreamControlInputGamepadEvent_OBSOLETE")] EstreamControlInputGamepadEventObsolete = 61,
    [pbr::OriginalName("EStreamControlInputGamepadDetached_OBSOLETE")] EstreamControlInputGamepadDetachedObsolete = 62,
    [pbr::OriginalName("EStreamControlShowCursor")] EstreamControlShowCursor = 63,
    [pbr::OriginalName("EStreamControlHideCursor")] EstreamControlHideCursor = 64,
    [pbr::OriginalName("EStreamControlSetCursor")] EstreamControlSetCursor = 65,
    [pbr::OriginalName("EStreamControlGetCursorImage")] EstreamControlGetCursorImage = 66,
    [pbr::OriginalName("EStreamControlSetCursorImage")] EstreamControlSetCursorImage = 67,
    [pbr::OriginalName("EStreamControlDeleteCursor")] EstreamControlDeleteCursor = 68,
    [pbr::OriginalName("EStreamControlSetTargetFramerate")] EstreamControlSetTargetFramerate = 69,
    [pbr::OriginalName("EStreamControlInputLatencyTest")] EstreamControlInputLatencyTest = 70,
    [pbr::OriginalName("EStreamControlGamepadRumble_OBSOLETE")] EstreamControlGamepadRumbleObsolete = 71,
    [pbr::OriginalName("EStreamControlOverlayEnabled")] EstreamControlOverlayEnabled = 74,
    [pbr::OriginalName("EStreamControlInputControllerAttached_OBSOLETE")] EstreamControlInputControllerAttachedObsolete = 75,
    [pbr::OriginalName("EStreamControlInputControllerState_OBSOLETE")] EstreamControlInputControllerStateObsolete = 76,
    [pbr::OriginalName("EStreamControlTriggerHapticPulse_OBSOLETE")] EstreamControlTriggerHapticPulseObsolete = 77,
    [pbr::OriginalName("EStreamControlInputControllerDetached_OBSOLETE")] EstreamControlInputControllerDetachedObsolete = 78,
    [pbr::OriginalName("EStreamControlVideoDecoderInfo")] EstreamControlVideoDecoderInfo = 80,
    [pbr::OriginalName("EStreamControlSetTitle")] EstreamControlSetTitle = 81,
    [pbr::OriginalName("EStreamControlSetIcon")] EstreamControlSetIcon = 82,
    [pbr::OriginalName("EStreamControlQuitRequest")] EstreamControlQuitRequest = 83,
    [pbr::OriginalName("EStreamControlSetQoS")] EstreamControlSetQoS = 87,
    [pbr::OriginalName("EStreamControlInputControllerWirelessPresence_OBSOLETE")] EstreamControlInputControllerWirelessPresenceObsolete = 88,
    [pbr::OriginalName("EStreamControlSetGammaRamp")] EstreamControlSetGammaRamp = 89,
    [pbr::OriginalName("EStreamControlVideoEncoderInfo")] EstreamControlVideoEncoderInfo = 90,
    [pbr::OriginalName("EStreamControlInputControllerStateHID_OBSOLETE")] EstreamControlInputControllerStateHidObsolete = 93,
    [pbr::OriginalName("EStreamControlSetTargetBitrate")] EstreamControlSetTargetBitrate = 94,
    [pbr::OriginalName("EStreamControlSetControllerPairingEnabled_OBSOLETE")] EstreamControlSetControllerPairingEnabledObsolete = 95,
    [pbr::OriginalName("EStreamControlSetControllerPairingResult_OBSOLETE")] EstreamControlSetControllerPairingResultObsolete = 96,
    [pbr::OriginalName("EStreamControlTriggerControllerDisconnect_OBSOLETE")] EstreamControlTriggerControllerDisconnectObsolete = 97,
    [pbr::OriginalName("EStreamControlSetActivity")] EstreamControlSetActivity = 98,
    [pbr::OriginalName("EStreamControlSetStreamingClientConfig")] EstreamControlSetStreamingClientConfig = 99,
    [pbr::OriginalName("EStreamControlSystemSuspend")] EstreamControlSystemSuspend = 100,
    [pbr::OriginalName("EStreamControlSetControllerSettings_OBSOLETE")] EstreamControlSetControllerSettingsObsolete = 101,
    [pbr::OriginalName("EStreamControlVirtualHereRequest")] EstreamControlVirtualHereRequest = 102,
    [pbr::OriginalName("EStreamControlVirtualHereReady")] EstreamControlVirtualHereReady = 103,
    [pbr::OriginalName("EStreamControlVirtualHereShareDevice")] EstreamControlVirtualHereShareDevice = 104,
    [pbr::OriginalName("EStreamControlSetSpectatorMode")] EstreamControlSetSpectatorMode = 105,
    [pbr::OriginalName("EStreamControlRemoteHID")] EstreamControlRemoteHid = 106,
    [pbr::OriginalName("EStreamControlStartMicrophoneData")] EstreamControlStartMicrophoneData = 107,
    [pbr::OriginalName("EStreamControlStopMicrophoneData")] EstreamControlStopMicrophoneData = 108,
    [pbr::OriginalName("EStreamControlInputText")] EstreamControlInputText = 109,
    [pbr::OriginalName("EStreamControlTouchConfigActive")] EstreamControlTouchConfigActive = 110,
    [pbr::OriginalName("EStreamControlGetTouchConfigData")] EstreamControlGetTouchConfigData = 111,
    [pbr::OriginalName("EStreamControlSetTouchConfigData")] EstreamControlSetTouchConfigData = 112,
    [pbr::OriginalName("EStreamControlSaveTouchConfigLayout")] EstreamControlSaveTouchConfigLayout = 113,
    [pbr::OriginalName("EStreamControlTouchActionSetActive")] EstreamControlTouchActionSetActive = 114,
    [pbr::OriginalName("EStreamControlGetTouchIconData")] EstreamControlGetTouchIconData = 115,
    [pbr::OriginalName("EStreamControlSetTouchIconData")] EstreamControlSetTouchIconData = 116,
    [pbr::OriginalName("EStreamControlInputTouchFingerDown")] EstreamControlInputTouchFingerDown = 117,
    [pbr::OriginalName("EStreamControlInputTouchFingerMotion")] EstreamControlInputTouchFingerMotion = 118,
    [pbr::OriginalName("EStreamControlInputTouchFingerUp")] EstreamControlInputTouchFingerUp = 119,
    [pbr::OriginalName("EStreamControlSetCaptureSize")] EstreamControlSetCaptureSize = 120,
    [pbr::OriginalName("EStreamControlSetFlashState")] EstreamControlSetFlashState = 121,
    [pbr::OriginalName("EStreamControlPause")] EstreamControlPause = 122,
    [pbr::OriginalName("EStreamControlResume")] EstreamControlResume = 123,
    [pbr::OriginalName("EStreamControlEnableHighResCapture")] EstreamControlEnableHighResCapture = 124,
    [pbr::OriginalName("EStreamControlDisableHighResCapture")] EstreamControlDisableHighResCapture = 125,
    [pbr::OriginalName("EStreamControlToggleMagnification")] EstreamControlToggleMagnification = 126,
    [pbr::OriginalName("EStreamControlSetCapslock")] EstreamControlSetCapslock = 127,
    [pbr::OriginalName("EStreamControlSetKeymap")] EstreamControlSetKeymap = 128,
    [pbr::OriginalName("EStreamControlStopRequest")] EstreamControlStopRequest = 129,
    [pbr::OriginalName("EStreamControlTouchActionSetLayerAdded")] EstreamControlTouchActionSetLayerAdded = 130,
    [pbr::OriginalName("EStreamControlTouchActionSetLayerRemoved")] EstreamControlTouchActionSetLayerRemoved = 131,
    [pbr::OriginalName("EStreamControlRemotePlayTogetherGroupUpdate")] EstreamControlRemotePlayTogetherGroupUpdate = 132,
    [pbr::OriginalName("EStreamControlSetInputTemporarilyDisabled")] EstreamControlSetInputTemporarilyDisabled = 133,
    [pbr::OriginalName("EStreamControlSetQualityOverride")] EstreamControlSetQualityOverride = 134,
    [pbr::OriginalName("EStreamControlSetBitrateOverride")] EstreamControlSetBitrateOverride = 135,
    [pbr::OriginalName("EStreamControlShowOnScreenKeyboard")] EstreamControlShowOnScreenKeyboard = 136,
    [pbr::OriginalName("EStreamControlControllerConfigMsg")] EstreamControlControllerConfigMsg = 137,
    [pbr::OriginalName("EStreamControlControllerPersonalizationUpdate")] EstreamControlControllerPersonalizationUpdate = 138,
    [pbr::OriginalName("EStreamControlEnableNeptuneData")] EstreamControlEnableNeptuneData = 139,
    [pbr::OriginalName("EStreamControlDisableNeptuneData")] EstreamControlDisableNeptuneData = 140,
    [pbr::OriginalName("EStreamControlStartNeptuneData")] EstreamControlStartNeptuneData = 141,
    [pbr::OriginalName("EStreamControlStopNeptuneData")] EstreamControlStopNeptuneData = 142,
    [pbr::OriginalName("EStreamControlPauseControllerInput")] EstreamControlPauseControllerInput = 143,
    [pbr::OriginalName("EStreamControlResumeControllerInput")] EstreamControlResumeControllerInput = 144,
    [pbr::OriginalName("EStreamControlVRConnectionReady")] EstreamControlVrconnectionReady = 145,
    [pbr::OriginalName("EStreamControlSetCursorScale")] EstreamControlSetCursorScale = 146,
  }

  public enum EStreamVersion {
    [pbr::OriginalName("EStreamVersionNone")] None = 0,
    [pbr::OriginalName("EStreamVersionCurrent")] Current = 1,
  }

  public enum EStreamAudioCodec {
    [pbr::OriginalName("EStreamAudioCodecNone")] None = 0,
    [pbr::OriginalName("EStreamAudioCodecRaw")] Raw = 1,
    [pbr::OriginalName("EStreamAudioCodecVorbis")] Vorbis = 2,
    [pbr::OriginalName("EStreamAudioCodecOpus")] Opus = 3,
    [pbr::OriginalName("EStreamAudioCodecMP3")] Mp3 = 4,
    [pbr::OriginalName("EStreamAudioCodecAAC")] Aac = 5,
  }

  public enum EStreamVideoCodec {
    [pbr::OriginalName("EStreamVideoCodecNone")] None = 0,
    [pbr::OriginalName("EStreamVideoCodecRaw")] Raw = 1,
    [pbr::OriginalName("EStreamVideoCodecVP8")] Vp8 = 2,
    [pbr::OriginalName("EStreamVideoCodecVP9")] Vp9 = 3,
    [pbr::OriginalName("EStreamVideoCodecH264")] H264 = 4,
    [pbr::OriginalName("EStreamVideoCodecHEVC")] Hevc = 5,
    [pbr::OriginalName("EStreamVideoCodecORBX1")] Orbx1 = 6,
    [pbr::OriginalName("EStreamVideoCodecORBX2")] Orbx2 = 7,
  }

  public enum EStreamQualityPreference {
    [pbr::OriginalName("EStreamQualityAutomatic")] EstreamQualityAutomatic = -1,
    [pbr::OriginalName("EStreamQualityFast")] EstreamQualityFast = 1,
    [pbr::OriginalName("EStreamQualityBalanced")] EstreamQualityBalanced = 2,
    [pbr::OriginalName("EStreamQualityBeautiful")] EstreamQualityBeautiful = 3,
  }

  public enum EStreamBitrate {
    [pbr::OriginalName("EStreamBitrateAutodetect")] Autodetect = -1,
    [pbr::OriginalName("EStreamBitrateUnlimited")] Unlimited = 0,
  }

  public enum EStreamColorspace {
    [pbr::OriginalName("EStreamColorspace_Unknown")] Unknown = 0,
    [pbr::OriginalName("EStreamColorspace_BT601")] Bt601 = 1,
    [pbr::OriginalName("EStreamColorspace_BT601_Full")] Bt601Full = 2,
    [pbr::OriginalName("EStreamColorspace_BT709")] Bt709 = 3,
    [pbr::OriginalName("EStreamColorspace_BT709_Full")] Bt709Full = 4,
    [pbr::OriginalName("EStreamColorspace_HDR10")] Hdr10 = 5,
  }

  public enum EStreamP2PScope {
    [pbr::OriginalName("EStreamP2PScopeAutomatic")] Automatic = 0,
    [pbr::OriginalName("EStreamP2PScopeDisabled")] Disabled = 1,
    [pbr::OriginalName("EStreamP2PScopeOnlyMe")] OnlyMe = 2,
    [pbr::OriginalName("EStreamP2PScopeFriends")] Friends = 3,
    [pbr::OriginalName("EStreamP2PScopeEveryone")] Everyone = 4,
  }

  public enum EStreamHostPlayAudioPreference {
    [pbr::OriginalName("EStreamHostPlayAudioDefault")] EstreamHostPlayAudioDefault = 0,
    [pbr::OriginalName("EStreamHostPlayAudioAlways")] EstreamHostPlayAudioAlways = 1,
  }

  public enum EStreamingDataType {
    [pbr::OriginalName("EStreamingAudioData")] EstreamingAudioData = 0,
    [pbr::OriginalName("EStreamingVideoData")] EstreamingVideoData = 1,
    [pbr::OriginalName("EStreamingMicrophoneData")] EstreamingMicrophoneData = 2,
    [pbr::OriginalName("EStreamingNeptuneData")] EstreamingNeptuneData = 3,
  }

  public enum EStreamMouseButton {
    [pbr::OriginalName("EStreamMouseButtonLeft")] Left = 1,
    [pbr::OriginalName("EStreamMouseButtonRight")] Right = 2,
    [pbr::OriginalName("EStreamMouseButtonMiddle")] Middle = 16,
    [pbr::OriginalName("EStreamMouseButtonX1")] X1 = 32,
    [pbr::OriginalName("EStreamMouseButtonX2")] X2 = 64,
    [pbr::OriginalName("EStreamMouseButtonUnknown")] Unknown = 4096,
  }

  public enum EStreamMouseWheelDirection {
    [pbr::OriginalName("EStreamMouseWheelUp")] EstreamMouseWheelUp = 120,
    [pbr::OriginalName("EStreamMouseWheelDown")] EstreamMouseWheelDown = -120,
    [pbr::OriginalName("EStreamMouseWheelLeft")] EstreamMouseWheelLeft = 3,
    [pbr::OriginalName("EStreamMouseWheelRight")] EstreamMouseWheelRight = 4,
  }

  public enum EStreamFramerateLimiter {
    [pbr::OriginalName("EStreamFramerateSlowCapture")] EstreamFramerateSlowCapture = 1,
    [pbr::OriginalName("EStreamFramerateSlowConvert")] EstreamFramerateSlowConvert = 2,
    [pbr::OriginalName("EStreamFramerateSlowEncode")] EstreamFramerateSlowEncode = 4,
    [pbr::OriginalName("EStreamFramerateSlowNetwork")] EstreamFramerateSlowNetwork = 8,
    [pbr::OriginalName("EStreamFramerateSlowDecode")] EstreamFramerateSlowDecode = 16,
    [pbr::OriginalName("EStreamFramerateSlowGame")] EstreamFramerateSlowGame = 32,
    [pbr::OriginalName("EStreamFramerateSlowDisplay")] EstreamFramerateSlowDisplay = 64,
  }

  public enum EStreamActivity {
    [pbr::OriginalName("EStreamActivityIdle")] Idle = 1,
    [pbr::OriginalName("EStreamActivityGame")] Game = 2,
    [pbr::OriginalName("EStreamActivityDesktop")] Desktop = 3,
    [pbr::OriginalName("EStreamActivitySecureDesktop")] SecureDesktop = 4,
    [pbr::OriginalName("EStreamActivityMusic")] Music = 5,
  }

  public enum EStreamDataMessage {
    [pbr::OriginalName("EStreamDataPacket")] EstreamDataPacket = 1,
    [pbr::OriginalName("EStreamDataLost")] EstreamDataLost = 2,
  }

  public enum EAudioFormat {
    [pbr::OriginalName("EAudioFormatNone")] None = 0,
    [pbr::OriginalName("EAudioFormat16BitLittleEndian")] _16BitLittleEndian = 1,
    [pbr::OriginalName("EAudioFormatFloat")] Float = 2,
  }

  public enum EVideoFormat {
    [pbr::OriginalName("EVideoFormatNone")] None = 0,
    [pbr::OriginalName("EVideoFormatYV12")] Yv12 = 1,
    [pbr::OriginalName("EVideoFormatAccel")] Accel = 2,
  }

  public enum EStreamStatsMessage {
    [pbr::OriginalName("EStreamStatsFrameEvents")] EstreamStatsFrameEvents = 1,
    [pbr::OriginalName("EStreamStatsDebugDump")] EstreamStatsDebugDump = 2,
    [pbr::OriginalName("EStreamStatsLogMessage")] EstreamStatsLogMessage = 3,
    [pbr::OriginalName("EStreamStatsLogUploadBegin")] EstreamStatsLogUploadBegin = 4,
    [pbr::OriginalName("EStreamStatsLogUploadData")] EstreamStatsLogUploadData = 5,
    [pbr::OriginalName("EStreamStatsLogUploadComplete")] EstreamStatsLogUploadComplete = 6,
  }

  public enum EStreamFrameEvent {
    [pbr::OriginalName("EStreamInputEventStart")] EstreamInputEventStart = 0,
    [pbr::OriginalName("EStreamInputEventSend")] EstreamInputEventSend = 1,
    [pbr::OriginalName("EStreamInputEventRecv")] EstreamInputEventRecv = 2,
    [pbr::OriginalName("EStreamInputEventQueued")] EstreamInputEventQueued = 3,
    [pbr::OriginalName("EStreamInputEventHandled")] EstreamInputEventHandled = 4,
    [pbr::OriginalName("EStreamFrameEventStart")] Start = 5,
    [pbr::OriginalName("EStreamFrameEventCaptureBegin")] CaptureBegin = 6,
    [pbr::OriginalName("EStreamFrameEventCaptureEnd")] CaptureEnd = 7,
    [pbr::OriginalName("EStreamFrameEventConvertBegin")] ConvertBegin = 8,
    [pbr::OriginalName("EStreamFrameEventConvertEnd")] ConvertEnd = 9,
    [pbr::OriginalName("EStreamFrameEventEncodeBegin")] EncodeBegin = 10,
    [pbr::OriginalName("EStreamFrameEventEncodeEnd")] EncodeEnd = 11,
    [pbr::OriginalName("EStreamFrameEventSend")] Send = 12,
    [pbr::OriginalName("EStreamFrameEventRecv")] Recv = 13,
    [pbr::OriginalName("EStreamFrameEventDecodeBegin")] DecodeBegin = 14,
    [pbr::OriginalName("EStreamFrameEventDecodeEnd")] DecodeEnd = 15,
    [pbr::OriginalName("EStreamFrameEventUploadBegin")] UploadBegin = 16,
    [pbr::OriginalName("EStreamFrameEventUploadEnd")] UploadEnd = 17,
    [pbr::OriginalName("EStreamFrameEventComplete")] Complete = 18,
  }

  public enum EStreamFrameResult {
    [pbr::OriginalName("EStreamFrameResultPending")] Pending = 0,
    [pbr::OriginalName("EStreamFrameResultDisplayed")] Displayed = 1,
    [pbr::OriginalName("EStreamFrameResultDroppedNetworkSlow")] DroppedNetworkSlow = 2,
    [pbr::OriginalName("EStreamFrameResultDroppedNetworkLost")] DroppedNetworkLost = 3,
    [pbr::OriginalName("EStreamFrameResultDroppedDecodeSlow")] DroppedDecodeSlow = 4,
    [pbr::OriginalName("EStreamFrameResultDroppedDecodeCorrupt")] DroppedDecodeCorrupt = 5,
    [pbr::OriginalName("EStreamFrameResultDroppedLate")] DroppedLate = 6,
    [pbr::OriginalName("EStreamFrameResultDroppedReset")] DroppedReset = 7,
  }

  public enum EFrameAccumulatedStat {
    [pbr::OriginalName("EFrameStatFPS")] EframeStatFps = 0,
    [pbr::OriginalName("EFrameStatCaptureDurationMS")] EframeStatCaptureDurationMs = 1,
    [pbr::OriginalName("EFrameStatConvertDurationMS")] EframeStatConvertDurationMs = 2,
    [pbr::OriginalName("EFrameStatEncodeDurationMS")] EframeStatEncodeDurationMs = 3,
    [pbr::OriginalName("EFrameStatSteamDurationMS")] EframeStatSteamDurationMs = 4,
    [pbr::OriginalName("EFrameStatServerDurationMS")] EframeStatServerDurationMs = 5,
    [pbr::OriginalName("EFrameStatNetworkDurationMS")] EframeStatNetworkDurationMs = 6,
    [pbr::OriginalName("EFrameStatDecodeDurationMS")] EframeStatDecodeDurationMs = 7,
    [pbr::OriginalName("EFrameStatDisplayDurationMS")] EframeStatDisplayDurationMs = 8,
    [pbr::OriginalName("EFrameStatClientDurationMS")] EframeStatClientDurationMs = 9,
    [pbr::OriginalName("EFrameStatFrameDurationMS")] EframeStatFrameDurationMs = 10,
    [pbr::OriginalName("EFrameStatInputLatencyMS")] EframeStatInputLatencyMs = 11,
    [pbr::OriginalName("EFrameStatGameLatencyMS")] EframeStatGameLatencyMs = 12,
    [pbr::OriginalName("EFrameStatRoundTripLatencyMS")] EframeStatRoundTripLatencyMs = 13,
    [pbr::OriginalName("EFrameStatPingTimeMS")] EframeStatPingTimeMs = 14,
    [pbr::OriginalName("EFrameStatServerBitrateKbitPerSec")] EframeStatServerBitrateKbitPerSec = 15,
    [pbr::OriginalName("EFrameStatClientBitrateKbitPerSec")] EframeStatClientBitrateKbitPerSec = 16,
    [pbr::OriginalName("EFrameStatLinkBandwidthKbitPerSec")] EframeStatLinkBandwidthKbitPerSec = 17,
    [pbr::OriginalName("EFrameStatPacketLossPercentage")] EframeStatPacketLossPercentage = 18,
  }

  public enum ELogFileType {
    [pbr::OriginalName("ELogFileSystemBoot")] ElogFileSystemBoot = 0,
    [pbr::OriginalName("ELogFileSystemReset")] ElogFileSystemReset = 1,
    [pbr::OriginalName("ELogFileSystemDebug")] ElogFileSystemDebug = 2,
  }

  public enum EStreamControllerConfigMsg {
    [pbr::OriginalName("EStreamControllerConfigMsg_RequestConfigsForApp")] RequestConfigsForApp = 0,
    [pbr::OriginalName("EStreamControllerConfigMsg_ConfigResponse")] ConfigResponse = 1,
    [pbr::OriginalName("EStreamControllerConfigMsg_PersonalizationResponse")] PersonalizationResponse = 2,
    [pbr::OriginalName("EStreamControllerConfigMsg_ActiveConfigChange")] ActiveConfigChange = 3,
    [pbr::OriginalName("EStreamControllerConfigMsg_RequestActiveConfig")] RequestActiveConfig = 4,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CDiscoveryPingRequest : pb::IMessage<CDiscoveryPingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CDiscoveryPingRequest> _parser = new pb::MessageParser<CDiscoveryPingRequest>(() => new CDiscoveryPingRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CDiscoveryPingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDiscoveryPingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDiscoveryPingRequest(CDiscoveryPingRequest other) : this() {
      _hasBits0 = other._hasBits0;
      sequence_ = other.sequence_;
      packetSizeRequested_ = other.packetSizeRequested_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDiscoveryPingRequest Clone() {
      return new CDiscoveryPingRequest(this);
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 1;
    private readonly static uint SequenceDefaultValue = 0;

    private uint sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sequence {
      get { if ((_hasBits0 & 1) != 0) { return sequence_; } else { return SequenceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sequence_ = value;
      }
    }
    /// <summary>Gets whether the "sequence" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSequence {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sequence" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSequence() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "packet_size_requested" field.</summary>
    public const int PacketSizeRequestedFieldNumber = 2;
    private readonly static uint PacketSizeRequestedDefaultValue = 0;

    private uint packetSizeRequested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PacketSizeRequested {
      get { if ((_hasBits0 & 2) != 0) { return packetSizeRequested_; } else { return PacketSizeRequestedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        packetSizeRequested_ = value;
      }
    }
    /// <summary>Gets whether the "packet_size_requested" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPacketSizeRequested {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "packet_size_requested" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPacketSizeRequested() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CDiscoveryPingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CDiscoveryPingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sequence != other.Sequence) return false;
      if (PacketSizeRequested != other.PacketSizeRequested) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSequence) hash ^= Sequence.GetHashCode();
      if (HasPacketSizeRequested) hash ^= PacketSizeRequested.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSequence) {
        output.WriteRawTag(8);
        output.WriteUInt32(Sequence);
      }
      if (HasPacketSizeRequested) {
        output.WriteRawTag(16);
        output.WriteUInt32(PacketSizeRequested);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSequence) {
        output.WriteRawTag(8);
        output.WriteUInt32(Sequence);
      }
      if (HasPacketSizeRequested) {
        output.WriteRawTag(16);
        output.WriteUInt32(PacketSizeRequested);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSequence) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sequence);
      }
      if (HasPacketSizeRequested) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketSizeRequested);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CDiscoveryPingRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasSequence) {
        Sequence = other.Sequence;
      }
      if (other.HasPacketSizeRequested) {
        PacketSizeRequested = other.PacketSizeRequested;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sequence = input.ReadUInt32();
            break;
          }
          case 16: {
            PacketSizeRequested = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sequence = input.ReadUInt32();
            break;
          }
          case 16: {
            PacketSizeRequested = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CDiscoveryPingResponse : pb::IMessage<CDiscoveryPingResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CDiscoveryPingResponse> _parser = new pb::MessageParser<CDiscoveryPingResponse>(() => new CDiscoveryPingResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CDiscoveryPingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDiscoveryPingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDiscoveryPingResponse(CDiscoveryPingResponse other) : this() {
      _hasBits0 = other._hasBits0;
      sequence_ = other.sequence_;
      packetSizeReceived_ = other.packetSizeReceived_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDiscoveryPingResponse Clone() {
      return new CDiscoveryPingResponse(this);
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 1;
    private readonly static uint SequenceDefaultValue = 0;

    private uint sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sequence {
      get { if ((_hasBits0 & 1) != 0) { return sequence_; } else { return SequenceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sequence_ = value;
      }
    }
    /// <summary>Gets whether the "sequence" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSequence {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sequence" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSequence() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "packet_size_received" field.</summary>
    public const int PacketSizeReceivedFieldNumber = 2;
    private readonly static uint PacketSizeReceivedDefaultValue = 0;

    private uint packetSizeReceived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PacketSizeReceived {
      get { if ((_hasBits0 & 2) != 0) { return packetSizeReceived_; } else { return PacketSizeReceivedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        packetSizeReceived_ = value;
      }
    }
    /// <summary>Gets whether the "packet_size_received" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPacketSizeReceived {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "packet_size_received" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPacketSizeReceived() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CDiscoveryPingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CDiscoveryPingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sequence != other.Sequence) return false;
      if (PacketSizeReceived != other.PacketSizeReceived) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSequence) hash ^= Sequence.GetHashCode();
      if (HasPacketSizeReceived) hash ^= PacketSizeReceived.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSequence) {
        output.WriteRawTag(8);
        output.WriteUInt32(Sequence);
      }
      if (HasPacketSizeReceived) {
        output.WriteRawTag(16);
        output.WriteUInt32(PacketSizeReceived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSequence) {
        output.WriteRawTag(8);
        output.WriteUInt32(Sequence);
      }
      if (HasPacketSizeReceived) {
        output.WriteRawTag(16);
        output.WriteUInt32(PacketSizeReceived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSequence) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sequence);
      }
      if (HasPacketSizeReceived) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketSizeReceived);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CDiscoveryPingResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSequence) {
        Sequence = other.Sequence;
      }
      if (other.HasPacketSizeReceived) {
        PacketSizeReceived = other.PacketSizeReceived;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sequence = input.ReadUInt32();
            break;
          }
          case 16: {
            PacketSizeReceived = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sequence = input.ReadUInt32();
            break;
          }
          case 16: {
            PacketSizeReceived = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingClientHandshakeInfo : pb::IMessage<CStreamingClientHandshakeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingClientHandshakeInfo> _parser = new pb::MessageParser<CStreamingClientHandshakeInfo>(() => new CStreamingClientHandshakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingClientHandshakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientHandshakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientHandshakeInfo(CStreamingClientHandshakeInfo other) : this() {
      _hasBits0 = other._hasBits0;
      networtest_ = other.networtest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientHandshakeInfo Clone() {
      return new CStreamingClientHandshakeInfo(this);
    }

    /// <summary>Field number for the "networtest" field.</summary>
    public const int NetwortestFieldNumber = 2;
    private readonly static int NetwortestDefaultValue = 0;

    private int networtest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Networtest {
      get { if ((_hasBits0 & 1) != 0) { return networtest_; } else { return NetwortestDefaultValue; } }
      set {
        _hasBits0 |= 1;
        networtest_ = value;
      }
    }
    /// <summary>Gets whether the "networtest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNetwortest {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "networtest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNetwortest() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingClientHandshakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingClientHandshakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Networtest != other.Networtest) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNetwortest) hash ^= Networtest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNetwortest) {
        output.WriteRawTag(16);
        output.WriteInt32(Networtest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNetwortest) {
        output.WriteRawTag(16);
        output.WriteInt32(Networtest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNetwortest) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Networtest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingClientHandshakeInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasNetwortest) {
        Networtest = other.Networtest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Networtest = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Networtest = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientHandshakeMsg : pb::IMessage<CClientHandshakeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientHandshakeMsg> _parser = new pb::MessageParser<CClientHandshakeMsg>(() => new CClientHandshakeMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientHandshakeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientHandshakeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientHandshakeMsg(CClientHandshakeMsg other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientHandshakeMsg Clone() {
      return new CClientHandshakeMsg(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientHandshakeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientHandshakeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientHandshakeMsg other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::OpenSteamworks.Protobuf.CStreamingClientHandshakeInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingServerHandshakeInfo : pb::IMessage<CStreamingServerHandshakeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingServerHandshakeInfo> _parser = new pb::MessageParser<CStreamingServerHandshakeInfo>(() => new CStreamingServerHandshakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingServerHandshakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingServerHandshakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingServerHandshakeInfo(CStreamingServerHandshakeInfo other) : this() {
      _hasBits0 = other._hasBits0;
      mtu_ = other.mtu_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingServerHandshakeInfo Clone() {
      return new CStreamingServerHandshakeInfo(this);
    }

    /// <summary>Field number for the "mtu" field.</summary>
    public const int MtuFieldNumber = 1;
    private readonly static int MtuDefaultValue = 0;

    private int mtu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mtu {
      get { if ((_hasBits0 & 1) != 0) { return mtu_; } else { return MtuDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mtu_ = value;
      }
    }
    /// <summary>Gets whether the "mtu" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMtu {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mtu" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMtu() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingServerHandshakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingServerHandshakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mtu != other.Mtu) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMtu) hash ^= Mtu.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMtu) {
        output.WriteRawTag(8);
        output.WriteInt32(Mtu);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMtu) {
        output.WriteRawTag(8);
        output.WriteInt32(Mtu);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMtu) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mtu);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingServerHandshakeInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasMtu) {
        Mtu = other.Mtu;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mtu = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mtu = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CServerHandshakeMsg : pb::IMessage<CServerHandshakeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CServerHandshakeMsg> _parser = new pb::MessageParser<CServerHandshakeMsg>(() => new CServerHandshakeMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CServerHandshakeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CServerHandshakeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CServerHandshakeMsg(CServerHandshakeMsg other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CServerHandshakeMsg Clone() {
      return new CServerHandshakeMsg(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CServerHandshakeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CServerHandshakeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CServerHandshakeMsg other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::OpenSteamworks.Protobuf.CStreamingServerHandshakeInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CAuthenticationRequestMsg : pb::IMessage<CAuthenticationRequestMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CAuthenticationRequestMsg> _parser = new pb::MessageParser<CAuthenticationRequestMsg>(() => new CAuthenticationRequestMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CAuthenticationRequestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAuthenticationRequestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAuthenticationRequestMsg(CAuthenticationRequestMsg other) : this() {
      _hasBits0 = other._hasBits0;
      token_ = other.token_;
      version_ = other.version_;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAuthenticationRequestMsg Clone() {
      return new CAuthenticationRequestMsg(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamVersion VersionDefaultValue = global::OpenSteamworks.Protobuf.EStreamVersion.None;

    private global::OpenSteamworks.Protobuf.EStreamVersion version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamVersion Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 3;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CAuthenticationRequestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CAuthenticationRequestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Version != other.Version) return false;
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Version);
      }
      if (HasSteamid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Version);
      }
      if (HasSteamid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Version);
      }
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CAuthenticationRequestMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 16: {
            Version = (global::OpenSteamworks.Protobuf.EStreamVersion) input.ReadEnum();
            break;
          }
          case 24: {
            Steamid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 16: {
            Version = (global::OpenSteamworks.Protobuf.EStreamVersion) input.ReadEnum();
            break;
          }
          case 24: {
            Steamid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CAuthenticationResponseMsg : pb::IMessage<CAuthenticationResponseMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CAuthenticationResponseMsg> _parser = new pb::MessageParser<CAuthenticationResponseMsg>(() => new CAuthenticationResponseMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CAuthenticationResponseMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAuthenticationResponseMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAuthenticationResponseMsg(CAuthenticationResponseMsg other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAuthenticationResponseMsg Clone() {
      return new CAuthenticationResponseMsg(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult ResultDefaultValue = global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult.Succeeded;

    private global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamVersion VersionDefaultValue = global::OpenSteamworks.Protobuf.EStreamVersion.None;

    private global::OpenSteamworks.Protobuf.EStreamVersion version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamVersion Version {
      get { if ((_hasBits0 & 2) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CAuthenticationResponseMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CAuthenticationResponseMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CAuthenticationResponseMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult) input.ReadEnum();
            break;
          }
          case 16: {
            Version = (global::OpenSteamworks.Protobuf.EStreamVersion) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::OpenSteamworks.Protobuf.CAuthenticationResponseMsg.Types.AuthenticationResult) input.ReadEnum();
            break;
          }
          case 16: {
            Version = (global::OpenSteamworks.Protobuf.EStreamVersion) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CAuthenticationResponseMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AuthenticationResult {
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 0,
        [pbr::OriginalName("FAILED")] Failed = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CKeepAliveMsg : pb::IMessage<CKeepAliveMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CKeepAliveMsg> _parser = new pb::MessageParser<CKeepAliveMsg>(() => new CKeepAliveMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CKeepAliveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CKeepAliveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CKeepAliveMsg(CKeepAliveMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CKeepAliveMsg Clone() {
      return new CKeepAliveMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CKeepAliveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CKeepAliveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CKeepAliveMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStartNetworkTestMsg : pb::IMessage<CStartNetworkTestMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStartNetworkTestMsg> _parser = new pb::MessageParser<CStartNetworkTestMsg>(() => new CStartNetworkTestMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStartNetworkTestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartNetworkTestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartNetworkTestMsg(CStartNetworkTestMsg other) : this() {
      _hasBits0 = other._hasBits0;
      frames_ = other.frames_;
      framerate_ = other.framerate_;
      bitrateKbps_ = other.bitrateKbps_;
      burstBitrateKbps_ = other.burstBitrateKbps_;
      bandwidthTest_ = other.bandwidthTest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartNetworkTestMsg Clone() {
      return new CStartNetworkTestMsg(this);
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 1;
    private readonly static uint FramesDefaultValue = 0;

    private uint frames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frames {
      get { if ((_hasBits0 & 1) != 0) { return frames_; } else { return FramesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        frames_ = value;
      }
    }
    /// <summary>Gets whether the "frames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrames {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "frames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrames() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "framerate" field.</summary>
    public const int FramerateFieldNumber = 2;
    private readonly static uint FramerateDefaultValue = 0;

    private uint framerate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Framerate {
      get { if ((_hasBits0 & 2) != 0) { return framerate_; } else { return FramerateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        framerate_ = value;
      }
    }
    /// <summary>Gets whether the "framerate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFramerate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "framerate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFramerate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bitrate_kbps" field.</summary>
    public const int BitrateKbpsFieldNumber = 3;
    private readonly static uint BitrateKbpsDefaultValue = 0;

    private uint bitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BitrateKbps {
      get { if ((_hasBits0 & 4) != 0) { return bitrateKbps_; } else { return BitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrateKbps {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrateKbps() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "burst_bitrate_kbps" field.</summary>
    public const int BurstBitrateKbpsFieldNumber = 4;
    private readonly static uint BurstBitrateKbpsDefaultValue = 0;

    private uint burstBitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BurstBitrateKbps {
      get { if ((_hasBits0 & 8) != 0) { return burstBitrateKbps_; } else { return BurstBitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        burstBitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "burst_bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBurstBitrateKbps {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "burst_bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBurstBitrateKbps() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "bandwidth_test" field.</summary>
    public const int BandwidthTestFieldNumber = 5;
    private readonly static bool BandwidthTestDefaultValue = false;

    private bool bandwidthTest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BandwidthTest {
      get { if ((_hasBits0 & 16) != 0) { return bandwidthTest_; } else { return BandwidthTestDefaultValue; } }
      set {
        _hasBits0 |= 16;
        bandwidthTest_ = value;
      }
    }
    /// <summary>Gets whether the "bandwidth_test" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBandwidthTest {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "bandwidth_test" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBandwidthTest() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStartNetworkTestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStartNetworkTestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Frames != other.Frames) return false;
      if (Framerate != other.Framerate) return false;
      if (BitrateKbps != other.BitrateKbps) return false;
      if (BurstBitrateKbps != other.BurstBitrateKbps) return false;
      if (BandwidthTest != other.BandwidthTest) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFrames) hash ^= Frames.GetHashCode();
      if (HasFramerate) hash ^= Framerate.GetHashCode();
      if (HasBitrateKbps) hash ^= BitrateKbps.GetHashCode();
      if (HasBurstBitrateKbps) hash ^= BurstBitrateKbps.GetHashCode();
      if (HasBandwidthTest) hash ^= BandwidthTest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFrames) {
        output.WriteRawTag(8);
        output.WriteUInt32(Frames);
      }
      if (HasFramerate) {
        output.WriteRawTag(16);
        output.WriteUInt32(Framerate);
      }
      if (HasBitrateKbps) {
        output.WriteRawTag(24);
        output.WriteUInt32(BitrateKbps);
      }
      if (HasBurstBitrateKbps) {
        output.WriteRawTag(32);
        output.WriteUInt32(BurstBitrateKbps);
      }
      if (HasBandwidthTest) {
        output.WriteRawTag(40);
        output.WriteBool(BandwidthTest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFrames) {
        output.WriteRawTag(8);
        output.WriteUInt32(Frames);
      }
      if (HasFramerate) {
        output.WriteRawTag(16);
        output.WriteUInt32(Framerate);
      }
      if (HasBitrateKbps) {
        output.WriteRawTag(24);
        output.WriteUInt32(BitrateKbps);
      }
      if (HasBurstBitrateKbps) {
        output.WriteRawTag(32);
        output.WriteUInt32(BurstBitrateKbps);
      }
      if (HasBandwidthTest) {
        output.WriteRawTag(40);
        output.WriteBool(BandwidthTest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFrames) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frames);
      }
      if (HasFramerate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Framerate);
      }
      if (HasBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BitrateKbps);
      }
      if (HasBurstBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BurstBitrateKbps);
      }
      if (HasBandwidthTest) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStartNetworkTestMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasFrames) {
        Frames = other.Frames;
      }
      if (other.HasFramerate) {
        Framerate = other.Framerate;
      }
      if (other.HasBitrateKbps) {
        BitrateKbps = other.BitrateKbps;
      }
      if (other.HasBurstBitrateKbps) {
        BurstBitrateKbps = other.BurstBitrateKbps;
      }
      if (other.HasBandwidthTest) {
        BandwidthTest = other.BandwidthTest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Frames = input.ReadUInt32();
            break;
          }
          case 16: {
            Framerate = input.ReadUInt32();
            break;
          }
          case 24: {
            BitrateKbps = input.ReadUInt32();
            break;
          }
          case 32: {
            BurstBitrateKbps = input.ReadUInt32();
            break;
          }
          case 40: {
            BandwidthTest = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Frames = input.ReadUInt32();
            break;
          }
          case 16: {
            Framerate = input.ReadUInt32();
            break;
          }
          case 24: {
            BitrateKbps = input.ReadUInt32();
            break;
          }
          case 32: {
            BurstBitrateKbps = input.ReadUInt32();
            break;
          }
          case 40: {
            BandwidthTest = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamVideoMode : pb::IMessage<CStreamVideoMode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamVideoMode> _parser = new pb::MessageParser<CStreamVideoMode>(() => new CStreamVideoMode());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamVideoMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamVideoMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamVideoMode(CStreamVideoMode other) : this() {
      _hasBits0 = other._hasBits0;
      width_ = other.width_;
      height_ = other.height_;
      refreshRate_ = other.refreshRate_;
      refreshRateNumerator_ = other.refreshRateNumerator_;
      refreshRateDenominator_ = other.refreshRateDenominator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamVideoMode Clone() {
      return new CStreamVideoMode(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "refresh_rate" field.</summary>
    public const int RefreshRateFieldNumber = 3;
    private readonly static uint RefreshRateDefaultValue = 0;

    private uint refreshRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RefreshRate {
      get { if ((_hasBits0 & 4) != 0) { return refreshRate_; } else { return RefreshRateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        refreshRate_ = value;
      }
    }
    /// <summary>Gets whether the "refresh_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefreshRate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "refresh_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefreshRate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "refresh_rate_numerator" field.</summary>
    public const int RefreshRateNumeratorFieldNumber = 4;
    private readonly static uint RefreshRateNumeratorDefaultValue = 0;

    private uint refreshRateNumerator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RefreshRateNumerator {
      get { if ((_hasBits0 & 8) != 0) { return refreshRateNumerator_; } else { return RefreshRateNumeratorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        refreshRateNumerator_ = value;
      }
    }
    /// <summary>Gets whether the "refresh_rate_numerator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefreshRateNumerator {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "refresh_rate_numerator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefreshRateNumerator() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "refresh_rate_denominator" field.</summary>
    public const int RefreshRateDenominatorFieldNumber = 5;
    private readonly static uint RefreshRateDenominatorDefaultValue = 0;

    private uint refreshRateDenominator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RefreshRateDenominator {
      get { if ((_hasBits0 & 16) != 0) { return refreshRateDenominator_; } else { return RefreshRateDenominatorDefaultValue; } }
      set {
        _hasBits0 |= 16;
        refreshRateDenominator_ = value;
      }
    }
    /// <summary>Gets whether the "refresh_rate_denominator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefreshRateDenominator {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "refresh_rate_denominator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefreshRateDenominator() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamVideoMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamVideoMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (RefreshRate != other.RefreshRate) return false;
      if (RefreshRateNumerator != other.RefreshRateNumerator) return false;
      if (RefreshRateDenominator != other.RefreshRateDenominator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasRefreshRate) hash ^= RefreshRate.GetHashCode();
      if (HasRefreshRateNumerator) hash ^= RefreshRateNumerator.GetHashCode();
      if (HasRefreshRateDenominator) hash ^= RefreshRateDenominator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (HasRefreshRate) {
        output.WriteRawTag(24);
        output.WriteUInt32(RefreshRate);
      }
      if (HasRefreshRateNumerator) {
        output.WriteRawTag(32);
        output.WriteUInt32(RefreshRateNumerator);
      }
      if (HasRefreshRateDenominator) {
        output.WriteRawTag(40);
        output.WriteUInt32(RefreshRateDenominator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (HasRefreshRate) {
        output.WriteRawTag(24);
        output.WriteUInt32(RefreshRate);
      }
      if (HasRefreshRateNumerator) {
        output.WriteRawTag(32);
        output.WriteUInt32(RefreshRateNumerator);
      }
      if (HasRefreshRateDenominator) {
        output.WriteRawTag(40);
        output.WriteUInt32(RefreshRateDenominator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasRefreshRate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RefreshRate);
      }
      if (HasRefreshRateNumerator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RefreshRateNumerator);
      }
      if (HasRefreshRateDenominator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RefreshRateDenominator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamVideoMode other) {
      if (other == null) {
        return;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasRefreshRate) {
        RefreshRate = other.RefreshRate;
      }
      if (other.HasRefreshRateNumerator) {
        RefreshRateNumerator = other.RefreshRateNumerator;
      }
      if (other.HasRefreshRateDenominator) {
        RefreshRateDenominator = other.RefreshRateDenominator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 24: {
            RefreshRate = input.ReadUInt32();
            break;
          }
          case 32: {
            RefreshRateNumerator = input.ReadUInt32();
            break;
          }
          case 40: {
            RefreshRateDenominator = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 24: {
            RefreshRate = input.ReadUInt32();
            break;
          }
          case 32: {
            RefreshRateNumerator = input.ReadUInt32();
            break;
          }
          case 40: {
            RefreshRateDenominator = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamVideoLimit : pb::IMessage<CStreamVideoLimit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamVideoLimit> _parser = new pb::MessageParser<CStreamVideoLimit>(() => new CStreamVideoLimit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamVideoLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamVideoLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamVideoLimit(CStreamVideoLimit other) : this() {
      _hasBits0 = other._hasBits0;
      codec_ = other.codec_;
      mode_ = other.mode_ != null ? other.mode_.Clone() : null;
      bitrateKbps_ = other.bitrateKbps_;
      burstBitrateKbps_ = other.burstBitrateKbps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamVideoLimit Clone() {
      return new CStreamVideoLimit(this);
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamVideoCodec CodecDefaultValue = global::OpenSteamworks.Protobuf.EStreamVideoCodec.None;

    private global::OpenSteamworks.Protobuf.EStreamVideoCodec codec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamVideoCodec Codec {
      get { if ((_hasBits0 & 1) != 0) { return codec_; } else { return CodecDefaultValue; } }
      set {
        _hasBits0 |= 1;
        codec_ = value;
      }
    }
    /// <summary>Gets whether the "codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodec {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodec() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.CStreamVideoMode mode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamVideoMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "bitrate_kbps" field.</summary>
    public const int BitrateKbpsFieldNumber = 3;
    private readonly static int BitrateKbpsDefaultValue = 0;

    private int bitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BitrateKbps {
      get { if ((_hasBits0 & 2) != 0) { return bitrateKbps_; } else { return BitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrateKbps {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrateKbps() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "burst_bitrate_kbps" field.</summary>
    public const int BurstBitrateKbpsFieldNumber = 4;
    private readonly static int BurstBitrateKbpsDefaultValue = 0;

    private int burstBitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BurstBitrateKbps {
      get { if ((_hasBits0 & 4) != 0) { return burstBitrateKbps_; } else { return BurstBitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        burstBitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "burst_bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBurstBitrateKbps {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "burst_bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBurstBitrateKbps() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamVideoLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamVideoLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Codec != other.Codec) return false;
      if (!object.Equals(Mode, other.Mode)) return false;
      if (BitrateKbps != other.BitrateKbps) return false;
      if (BurstBitrateKbps != other.BurstBitrateKbps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCodec) hash ^= Codec.GetHashCode();
      if (mode_ != null) hash ^= Mode.GetHashCode();
      if (HasBitrateKbps) hash ^= BitrateKbps.GetHashCode();
      if (HasBurstBitrateKbps) hash ^= BurstBitrateKbps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCodec) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Codec);
      }
      if (mode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mode);
      }
      if (HasBitrateKbps) {
        output.WriteRawTag(24);
        output.WriteInt32(BitrateKbps);
      }
      if (HasBurstBitrateKbps) {
        output.WriteRawTag(32);
        output.WriteInt32(BurstBitrateKbps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCodec) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Codec);
      }
      if (mode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mode);
      }
      if (HasBitrateKbps) {
        output.WriteRawTag(24);
        output.WriteInt32(BitrateKbps);
      }
      if (HasBurstBitrateKbps) {
        output.WriteRawTag(32);
        output.WriteInt32(BurstBitrateKbps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCodec) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Codec);
      }
      if (mode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mode);
      }
      if (HasBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitrateKbps);
      }
      if (HasBurstBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BurstBitrateKbps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamVideoLimit other) {
      if (other == null) {
        return;
      }
      if (other.HasCodec) {
        Codec = other.Codec;
      }
      if (other.mode_ != null) {
        if (mode_ == null) {
          Mode = new global::OpenSteamworks.Protobuf.CStreamVideoMode();
        }
        Mode.MergeFrom(other.Mode);
      }
      if (other.HasBitrateKbps) {
        BitrateKbps = other.BitrateKbps;
      }
      if (other.HasBurstBitrateKbps) {
        BurstBitrateKbps = other.BurstBitrateKbps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Codec = (global::OpenSteamworks.Protobuf.EStreamVideoCodec) input.ReadEnum();
            break;
          }
          case 18: {
            if (mode_ == null) {
              Mode = new global::OpenSteamworks.Protobuf.CStreamVideoMode();
            }
            input.ReadMessage(Mode);
            break;
          }
          case 24: {
            BitrateKbps = input.ReadInt32();
            break;
          }
          case 32: {
            BurstBitrateKbps = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Codec = (global::OpenSteamworks.Protobuf.EStreamVideoCodec) input.ReadEnum();
            break;
          }
          case 18: {
            if (mode_ == null) {
              Mode = new global::OpenSteamworks.Protobuf.CStreamVideoMode();
            }
            input.ReadMessage(Mode);
            break;
          }
          case 24: {
            BitrateKbps = input.ReadInt32();
            break;
          }
          case 32: {
            BurstBitrateKbps = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingClientCaps : pb::IMessage<CStreamingClientCaps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingClientCaps> _parser = new pb::MessageParser<CStreamingClientCaps>(() => new CStreamingClientCaps());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingClientCaps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientCaps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientCaps(CStreamingClientCaps other) : this() {
      _hasBits0 = other._hasBits0;
      systemInfo_ = other.systemInfo_;
      systemCanSuspend_ = other.systemCanSuspend_;
      maximumDecodeBitrateKbps_ = other.maximumDecodeBitrateKbps_;
      maximumBurstBitrateKbps_ = other.maximumBurstBitrateKbps_;
      supportsVideoHevc_ = other.supportsVideoHevc_;
      disableSteamStore_ = other.disableSteamStore_;
      disableClientCursor_ = other.disableClientCursor_;
      disableIntelHardwareEncoding_ = other.disableIntelHardwareEncoding_;
      disableAmdHardwareEncoding_ = other.disableAmdHardwareEncoding_;
      disableNvidiaHardwareEncoding_ = other.disableNvidiaHardwareEncoding_;
      formFactor_ = other.formFactor_;
      hasOnScreenKeyboard_ = other.hasOnScreenKeyboard_;
      supportedColorspaces_ = other.supportedColorspaces_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientCaps Clone() {
      return new CStreamingClientCaps(this);
    }

    /// <summary>Field number for the "system_info" field.</summary>
    public const int SystemInfoFieldNumber = 1;
    private readonly static string SystemInfoDefaultValue = "";

    private string systemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SystemInfo {
      get { return systemInfo_ ?? SystemInfoDefaultValue; }
      set {
        systemInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "system_info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSystemInfo {
      get { return systemInfo_ != null; }
    }
    /// <summary>Clears the value of the "system_info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSystemInfo() {
      systemInfo_ = null;
    }

    /// <summary>Field number for the "system_can_suspend" field.</summary>
    public const int SystemCanSuspendFieldNumber = 2;
    private readonly static bool SystemCanSuspendDefaultValue = false;

    private bool systemCanSuspend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SystemCanSuspend {
      get { if ((_hasBits0 & 1) != 0) { return systemCanSuspend_; } else { return SystemCanSuspendDefaultValue; } }
      set {
        _hasBits0 |= 1;
        systemCanSuspend_ = value;
      }
    }
    /// <summary>Gets whether the "system_can_suspend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSystemCanSuspend {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "system_can_suspend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSystemCanSuspend() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "maximum_decode_bitrate_kbps" field.</summary>
    public const int MaximumDecodeBitrateKbpsFieldNumber = 3;
    private readonly static int MaximumDecodeBitrateKbpsDefaultValue = 0;

    private int maximumDecodeBitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaximumDecodeBitrateKbps {
      get { if ((_hasBits0 & 2) != 0) { return maximumDecodeBitrateKbps_; } else { return MaximumDecodeBitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maximumDecodeBitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "maximum_decode_bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaximumDecodeBitrateKbps {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "maximum_decode_bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaximumDecodeBitrateKbps() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "maximum_burst_bitrate_kbps" field.</summary>
    public const int MaximumBurstBitrateKbpsFieldNumber = 4;
    private readonly static int MaximumBurstBitrateKbpsDefaultValue = 0;

    private int maximumBurstBitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaximumBurstBitrateKbps {
      get { if ((_hasBits0 & 4) != 0) { return maximumBurstBitrateKbps_; } else { return MaximumBurstBitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maximumBurstBitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "maximum_burst_bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaximumBurstBitrateKbps {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maximum_burst_bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaximumBurstBitrateKbps() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "supports_video_hevc" field.</summary>
    public const int SupportsVideoHevcFieldNumber = 5;
    private readonly static bool SupportsVideoHevcDefaultValue = false;

    private bool supportsVideoHevc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SupportsVideoHevc {
      get { if ((_hasBits0 & 8) != 0) { return supportsVideoHevc_; } else { return SupportsVideoHevcDefaultValue; } }
      set {
        _hasBits0 |= 8;
        supportsVideoHevc_ = value;
      }
    }
    /// <summary>Gets whether the "supports_video_hevc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSupportsVideoHevc {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "supports_video_hevc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSupportsVideoHevc() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "disable_steam_store" field.</summary>
    public const int DisableSteamStoreFieldNumber = 6;
    private readonly static bool DisableSteamStoreDefaultValue = false;

    private bool disableSteamStore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableSteamStore {
      get { if ((_hasBits0 & 16) != 0) { return disableSteamStore_; } else { return DisableSteamStoreDefaultValue; } }
      set {
        _hasBits0 |= 16;
        disableSteamStore_ = value;
      }
    }
    /// <summary>Gets whether the "disable_steam_store" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableSteamStore {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "disable_steam_store" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableSteamStore() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "disable_client_cursor" field.</summary>
    public const int DisableClientCursorFieldNumber = 7;
    private readonly static bool DisableClientCursorDefaultValue = false;

    private bool disableClientCursor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableClientCursor {
      get { if ((_hasBits0 & 32) != 0) { return disableClientCursor_; } else { return DisableClientCursorDefaultValue; } }
      set {
        _hasBits0 |= 32;
        disableClientCursor_ = value;
      }
    }
    /// <summary>Gets whether the "disable_client_cursor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableClientCursor {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "disable_client_cursor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableClientCursor() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "disable_intel_hardware_encoding" field.</summary>
    public const int DisableIntelHardwareEncodingFieldNumber = 8;
    private readonly static bool DisableIntelHardwareEncodingDefaultValue = false;

    private bool disableIntelHardwareEncoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableIntelHardwareEncoding {
      get { if ((_hasBits0 & 64) != 0) { return disableIntelHardwareEncoding_; } else { return DisableIntelHardwareEncodingDefaultValue; } }
      set {
        _hasBits0 |= 64;
        disableIntelHardwareEncoding_ = value;
      }
    }
    /// <summary>Gets whether the "disable_intel_hardware_encoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableIntelHardwareEncoding {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "disable_intel_hardware_encoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableIntelHardwareEncoding() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "disable_amd_hardware_encoding" field.</summary>
    public const int DisableAmdHardwareEncodingFieldNumber = 9;
    private readonly static bool DisableAmdHardwareEncodingDefaultValue = false;

    private bool disableAmdHardwareEncoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableAmdHardwareEncoding {
      get { if ((_hasBits0 & 128) != 0) { return disableAmdHardwareEncoding_; } else { return DisableAmdHardwareEncodingDefaultValue; } }
      set {
        _hasBits0 |= 128;
        disableAmdHardwareEncoding_ = value;
      }
    }
    /// <summary>Gets whether the "disable_amd_hardware_encoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableAmdHardwareEncoding {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "disable_amd_hardware_encoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableAmdHardwareEncoding() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "disable_nvidia_hardware_encoding" field.</summary>
    public const int DisableNvidiaHardwareEncodingFieldNumber = 10;
    private readonly static bool DisableNvidiaHardwareEncodingDefaultValue = false;

    private bool disableNvidiaHardwareEncoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableNvidiaHardwareEncoding {
      get { if ((_hasBits0 & 256) != 0) { return disableNvidiaHardwareEncoding_; } else { return DisableNvidiaHardwareEncodingDefaultValue; } }
      set {
        _hasBits0 |= 256;
        disableNvidiaHardwareEncoding_ = value;
      }
    }
    /// <summary>Gets whether the "disable_nvidia_hardware_encoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableNvidiaHardwareEncoding {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "disable_nvidia_hardware_encoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableNvidiaHardwareEncoding() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "form_factor" field.</summary>
    public const int FormFactorFieldNumber = 11;
    private readonly static int FormFactorDefaultValue = 0;

    private int formFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FormFactor {
      get { if ((_hasBits0 & 512) != 0) { return formFactor_; } else { return FormFactorDefaultValue; } }
      set {
        _hasBits0 |= 512;
        formFactor_ = value;
      }
    }
    /// <summary>Gets whether the "form_factor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormFactor {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "form_factor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormFactor() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "has_on_screen_keyboard" field.</summary>
    public const int HasOnScreenKeyboardFieldNumber = 12;
    private readonly static bool HasOnScreenKeyboardDefaultValue = false;

    private bool hasOnScreenKeyboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnScreenKeyboard {
      get { if ((_hasBits0 & 1024) != 0) { return hasOnScreenKeyboard_; } else { return HasOnScreenKeyboardDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        hasOnScreenKeyboard_ = value;
      }
    }
    /// <summary>Gets whether the "has_on_screen_keyboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasOnScreenKeyboard {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "has_on_screen_keyboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasOnScreenKeyboard() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "supported_colorspaces" field.</summary>
    public const int SupportedColorspacesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.EStreamColorspace> _repeated_supportedColorspaces_codec
        = pb::FieldCodec.ForEnum(104, x => (int) x, x => (global::OpenSteamworks.Protobuf.EStreamColorspace) x);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamColorspace> supportedColorspaces_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamColorspace>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamColorspace> SupportedColorspaces {
      get { return supportedColorspaces_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingClientCaps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingClientCaps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SystemInfo != other.SystemInfo) return false;
      if (SystemCanSuspend != other.SystemCanSuspend) return false;
      if (MaximumDecodeBitrateKbps != other.MaximumDecodeBitrateKbps) return false;
      if (MaximumBurstBitrateKbps != other.MaximumBurstBitrateKbps) return false;
      if (SupportsVideoHevc != other.SupportsVideoHevc) return false;
      if (DisableSteamStore != other.DisableSteamStore) return false;
      if (DisableClientCursor != other.DisableClientCursor) return false;
      if (DisableIntelHardwareEncoding != other.DisableIntelHardwareEncoding) return false;
      if (DisableAmdHardwareEncoding != other.DisableAmdHardwareEncoding) return false;
      if (DisableNvidiaHardwareEncoding != other.DisableNvidiaHardwareEncoding) return false;
      if (FormFactor != other.FormFactor) return false;
      if (HasOnScreenKeyboard != other.HasOnScreenKeyboard) return false;
      if(!supportedColorspaces_.Equals(other.supportedColorspaces_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSystemInfo) hash ^= SystemInfo.GetHashCode();
      if (HasSystemCanSuspend) hash ^= SystemCanSuspend.GetHashCode();
      if (HasMaximumDecodeBitrateKbps) hash ^= MaximumDecodeBitrateKbps.GetHashCode();
      if (HasMaximumBurstBitrateKbps) hash ^= MaximumBurstBitrateKbps.GetHashCode();
      if (HasSupportsVideoHevc) hash ^= SupportsVideoHevc.GetHashCode();
      if (HasDisableSteamStore) hash ^= DisableSteamStore.GetHashCode();
      if (HasDisableClientCursor) hash ^= DisableClientCursor.GetHashCode();
      if (HasDisableIntelHardwareEncoding) hash ^= DisableIntelHardwareEncoding.GetHashCode();
      if (HasDisableAmdHardwareEncoding) hash ^= DisableAmdHardwareEncoding.GetHashCode();
      if (HasDisableNvidiaHardwareEncoding) hash ^= DisableNvidiaHardwareEncoding.GetHashCode();
      if (HasFormFactor) hash ^= FormFactor.GetHashCode();
      if (HasHasOnScreenKeyboard) hash ^= HasOnScreenKeyboard.GetHashCode();
      hash ^= supportedColorspaces_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSystemInfo) {
        output.WriteRawTag(10);
        output.WriteString(SystemInfo);
      }
      if (HasSystemCanSuspend) {
        output.WriteRawTag(16);
        output.WriteBool(SystemCanSuspend);
      }
      if (HasMaximumDecodeBitrateKbps) {
        output.WriteRawTag(24);
        output.WriteInt32(MaximumDecodeBitrateKbps);
      }
      if (HasMaximumBurstBitrateKbps) {
        output.WriteRawTag(32);
        output.WriteInt32(MaximumBurstBitrateKbps);
      }
      if (HasSupportsVideoHevc) {
        output.WriteRawTag(40);
        output.WriteBool(SupportsVideoHevc);
      }
      if (HasDisableSteamStore) {
        output.WriteRawTag(48);
        output.WriteBool(DisableSteamStore);
      }
      if (HasDisableClientCursor) {
        output.WriteRawTag(56);
        output.WriteBool(DisableClientCursor);
      }
      if (HasDisableIntelHardwareEncoding) {
        output.WriteRawTag(64);
        output.WriteBool(DisableIntelHardwareEncoding);
      }
      if (HasDisableAmdHardwareEncoding) {
        output.WriteRawTag(72);
        output.WriteBool(DisableAmdHardwareEncoding);
      }
      if (HasDisableNvidiaHardwareEncoding) {
        output.WriteRawTag(80);
        output.WriteBool(DisableNvidiaHardwareEncoding);
      }
      if (HasFormFactor) {
        output.WriteRawTag(88);
        output.WriteInt32(FormFactor);
      }
      if (HasHasOnScreenKeyboard) {
        output.WriteRawTag(96);
        output.WriteBool(HasOnScreenKeyboard);
      }
      supportedColorspaces_.WriteTo(output, _repeated_supportedColorspaces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSystemInfo) {
        output.WriteRawTag(10);
        output.WriteString(SystemInfo);
      }
      if (HasSystemCanSuspend) {
        output.WriteRawTag(16);
        output.WriteBool(SystemCanSuspend);
      }
      if (HasMaximumDecodeBitrateKbps) {
        output.WriteRawTag(24);
        output.WriteInt32(MaximumDecodeBitrateKbps);
      }
      if (HasMaximumBurstBitrateKbps) {
        output.WriteRawTag(32);
        output.WriteInt32(MaximumBurstBitrateKbps);
      }
      if (HasSupportsVideoHevc) {
        output.WriteRawTag(40);
        output.WriteBool(SupportsVideoHevc);
      }
      if (HasDisableSteamStore) {
        output.WriteRawTag(48);
        output.WriteBool(DisableSteamStore);
      }
      if (HasDisableClientCursor) {
        output.WriteRawTag(56);
        output.WriteBool(DisableClientCursor);
      }
      if (HasDisableIntelHardwareEncoding) {
        output.WriteRawTag(64);
        output.WriteBool(DisableIntelHardwareEncoding);
      }
      if (HasDisableAmdHardwareEncoding) {
        output.WriteRawTag(72);
        output.WriteBool(DisableAmdHardwareEncoding);
      }
      if (HasDisableNvidiaHardwareEncoding) {
        output.WriteRawTag(80);
        output.WriteBool(DisableNvidiaHardwareEncoding);
      }
      if (HasFormFactor) {
        output.WriteRawTag(88);
        output.WriteInt32(FormFactor);
      }
      if (HasHasOnScreenKeyboard) {
        output.WriteRawTag(96);
        output.WriteBool(HasOnScreenKeyboard);
      }
      supportedColorspaces_.WriteTo(ref output, _repeated_supportedColorspaces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSystemInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemInfo);
      }
      if (HasSystemCanSuspend) {
        size += 1 + 1;
      }
      if (HasMaximumDecodeBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumDecodeBitrateKbps);
      }
      if (HasMaximumBurstBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumBurstBitrateKbps);
      }
      if (HasSupportsVideoHevc) {
        size += 1 + 1;
      }
      if (HasDisableSteamStore) {
        size += 1 + 1;
      }
      if (HasDisableClientCursor) {
        size += 1 + 1;
      }
      if (HasDisableIntelHardwareEncoding) {
        size += 1 + 1;
      }
      if (HasDisableAmdHardwareEncoding) {
        size += 1 + 1;
      }
      if (HasDisableNvidiaHardwareEncoding) {
        size += 1 + 1;
      }
      if (HasFormFactor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormFactor);
      }
      if (HasHasOnScreenKeyboard) {
        size += 1 + 1;
      }
      size += supportedColorspaces_.CalculateSize(_repeated_supportedColorspaces_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingClientCaps other) {
      if (other == null) {
        return;
      }
      if (other.HasSystemInfo) {
        SystemInfo = other.SystemInfo;
      }
      if (other.HasSystemCanSuspend) {
        SystemCanSuspend = other.SystemCanSuspend;
      }
      if (other.HasMaximumDecodeBitrateKbps) {
        MaximumDecodeBitrateKbps = other.MaximumDecodeBitrateKbps;
      }
      if (other.HasMaximumBurstBitrateKbps) {
        MaximumBurstBitrateKbps = other.MaximumBurstBitrateKbps;
      }
      if (other.HasSupportsVideoHevc) {
        SupportsVideoHevc = other.SupportsVideoHevc;
      }
      if (other.HasDisableSteamStore) {
        DisableSteamStore = other.DisableSteamStore;
      }
      if (other.HasDisableClientCursor) {
        DisableClientCursor = other.DisableClientCursor;
      }
      if (other.HasDisableIntelHardwareEncoding) {
        DisableIntelHardwareEncoding = other.DisableIntelHardwareEncoding;
      }
      if (other.HasDisableAmdHardwareEncoding) {
        DisableAmdHardwareEncoding = other.DisableAmdHardwareEncoding;
      }
      if (other.HasDisableNvidiaHardwareEncoding) {
        DisableNvidiaHardwareEncoding = other.DisableNvidiaHardwareEncoding;
      }
      if (other.HasFormFactor) {
        FormFactor = other.FormFactor;
      }
      if (other.HasHasOnScreenKeyboard) {
        HasOnScreenKeyboard = other.HasOnScreenKeyboard;
      }
      supportedColorspaces_.Add(other.supportedColorspaces_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SystemInfo = input.ReadString();
            break;
          }
          case 16: {
            SystemCanSuspend = input.ReadBool();
            break;
          }
          case 24: {
            MaximumDecodeBitrateKbps = input.ReadInt32();
            break;
          }
          case 32: {
            MaximumBurstBitrateKbps = input.ReadInt32();
            break;
          }
          case 40: {
            SupportsVideoHevc = input.ReadBool();
            break;
          }
          case 48: {
            DisableSteamStore = input.ReadBool();
            break;
          }
          case 56: {
            DisableClientCursor = input.ReadBool();
            break;
          }
          case 64: {
            DisableIntelHardwareEncoding = input.ReadBool();
            break;
          }
          case 72: {
            DisableAmdHardwareEncoding = input.ReadBool();
            break;
          }
          case 80: {
            DisableNvidiaHardwareEncoding = input.ReadBool();
            break;
          }
          case 88: {
            FormFactor = input.ReadInt32();
            break;
          }
          case 96: {
            HasOnScreenKeyboard = input.ReadBool();
            break;
          }
          case 106:
          case 104: {
            supportedColorspaces_.AddEntriesFrom(input, _repeated_supportedColorspaces_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SystemInfo = input.ReadString();
            break;
          }
          case 16: {
            SystemCanSuspend = input.ReadBool();
            break;
          }
          case 24: {
            MaximumDecodeBitrateKbps = input.ReadInt32();
            break;
          }
          case 32: {
            MaximumBurstBitrateKbps = input.ReadInt32();
            break;
          }
          case 40: {
            SupportsVideoHevc = input.ReadBool();
            break;
          }
          case 48: {
            DisableSteamStore = input.ReadBool();
            break;
          }
          case 56: {
            DisableClientCursor = input.ReadBool();
            break;
          }
          case 64: {
            DisableIntelHardwareEncoding = input.ReadBool();
            break;
          }
          case 72: {
            DisableAmdHardwareEncoding = input.ReadBool();
            break;
          }
          case 80: {
            DisableNvidiaHardwareEncoding = input.ReadBool();
            break;
          }
          case 88: {
            FormFactor = input.ReadInt32();
            break;
          }
          case 96: {
            HasOnScreenKeyboard = input.ReadBool();
            break;
          }
          case 106:
          case 104: {
            supportedColorspaces_.AddEntriesFrom(ref input, _repeated_supportedColorspaces_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingClientConfig : pb::IMessage<CStreamingClientConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingClientConfig> _parser = new pb::MessageParser<CStreamingClientConfig>(() => new CStreamingClientConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingClientConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientConfig(CStreamingClientConfig other) : this() {
      _hasBits0 = other._hasBits0;
      quality_ = other.quality_;
      desiredResolutionX_ = other.desiredResolutionX_;
      desiredResolutionY_ = other.desiredResolutionY_;
      desiredFramerateNumerator_ = other.desiredFramerateNumerator_;
      desiredFramerateDenominator_ = other.desiredFramerateDenominator_;
      desiredBitrateKbps_ = other.desiredBitrateKbps_;
      enableHardwareDecoding_ = other.enableHardwareDecoding_;
      enablePerformanceOverlay_ = other.enablePerformanceOverlay_;
      enableVideoStreaming_ = other.enableVideoStreaming_;
      enableAudioStreaming_ = other.enableAudioStreaming_;
      enableInputStreaming_ = other.enableInputStreaming_;
      audioChannels_ = other.audioChannels_;
      enableVideoHevc_ = other.enableVideoHevc_;
      enablePerformanceIcons_ = other.enablePerformanceIcons_;
      enableMicrophoneStreaming_ = other.enableMicrophoneStreaming_;
      controllerOverlayHotkey_ = other.controllerOverlayHotkey_;
      enableTouchControllerOBSOLETE_ = other.enableTouchControllerOBSOLETE_;
      p2PScope_ = other.p2PScope_;
      enableAudioUncompressed_ = other.enableAudioUncompressed_;
      displayLimit_ = other.displayLimit_ != null ? other.displayLimit_.Clone() : null;
      qualityLimit_ = other.qualityLimit_ != null ? other.qualityLimit_.Clone() : null;
      runtimeLimit_ = other.runtimeLimit_ != null ? other.runtimeLimit_.Clone() : null;
      decoderLimit_ = other.decoderLimit_.Clone();
      enableUnreliableFec_ = other.enableUnreliableFec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingClientConfig Clone() {
      return new CStreamingClientConfig(this);
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamQualityPreference QualityDefaultValue = global::OpenSteamworks.Protobuf.EStreamQualityPreference.EstreamQualityBalanced;

    private global::OpenSteamworks.Protobuf.EStreamQualityPreference quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamQualityPreference Quality {
      get { if ((_hasBits0 & 1) != 0) { return quality_; } else { return QualityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        quality_ = value;
      }
    }
    /// <summary>Gets whether the "quality" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuality {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quality" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuality() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "desired_resolution_x" field.</summary>
    public const int DesiredResolutionXFieldNumber = 2;
    private readonly static uint DesiredResolutionXDefaultValue = 0;

    private uint desiredResolutionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DesiredResolutionX {
      get { if ((_hasBits0 & 2) != 0) { return desiredResolutionX_; } else { return DesiredResolutionXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        desiredResolutionX_ = value;
      }
    }
    /// <summary>Gets whether the "desired_resolution_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesiredResolutionX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "desired_resolution_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesiredResolutionX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "desired_resolution_y" field.</summary>
    public const int DesiredResolutionYFieldNumber = 3;
    private readonly static uint DesiredResolutionYDefaultValue = 0;

    private uint desiredResolutionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DesiredResolutionY {
      get { if ((_hasBits0 & 4) != 0) { return desiredResolutionY_; } else { return DesiredResolutionYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        desiredResolutionY_ = value;
      }
    }
    /// <summary>Gets whether the "desired_resolution_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesiredResolutionY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "desired_resolution_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesiredResolutionY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "desired_framerate_numerator" field.</summary>
    public const int DesiredFramerateNumeratorFieldNumber = 4;
    private readonly static uint DesiredFramerateNumeratorDefaultValue = 0;

    private uint desiredFramerateNumerator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DesiredFramerateNumerator {
      get { if ((_hasBits0 & 8) != 0) { return desiredFramerateNumerator_; } else { return DesiredFramerateNumeratorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        desiredFramerateNumerator_ = value;
      }
    }
    /// <summary>Gets whether the "desired_framerate_numerator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesiredFramerateNumerator {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "desired_framerate_numerator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesiredFramerateNumerator() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "desired_framerate_denominator" field.</summary>
    public const int DesiredFramerateDenominatorFieldNumber = 5;
    private readonly static uint DesiredFramerateDenominatorDefaultValue = 0;

    private uint desiredFramerateDenominator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DesiredFramerateDenominator {
      get { if ((_hasBits0 & 16) != 0) { return desiredFramerateDenominator_; } else { return DesiredFramerateDenominatorDefaultValue; } }
      set {
        _hasBits0 |= 16;
        desiredFramerateDenominator_ = value;
      }
    }
    /// <summary>Gets whether the "desired_framerate_denominator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesiredFramerateDenominator {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "desired_framerate_denominator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesiredFramerateDenominator() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "desired_bitrate_kbps" field.</summary>
    public const int DesiredBitrateKbpsFieldNumber = 6;
    private readonly static int DesiredBitrateKbpsDefaultValue = -1;

    private int desiredBitrateKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DesiredBitrateKbps {
      get { if ((_hasBits0 & 32) != 0) { return desiredBitrateKbps_; } else { return DesiredBitrateKbpsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        desiredBitrateKbps_ = value;
      }
    }
    /// <summary>Gets whether the "desired_bitrate_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesiredBitrateKbps {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "desired_bitrate_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesiredBitrateKbps() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "enable_hardware_decoding" field.</summary>
    public const int EnableHardwareDecodingFieldNumber = 7;
    private readonly static bool EnableHardwareDecodingDefaultValue = true;

    private bool enableHardwareDecoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHardwareDecoding {
      get { if ((_hasBits0 & 64) != 0) { return enableHardwareDecoding_; } else { return EnableHardwareDecodingDefaultValue; } }
      set {
        _hasBits0 |= 64;
        enableHardwareDecoding_ = value;
      }
    }
    /// <summary>Gets whether the "enable_hardware_decoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableHardwareDecoding {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "enable_hardware_decoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableHardwareDecoding() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "enable_performance_overlay" field.</summary>
    public const int EnablePerformanceOverlayFieldNumber = 8;
    private readonly static bool EnablePerformanceOverlayDefaultValue = false;

    private bool enablePerformanceOverlay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnablePerformanceOverlay {
      get { if ((_hasBits0 & 128) != 0) { return enablePerformanceOverlay_; } else { return EnablePerformanceOverlayDefaultValue; } }
      set {
        _hasBits0 |= 128;
        enablePerformanceOverlay_ = value;
      }
    }
    /// <summary>Gets whether the "enable_performance_overlay" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnablePerformanceOverlay {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "enable_performance_overlay" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnablePerformanceOverlay() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "enable_video_streaming" field.</summary>
    public const int EnableVideoStreamingFieldNumber = 9;
    private readonly static bool EnableVideoStreamingDefaultValue = true;

    private bool enableVideoStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableVideoStreaming {
      get { if ((_hasBits0 & 256) != 0) { return enableVideoStreaming_; } else { return EnableVideoStreamingDefaultValue; } }
      set {
        _hasBits0 |= 256;
        enableVideoStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_video_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableVideoStreaming {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "enable_video_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableVideoStreaming() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "enable_audio_streaming" field.</summary>
    public const int EnableAudioStreamingFieldNumber = 10;
    private readonly static bool EnableAudioStreamingDefaultValue = true;

    private bool enableAudioStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableAudioStreaming {
      get { if ((_hasBits0 & 512) != 0) { return enableAudioStreaming_; } else { return EnableAudioStreamingDefaultValue; } }
      set {
        _hasBits0 |= 512;
        enableAudioStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_audio_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableAudioStreaming {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "enable_audio_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableAudioStreaming() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "enable_input_streaming" field.</summary>
    public const int EnableInputStreamingFieldNumber = 11;
    private readonly static bool EnableInputStreamingDefaultValue = true;

    private bool enableInputStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableInputStreaming {
      get { if ((_hasBits0 & 1024) != 0) { return enableInputStreaming_; } else { return EnableInputStreamingDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        enableInputStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_input_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableInputStreaming {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "enable_input_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableInputStreaming() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "audio_channels" field.</summary>
    public const int AudioChannelsFieldNumber = 12;
    private readonly static int AudioChannelsDefaultValue = 2;

    private int audioChannels_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AudioChannels {
      get { if ((_hasBits0 & 2048) != 0) { return audioChannels_; } else { return AudioChannelsDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        audioChannels_ = value;
      }
    }
    /// <summary>Gets whether the "audio_channels" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioChannels {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "audio_channels" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioChannels() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "enable_video_hevc" field.</summary>
    public const int EnableVideoHevcFieldNumber = 13;
    private readonly static bool EnableVideoHevcDefaultValue = false;

    private bool enableVideoHevc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableVideoHevc {
      get { if ((_hasBits0 & 4096) != 0) { return enableVideoHevc_; } else { return EnableVideoHevcDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        enableVideoHevc_ = value;
      }
    }
    /// <summary>Gets whether the "enable_video_hevc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableVideoHevc {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "enable_video_hevc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableVideoHevc() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "enable_performance_icons" field.</summary>
    public const int EnablePerformanceIconsFieldNumber = 14;
    private readonly static bool EnablePerformanceIconsDefaultValue = true;

    private bool enablePerformanceIcons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnablePerformanceIcons {
      get { if ((_hasBits0 & 8192) != 0) { return enablePerformanceIcons_; } else { return EnablePerformanceIconsDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        enablePerformanceIcons_ = value;
      }
    }
    /// <summary>Gets whether the "enable_performance_icons" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnablePerformanceIcons {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "enable_performance_icons" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnablePerformanceIcons() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "enable_microphone_streaming" field.</summary>
    public const int EnableMicrophoneStreamingFieldNumber = 15;
    private readonly static bool EnableMicrophoneStreamingDefaultValue = false;

    private bool enableMicrophoneStreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableMicrophoneStreaming {
      get { if ((_hasBits0 & 16384) != 0) { return enableMicrophoneStreaming_; } else { return EnableMicrophoneStreamingDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        enableMicrophoneStreaming_ = value;
      }
    }
    /// <summary>Gets whether the "enable_microphone_streaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableMicrophoneStreaming {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "enable_microphone_streaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableMicrophoneStreaming() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "controller_overlay_hotkey" field.</summary>
    public const int ControllerOverlayHotkeyFieldNumber = 16;
    private readonly static string ControllerOverlayHotkeyDefaultValue = "";

    private string controllerOverlayHotkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControllerOverlayHotkey {
      get { return controllerOverlayHotkey_ ?? ControllerOverlayHotkeyDefaultValue; }
      set {
        controllerOverlayHotkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "controller_overlay_hotkey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerOverlayHotkey {
      get { return controllerOverlayHotkey_ != null; }
    }
    /// <summary>Clears the value of the "controller_overlay_hotkey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerOverlayHotkey() {
      controllerOverlayHotkey_ = null;
    }

    /// <summary>Field number for the "enable_touch_controller_OBSOLETE" field.</summary>
    public const int EnableTouchControllerOBSOLETEFieldNumber = 17;
    private readonly static bool EnableTouchControllerOBSOLETEDefaultValue = false;

    private bool enableTouchControllerOBSOLETE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableTouchControllerOBSOLETE {
      get { if ((_hasBits0 & 32768) != 0) { return enableTouchControllerOBSOLETE_; } else { return EnableTouchControllerOBSOLETEDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        enableTouchControllerOBSOLETE_ = value;
      }
    }
    /// <summary>Gets whether the "enable_touch_controller_OBSOLETE" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableTouchControllerOBSOLETE {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "enable_touch_controller_OBSOLETE" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableTouchControllerOBSOLETE() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "p2p_scope" field.</summary>
    public const int P2PScopeFieldNumber = 19;
    private readonly static global::OpenSteamworks.Protobuf.EStreamP2PScope P2PScopeDefaultValue = global::OpenSteamworks.Protobuf.EStreamP2PScope.Automatic;

    private global::OpenSteamworks.Protobuf.EStreamP2PScope p2PScope_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamP2PScope P2PScope {
      get { if ((_hasBits0 & 65536) != 0) { return p2PScope_; } else { return P2PScopeDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        p2PScope_ = value;
      }
    }
    /// <summary>Gets whether the "p2p_scope" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasP2PScope {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "p2p_scope" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearP2PScope() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "enable_audio_uncompressed" field.</summary>
    public const int EnableAudioUncompressedFieldNumber = 20;
    private readonly static bool EnableAudioUncompressedDefaultValue = false;

    private bool enableAudioUncompressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableAudioUncompressed {
      get { if ((_hasBits0 & 131072) != 0) { return enableAudioUncompressed_; } else { return EnableAudioUncompressedDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        enableAudioUncompressed_ = value;
      }
    }
    /// <summary>Gets whether the "enable_audio_uncompressed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableAudioUncompressed {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "enable_audio_uncompressed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableAudioUncompressed() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "display_limit" field.</summary>
    public const int DisplayLimitFieldNumber = 21;
    private global::OpenSteamworks.Protobuf.CStreamVideoLimit displayLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamVideoLimit DisplayLimit {
      get { return displayLimit_; }
      set {
        displayLimit_ = value;
      }
    }

    /// <summary>Field number for the "quality_limit" field.</summary>
    public const int QualityLimitFieldNumber = 22;
    private global::OpenSteamworks.Protobuf.CStreamVideoLimit qualityLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamVideoLimit QualityLimit {
      get { return qualityLimit_; }
      set {
        qualityLimit_ = value;
      }
    }

    /// <summary>Field number for the "runtime_limit" field.</summary>
    public const int RuntimeLimitFieldNumber = 23;
    private global::OpenSteamworks.Protobuf.CStreamVideoLimit runtimeLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamVideoLimit RuntimeLimit {
      get { return runtimeLimit_; }
      set {
        runtimeLimit_ = value;
      }
    }

    /// <summary>Field number for the "decoder_limit" field.</summary>
    public const int DecoderLimitFieldNumber = 24;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CStreamVideoLimit> _repeated_decoderLimit_codec
        = pb::FieldCodec.ForMessage(194, global::OpenSteamworks.Protobuf.CStreamVideoLimit.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamVideoLimit> decoderLimit_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamVideoLimit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamVideoLimit> DecoderLimit {
      get { return decoderLimit_; }
    }

    /// <summary>Field number for the "enable_unreliable_fec" field.</summary>
    public const int EnableUnreliableFecFieldNumber = 25;
    private readonly static bool EnableUnreliableFecDefaultValue = false;

    private bool enableUnreliableFec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableUnreliableFec {
      get { if ((_hasBits0 & 262144) != 0) { return enableUnreliableFec_; } else { return EnableUnreliableFecDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        enableUnreliableFec_ = value;
      }
    }
    /// <summary>Gets whether the "enable_unreliable_fec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableUnreliableFec {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "enable_unreliable_fec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableUnreliableFec() {
      _hasBits0 &= ~262144;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingClientConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingClientConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quality != other.Quality) return false;
      if (DesiredResolutionX != other.DesiredResolutionX) return false;
      if (DesiredResolutionY != other.DesiredResolutionY) return false;
      if (DesiredFramerateNumerator != other.DesiredFramerateNumerator) return false;
      if (DesiredFramerateDenominator != other.DesiredFramerateDenominator) return false;
      if (DesiredBitrateKbps != other.DesiredBitrateKbps) return false;
      if (EnableHardwareDecoding != other.EnableHardwareDecoding) return false;
      if (EnablePerformanceOverlay != other.EnablePerformanceOverlay) return false;
      if (EnableVideoStreaming != other.EnableVideoStreaming) return false;
      if (EnableAudioStreaming != other.EnableAudioStreaming) return false;
      if (EnableInputStreaming != other.EnableInputStreaming) return false;
      if (AudioChannels != other.AudioChannels) return false;
      if (EnableVideoHevc != other.EnableVideoHevc) return false;
      if (EnablePerformanceIcons != other.EnablePerformanceIcons) return false;
      if (EnableMicrophoneStreaming != other.EnableMicrophoneStreaming) return false;
      if (ControllerOverlayHotkey != other.ControllerOverlayHotkey) return false;
      if (EnableTouchControllerOBSOLETE != other.EnableTouchControllerOBSOLETE) return false;
      if (P2PScope != other.P2PScope) return false;
      if (EnableAudioUncompressed != other.EnableAudioUncompressed) return false;
      if (!object.Equals(DisplayLimit, other.DisplayLimit)) return false;
      if (!object.Equals(QualityLimit, other.QualityLimit)) return false;
      if (!object.Equals(RuntimeLimit, other.RuntimeLimit)) return false;
      if(!decoderLimit_.Equals(other.decoderLimit_)) return false;
      if (EnableUnreliableFec != other.EnableUnreliableFec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasQuality) hash ^= Quality.GetHashCode();
      if (HasDesiredResolutionX) hash ^= DesiredResolutionX.GetHashCode();
      if (HasDesiredResolutionY) hash ^= DesiredResolutionY.GetHashCode();
      if (HasDesiredFramerateNumerator) hash ^= DesiredFramerateNumerator.GetHashCode();
      if (HasDesiredFramerateDenominator) hash ^= DesiredFramerateDenominator.GetHashCode();
      if (HasDesiredBitrateKbps) hash ^= DesiredBitrateKbps.GetHashCode();
      if (HasEnableHardwareDecoding) hash ^= EnableHardwareDecoding.GetHashCode();
      if (HasEnablePerformanceOverlay) hash ^= EnablePerformanceOverlay.GetHashCode();
      if (HasEnableVideoStreaming) hash ^= EnableVideoStreaming.GetHashCode();
      if (HasEnableAudioStreaming) hash ^= EnableAudioStreaming.GetHashCode();
      if (HasEnableInputStreaming) hash ^= EnableInputStreaming.GetHashCode();
      if (HasAudioChannels) hash ^= AudioChannels.GetHashCode();
      if (HasEnableVideoHevc) hash ^= EnableVideoHevc.GetHashCode();
      if (HasEnablePerformanceIcons) hash ^= EnablePerformanceIcons.GetHashCode();
      if (HasEnableMicrophoneStreaming) hash ^= EnableMicrophoneStreaming.GetHashCode();
      if (HasControllerOverlayHotkey) hash ^= ControllerOverlayHotkey.GetHashCode();
      if (HasEnableTouchControllerOBSOLETE) hash ^= EnableTouchControllerOBSOLETE.GetHashCode();
      if (HasP2PScope) hash ^= P2PScope.GetHashCode();
      if (HasEnableAudioUncompressed) hash ^= EnableAudioUncompressed.GetHashCode();
      if (displayLimit_ != null) hash ^= DisplayLimit.GetHashCode();
      if (qualityLimit_ != null) hash ^= QualityLimit.GetHashCode();
      if (runtimeLimit_ != null) hash ^= RuntimeLimit.GetHashCode();
      hash ^= decoderLimit_.GetHashCode();
      if (HasEnableUnreliableFec) hash ^= EnableUnreliableFec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasQuality) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Quality);
      }
      if (HasDesiredResolutionX) {
        output.WriteRawTag(16);
        output.WriteUInt32(DesiredResolutionX);
      }
      if (HasDesiredResolutionY) {
        output.WriteRawTag(24);
        output.WriteUInt32(DesiredResolutionY);
      }
      if (HasDesiredFramerateNumerator) {
        output.WriteRawTag(32);
        output.WriteUInt32(DesiredFramerateNumerator);
      }
      if (HasDesiredFramerateDenominator) {
        output.WriteRawTag(40);
        output.WriteUInt32(DesiredFramerateDenominator);
      }
      if (HasDesiredBitrateKbps) {
        output.WriteRawTag(48);
        output.WriteInt32(DesiredBitrateKbps);
      }
      if (HasEnableHardwareDecoding) {
        output.WriteRawTag(56);
        output.WriteBool(EnableHardwareDecoding);
      }
      if (HasEnablePerformanceOverlay) {
        output.WriteRawTag(64);
        output.WriteBool(EnablePerformanceOverlay);
      }
      if (HasEnableVideoStreaming) {
        output.WriteRawTag(72);
        output.WriteBool(EnableVideoStreaming);
      }
      if (HasEnableAudioStreaming) {
        output.WriteRawTag(80);
        output.WriteBool(EnableAudioStreaming);
      }
      if (HasEnableInputStreaming) {
        output.WriteRawTag(88);
        output.WriteBool(EnableInputStreaming);
      }
      if (HasAudioChannels) {
        output.WriteRawTag(96);
        output.WriteInt32(AudioChannels);
      }
      if (HasEnableVideoHevc) {
        output.WriteRawTag(104);
        output.WriteBool(EnableVideoHevc);
      }
      if (HasEnablePerformanceIcons) {
        output.WriteRawTag(112);
        output.WriteBool(EnablePerformanceIcons);
      }
      if (HasEnableMicrophoneStreaming) {
        output.WriteRawTag(120);
        output.WriteBool(EnableMicrophoneStreaming);
      }
      if (HasControllerOverlayHotkey) {
        output.WriteRawTag(130, 1);
        output.WriteString(ControllerOverlayHotkey);
      }
      if (HasEnableTouchControllerOBSOLETE) {
        output.WriteRawTag(136, 1);
        output.WriteBool(EnableTouchControllerOBSOLETE);
      }
      if (HasP2PScope) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) P2PScope);
      }
      if (HasEnableAudioUncompressed) {
        output.WriteRawTag(160, 1);
        output.WriteBool(EnableAudioUncompressed);
      }
      if (displayLimit_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(DisplayLimit);
      }
      if (qualityLimit_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(QualityLimit);
      }
      if (runtimeLimit_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(RuntimeLimit);
      }
      decoderLimit_.WriteTo(output, _repeated_decoderLimit_codec);
      if (HasEnableUnreliableFec) {
        output.WriteRawTag(200, 1);
        output.WriteBool(EnableUnreliableFec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasQuality) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Quality);
      }
      if (HasDesiredResolutionX) {
        output.WriteRawTag(16);
        output.WriteUInt32(DesiredResolutionX);
      }
      if (HasDesiredResolutionY) {
        output.WriteRawTag(24);
        output.WriteUInt32(DesiredResolutionY);
      }
      if (HasDesiredFramerateNumerator) {
        output.WriteRawTag(32);
        output.WriteUInt32(DesiredFramerateNumerator);
      }
      if (HasDesiredFramerateDenominator) {
        output.WriteRawTag(40);
        output.WriteUInt32(DesiredFramerateDenominator);
      }
      if (HasDesiredBitrateKbps) {
        output.WriteRawTag(48);
        output.WriteInt32(DesiredBitrateKbps);
      }
      if (HasEnableHardwareDecoding) {
        output.WriteRawTag(56);
        output.WriteBool(EnableHardwareDecoding);
      }
      if (HasEnablePerformanceOverlay) {
        output.WriteRawTag(64);
        output.WriteBool(EnablePerformanceOverlay);
      }
      if (HasEnableVideoStreaming) {
        output.WriteRawTag(72);
        output.WriteBool(EnableVideoStreaming);
      }
      if (HasEnableAudioStreaming) {
        output.WriteRawTag(80);
        output.WriteBool(EnableAudioStreaming);
      }
      if (HasEnableInputStreaming) {
        output.WriteRawTag(88);
        output.WriteBool(EnableInputStreaming);
      }
      if (HasAudioChannels) {
        output.WriteRawTag(96);
        output.WriteInt32(AudioChannels);
      }
      if (HasEnableVideoHevc) {
        output.WriteRawTag(104);
        output.WriteBool(EnableVideoHevc);
      }
      if (HasEnablePerformanceIcons) {
        output.WriteRawTag(112);
        output.WriteBool(EnablePerformanceIcons);
      }
      if (HasEnableMicrophoneStreaming) {
        output.WriteRawTag(120);
        output.WriteBool(EnableMicrophoneStreaming);
      }
      if (HasControllerOverlayHotkey) {
        output.WriteRawTag(130, 1);
        output.WriteString(ControllerOverlayHotkey);
      }
      if (HasEnableTouchControllerOBSOLETE) {
        output.WriteRawTag(136, 1);
        output.WriteBool(EnableTouchControllerOBSOLETE);
      }
      if (HasP2PScope) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) P2PScope);
      }
      if (HasEnableAudioUncompressed) {
        output.WriteRawTag(160, 1);
        output.WriteBool(EnableAudioUncompressed);
      }
      if (displayLimit_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(DisplayLimit);
      }
      if (qualityLimit_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(QualityLimit);
      }
      if (runtimeLimit_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(RuntimeLimit);
      }
      decoderLimit_.WriteTo(ref output, _repeated_decoderLimit_codec);
      if (HasEnableUnreliableFec) {
        output.WriteRawTag(200, 1);
        output.WriteBool(EnableUnreliableFec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasQuality) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Quality);
      }
      if (HasDesiredResolutionX) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DesiredResolutionX);
      }
      if (HasDesiredResolutionY) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DesiredResolutionY);
      }
      if (HasDesiredFramerateNumerator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DesiredFramerateNumerator);
      }
      if (HasDesiredFramerateDenominator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DesiredFramerateDenominator);
      }
      if (HasDesiredBitrateKbps) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DesiredBitrateKbps);
      }
      if (HasEnableHardwareDecoding) {
        size += 1 + 1;
      }
      if (HasEnablePerformanceOverlay) {
        size += 1 + 1;
      }
      if (HasEnableVideoStreaming) {
        size += 1 + 1;
      }
      if (HasEnableAudioStreaming) {
        size += 1 + 1;
      }
      if (HasEnableInputStreaming) {
        size += 1 + 1;
      }
      if (HasAudioChannels) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudioChannels);
      }
      if (HasEnableVideoHevc) {
        size += 1 + 1;
      }
      if (HasEnablePerformanceIcons) {
        size += 1 + 1;
      }
      if (HasEnableMicrophoneStreaming) {
        size += 1 + 1;
      }
      if (HasControllerOverlayHotkey) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ControllerOverlayHotkey);
      }
      if (HasEnableTouchControllerOBSOLETE) {
        size += 2 + 1;
      }
      if (HasP2PScope) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) P2PScope);
      }
      if (HasEnableAudioUncompressed) {
        size += 2 + 1;
      }
      if (displayLimit_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DisplayLimit);
      }
      if (qualityLimit_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QualityLimit);
      }
      if (runtimeLimit_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RuntimeLimit);
      }
      size += decoderLimit_.CalculateSize(_repeated_decoderLimit_codec);
      if (HasEnableUnreliableFec) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingClientConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasQuality) {
        Quality = other.Quality;
      }
      if (other.HasDesiredResolutionX) {
        DesiredResolutionX = other.DesiredResolutionX;
      }
      if (other.HasDesiredResolutionY) {
        DesiredResolutionY = other.DesiredResolutionY;
      }
      if (other.HasDesiredFramerateNumerator) {
        DesiredFramerateNumerator = other.DesiredFramerateNumerator;
      }
      if (other.HasDesiredFramerateDenominator) {
        DesiredFramerateDenominator = other.DesiredFramerateDenominator;
      }
      if (other.HasDesiredBitrateKbps) {
        DesiredBitrateKbps = other.DesiredBitrateKbps;
      }
      if (other.HasEnableHardwareDecoding) {
        EnableHardwareDecoding = other.EnableHardwareDecoding;
      }
      if (other.HasEnablePerformanceOverlay) {
        EnablePerformanceOverlay = other.EnablePerformanceOverlay;
      }
      if (other.HasEnableVideoStreaming) {
        EnableVideoStreaming = other.EnableVideoStreaming;
      }
      if (other.HasEnableAudioStreaming) {
        EnableAudioStreaming = other.EnableAudioStreaming;
      }
      if (other.HasEnableInputStreaming) {
        EnableInputStreaming = other.EnableInputStreaming;
      }
      if (other.HasAudioChannels) {
        AudioChannels = other.AudioChannels;
      }
      if (other.HasEnableVideoHevc) {
        EnableVideoHevc = other.EnableVideoHevc;
      }
      if (other.HasEnablePerformanceIcons) {
        EnablePerformanceIcons = other.EnablePerformanceIcons;
      }
      if (other.HasEnableMicrophoneStreaming) {
        EnableMicrophoneStreaming = other.EnableMicrophoneStreaming;
      }
      if (other.HasControllerOverlayHotkey) {
        ControllerOverlayHotkey = other.ControllerOverlayHotkey;
      }
      if (other.HasEnableTouchControllerOBSOLETE) {
        EnableTouchControllerOBSOLETE = other.EnableTouchControllerOBSOLETE;
      }
      if (other.HasP2PScope) {
        P2PScope = other.P2PScope;
      }
      if (other.HasEnableAudioUncompressed) {
        EnableAudioUncompressed = other.EnableAudioUncompressed;
      }
      if (other.displayLimit_ != null) {
        if (displayLimit_ == null) {
          DisplayLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
        }
        DisplayLimit.MergeFrom(other.DisplayLimit);
      }
      if (other.qualityLimit_ != null) {
        if (qualityLimit_ == null) {
          QualityLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
        }
        QualityLimit.MergeFrom(other.QualityLimit);
      }
      if (other.runtimeLimit_ != null) {
        if (runtimeLimit_ == null) {
          RuntimeLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
        }
        RuntimeLimit.MergeFrom(other.RuntimeLimit);
      }
      decoderLimit_.Add(other.decoderLimit_);
      if (other.HasEnableUnreliableFec) {
        EnableUnreliableFec = other.EnableUnreliableFec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Quality = (global::OpenSteamworks.Protobuf.EStreamQualityPreference) input.ReadEnum();
            break;
          }
          case 16: {
            DesiredResolutionX = input.ReadUInt32();
            break;
          }
          case 24: {
            DesiredResolutionY = input.ReadUInt32();
            break;
          }
          case 32: {
            DesiredFramerateNumerator = input.ReadUInt32();
            break;
          }
          case 40: {
            DesiredFramerateDenominator = input.ReadUInt32();
            break;
          }
          case 48: {
            DesiredBitrateKbps = input.ReadInt32();
            break;
          }
          case 56: {
            EnableHardwareDecoding = input.ReadBool();
            break;
          }
          case 64: {
            EnablePerformanceOverlay = input.ReadBool();
            break;
          }
          case 72: {
            EnableVideoStreaming = input.ReadBool();
            break;
          }
          case 80: {
            EnableAudioStreaming = input.ReadBool();
            break;
          }
          case 88: {
            EnableInputStreaming = input.ReadBool();
            break;
          }
          case 96: {
            AudioChannels = input.ReadInt32();
            break;
          }
          case 104: {
            EnableVideoHevc = input.ReadBool();
            break;
          }
          case 112: {
            EnablePerformanceIcons = input.ReadBool();
            break;
          }
          case 120: {
            EnableMicrophoneStreaming = input.ReadBool();
            break;
          }
          case 130: {
            ControllerOverlayHotkey = input.ReadString();
            break;
          }
          case 136: {
            EnableTouchControllerOBSOLETE = input.ReadBool();
            break;
          }
          case 152: {
            P2PScope = (global::OpenSteamworks.Protobuf.EStreamP2PScope) input.ReadEnum();
            break;
          }
          case 160: {
            EnableAudioUncompressed = input.ReadBool();
            break;
          }
          case 170: {
            if (displayLimit_ == null) {
              DisplayLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
            }
            input.ReadMessage(DisplayLimit);
            break;
          }
          case 178: {
            if (qualityLimit_ == null) {
              QualityLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
            }
            input.ReadMessage(QualityLimit);
            break;
          }
          case 186: {
            if (runtimeLimit_ == null) {
              RuntimeLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
            }
            input.ReadMessage(RuntimeLimit);
            break;
          }
          case 194: {
            decoderLimit_.AddEntriesFrom(input, _repeated_decoderLimit_codec);
            break;
          }
          case 200: {
            EnableUnreliableFec = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Quality = (global::OpenSteamworks.Protobuf.EStreamQualityPreference) input.ReadEnum();
            break;
          }
          case 16: {
            DesiredResolutionX = input.ReadUInt32();
            break;
          }
          case 24: {
            DesiredResolutionY = input.ReadUInt32();
            break;
          }
          case 32: {
            DesiredFramerateNumerator = input.ReadUInt32();
            break;
          }
          case 40: {
            DesiredFramerateDenominator = input.ReadUInt32();
            break;
          }
          case 48: {
            DesiredBitrateKbps = input.ReadInt32();
            break;
          }
          case 56: {
            EnableHardwareDecoding = input.ReadBool();
            break;
          }
          case 64: {
            EnablePerformanceOverlay = input.ReadBool();
            break;
          }
          case 72: {
            EnableVideoStreaming = input.ReadBool();
            break;
          }
          case 80: {
            EnableAudioStreaming = input.ReadBool();
            break;
          }
          case 88: {
            EnableInputStreaming = input.ReadBool();
            break;
          }
          case 96: {
            AudioChannels = input.ReadInt32();
            break;
          }
          case 104: {
            EnableVideoHevc = input.ReadBool();
            break;
          }
          case 112: {
            EnablePerformanceIcons = input.ReadBool();
            break;
          }
          case 120: {
            EnableMicrophoneStreaming = input.ReadBool();
            break;
          }
          case 130: {
            ControllerOverlayHotkey = input.ReadString();
            break;
          }
          case 136: {
            EnableTouchControllerOBSOLETE = input.ReadBool();
            break;
          }
          case 152: {
            P2PScope = (global::OpenSteamworks.Protobuf.EStreamP2PScope) input.ReadEnum();
            break;
          }
          case 160: {
            EnableAudioUncompressed = input.ReadBool();
            break;
          }
          case 170: {
            if (displayLimit_ == null) {
              DisplayLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
            }
            input.ReadMessage(DisplayLimit);
            break;
          }
          case 178: {
            if (qualityLimit_ == null) {
              QualityLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
            }
            input.ReadMessage(QualityLimit);
            break;
          }
          case 186: {
            if (runtimeLimit_ == null) {
              RuntimeLimit = new global::OpenSteamworks.Protobuf.CStreamVideoLimit();
            }
            input.ReadMessage(RuntimeLimit);
            break;
          }
          case 194: {
            decoderLimit_.AddEntriesFrom(ref input, _repeated_decoderLimit_codec);
            break;
          }
          case 200: {
            EnableUnreliableFec = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingServerConfig : pb::IMessage<CStreamingServerConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingServerConfig> _parser = new pb::MessageParser<CStreamingServerConfig>(() => new CStreamingServerConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingServerConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingServerConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingServerConfig(CStreamingServerConfig other) : this() {
      _hasBits0 = other._hasBits0;
      changeDesktopResolution_ = other.changeDesktopResolution_;
      dynamicallyAdjustResolution_ = other.dynamicallyAdjustResolution_;
      enableCaptureNvfbc_ = other.enableCaptureNvfbc_;
      enableHardwareEncodingNvidia_ = other.enableHardwareEncodingNvidia_;
      enableHardwareEncodingAmd_ = other.enableHardwareEncodingAmd_;
      enableHardwareEncodingIntel_ = other.enableHardwareEncodingIntel_;
      softwareEncodingThreads_ = other.softwareEncodingThreads_;
      enableTrafficPriority_ = other.enableTrafficPriority_;
      hostPlayAudio_ = other.hostPlayAudio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingServerConfig Clone() {
      return new CStreamingServerConfig(this);
    }

    /// <summary>Field number for the "change_desktop_resolution" field.</summary>
    public const int ChangeDesktopResolutionFieldNumber = 1;
    private readonly static bool ChangeDesktopResolutionDefaultValue = false;

    private bool changeDesktopResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChangeDesktopResolution {
      get { if ((_hasBits0 & 1) != 0) { return changeDesktopResolution_; } else { return ChangeDesktopResolutionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        changeDesktopResolution_ = value;
      }
    }
    /// <summary>Gets whether the "change_desktop_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChangeDesktopResolution {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "change_desktop_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChangeDesktopResolution() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "dynamically_adjust_resolution" field.</summary>
    public const int DynamicallyAdjustResolutionFieldNumber = 2;
    private readonly static bool DynamicallyAdjustResolutionDefaultValue = false;

    private bool dynamicallyAdjustResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DynamicallyAdjustResolution {
      get { if ((_hasBits0 & 2) != 0) { return dynamicallyAdjustResolution_; } else { return DynamicallyAdjustResolutionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dynamicallyAdjustResolution_ = value;
      }
    }
    /// <summary>Gets whether the "dynamically_adjust_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDynamicallyAdjustResolution {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "dynamically_adjust_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDynamicallyAdjustResolution() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "enable_capture_nvfbc" field.</summary>
    public const int EnableCaptureNvfbcFieldNumber = 3;
    private readonly static bool EnableCaptureNvfbcDefaultValue = false;

    private bool enableCaptureNvfbc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableCaptureNvfbc {
      get { if ((_hasBits0 & 4) != 0) { return enableCaptureNvfbc_; } else { return EnableCaptureNvfbcDefaultValue; } }
      set {
        _hasBits0 |= 4;
        enableCaptureNvfbc_ = value;
      }
    }
    /// <summary>Gets whether the "enable_capture_nvfbc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableCaptureNvfbc {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "enable_capture_nvfbc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableCaptureNvfbc() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "enable_hardware_encoding_nvidia" field.</summary>
    public const int EnableHardwareEncodingNvidiaFieldNumber = 4;
    private readonly static bool EnableHardwareEncodingNvidiaDefaultValue = false;

    private bool enableHardwareEncodingNvidia_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHardwareEncodingNvidia {
      get { if ((_hasBits0 & 8) != 0) { return enableHardwareEncodingNvidia_; } else { return EnableHardwareEncodingNvidiaDefaultValue; } }
      set {
        _hasBits0 |= 8;
        enableHardwareEncodingNvidia_ = value;
      }
    }
    /// <summary>Gets whether the "enable_hardware_encoding_nvidia" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableHardwareEncodingNvidia {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "enable_hardware_encoding_nvidia" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableHardwareEncodingNvidia() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "enable_hardware_encoding_amd" field.</summary>
    public const int EnableHardwareEncodingAmdFieldNumber = 5;
    private readonly static bool EnableHardwareEncodingAmdDefaultValue = false;

    private bool enableHardwareEncodingAmd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHardwareEncodingAmd {
      get { if ((_hasBits0 & 16) != 0) { return enableHardwareEncodingAmd_; } else { return EnableHardwareEncodingAmdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        enableHardwareEncodingAmd_ = value;
      }
    }
    /// <summary>Gets whether the "enable_hardware_encoding_amd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableHardwareEncodingAmd {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "enable_hardware_encoding_amd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableHardwareEncodingAmd() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "enable_hardware_encoding_intel" field.</summary>
    public const int EnableHardwareEncodingIntelFieldNumber = 6;
    private readonly static bool EnableHardwareEncodingIntelDefaultValue = false;

    private bool enableHardwareEncodingIntel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHardwareEncodingIntel {
      get { if ((_hasBits0 & 32) != 0) { return enableHardwareEncodingIntel_; } else { return EnableHardwareEncodingIntelDefaultValue; } }
      set {
        _hasBits0 |= 32;
        enableHardwareEncodingIntel_ = value;
      }
    }
    /// <summary>Gets whether the "enable_hardware_encoding_intel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableHardwareEncodingIntel {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "enable_hardware_encoding_intel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableHardwareEncodingIntel() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "software_encoding_threads" field.</summary>
    public const int SoftwareEncodingThreadsFieldNumber = 7;
    private readonly static int SoftwareEncodingThreadsDefaultValue = 0;

    private int softwareEncodingThreads_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SoftwareEncodingThreads {
      get { if ((_hasBits0 & 64) != 0) { return softwareEncodingThreads_; } else { return SoftwareEncodingThreadsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        softwareEncodingThreads_ = value;
      }
    }
    /// <summary>Gets whether the "software_encoding_threads" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoftwareEncodingThreads {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "software_encoding_threads" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoftwareEncodingThreads() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "enable_traffic_priority" field.</summary>
    public const int EnableTrafficPriorityFieldNumber = 8;
    private readonly static bool EnableTrafficPriorityDefaultValue = false;

    private bool enableTrafficPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableTrafficPriority {
      get { if ((_hasBits0 & 128) != 0) { return enableTrafficPriority_; } else { return EnableTrafficPriorityDefaultValue; } }
      set {
        _hasBits0 |= 128;
        enableTrafficPriority_ = value;
      }
    }
    /// <summary>Gets whether the "enable_traffic_priority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableTrafficPriority {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "enable_traffic_priority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableTrafficPriority() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "host_play_audio" field.</summary>
    public const int HostPlayAudioFieldNumber = 9;
    private readonly static global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference HostPlayAudioDefaultValue = global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference.EstreamHostPlayAudioDefault;

    private global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference hostPlayAudio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference HostPlayAudio {
      get { if ((_hasBits0 & 256) != 0) { return hostPlayAudio_; } else { return HostPlayAudioDefaultValue; } }
      set {
        _hasBits0 |= 256;
        hostPlayAudio_ = value;
      }
    }
    /// <summary>Gets whether the "host_play_audio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostPlayAudio {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "host_play_audio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostPlayAudio() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingServerConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingServerConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChangeDesktopResolution != other.ChangeDesktopResolution) return false;
      if (DynamicallyAdjustResolution != other.DynamicallyAdjustResolution) return false;
      if (EnableCaptureNvfbc != other.EnableCaptureNvfbc) return false;
      if (EnableHardwareEncodingNvidia != other.EnableHardwareEncodingNvidia) return false;
      if (EnableHardwareEncodingAmd != other.EnableHardwareEncodingAmd) return false;
      if (EnableHardwareEncodingIntel != other.EnableHardwareEncodingIntel) return false;
      if (SoftwareEncodingThreads != other.SoftwareEncodingThreads) return false;
      if (EnableTrafficPriority != other.EnableTrafficPriority) return false;
      if (HostPlayAudio != other.HostPlayAudio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChangeDesktopResolution) hash ^= ChangeDesktopResolution.GetHashCode();
      if (HasDynamicallyAdjustResolution) hash ^= DynamicallyAdjustResolution.GetHashCode();
      if (HasEnableCaptureNvfbc) hash ^= EnableCaptureNvfbc.GetHashCode();
      if (HasEnableHardwareEncodingNvidia) hash ^= EnableHardwareEncodingNvidia.GetHashCode();
      if (HasEnableHardwareEncodingAmd) hash ^= EnableHardwareEncodingAmd.GetHashCode();
      if (HasEnableHardwareEncodingIntel) hash ^= EnableHardwareEncodingIntel.GetHashCode();
      if (HasSoftwareEncodingThreads) hash ^= SoftwareEncodingThreads.GetHashCode();
      if (HasEnableTrafficPriority) hash ^= EnableTrafficPriority.GetHashCode();
      if (HasHostPlayAudio) hash ^= HostPlayAudio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChangeDesktopResolution) {
        output.WriteRawTag(8);
        output.WriteBool(ChangeDesktopResolution);
      }
      if (HasDynamicallyAdjustResolution) {
        output.WriteRawTag(16);
        output.WriteBool(DynamicallyAdjustResolution);
      }
      if (HasEnableCaptureNvfbc) {
        output.WriteRawTag(24);
        output.WriteBool(EnableCaptureNvfbc);
      }
      if (HasEnableHardwareEncodingNvidia) {
        output.WriteRawTag(32);
        output.WriteBool(EnableHardwareEncodingNvidia);
      }
      if (HasEnableHardwareEncodingAmd) {
        output.WriteRawTag(40);
        output.WriteBool(EnableHardwareEncodingAmd);
      }
      if (HasEnableHardwareEncodingIntel) {
        output.WriteRawTag(48);
        output.WriteBool(EnableHardwareEncodingIntel);
      }
      if (HasSoftwareEncodingThreads) {
        output.WriteRawTag(56);
        output.WriteInt32(SoftwareEncodingThreads);
      }
      if (HasEnableTrafficPriority) {
        output.WriteRawTag(64);
        output.WriteBool(EnableTrafficPriority);
      }
      if (HasHostPlayAudio) {
        output.WriteRawTag(72);
        output.WriteEnum((int) HostPlayAudio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChangeDesktopResolution) {
        output.WriteRawTag(8);
        output.WriteBool(ChangeDesktopResolution);
      }
      if (HasDynamicallyAdjustResolution) {
        output.WriteRawTag(16);
        output.WriteBool(DynamicallyAdjustResolution);
      }
      if (HasEnableCaptureNvfbc) {
        output.WriteRawTag(24);
        output.WriteBool(EnableCaptureNvfbc);
      }
      if (HasEnableHardwareEncodingNvidia) {
        output.WriteRawTag(32);
        output.WriteBool(EnableHardwareEncodingNvidia);
      }
      if (HasEnableHardwareEncodingAmd) {
        output.WriteRawTag(40);
        output.WriteBool(EnableHardwareEncodingAmd);
      }
      if (HasEnableHardwareEncodingIntel) {
        output.WriteRawTag(48);
        output.WriteBool(EnableHardwareEncodingIntel);
      }
      if (HasSoftwareEncodingThreads) {
        output.WriteRawTag(56);
        output.WriteInt32(SoftwareEncodingThreads);
      }
      if (HasEnableTrafficPriority) {
        output.WriteRawTag(64);
        output.WriteBool(EnableTrafficPriority);
      }
      if (HasHostPlayAudio) {
        output.WriteRawTag(72);
        output.WriteEnum((int) HostPlayAudio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChangeDesktopResolution) {
        size += 1 + 1;
      }
      if (HasDynamicallyAdjustResolution) {
        size += 1 + 1;
      }
      if (HasEnableCaptureNvfbc) {
        size += 1 + 1;
      }
      if (HasEnableHardwareEncodingNvidia) {
        size += 1 + 1;
      }
      if (HasEnableHardwareEncodingAmd) {
        size += 1 + 1;
      }
      if (HasEnableHardwareEncodingIntel) {
        size += 1 + 1;
      }
      if (HasSoftwareEncodingThreads) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoftwareEncodingThreads);
      }
      if (HasEnableTrafficPriority) {
        size += 1 + 1;
      }
      if (HasHostPlayAudio) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HostPlayAudio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingServerConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasChangeDesktopResolution) {
        ChangeDesktopResolution = other.ChangeDesktopResolution;
      }
      if (other.HasDynamicallyAdjustResolution) {
        DynamicallyAdjustResolution = other.DynamicallyAdjustResolution;
      }
      if (other.HasEnableCaptureNvfbc) {
        EnableCaptureNvfbc = other.EnableCaptureNvfbc;
      }
      if (other.HasEnableHardwareEncodingNvidia) {
        EnableHardwareEncodingNvidia = other.EnableHardwareEncodingNvidia;
      }
      if (other.HasEnableHardwareEncodingAmd) {
        EnableHardwareEncodingAmd = other.EnableHardwareEncodingAmd;
      }
      if (other.HasEnableHardwareEncodingIntel) {
        EnableHardwareEncodingIntel = other.EnableHardwareEncodingIntel;
      }
      if (other.HasSoftwareEncodingThreads) {
        SoftwareEncodingThreads = other.SoftwareEncodingThreads;
      }
      if (other.HasEnableTrafficPriority) {
        EnableTrafficPriority = other.EnableTrafficPriority;
      }
      if (other.HasHostPlayAudio) {
        HostPlayAudio = other.HostPlayAudio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChangeDesktopResolution = input.ReadBool();
            break;
          }
          case 16: {
            DynamicallyAdjustResolution = input.ReadBool();
            break;
          }
          case 24: {
            EnableCaptureNvfbc = input.ReadBool();
            break;
          }
          case 32: {
            EnableHardwareEncodingNvidia = input.ReadBool();
            break;
          }
          case 40: {
            EnableHardwareEncodingAmd = input.ReadBool();
            break;
          }
          case 48: {
            EnableHardwareEncodingIntel = input.ReadBool();
            break;
          }
          case 56: {
            SoftwareEncodingThreads = input.ReadInt32();
            break;
          }
          case 64: {
            EnableTrafficPriority = input.ReadBool();
            break;
          }
          case 72: {
            HostPlayAudio = (global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChangeDesktopResolution = input.ReadBool();
            break;
          }
          case 16: {
            DynamicallyAdjustResolution = input.ReadBool();
            break;
          }
          case 24: {
            EnableCaptureNvfbc = input.ReadBool();
            break;
          }
          case 32: {
            EnableHardwareEncodingNvidia = input.ReadBool();
            break;
          }
          case 40: {
            EnableHardwareEncodingAmd = input.ReadBool();
            break;
          }
          case 48: {
            EnableHardwareEncodingIntel = input.ReadBool();
            break;
          }
          case 56: {
            SoftwareEncodingThreads = input.ReadInt32();
            break;
          }
          case 64: {
            EnableTrafficPriority = input.ReadBool();
            break;
          }
          case 72: {
            HostPlayAudio = (global::OpenSteamworks.Protobuf.EStreamHostPlayAudioPreference) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CNegotiatedConfig : pb::IMessage<CNegotiatedConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CNegotiatedConfig> _parser = new pb::MessageParser<CNegotiatedConfig>(() => new CNegotiatedConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CNegotiatedConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiatedConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiatedConfig(CNegotiatedConfig other) : this() {
      _hasBits0 = other._hasBits0;
      reliableData_ = other.reliableData_;
      selectedAudioCodec_ = other.selectedAudioCodec_;
      selectedVideoCodec_ = other.selectedVideoCodec_;
      availableVideoModesOBSOLETE_ = other.availableVideoModesOBSOLETE_.Clone();
      enableRemoteHid_ = other.enableRemoteHid_;
      enableTouchInput_ = other.enableTouchInput_;
      disableClientCursor_ = other.disableClientCursor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiatedConfig Clone() {
      return new CNegotiatedConfig(this);
    }

    /// <summary>Field number for the "reliable_data" field.</summary>
    public const int ReliableDataFieldNumber = 1;
    private readonly static bool ReliableDataDefaultValue = false;

    private bool reliableData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReliableData {
      get { if ((_hasBits0 & 1) != 0) { return reliableData_; } else { return ReliableDataDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reliableData_ = value;
      }
    }
    /// <summary>Gets whether the "reliable_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReliableData {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reliable_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReliableData() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "selected_audio_codec" field.</summary>
    public const int SelectedAudioCodecFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamAudioCodec SelectedAudioCodecDefaultValue = global::OpenSteamworks.Protobuf.EStreamAudioCodec.None;

    private global::OpenSteamworks.Protobuf.EStreamAudioCodec selectedAudioCodec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamAudioCodec SelectedAudioCodec {
      get { if ((_hasBits0 & 2) != 0) { return selectedAudioCodec_; } else { return SelectedAudioCodecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        selectedAudioCodec_ = value;
      }
    }
    /// <summary>Gets whether the "selected_audio_codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectedAudioCodec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "selected_audio_codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectedAudioCodec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "selected_video_codec" field.</summary>
    public const int SelectedVideoCodecFieldNumber = 3;
    private readonly static global::OpenSteamworks.Protobuf.EStreamVideoCodec SelectedVideoCodecDefaultValue = global::OpenSteamworks.Protobuf.EStreamVideoCodec.None;

    private global::OpenSteamworks.Protobuf.EStreamVideoCodec selectedVideoCodec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamVideoCodec SelectedVideoCodec {
      get { if ((_hasBits0 & 4) != 0) { return selectedVideoCodec_; } else { return SelectedVideoCodecDefaultValue; } }
      set {
        _hasBits0 |= 4;
        selectedVideoCodec_ = value;
      }
    }
    /// <summary>Gets whether the "selected_video_codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectedVideoCodec {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "selected_video_codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectedVideoCodec() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "available_video_modes_OBSOLETE" field.</summary>
    public const int AvailableVideoModesOBSOLETEFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CStreamVideoMode> _repeated_availableVideoModesOBSOLETE_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CStreamVideoMode.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamVideoMode> availableVideoModesOBSOLETE_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamVideoMode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamVideoMode> AvailableVideoModesOBSOLETE {
      get { return availableVideoModesOBSOLETE_; }
    }

    /// <summary>Field number for the "enable_remote_hid" field.</summary>
    public const int EnableRemoteHidFieldNumber = 5;
    private readonly static bool EnableRemoteHidDefaultValue = false;

    private bool enableRemoteHid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableRemoteHid {
      get { if ((_hasBits0 & 8) != 0) { return enableRemoteHid_; } else { return EnableRemoteHidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        enableRemoteHid_ = value;
      }
    }
    /// <summary>Gets whether the "enable_remote_hid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableRemoteHid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "enable_remote_hid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableRemoteHid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "enable_touch_input" field.</summary>
    public const int EnableTouchInputFieldNumber = 6;
    private readonly static bool EnableTouchInputDefaultValue = false;

    private bool enableTouchInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableTouchInput {
      get { if ((_hasBits0 & 16) != 0) { return enableTouchInput_; } else { return EnableTouchInputDefaultValue; } }
      set {
        _hasBits0 |= 16;
        enableTouchInput_ = value;
      }
    }
    /// <summary>Gets whether the "enable_touch_input" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableTouchInput {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "enable_touch_input" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableTouchInput() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "disable_client_cursor" field.</summary>
    public const int DisableClientCursorFieldNumber = 7;
    private readonly static bool DisableClientCursorDefaultValue = false;

    private bool disableClientCursor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableClientCursor {
      get { if ((_hasBits0 & 32) != 0) { return disableClientCursor_; } else { return DisableClientCursorDefaultValue; } }
      set {
        _hasBits0 |= 32;
        disableClientCursor_ = value;
      }
    }
    /// <summary>Gets whether the "disable_client_cursor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableClientCursor {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "disable_client_cursor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableClientCursor() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CNegotiatedConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CNegotiatedConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReliableData != other.ReliableData) return false;
      if (SelectedAudioCodec != other.SelectedAudioCodec) return false;
      if (SelectedVideoCodec != other.SelectedVideoCodec) return false;
      if(!availableVideoModesOBSOLETE_.Equals(other.availableVideoModesOBSOLETE_)) return false;
      if (EnableRemoteHid != other.EnableRemoteHid) return false;
      if (EnableTouchInput != other.EnableTouchInput) return false;
      if (DisableClientCursor != other.DisableClientCursor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReliableData) hash ^= ReliableData.GetHashCode();
      if (HasSelectedAudioCodec) hash ^= SelectedAudioCodec.GetHashCode();
      if (HasSelectedVideoCodec) hash ^= SelectedVideoCodec.GetHashCode();
      hash ^= availableVideoModesOBSOLETE_.GetHashCode();
      if (HasEnableRemoteHid) hash ^= EnableRemoteHid.GetHashCode();
      if (HasEnableTouchInput) hash ^= EnableTouchInput.GetHashCode();
      if (HasDisableClientCursor) hash ^= DisableClientCursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReliableData) {
        output.WriteRawTag(8);
        output.WriteBool(ReliableData);
      }
      if (HasSelectedAudioCodec) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SelectedAudioCodec);
      }
      if (HasSelectedVideoCodec) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SelectedVideoCodec);
      }
      availableVideoModesOBSOLETE_.WriteTo(output, _repeated_availableVideoModesOBSOLETE_codec);
      if (HasEnableRemoteHid) {
        output.WriteRawTag(40);
        output.WriteBool(EnableRemoteHid);
      }
      if (HasEnableTouchInput) {
        output.WriteRawTag(48);
        output.WriteBool(EnableTouchInput);
      }
      if (HasDisableClientCursor) {
        output.WriteRawTag(56);
        output.WriteBool(DisableClientCursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReliableData) {
        output.WriteRawTag(8);
        output.WriteBool(ReliableData);
      }
      if (HasSelectedAudioCodec) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SelectedAudioCodec);
      }
      if (HasSelectedVideoCodec) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SelectedVideoCodec);
      }
      availableVideoModesOBSOLETE_.WriteTo(ref output, _repeated_availableVideoModesOBSOLETE_codec);
      if (HasEnableRemoteHid) {
        output.WriteRawTag(40);
        output.WriteBool(EnableRemoteHid);
      }
      if (HasEnableTouchInput) {
        output.WriteRawTag(48);
        output.WriteBool(EnableTouchInput);
      }
      if (HasDisableClientCursor) {
        output.WriteRawTag(56);
        output.WriteBool(DisableClientCursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReliableData) {
        size += 1 + 1;
      }
      if (HasSelectedAudioCodec) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SelectedAudioCodec);
      }
      if (HasSelectedVideoCodec) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SelectedVideoCodec);
      }
      size += availableVideoModesOBSOLETE_.CalculateSize(_repeated_availableVideoModesOBSOLETE_codec);
      if (HasEnableRemoteHid) {
        size += 1 + 1;
      }
      if (HasEnableTouchInput) {
        size += 1 + 1;
      }
      if (HasDisableClientCursor) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CNegotiatedConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasReliableData) {
        ReliableData = other.ReliableData;
      }
      if (other.HasSelectedAudioCodec) {
        SelectedAudioCodec = other.SelectedAudioCodec;
      }
      if (other.HasSelectedVideoCodec) {
        SelectedVideoCodec = other.SelectedVideoCodec;
      }
      availableVideoModesOBSOLETE_.Add(other.availableVideoModesOBSOLETE_);
      if (other.HasEnableRemoteHid) {
        EnableRemoteHid = other.EnableRemoteHid;
      }
      if (other.HasEnableTouchInput) {
        EnableTouchInput = other.EnableTouchInput;
      }
      if (other.HasDisableClientCursor) {
        DisableClientCursor = other.DisableClientCursor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReliableData = input.ReadBool();
            break;
          }
          case 16: {
            SelectedAudioCodec = (global::OpenSteamworks.Protobuf.EStreamAudioCodec) input.ReadEnum();
            break;
          }
          case 24: {
            SelectedVideoCodec = (global::OpenSteamworks.Protobuf.EStreamVideoCodec) input.ReadEnum();
            break;
          }
          case 34: {
            availableVideoModesOBSOLETE_.AddEntriesFrom(input, _repeated_availableVideoModesOBSOLETE_codec);
            break;
          }
          case 40: {
            EnableRemoteHid = input.ReadBool();
            break;
          }
          case 48: {
            EnableTouchInput = input.ReadBool();
            break;
          }
          case 56: {
            DisableClientCursor = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReliableData = input.ReadBool();
            break;
          }
          case 16: {
            SelectedAudioCodec = (global::OpenSteamworks.Protobuf.EStreamAudioCodec) input.ReadEnum();
            break;
          }
          case 24: {
            SelectedVideoCodec = (global::OpenSteamworks.Protobuf.EStreamVideoCodec) input.ReadEnum();
            break;
          }
          case 34: {
            availableVideoModesOBSOLETE_.AddEntriesFrom(ref input, _repeated_availableVideoModesOBSOLETE_codec);
            break;
          }
          case 40: {
            EnableRemoteHid = input.ReadBool();
            break;
          }
          case 48: {
            EnableTouchInput = input.ReadBool();
            break;
          }
          case 56: {
            DisableClientCursor = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CNegotiationInitMsg : pb::IMessage<CNegotiationInitMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CNegotiationInitMsg> _parser = new pb::MessageParser<CNegotiationInitMsg>(() => new CNegotiationInitMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CNegotiationInitMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationInitMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationInitMsg(CNegotiationInitMsg other) : this() {
      _hasBits0 = other._hasBits0;
      reliableData_ = other.reliableData_;
      supportedAudioCodecs_ = other.supportedAudioCodecs_.Clone();
      supportedVideoCodecs_ = other.supportedVideoCodecs_.Clone();
      supportsRemoteHid_ = other.supportsRemoteHid_;
      supportsTouchInput_ = other.supportsTouchInput_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationInitMsg Clone() {
      return new CNegotiationInitMsg(this);
    }

    /// <summary>Field number for the "reliable_data" field.</summary>
    public const int ReliableDataFieldNumber = 1;
    private readonly static bool ReliableDataDefaultValue = false;

    private bool reliableData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReliableData {
      get { if ((_hasBits0 & 1) != 0) { return reliableData_; } else { return ReliableDataDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reliableData_ = value;
      }
    }
    /// <summary>Gets whether the "reliable_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReliableData {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reliable_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReliableData() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "supported_audio_codecs" field.</summary>
    public const int SupportedAudioCodecsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.EStreamAudioCodec> _repeated_supportedAudioCodecs_codec
        = pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::OpenSteamworks.Protobuf.EStreamAudioCodec) x);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamAudioCodec> supportedAudioCodecs_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamAudioCodec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamAudioCodec> SupportedAudioCodecs {
      get { return supportedAudioCodecs_; }
    }

    /// <summary>Field number for the "supported_video_codecs" field.</summary>
    public const int SupportedVideoCodecsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.EStreamVideoCodec> _repeated_supportedVideoCodecs_codec
        = pb::FieldCodec.ForEnum(24, x => (int) x, x => (global::OpenSteamworks.Protobuf.EStreamVideoCodec) x);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamVideoCodec> supportedVideoCodecs_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamVideoCodec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.EStreamVideoCodec> SupportedVideoCodecs {
      get { return supportedVideoCodecs_; }
    }

    /// <summary>Field number for the "supports_remote_hid" field.</summary>
    public const int SupportsRemoteHidFieldNumber = 4;
    private readonly static bool SupportsRemoteHidDefaultValue = false;

    private bool supportsRemoteHid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SupportsRemoteHid {
      get { if ((_hasBits0 & 2) != 0) { return supportsRemoteHid_; } else { return SupportsRemoteHidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        supportsRemoteHid_ = value;
      }
    }
    /// <summary>Gets whether the "supports_remote_hid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSupportsRemoteHid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "supports_remote_hid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSupportsRemoteHid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "supports_touch_input" field.</summary>
    public const int SupportsTouchInputFieldNumber = 5;
    private readonly static bool SupportsTouchInputDefaultValue = false;

    private bool supportsTouchInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SupportsTouchInput {
      get { if ((_hasBits0 & 4) != 0) { return supportsTouchInput_; } else { return SupportsTouchInputDefaultValue; } }
      set {
        _hasBits0 |= 4;
        supportsTouchInput_ = value;
      }
    }
    /// <summary>Gets whether the "supports_touch_input" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSupportsTouchInput {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "supports_touch_input" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSupportsTouchInput() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CNegotiationInitMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CNegotiationInitMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReliableData != other.ReliableData) return false;
      if(!supportedAudioCodecs_.Equals(other.supportedAudioCodecs_)) return false;
      if(!supportedVideoCodecs_.Equals(other.supportedVideoCodecs_)) return false;
      if (SupportsRemoteHid != other.SupportsRemoteHid) return false;
      if (SupportsTouchInput != other.SupportsTouchInput) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReliableData) hash ^= ReliableData.GetHashCode();
      hash ^= supportedAudioCodecs_.GetHashCode();
      hash ^= supportedVideoCodecs_.GetHashCode();
      if (HasSupportsRemoteHid) hash ^= SupportsRemoteHid.GetHashCode();
      if (HasSupportsTouchInput) hash ^= SupportsTouchInput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReliableData) {
        output.WriteRawTag(8);
        output.WriteBool(ReliableData);
      }
      supportedAudioCodecs_.WriteTo(output, _repeated_supportedAudioCodecs_codec);
      supportedVideoCodecs_.WriteTo(output, _repeated_supportedVideoCodecs_codec);
      if (HasSupportsRemoteHid) {
        output.WriteRawTag(32);
        output.WriteBool(SupportsRemoteHid);
      }
      if (HasSupportsTouchInput) {
        output.WriteRawTag(40);
        output.WriteBool(SupportsTouchInput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReliableData) {
        output.WriteRawTag(8);
        output.WriteBool(ReliableData);
      }
      supportedAudioCodecs_.WriteTo(ref output, _repeated_supportedAudioCodecs_codec);
      supportedVideoCodecs_.WriteTo(ref output, _repeated_supportedVideoCodecs_codec);
      if (HasSupportsRemoteHid) {
        output.WriteRawTag(32);
        output.WriteBool(SupportsRemoteHid);
      }
      if (HasSupportsTouchInput) {
        output.WriteRawTag(40);
        output.WriteBool(SupportsTouchInput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReliableData) {
        size += 1 + 1;
      }
      size += supportedAudioCodecs_.CalculateSize(_repeated_supportedAudioCodecs_codec);
      size += supportedVideoCodecs_.CalculateSize(_repeated_supportedVideoCodecs_codec);
      if (HasSupportsRemoteHid) {
        size += 1 + 1;
      }
      if (HasSupportsTouchInput) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CNegotiationInitMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasReliableData) {
        ReliableData = other.ReliableData;
      }
      supportedAudioCodecs_.Add(other.supportedAudioCodecs_);
      supportedVideoCodecs_.Add(other.supportedVideoCodecs_);
      if (other.HasSupportsRemoteHid) {
        SupportsRemoteHid = other.SupportsRemoteHid;
      }
      if (other.HasSupportsTouchInput) {
        SupportsTouchInput = other.SupportsTouchInput;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReliableData = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            supportedAudioCodecs_.AddEntriesFrom(input, _repeated_supportedAudioCodecs_codec);
            break;
          }
          case 26:
          case 24: {
            supportedVideoCodecs_.AddEntriesFrom(input, _repeated_supportedVideoCodecs_codec);
            break;
          }
          case 32: {
            SupportsRemoteHid = input.ReadBool();
            break;
          }
          case 40: {
            SupportsTouchInput = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReliableData = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            supportedAudioCodecs_.AddEntriesFrom(ref input, _repeated_supportedAudioCodecs_codec);
            break;
          }
          case 26:
          case 24: {
            supportedVideoCodecs_.AddEntriesFrom(ref input, _repeated_supportedVideoCodecs_codec);
            break;
          }
          case 32: {
            SupportsRemoteHid = input.ReadBool();
            break;
          }
          case 40: {
            SupportsTouchInput = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CNegotiationSetConfigMsg : pb::IMessage<CNegotiationSetConfigMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CNegotiationSetConfigMsg> _parser = new pb::MessageParser<CNegotiationSetConfigMsg>(() => new CNegotiationSetConfigMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CNegotiationSetConfigMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationSetConfigMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationSetConfigMsg(CNegotiationSetConfigMsg other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      streamingClientConfig_ = other.streamingClientConfig_ != null ? other.streamingClientConfig_.Clone() : null;
      streamingClientCaps_ = other.streamingClientCaps_ != null ? other.streamingClientCaps_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationSetConfigMsg Clone() {
      return new CNegotiationSetConfigMsg(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CNegotiatedConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CNegotiatedConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "streaming_client_config" field.</summary>
    public const int StreamingClientConfigFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.CStreamingClientConfig streamingClientConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamingClientConfig StreamingClientConfig {
      get { return streamingClientConfig_; }
      set {
        streamingClientConfig_ = value;
      }
    }

    /// <summary>Field number for the "streaming_client_caps" field.</summary>
    public const int StreamingClientCapsFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.CStreamingClientCaps streamingClientCaps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamingClientCaps StreamingClientCaps {
      get { return streamingClientCaps_; }
      set {
        streamingClientCaps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CNegotiationSetConfigMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CNegotiationSetConfigMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(StreamingClientConfig, other.StreamingClientConfig)) return false;
      if (!object.Equals(StreamingClientCaps, other.StreamingClientCaps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (streamingClientConfig_ != null) hash ^= StreamingClientConfig.GetHashCode();
      if (streamingClientCaps_ != null) hash ^= StreamingClientCaps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (streamingClientConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StreamingClientConfig);
      }
      if (streamingClientCaps_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StreamingClientCaps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (streamingClientConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StreamingClientConfig);
      }
      if (streamingClientCaps_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StreamingClientCaps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (streamingClientConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamingClientConfig);
      }
      if (streamingClientCaps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamingClientCaps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CNegotiationSetConfigMsg other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::OpenSteamworks.Protobuf.CNegotiatedConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.streamingClientConfig_ != null) {
        if (streamingClientConfig_ == null) {
          StreamingClientConfig = new global::OpenSteamworks.Protobuf.CStreamingClientConfig();
        }
        StreamingClientConfig.MergeFrom(other.StreamingClientConfig);
      }
      if (other.streamingClientCaps_ != null) {
        if (streamingClientCaps_ == null) {
          StreamingClientCaps = new global::OpenSteamworks.Protobuf.CStreamingClientCaps();
        }
        StreamingClientCaps.MergeFrom(other.StreamingClientCaps);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::OpenSteamworks.Protobuf.CNegotiatedConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            if (streamingClientConfig_ == null) {
              StreamingClientConfig = new global::OpenSteamworks.Protobuf.CStreamingClientConfig();
            }
            input.ReadMessage(StreamingClientConfig);
            break;
          }
          case 26: {
            if (streamingClientCaps_ == null) {
              StreamingClientCaps = new global::OpenSteamworks.Protobuf.CStreamingClientCaps();
            }
            input.ReadMessage(StreamingClientCaps);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::OpenSteamworks.Protobuf.CNegotiatedConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            if (streamingClientConfig_ == null) {
              StreamingClientConfig = new global::OpenSteamworks.Protobuf.CStreamingClientConfig();
            }
            input.ReadMessage(StreamingClientConfig);
            break;
          }
          case 26: {
            if (streamingClientCaps_ == null) {
              StreamingClientCaps = new global::OpenSteamworks.Protobuf.CStreamingClientCaps();
            }
            input.ReadMessage(StreamingClientCaps);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CNegotiationCompleteMsg : pb::IMessage<CNegotiationCompleteMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CNegotiationCompleteMsg> _parser = new pb::MessageParser<CNegotiationCompleteMsg>(() => new CNegotiationCompleteMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CNegotiationCompleteMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationCompleteMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationCompleteMsg(CNegotiationCompleteMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CNegotiationCompleteMsg Clone() {
      return new CNegotiationCompleteMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CNegotiationCompleteMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CNegotiationCompleteMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CNegotiationCompleteMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStartAudioDataMsg : pb::IMessage<CStartAudioDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStartAudioDataMsg> _parser = new pb::MessageParser<CStartAudioDataMsg>(() => new CStartAudioDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStartAudioDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartAudioDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartAudioDataMsg(CStartAudioDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      channel_ = other.channel_;
      codec_ = other.codec_;
      codecData_ = other.codecData_;
      frequency_ = other.frequency_;
      channels_ = other.channels_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartAudioDataMsg Clone() {
      return new CStartAudioDataMsg(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private readonly static uint ChannelDefaultValue = 0;

    private uint channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Channel {
      get { if ((_hasBits0 & 1) != 0) { return channel_; } else { return ChannelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channel_ = value;
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 3;
    private readonly static global::OpenSteamworks.Protobuf.EStreamAudioCodec CodecDefaultValue = global::OpenSteamworks.Protobuf.EStreamAudioCodec.None;

    private global::OpenSteamworks.Protobuf.EStreamAudioCodec codec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamAudioCodec Codec {
      get { if ((_hasBits0 & 2) != 0) { return codec_; } else { return CodecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        codec_ = value;
      }
    }
    /// <summary>Gets whether the "codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "codec_data" field.</summary>
    public const int CodecDataFieldNumber = 4;
    private readonly static pb::ByteString CodecDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString codecData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CodecData {
      get { return codecData_ ?? CodecDataDefaultValue; }
      set {
        codecData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "codec_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodecData {
      get { return codecData_ != null; }
    }
    /// <summary>Clears the value of the "codec_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodecData() {
      codecData_ = null;
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 5;
    private readonly static uint FrequencyDefaultValue = 0;

    private uint frequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frequency {
      get { if ((_hasBits0 & 4) != 0) { return frequency_; } else { return FrequencyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        frequency_ = value;
      }
    }
    /// <summary>Gets whether the "frequency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrequency {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "frequency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrequency() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "channels" field.</summary>
    public const int ChannelsFieldNumber = 6;
    private readonly static uint ChannelsDefaultValue = 0;

    private uint channels_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Channels {
      get { if ((_hasBits0 & 8) != 0) { return channels_; } else { return ChannelsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        channels_ = value;
      }
    }
    /// <summary>Gets whether the "channels" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannels {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "channels" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannels() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStartAudioDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStartAudioDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (Codec != other.Codec) return false;
      if (CodecData != other.CodecData) return false;
      if (Frequency != other.Frequency) return false;
      if (Channels != other.Channels) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasCodec) hash ^= Codec.GetHashCode();
      if (HasCodecData) hash ^= CodecData.GetHashCode();
      if (HasFrequency) hash ^= Frequency.GetHashCode();
      if (HasChannels) hash ^= Channels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannel) {
        output.WriteRawTag(16);
        output.WriteUInt32(Channel);
      }
      if (HasCodec) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Codec);
      }
      if (HasCodecData) {
        output.WriteRawTag(34);
        output.WriteBytes(CodecData);
      }
      if (HasFrequency) {
        output.WriteRawTag(40);
        output.WriteUInt32(Frequency);
      }
      if (HasChannels) {
        output.WriteRawTag(48);
        output.WriteUInt32(Channels);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannel) {
        output.WriteRawTag(16);
        output.WriteUInt32(Channel);
      }
      if (HasCodec) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Codec);
      }
      if (HasCodecData) {
        output.WriteRawTag(34);
        output.WriteBytes(CodecData);
      }
      if (HasFrequency) {
        output.WriteRawTag(40);
        output.WriteUInt32(Frequency);
      }
      if (HasChannels) {
        output.WriteRawTag(48);
        output.WriteUInt32(Channels);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Channel);
      }
      if (HasCodec) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Codec);
      }
      if (HasCodecData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CodecData);
      }
      if (HasFrequency) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frequency);
      }
      if (HasChannels) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Channels);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStartAudioDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasCodec) {
        Codec = other.Codec;
      }
      if (other.HasCodecData) {
        CodecData = other.CodecData;
      }
      if (other.HasFrequency) {
        Frequency = other.Frequency;
      }
      if (other.HasChannels) {
        Channels = other.Channels;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Channel = input.ReadUInt32();
            break;
          }
          case 24: {
            Codec = (global::OpenSteamworks.Protobuf.EStreamAudioCodec) input.ReadEnum();
            break;
          }
          case 34: {
            CodecData = input.ReadBytes();
            break;
          }
          case 40: {
            Frequency = input.ReadUInt32();
            break;
          }
          case 48: {
            Channels = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Channel = input.ReadUInt32();
            break;
          }
          case 24: {
            Codec = (global::OpenSteamworks.Protobuf.EStreamAudioCodec) input.ReadEnum();
            break;
          }
          case 34: {
            CodecData = input.ReadBytes();
            break;
          }
          case 40: {
            Frequency = input.ReadUInt32();
            break;
          }
          case 48: {
            Channels = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStopAudioDataMsg : pb::IMessage<CStopAudioDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStopAudioDataMsg> _parser = new pb::MessageParser<CStopAudioDataMsg>(() => new CStopAudioDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStopAudioDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopAudioDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopAudioDataMsg(CStopAudioDataMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopAudioDataMsg Clone() {
      return new CStopAudioDataMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStopAudioDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStopAudioDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStopAudioDataMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStartVideoDataMsg : pb::IMessage<CStartVideoDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStartVideoDataMsg> _parser = new pb::MessageParser<CStartVideoDataMsg>(() => new CStartVideoDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStartVideoDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartVideoDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartVideoDataMsg(CStartVideoDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      channel_ = other.channel_;
      codec_ = other.codec_;
      codecData_ = other.codecData_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartVideoDataMsg Clone() {
      return new CStartVideoDataMsg(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private readonly static uint ChannelDefaultValue = 0;

    private uint channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Channel {
      get { if ((_hasBits0 & 1) != 0) { return channel_; } else { return ChannelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channel_ = value;
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamVideoCodec CodecDefaultValue = global::OpenSteamworks.Protobuf.EStreamVideoCodec.None;

    private global::OpenSteamworks.Protobuf.EStreamVideoCodec codec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamVideoCodec Codec {
      get { if ((_hasBits0 & 2) != 0) { return codec_; } else { return CodecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        codec_ = value;
      }
    }
    /// <summary>Gets whether the "codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "codec_data" field.</summary>
    public const int CodecDataFieldNumber = 3;
    private readonly static pb::ByteString CodecDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString codecData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CodecData {
      get { return codecData_ ?? CodecDataDefaultValue; }
      set {
        codecData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "codec_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodecData {
      get { return codecData_ != null; }
    }
    /// <summary>Clears the value of the "codec_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodecData() {
      codecData_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 8;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStartVideoDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStartVideoDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (Codec != other.Codec) return false;
      if (CodecData != other.CodecData) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasCodec) hash ^= Codec.GetHashCode();
      if (HasCodecData) hash ^= CodecData.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannel) {
        output.WriteRawTag(8);
        output.WriteUInt32(Channel);
      }
      if (HasCodec) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Codec);
      }
      if (HasCodecData) {
        output.WriteRawTag(26);
        output.WriteBytes(CodecData);
      }
      if (HasWidth) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(40);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannel) {
        output.WriteRawTag(8);
        output.WriteUInt32(Channel);
      }
      if (HasCodec) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Codec);
      }
      if (HasCodecData) {
        output.WriteRawTag(26);
        output.WriteBytes(CodecData);
      }
      if (HasWidth) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(40);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Channel);
      }
      if (HasCodec) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Codec);
      }
      if (HasCodecData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CodecData);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStartVideoDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasCodec) {
        Codec = other.Codec;
      }
      if (other.HasCodecData) {
        CodecData = other.CodecData;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadUInt32();
            break;
          }
          case 16: {
            Codec = (global::OpenSteamworks.Protobuf.EStreamVideoCodec) input.ReadEnum();
            break;
          }
          case 26: {
            CodecData = input.ReadBytes();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 40: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Channel = input.ReadUInt32();
            break;
          }
          case 16: {
            Codec = (global::OpenSteamworks.Protobuf.EStreamVideoCodec) input.ReadEnum();
            break;
          }
          case 26: {
            CodecData = input.ReadBytes();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 40: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStopVideoDataMsg : pb::IMessage<CStopVideoDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStopVideoDataMsg> _parser = new pb::MessageParser<CStopVideoDataMsg>(() => new CStopVideoDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStopVideoDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopVideoDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopVideoDataMsg(CStopVideoDataMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopVideoDataMsg Clone() {
      return new CStopVideoDataMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStopVideoDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStopVideoDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStopVideoDataMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStartNeptuneDataMsg : pb::IMessage<CStartNeptuneDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStartNeptuneDataMsg> _parser = new pb::MessageParser<CStartNeptuneDataMsg>(() => new CStartNeptuneDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStartNeptuneDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartNeptuneDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartNeptuneDataMsg(CStartNeptuneDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStartNeptuneDataMsg Clone() {
      return new CStartNeptuneDataMsg(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private readonly static uint ChannelDefaultValue = 0;

    private uint channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Channel {
      get { if ((_hasBits0 & 1) != 0) { return channel_; } else { return ChannelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channel_ = value;
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannel() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStartNeptuneDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStartNeptuneDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannel) {
        output.WriteRawTag(8);
        output.WriteUInt32(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannel) {
        output.WriteRawTag(8);
        output.WriteUInt32(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStartNeptuneDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Channel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStopNeptuneDataMsg : pb::IMessage<CStopNeptuneDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStopNeptuneDataMsg> _parser = new pb::MessageParser<CStopNeptuneDataMsg>(() => new CStopNeptuneDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStopNeptuneDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopNeptuneDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopNeptuneDataMsg(CStopNeptuneDataMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopNeptuneDataMsg Clone() {
      return new CStopNeptuneDataMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStopNeptuneDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStopNeptuneDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStopNeptuneDataMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRecordedInput : pb::IMessage<CRecordedInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRecordedInput> _parser = new pb::MessageParser<CRecordedInput>(() => new CRecordedInput());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRecordedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRecordedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRecordedInput(CRecordedInput other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      timestamp_ = other.timestamp_;
      switch (other.DataCase) {
        case DataOneofCase.FingerDown:
          FingerDown = other.FingerDown.Clone();
          break;
        case DataOneofCase.FingerMotion:
          FingerMotion = other.FingerMotion.Clone();
          break;
        case DataOneofCase.FingerUp:
          FingerUp = other.FingerUp.Clone();
          break;
        case DataOneofCase.MouseMotion:
          MouseMotion = other.MouseMotion.Clone();
          break;
        case DataOneofCase.MouseWheel:
          MouseWheel = other.MouseWheel.Clone();
          break;
        case DataOneofCase.MouseDown:
          MouseDown = other.MouseDown.Clone();
          break;
        case DataOneofCase.MouseUp:
          MouseUp = other.MouseUp.Clone();
          break;
        case DataOneofCase.KeyDown:
          KeyDown = other.KeyDown.Clone();
          break;
        case DataOneofCase.KeyUp:
          KeyUp = other.KeyUp.Clone();
          break;
        case DataOneofCase.Text:
          Text = other.Text.Clone();
          break;
        case DataOneofCase.Hid:
          Hid = other.Hid.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRecordedInput Clone() {
      return new CRecordedInput(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamControlMessage TypeDefaultValue = global::OpenSteamworks.Protobuf.EStreamControlMessage.EstreamControlAuthenticationRequest;

    private global::OpenSteamworks.Protobuf.EStreamControlMessage type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamControlMessage Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private readonly static uint TimestampDefaultValue = 0;

    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Timestamp {
      get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "finger_down" field.</summary>
    public const int FingerDownFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg FingerDown {
      get { return dataCase_ == DataOneofCase.FingerDown ? (global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.FingerDown;
      }
    }

    /// <summary>Field number for the "finger_motion" field.</summary>
    public const int FingerMotionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg FingerMotion {
      get { return dataCase_ == DataOneofCase.FingerMotion ? (global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.FingerMotion;
      }
    }

    /// <summary>Field number for the "finger_up" field.</summary>
    public const int FingerUpFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg FingerUp {
      get { return dataCase_ == DataOneofCase.FingerUp ? (global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.FingerUp;
      }
    }

    /// <summary>Field number for the "mouse_motion" field.</summary>
    public const int MouseMotionFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputMouseMotionMsg MouseMotion {
      get { return dataCase_ == DataOneofCase.MouseMotion ? (global::OpenSteamworks.Protobuf.CInputMouseMotionMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MouseMotion;
      }
    }

    /// <summary>Field number for the "mouse_wheel" field.</summary>
    public const int MouseWheelFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputMouseWheelMsg MouseWheel {
      get { return dataCase_ == DataOneofCase.MouseWheel ? (global::OpenSteamworks.Protobuf.CInputMouseWheelMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MouseWheel;
      }
    }

    /// <summary>Field number for the "mouse_down" field.</summary>
    public const int MouseDownFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputMouseDownMsg MouseDown {
      get { return dataCase_ == DataOneofCase.MouseDown ? (global::OpenSteamworks.Protobuf.CInputMouseDownMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MouseDown;
      }
    }

    /// <summary>Field number for the "mouse_up" field.</summary>
    public const int MouseUpFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputMouseUpMsg MouseUp {
      get { return dataCase_ == DataOneofCase.MouseUp ? (global::OpenSteamworks.Protobuf.CInputMouseUpMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MouseUp;
      }
    }

    /// <summary>Field number for the "key_down" field.</summary>
    public const int KeyDownFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputKeyDownMsg KeyDown {
      get { return dataCase_ == DataOneofCase.KeyDown ? (global::OpenSteamworks.Protobuf.CInputKeyDownMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.KeyDown;
      }
    }

    /// <summary>Field number for the "key_up" field.</summary>
    public const int KeyUpFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputKeyUpMsg KeyUp {
      get { return dataCase_ == DataOneofCase.KeyUp ? (global::OpenSteamworks.Protobuf.CInputKeyUpMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.KeyUp;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CInputTextMsg Text {
      get { return dataCase_ == DataOneofCase.Text ? (global::OpenSteamworks.Protobuf.CInputTextMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Text;
      }
    }

    /// <summary>Field number for the "hid" field.</summary>
    public const int HidFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CRemoteHIDMsg Hid {
      get { return dataCase_ == DataOneofCase.Hid ? (global::OpenSteamworks.Protobuf.CRemoteHIDMsg) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Hid;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      FingerDown = 3,
      FingerMotion = 4,
      FingerUp = 5,
      MouseMotion = 6,
      MouseWheel = 7,
      MouseDown = 8,
      MouseUp = 9,
      KeyDown = 10,
      KeyUp = 11,
      Text = 12,
      Hid = 13,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRecordedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRecordedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(FingerDown, other.FingerDown)) return false;
      if (!object.Equals(FingerMotion, other.FingerMotion)) return false;
      if (!object.Equals(FingerUp, other.FingerUp)) return false;
      if (!object.Equals(MouseMotion, other.MouseMotion)) return false;
      if (!object.Equals(MouseWheel, other.MouseWheel)) return false;
      if (!object.Equals(MouseDown, other.MouseDown)) return false;
      if (!object.Equals(MouseUp, other.MouseUp)) return false;
      if (!object.Equals(KeyDown, other.KeyDown)) return false;
      if (!object.Equals(KeyUp, other.KeyUp)) return false;
      if (!object.Equals(Text, other.Text)) return false;
      if (!object.Equals(Hid, other.Hid)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (dataCase_ == DataOneofCase.FingerDown) hash ^= FingerDown.GetHashCode();
      if (dataCase_ == DataOneofCase.FingerMotion) hash ^= FingerMotion.GetHashCode();
      if (dataCase_ == DataOneofCase.FingerUp) hash ^= FingerUp.GetHashCode();
      if (dataCase_ == DataOneofCase.MouseMotion) hash ^= MouseMotion.GetHashCode();
      if (dataCase_ == DataOneofCase.MouseWheel) hash ^= MouseWheel.GetHashCode();
      if (dataCase_ == DataOneofCase.MouseDown) hash ^= MouseDown.GetHashCode();
      if (dataCase_ == DataOneofCase.MouseUp) hash ^= MouseUp.GetHashCode();
      if (dataCase_ == DataOneofCase.KeyDown) hash ^= KeyDown.GetHashCode();
      if (dataCase_ == DataOneofCase.KeyUp) hash ^= KeyUp.GetHashCode();
      if (dataCase_ == DataOneofCase.Text) hash ^= Text.GetHashCode();
      if (dataCase_ == DataOneofCase.Hid) hash ^= Hid.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt32(Timestamp);
      }
      if (dataCase_ == DataOneofCase.FingerDown) {
        output.WriteRawTag(26);
        output.WriteMessage(FingerDown);
      }
      if (dataCase_ == DataOneofCase.FingerMotion) {
        output.WriteRawTag(34);
        output.WriteMessage(FingerMotion);
      }
      if (dataCase_ == DataOneofCase.FingerUp) {
        output.WriteRawTag(42);
        output.WriteMessage(FingerUp);
      }
      if (dataCase_ == DataOneofCase.MouseMotion) {
        output.WriteRawTag(50);
        output.WriteMessage(MouseMotion);
      }
      if (dataCase_ == DataOneofCase.MouseWheel) {
        output.WriteRawTag(58);
        output.WriteMessage(MouseWheel);
      }
      if (dataCase_ == DataOneofCase.MouseDown) {
        output.WriteRawTag(66);
        output.WriteMessage(MouseDown);
      }
      if (dataCase_ == DataOneofCase.MouseUp) {
        output.WriteRawTag(74);
        output.WriteMessage(MouseUp);
      }
      if (dataCase_ == DataOneofCase.KeyDown) {
        output.WriteRawTag(82);
        output.WriteMessage(KeyDown);
      }
      if (dataCase_ == DataOneofCase.KeyUp) {
        output.WriteRawTag(90);
        output.WriteMessage(KeyUp);
      }
      if (dataCase_ == DataOneofCase.Text) {
        output.WriteRawTag(98);
        output.WriteMessage(Text);
      }
      if (dataCase_ == DataOneofCase.Hid) {
        output.WriteRawTag(106);
        output.WriteMessage(Hid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt32(Timestamp);
      }
      if (dataCase_ == DataOneofCase.FingerDown) {
        output.WriteRawTag(26);
        output.WriteMessage(FingerDown);
      }
      if (dataCase_ == DataOneofCase.FingerMotion) {
        output.WriteRawTag(34);
        output.WriteMessage(FingerMotion);
      }
      if (dataCase_ == DataOneofCase.FingerUp) {
        output.WriteRawTag(42);
        output.WriteMessage(FingerUp);
      }
      if (dataCase_ == DataOneofCase.MouseMotion) {
        output.WriteRawTag(50);
        output.WriteMessage(MouseMotion);
      }
      if (dataCase_ == DataOneofCase.MouseWheel) {
        output.WriteRawTag(58);
        output.WriteMessage(MouseWheel);
      }
      if (dataCase_ == DataOneofCase.MouseDown) {
        output.WriteRawTag(66);
        output.WriteMessage(MouseDown);
      }
      if (dataCase_ == DataOneofCase.MouseUp) {
        output.WriteRawTag(74);
        output.WriteMessage(MouseUp);
      }
      if (dataCase_ == DataOneofCase.KeyDown) {
        output.WriteRawTag(82);
        output.WriteMessage(KeyDown);
      }
      if (dataCase_ == DataOneofCase.KeyUp) {
        output.WriteRawTag(90);
        output.WriteMessage(KeyUp);
      }
      if (dataCase_ == DataOneofCase.Text) {
        output.WriteRawTag(98);
        output.WriteMessage(Text);
      }
      if (dataCase_ == DataOneofCase.Hid) {
        output.WriteRawTag(106);
        output.WriteMessage(Hid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      if (dataCase_ == DataOneofCase.FingerDown) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FingerDown);
      }
      if (dataCase_ == DataOneofCase.FingerMotion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FingerMotion);
      }
      if (dataCase_ == DataOneofCase.FingerUp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FingerUp);
      }
      if (dataCase_ == DataOneofCase.MouseMotion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MouseMotion);
      }
      if (dataCase_ == DataOneofCase.MouseWheel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MouseWheel);
      }
      if (dataCase_ == DataOneofCase.MouseDown) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MouseDown);
      }
      if (dataCase_ == DataOneofCase.MouseUp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MouseUp);
      }
      if (dataCase_ == DataOneofCase.KeyDown) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyDown);
      }
      if (dataCase_ == DataOneofCase.KeyUp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyUp);
      }
      if (dataCase_ == DataOneofCase.Text) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Text);
      }
      if (dataCase_ == DataOneofCase.Hid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRecordedInput other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      switch (other.DataCase) {
        case DataOneofCase.FingerDown:
          if (FingerDown == null) {
            FingerDown = new global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg();
          }
          FingerDown.MergeFrom(other.FingerDown);
          break;
        case DataOneofCase.FingerMotion:
          if (FingerMotion == null) {
            FingerMotion = new global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg();
          }
          FingerMotion.MergeFrom(other.FingerMotion);
          break;
        case DataOneofCase.FingerUp:
          if (FingerUp == null) {
            FingerUp = new global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg();
          }
          FingerUp.MergeFrom(other.FingerUp);
          break;
        case DataOneofCase.MouseMotion:
          if (MouseMotion == null) {
            MouseMotion = new global::OpenSteamworks.Protobuf.CInputMouseMotionMsg();
          }
          MouseMotion.MergeFrom(other.MouseMotion);
          break;
        case DataOneofCase.MouseWheel:
          if (MouseWheel == null) {
            MouseWheel = new global::OpenSteamworks.Protobuf.CInputMouseWheelMsg();
          }
          MouseWheel.MergeFrom(other.MouseWheel);
          break;
        case DataOneofCase.MouseDown:
          if (MouseDown == null) {
            MouseDown = new global::OpenSteamworks.Protobuf.CInputMouseDownMsg();
          }
          MouseDown.MergeFrom(other.MouseDown);
          break;
        case DataOneofCase.MouseUp:
          if (MouseUp == null) {
            MouseUp = new global::OpenSteamworks.Protobuf.CInputMouseUpMsg();
          }
          MouseUp.MergeFrom(other.MouseUp);
          break;
        case DataOneofCase.KeyDown:
          if (KeyDown == null) {
            KeyDown = new global::OpenSteamworks.Protobuf.CInputKeyDownMsg();
          }
          KeyDown.MergeFrom(other.KeyDown);
          break;
        case DataOneofCase.KeyUp:
          if (KeyUp == null) {
            KeyUp = new global::OpenSteamworks.Protobuf.CInputKeyUpMsg();
          }
          KeyUp.MergeFrom(other.KeyUp);
          break;
        case DataOneofCase.Text:
          if (Text == null) {
            Text = new global::OpenSteamworks.Protobuf.CInputTextMsg();
          }
          Text.MergeFrom(other.Text);
          break;
        case DataOneofCase.Hid:
          if (Hid == null) {
            Hid = new global::OpenSteamworks.Protobuf.CRemoteHIDMsg();
          }
          Hid.MergeFrom(other.Hid);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.EStreamControlMessage) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 26: {
            global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg();
            if (dataCase_ == DataOneofCase.FingerDown) {
              subBuilder.MergeFrom(FingerDown);
            }
            input.ReadMessage(subBuilder);
            FingerDown = subBuilder;
            break;
          }
          case 34: {
            global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg();
            if (dataCase_ == DataOneofCase.FingerMotion) {
              subBuilder.MergeFrom(FingerMotion);
            }
            input.ReadMessage(subBuilder);
            FingerMotion = subBuilder;
            break;
          }
          case 42: {
            global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg();
            if (dataCase_ == DataOneofCase.FingerUp) {
              subBuilder.MergeFrom(FingerUp);
            }
            input.ReadMessage(subBuilder);
            FingerUp = subBuilder;
            break;
          }
          case 50: {
            global::OpenSteamworks.Protobuf.CInputMouseMotionMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseMotionMsg();
            if (dataCase_ == DataOneofCase.MouseMotion) {
              subBuilder.MergeFrom(MouseMotion);
            }
            input.ReadMessage(subBuilder);
            MouseMotion = subBuilder;
            break;
          }
          case 58: {
            global::OpenSteamworks.Protobuf.CInputMouseWheelMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseWheelMsg();
            if (dataCase_ == DataOneofCase.MouseWheel) {
              subBuilder.MergeFrom(MouseWheel);
            }
            input.ReadMessage(subBuilder);
            MouseWheel = subBuilder;
            break;
          }
          case 66: {
            global::OpenSteamworks.Protobuf.CInputMouseDownMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseDownMsg();
            if (dataCase_ == DataOneofCase.MouseDown) {
              subBuilder.MergeFrom(MouseDown);
            }
            input.ReadMessage(subBuilder);
            MouseDown = subBuilder;
            break;
          }
          case 74: {
            global::OpenSteamworks.Protobuf.CInputMouseUpMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseUpMsg();
            if (dataCase_ == DataOneofCase.MouseUp) {
              subBuilder.MergeFrom(MouseUp);
            }
            input.ReadMessage(subBuilder);
            MouseUp = subBuilder;
            break;
          }
          case 82: {
            global::OpenSteamworks.Protobuf.CInputKeyDownMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputKeyDownMsg();
            if (dataCase_ == DataOneofCase.KeyDown) {
              subBuilder.MergeFrom(KeyDown);
            }
            input.ReadMessage(subBuilder);
            KeyDown = subBuilder;
            break;
          }
          case 90: {
            global::OpenSteamworks.Protobuf.CInputKeyUpMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputKeyUpMsg();
            if (dataCase_ == DataOneofCase.KeyUp) {
              subBuilder.MergeFrom(KeyUp);
            }
            input.ReadMessage(subBuilder);
            KeyUp = subBuilder;
            break;
          }
          case 98: {
            global::OpenSteamworks.Protobuf.CInputTextMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTextMsg();
            if (dataCase_ == DataOneofCase.Text) {
              subBuilder.MergeFrom(Text);
            }
            input.ReadMessage(subBuilder);
            Text = subBuilder;
            break;
          }
          case 106: {
            global::OpenSteamworks.Protobuf.CRemoteHIDMsg subBuilder = new global::OpenSteamworks.Protobuf.CRemoteHIDMsg();
            if (dataCase_ == DataOneofCase.Hid) {
              subBuilder.MergeFrom(Hid);
            }
            input.ReadMessage(subBuilder);
            Hid = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.EStreamControlMessage) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 26: {
            global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTouchFingerDownMsg();
            if (dataCase_ == DataOneofCase.FingerDown) {
              subBuilder.MergeFrom(FingerDown);
            }
            input.ReadMessage(subBuilder);
            FingerDown = subBuilder;
            break;
          }
          case 34: {
            global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTouchFingerMotionMsg();
            if (dataCase_ == DataOneofCase.FingerMotion) {
              subBuilder.MergeFrom(FingerMotion);
            }
            input.ReadMessage(subBuilder);
            FingerMotion = subBuilder;
            break;
          }
          case 42: {
            global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTouchFingerUpMsg();
            if (dataCase_ == DataOneofCase.FingerUp) {
              subBuilder.MergeFrom(FingerUp);
            }
            input.ReadMessage(subBuilder);
            FingerUp = subBuilder;
            break;
          }
          case 50: {
            global::OpenSteamworks.Protobuf.CInputMouseMotionMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseMotionMsg();
            if (dataCase_ == DataOneofCase.MouseMotion) {
              subBuilder.MergeFrom(MouseMotion);
            }
            input.ReadMessage(subBuilder);
            MouseMotion = subBuilder;
            break;
          }
          case 58: {
            global::OpenSteamworks.Protobuf.CInputMouseWheelMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseWheelMsg();
            if (dataCase_ == DataOneofCase.MouseWheel) {
              subBuilder.MergeFrom(MouseWheel);
            }
            input.ReadMessage(subBuilder);
            MouseWheel = subBuilder;
            break;
          }
          case 66: {
            global::OpenSteamworks.Protobuf.CInputMouseDownMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseDownMsg();
            if (dataCase_ == DataOneofCase.MouseDown) {
              subBuilder.MergeFrom(MouseDown);
            }
            input.ReadMessage(subBuilder);
            MouseDown = subBuilder;
            break;
          }
          case 74: {
            global::OpenSteamworks.Protobuf.CInputMouseUpMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputMouseUpMsg();
            if (dataCase_ == DataOneofCase.MouseUp) {
              subBuilder.MergeFrom(MouseUp);
            }
            input.ReadMessage(subBuilder);
            MouseUp = subBuilder;
            break;
          }
          case 82: {
            global::OpenSteamworks.Protobuf.CInputKeyDownMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputKeyDownMsg();
            if (dataCase_ == DataOneofCase.KeyDown) {
              subBuilder.MergeFrom(KeyDown);
            }
            input.ReadMessage(subBuilder);
            KeyDown = subBuilder;
            break;
          }
          case 90: {
            global::OpenSteamworks.Protobuf.CInputKeyUpMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputKeyUpMsg();
            if (dataCase_ == DataOneofCase.KeyUp) {
              subBuilder.MergeFrom(KeyUp);
            }
            input.ReadMessage(subBuilder);
            KeyUp = subBuilder;
            break;
          }
          case 98: {
            global::OpenSteamworks.Protobuf.CInputTextMsg subBuilder = new global::OpenSteamworks.Protobuf.CInputTextMsg();
            if (dataCase_ == DataOneofCase.Text) {
              subBuilder.MergeFrom(Text);
            }
            input.ReadMessage(subBuilder);
            Text = subBuilder;
            break;
          }
          case 106: {
            global::OpenSteamworks.Protobuf.CRemoteHIDMsg subBuilder = new global::OpenSteamworks.Protobuf.CRemoteHIDMsg();
            if (dataCase_ == DataOneofCase.Hid) {
              subBuilder.MergeFrom(Hid);
            }
            input.ReadMessage(subBuilder);
            Hid = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRecordedInputStream : pb::IMessage<CRecordedInputStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRecordedInputStream> _parser = new pb::MessageParser<CRecordedInputStream>(() => new CRecordedInputStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRecordedInputStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRecordedInputStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRecordedInputStream(CRecordedInputStream other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRecordedInputStream Clone() {
      return new CRecordedInputStream(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CRecordedInput> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CRecordedInput.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CRecordedInput> entries_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CRecordedInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CRecordedInput> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRecordedInputStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRecordedInputStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRecordedInputStream other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputLatencyTestMsg : pb::IMessage<CInputLatencyTestMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputLatencyTestMsg> _parser = new pb::MessageParser<CInputLatencyTestMsg>(() => new CInputLatencyTestMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputLatencyTestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputLatencyTestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputLatencyTestMsg(CInputLatencyTestMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      color_ = other.color_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputLatencyTestMsg Clone() {
      return new CInputLatencyTestMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 2;
    private readonly static uint ColorDefaultValue = 0;

    private uint color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Color {
      get { if ((_hasBits0 & 2) != 0) { return color_; } else { return ColorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        color_ = value;
      }
    }
    /// <summary>Gets whether the "color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColor() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputLatencyTestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputLatencyTestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Color != other.Color) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasColor) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasColor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasColor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasColor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputLatencyTestMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasColor) {
        Color = other.Color;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Color = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Color = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputTouchFingerDownMsg : pb::IMessage<CInputTouchFingerDownMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputTouchFingerDownMsg> _parser = new pb::MessageParser<CInputTouchFingerDownMsg>(() => new CInputTouchFingerDownMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputTouchFingerDownMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerDownMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerDownMsg(CInputTouchFingerDownMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      fingerid_ = other.fingerid_;
      xNormalized_ = other.xNormalized_;
      yNormalized_ = other.yNormalized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerDownMsg Clone() {
      return new CInputTouchFingerDownMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fingerid" field.</summary>
    public const int FingeridFieldNumber = 2;
    private readonly static ulong FingeridDefaultValue = 0UL;

    private ulong fingerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Fingerid {
      get { if ((_hasBits0 & 2) != 0) { return fingerid_; } else { return FingeridDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fingerid_ = value;
      }
    }
    /// <summary>Gets whether the "fingerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFingerid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fingerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFingerid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "x_normalized" field.</summary>
    public const int XNormalizedFieldNumber = 3;
    private readonly static float XNormalizedDefaultValue = 0F;

    private float xNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float XNormalized {
      get { if ((_hasBits0 & 4) != 0) { return xNormalized_; } else { return XNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        xNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "x_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXNormalized {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "x_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXNormalized() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "y_normalized" field.</summary>
    public const int YNormalizedFieldNumber = 4;
    private readonly static float YNormalizedDefaultValue = 0F;

    private float yNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float YNormalized {
      get { if ((_hasBits0 & 8) != 0) { return yNormalized_; } else { return YNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        yNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "y_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYNormalized {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "y_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYNormalized() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputTouchFingerDownMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputTouchFingerDownMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Fingerid != other.Fingerid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XNormalized, other.XNormalized)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YNormalized, other.YNormalized)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasFingerid) hash ^= Fingerid.GetHashCode();
      if (HasXNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XNormalized);
      if (HasYNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YNormalized);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasFingerid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Fingerid);
      }
      if (HasXNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(37);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasFingerid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Fingerid);
      }
      if (HasXNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(37);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasFingerid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Fingerid);
      }
      if (HasXNormalized) {
        size += 1 + 4;
      }
      if (HasYNormalized) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputTouchFingerDownMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasFingerid) {
        Fingerid = other.Fingerid;
      }
      if (other.HasXNormalized) {
        XNormalized = other.XNormalized;
      }
      if (other.HasYNormalized) {
        YNormalized = other.YNormalized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Fingerid = input.ReadUInt64();
            break;
          }
          case 29: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 37: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Fingerid = input.ReadUInt64();
            break;
          }
          case 29: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 37: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputTouchFingerMotionMsg : pb::IMessage<CInputTouchFingerMotionMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputTouchFingerMotionMsg> _parser = new pb::MessageParser<CInputTouchFingerMotionMsg>(() => new CInputTouchFingerMotionMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputTouchFingerMotionMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerMotionMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerMotionMsg(CInputTouchFingerMotionMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      fingerid_ = other.fingerid_;
      xNormalized_ = other.xNormalized_;
      yNormalized_ = other.yNormalized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerMotionMsg Clone() {
      return new CInputTouchFingerMotionMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fingerid" field.</summary>
    public const int FingeridFieldNumber = 2;
    private readonly static ulong FingeridDefaultValue = 0UL;

    private ulong fingerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Fingerid {
      get { if ((_hasBits0 & 2) != 0) { return fingerid_; } else { return FingeridDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fingerid_ = value;
      }
    }
    /// <summary>Gets whether the "fingerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFingerid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fingerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFingerid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "x_normalized" field.</summary>
    public const int XNormalizedFieldNumber = 3;
    private readonly static float XNormalizedDefaultValue = 0F;

    private float xNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float XNormalized {
      get { if ((_hasBits0 & 4) != 0) { return xNormalized_; } else { return XNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        xNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "x_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXNormalized {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "x_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXNormalized() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "y_normalized" field.</summary>
    public const int YNormalizedFieldNumber = 4;
    private readonly static float YNormalizedDefaultValue = 0F;

    private float yNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float YNormalized {
      get { if ((_hasBits0 & 8) != 0) { return yNormalized_; } else { return YNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        yNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "y_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYNormalized {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "y_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYNormalized() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputTouchFingerMotionMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputTouchFingerMotionMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Fingerid != other.Fingerid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XNormalized, other.XNormalized)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YNormalized, other.YNormalized)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasFingerid) hash ^= Fingerid.GetHashCode();
      if (HasXNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XNormalized);
      if (HasYNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YNormalized);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasFingerid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Fingerid);
      }
      if (HasXNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(37);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasFingerid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Fingerid);
      }
      if (HasXNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(37);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasFingerid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Fingerid);
      }
      if (HasXNormalized) {
        size += 1 + 4;
      }
      if (HasYNormalized) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputTouchFingerMotionMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasFingerid) {
        Fingerid = other.Fingerid;
      }
      if (other.HasXNormalized) {
        XNormalized = other.XNormalized;
      }
      if (other.HasYNormalized) {
        YNormalized = other.YNormalized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Fingerid = input.ReadUInt64();
            break;
          }
          case 29: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 37: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Fingerid = input.ReadUInt64();
            break;
          }
          case 29: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 37: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputTouchFingerUpMsg : pb::IMessage<CInputTouchFingerUpMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputTouchFingerUpMsg> _parser = new pb::MessageParser<CInputTouchFingerUpMsg>(() => new CInputTouchFingerUpMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputTouchFingerUpMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerUpMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerUpMsg(CInputTouchFingerUpMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      fingerid_ = other.fingerid_;
      xNormalized_ = other.xNormalized_;
      yNormalized_ = other.yNormalized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTouchFingerUpMsg Clone() {
      return new CInputTouchFingerUpMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fingerid" field.</summary>
    public const int FingeridFieldNumber = 2;
    private readonly static ulong FingeridDefaultValue = 0UL;

    private ulong fingerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Fingerid {
      get { if ((_hasBits0 & 2) != 0) { return fingerid_; } else { return FingeridDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fingerid_ = value;
      }
    }
    /// <summary>Gets whether the "fingerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFingerid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fingerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFingerid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "x_normalized" field.</summary>
    public const int XNormalizedFieldNumber = 3;
    private readonly static float XNormalizedDefaultValue = 0F;

    private float xNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float XNormalized {
      get { if ((_hasBits0 & 4) != 0) { return xNormalized_; } else { return XNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        xNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "x_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXNormalized {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "x_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXNormalized() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "y_normalized" field.</summary>
    public const int YNormalizedFieldNumber = 4;
    private readonly static float YNormalizedDefaultValue = 0F;

    private float yNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float YNormalized {
      get { if ((_hasBits0 & 8) != 0) { return yNormalized_; } else { return YNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        yNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "y_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYNormalized {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "y_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYNormalized() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputTouchFingerUpMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputTouchFingerUpMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Fingerid != other.Fingerid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XNormalized, other.XNormalized)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YNormalized, other.YNormalized)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasFingerid) hash ^= Fingerid.GetHashCode();
      if (HasXNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XNormalized);
      if (HasYNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YNormalized);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasFingerid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Fingerid);
      }
      if (HasXNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(37);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasFingerid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Fingerid);
      }
      if (HasXNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(37);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasFingerid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Fingerid);
      }
      if (HasXNormalized) {
        size += 1 + 4;
      }
      if (HasYNormalized) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputTouchFingerUpMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasFingerid) {
        Fingerid = other.Fingerid;
      }
      if (other.HasXNormalized) {
        XNormalized = other.XNormalized;
      }
      if (other.HasYNormalized) {
        YNormalized = other.YNormalized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Fingerid = input.ReadUInt64();
            break;
          }
          case 29: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 37: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Fingerid = input.ReadUInt64();
            break;
          }
          case 29: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 37: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputMouseMotionMsg : pb::IMessage<CInputMouseMotionMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputMouseMotionMsg> _parser = new pb::MessageParser<CInputMouseMotionMsg>(() => new CInputMouseMotionMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputMouseMotionMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseMotionMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseMotionMsg(CInputMouseMotionMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      xNormalized_ = other.xNormalized_;
      yNormalized_ = other.yNormalized_;
      dx_ = other.dx_;
      dy_ = other.dy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseMotionMsg Clone() {
      return new CInputMouseMotionMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x_normalized" field.</summary>
    public const int XNormalizedFieldNumber = 2;
    private readonly static float XNormalizedDefaultValue = 0F;

    private float xNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float XNormalized {
      get { if ((_hasBits0 & 2) != 0) { return xNormalized_; } else { return XNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        xNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "x_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXNormalized {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXNormalized() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y_normalized" field.</summary>
    public const int YNormalizedFieldNumber = 3;
    private readonly static float YNormalizedDefaultValue = 0F;

    private float yNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float YNormalized {
      get { if ((_hasBits0 & 4) != 0) { return yNormalized_; } else { return YNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        yNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "y_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYNormalized {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYNormalized() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "dx" field.</summary>
    public const int DxFieldNumber = 4;
    private readonly static int DxDefaultValue = 0;

    private int dx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dx {
      get { if ((_hasBits0 & 8) != 0) { return dx_; } else { return DxDefaultValue; } }
      set {
        _hasBits0 |= 8;
        dx_ = value;
      }
    }
    /// <summary>Gets whether the "dx" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDx {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "dx" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDx() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "dy" field.</summary>
    public const int DyFieldNumber = 5;
    private readonly static int DyDefaultValue = 0;

    private int dy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dy {
      get { if ((_hasBits0 & 16) != 0) { return dy_; } else { return DyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        dy_ = value;
      }
    }
    /// <summary>Gets whether the "dy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDy {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "dy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDy() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputMouseMotionMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputMouseMotionMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XNormalized, other.XNormalized)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YNormalized, other.YNormalized)) return false;
      if (Dx != other.Dx) return false;
      if (Dy != other.Dy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasXNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XNormalized);
      if (HasYNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YNormalized);
      if (HasDx) hash ^= Dx.GetHashCode();
      if (HasDy) hash ^= Dy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasXNormalized) {
        output.WriteRawTag(21);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(YNormalized);
      }
      if (HasDx) {
        output.WriteRawTag(32);
        output.WriteInt32(Dx);
      }
      if (HasDy) {
        output.WriteRawTag(40);
        output.WriteInt32(Dy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasXNormalized) {
        output.WriteRawTag(21);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(29);
        output.WriteFloat(YNormalized);
      }
      if (HasDx) {
        output.WriteRawTag(32);
        output.WriteInt32(Dx);
      }
      if (HasDy) {
        output.WriteRawTag(40);
        output.WriteInt32(Dy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasXNormalized) {
        size += 1 + 4;
      }
      if (HasYNormalized) {
        size += 1 + 4;
      }
      if (HasDx) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dx);
      }
      if (HasDy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputMouseMotionMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasXNormalized) {
        XNormalized = other.XNormalized;
      }
      if (other.HasYNormalized) {
        YNormalized = other.YNormalized;
      }
      if (other.HasDx) {
        Dx = other.Dx;
      }
      if (other.HasDy) {
        Dy = other.Dy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 21: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 29: {
            YNormalized = input.ReadFloat();
            break;
          }
          case 32: {
            Dx = input.ReadInt32();
            break;
          }
          case 40: {
            Dy = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 21: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 29: {
            YNormalized = input.ReadFloat();
            break;
          }
          case 32: {
            Dx = input.ReadInt32();
            break;
          }
          case 40: {
            Dy = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputMouseWheelMsg : pb::IMessage<CInputMouseWheelMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputMouseWheelMsg> _parser = new pb::MessageParser<CInputMouseWheelMsg>(() => new CInputMouseWheelMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputMouseWheelMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseWheelMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseWheelMsg(CInputMouseWheelMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseWheelMsg Clone() {
      return new CInputMouseWheelMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection DirectionDefaultValue = global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection.EstreamMouseWheelUp;

    private global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection Direction {
      get { if ((_hasBits0 & 2) != 0) { return direction_; } else { return DirectionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        direction_ = value;
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirection {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirection() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputMouseWheelMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputMouseWheelMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasDirection) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasDirection) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputMouseWheelMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Direction = (global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Direction = (global::OpenSteamworks.Protobuf.EStreamMouseWheelDirection) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputMouseDownMsg : pb::IMessage<CInputMouseDownMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputMouseDownMsg> _parser = new pb::MessageParser<CInputMouseDownMsg>(() => new CInputMouseDownMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputMouseDownMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseDownMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseDownMsg(CInputMouseDownMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      button_ = other.button_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseDownMsg Clone() {
      return new CInputMouseDownMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamMouseButton ButtonDefaultValue = global::OpenSteamworks.Protobuf.EStreamMouseButton.Left;

    private global::OpenSteamworks.Protobuf.EStreamMouseButton button_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamMouseButton Button {
      get { if ((_hasBits0 & 2) != 0) { return button_; } else { return ButtonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        button_ = value;
      }
    }
    /// <summary>Gets whether the "button" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasButton {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "button" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearButton() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputMouseDownMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputMouseDownMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Button != other.Button) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasButton) hash ^= Button.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasButton) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Button);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasButton) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Button);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasButton) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Button);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputMouseDownMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasButton) {
        Button = other.Button;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Button = (global::OpenSteamworks.Protobuf.EStreamMouseButton) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Button = (global::OpenSteamworks.Protobuf.EStreamMouseButton) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputMouseUpMsg : pb::IMessage<CInputMouseUpMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputMouseUpMsg> _parser = new pb::MessageParser<CInputMouseUpMsg>(() => new CInputMouseUpMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputMouseUpMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseUpMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseUpMsg(CInputMouseUpMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      button_ = other.button_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputMouseUpMsg Clone() {
      return new CInputMouseUpMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EStreamMouseButton ButtonDefaultValue = global::OpenSteamworks.Protobuf.EStreamMouseButton.Left;

    private global::OpenSteamworks.Protobuf.EStreamMouseButton button_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamMouseButton Button {
      get { if ((_hasBits0 & 2) != 0) { return button_; } else { return ButtonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        button_ = value;
      }
    }
    /// <summary>Gets whether the "button" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasButton {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "button" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearButton() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputMouseUpMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputMouseUpMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Button != other.Button) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasButton) hash ^= Button.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasButton) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Button);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasButton) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Button);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasButton) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Button);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputMouseUpMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasButton) {
        Button = other.Button;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Button = (global::OpenSteamworks.Protobuf.EStreamMouseButton) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Button = (global::OpenSteamworks.Protobuf.EStreamMouseButton) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputKeyDownMsg : pb::IMessage<CInputKeyDownMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputKeyDownMsg> _parser = new pb::MessageParser<CInputKeyDownMsg>(() => new CInputKeyDownMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputKeyDownMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputKeyDownMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputKeyDownMsg(CInputKeyDownMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      scancode_ = other.scancode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputKeyDownMsg Clone() {
      return new CInputKeyDownMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scancode" field.</summary>
    public const int ScancodeFieldNumber = 2;
    private readonly static uint ScancodeDefaultValue = 0;

    private uint scancode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scancode {
      get { if ((_hasBits0 & 2) != 0) { return scancode_; } else { return ScancodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scancode_ = value;
      }
    }
    /// <summary>Gets whether the "scancode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScancode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scancode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScancode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputKeyDownMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputKeyDownMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Scancode != other.Scancode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasScancode) hash ^= Scancode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasScancode) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scancode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasScancode) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scancode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasScancode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scancode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputKeyDownMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasScancode) {
        Scancode = other.Scancode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Scancode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Scancode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputKeyUpMsg : pb::IMessage<CInputKeyUpMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputKeyUpMsg> _parser = new pb::MessageParser<CInputKeyUpMsg>(() => new CInputKeyUpMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputKeyUpMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputKeyUpMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputKeyUpMsg(CInputKeyUpMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      scancode_ = other.scancode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputKeyUpMsg Clone() {
      return new CInputKeyUpMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scancode" field.</summary>
    public const int ScancodeFieldNumber = 2;
    private readonly static uint ScancodeDefaultValue = 0;

    private uint scancode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Scancode {
      get { if ((_hasBits0 & 2) != 0) { return scancode_; } else { return ScancodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        scancode_ = value;
      }
    }
    /// <summary>Gets whether the "scancode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScancode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scancode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScancode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputKeyUpMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputKeyUpMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (Scancode != other.Scancode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasScancode) hash ^= Scancode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasScancode) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scancode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasScancode) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scancode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasScancode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scancode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputKeyUpMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasScancode) {
        Scancode = other.Scancode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Scancode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 16: {
            Scancode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CInputTextMsg : pb::IMessage<CInputTextMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CInputTextMsg> _parser = new pb::MessageParser<CInputTextMsg>(() => new CInputTextMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CInputTextMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTextMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTextMsg(CInputTextMsg other) : this() {
      _hasBits0 = other._hasBits0;
      inputMark_ = other.inputMark_;
      textUtf8_ = other.textUtf8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CInputTextMsg Clone() {
      return new CInputTextMsg(this);
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 1;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 1) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text_utf8" field.</summary>
    public const int TextUtf8FieldNumber = 2;
    private readonly static string TextUtf8DefaultValue = "";

    private string textUtf8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextUtf8 {
      get { return textUtf8_ ?? TextUtf8DefaultValue; }
      set {
        textUtf8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_utf8" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextUtf8 {
      get { return textUtf8_ != null; }
    }
    /// <summary>Clears the value of the "text_utf8" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextUtf8() {
      textUtf8_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CInputTextMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CInputTextMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputMark != other.InputMark) return false;
      if (TextUtf8 != other.TextUtf8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      if (HasTextUtf8) hash ^= TextUtf8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasTextUtf8) {
        output.WriteRawTag(18);
        output.WriteString(TextUtf8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInputMark) {
        output.WriteRawTag(8);
        output.WriteUInt32(InputMark);
      }
      if (HasTextUtf8) {
        output.WriteRawTag(18);
        output.WriteString(TextUtf8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      if (HasTextUtf8) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextUtf8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CInputTextMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      if (other.HasTextUtf8) {
        TextUtf8 = other.TextUtf8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 18: {
            TextUtf8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 18: {
            TextUtf8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetTitleMsg : pb::IMessage<CSetTitleMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetTitleMsg> _parser = new pb::MessageParser<CSetTitleMsg>(() => new CSetTitleMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetTitleMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTitleMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTitleMsg(CSetTitleMsg other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTitleMsg Clone() {
      return new CSetTitleMsg(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetTitleMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetTitleMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasText) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasText) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetTitleMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetCaptureSizeMsg : pb::IMessage<CSetCaptureSizeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetCaptureSizeMsg> _parser = new pb::MessageParser<CSetCaptureSizeMsg>(() => new CSetCaptureSizeMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetCaptureSizeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCaptureSizeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCaptureSizeMsg(CSetCaptureSizeMsg other) : this() {
      _hasBits0 = other._hasBits0;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCaptureSizeMsg Clone() {
      return new CSetCaptureSizeMsg(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetCaptureSizeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetCaptureSizeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetCaptureSizeMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetIconMsg : pb::IMessage<CSetIconMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetIconMsg> _parser = new pb::MessageParser<CSetIconMsg>(() => new CSetIconMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetIconMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetIconMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetIconMsg(CSetIconMsg other) : this() {
      _hasBits0 = other._hasBits0;
      width_ = other.width_;
      height_ = other.height_;
      image_ = other.image_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetIconMsg Clone() {
      return new CSetIconMsg(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private readonly static pb::ByteString ImageDefaultValue = pb::ByteString.Empty;

    private pb::ByteString image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Image {
      get { return image_ ?? ImageDefaultValue; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImage {
      get { return image_ != null; }
    }
    /// <summary>Clears the value of the "image" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImage() {
      image_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetIconMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetIconMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Image != other.Image) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasImage) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (HasImage) {
        output.WriteRawTag(26);
        output.WriteBytes(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (HasImage) {
        output.WriteRawTag(26);
        output.WriteBytes(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (HasImage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetIconMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasImage) {
        Image = other.Image;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 26: {
            Image = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 26: {
            Image = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetFlashStateMsg : pb::IMessage<CSetFlashStateMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetFlashStateMsg> _parser = new pb::MessageParser<CSetFlashStateMsg>(() => new CSetFlashStateMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetFlashStateMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetFlashStateMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetFlashStateMsg(CSetFlashStateMsg other) : this() {
      _hasBits0 = other._hasBits0;
      flags_ = other.flags_;
      count_ = other.count_;
      timeoutMs_ = other.timeoutMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetFlashStateMsg Clone() {
      return new CSetFlashStateMsg(this);
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 1;
    private readonly static uint FlagsDefaultValue = 0;

    private uint flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { if ((_hasBits0 & 1) != 0) { return flags_; } else { return FlagsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        flags_ = value;
      }
    }
    /// <summary>Gets whether the "flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlags {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlags() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static uint CountDefaultValue = 0;

    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "timeout_ms" field.</summary>
    public const int TimeoutMsFieldNumber = 3;
    private readonly static uint TimeoutMsDefaultValue = 0;

    private uint timeoutMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeoutMs {
      get { if ((_hasBits0 & 4) != 0) { return timeoutMs_; } else { return TimeoutMsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        timeoutMs_ = value;
      }
    }
    /// <summary>Gets whether the "timeout_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeoutMs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "timeout_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeoutMs() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetFlashStateMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetFlashStateMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flags != other.Flags) return false;
      if (Count != other.Count) return false;
      if (TimeoutMs != other.TimeoutMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFlags) hash ^= Flags.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasTimeoutMs) hash ^= TimeoutMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFlags) {
        output.WriteRawTag(8);
        output.WriteUInt32(Flags);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (HasTimeoutMs) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimeoutMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFlags) {
        output.WriteRawTag(8);
        output.WriteUInt32(Flags);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (HasTimeoutMs) {
        output.WriteRawTag(24);
        output.WriteUInt32(TimeoutMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (HasTimeoutMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeoutMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetFlashStateMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasFlags) {
        Flags = other.Flags;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasTimeoutMs) {
        TimeoutMs = other.TimeoutMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Flags = input.ReadUInt32();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
          case 24: {
            TimeoutMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Flags = input.ReadUInt32();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
          case 24: {
            TimeoutMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CShowCursorMsg : pb::IMessage<CShowCursorMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CShowCursorMsg> _parser = new pb::MessageParser<CShowCursorMsg>(() => new CShowCursorMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CShowCursorMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CShowCursorMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CShowCursorMsg(CShowCursorMsg other) : this() {
      _hasBits0 = other._hasBits0;
      xNormalized_ = other.xNormalized_;
      yNormalized_ = other.yNormalized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CShowCursorMsg Clone() {
      return new CShowCursorMsg(this);
    }

    /// <summary>Field number for the "x_normalized" field.</summary>
    public const int XNormalizedFieldNumber = 1;
    private readonly static float XNormalizedDefaultValue = 0F;

    private float xNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float XNormalized {
      get { if ((_hasBits0 & 1) != 0) { return xNormalized_; } else { return XNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        xNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "x_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXNormalized {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "x_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXNormalized() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "y_normalized" field.</summary>
    public const int YNormalizedFieldNumber = 2;
    private readonly static float YNormalizedDefaultValue = 0F;

    private float yNormalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float YNormalized {
      get { if ((_hasBits0 & 2) != 0) { return yNormalized_; } else { return YNormalizedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        yNormalized_ = value;
      }
    }
    /// <summary>Gets whether the "y_normalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYNormalized {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "y_normalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYNormalized() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CShowCursorMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CShowCursorMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XNormalized, other.XNormalized)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YNormalized, other.YNormalized)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasXNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XNormalized);
      if (HasYNormalized) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YNormalized);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasXNormalized) {
        output.WriteRawTag(13);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(21);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasXNormalized) {
        output.WriteRawTag(13);
        output.WriteFloat(XNormalized);
      }
      if (HasYNormalized) {
        output.WriteRawTag(21);
        output.WriteFloat(YNormalized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasXNormalized) {
        size += 1 + 4;
      }
      if (HasYNormalized) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CShowCursorMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasXNormalized) {
        XNormalized = other.XNormalized;
      }
      if (other.HasYNormalized) {
        YNormalized = other.YNormalized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 21: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            XNormalized = input.ReadFloat();
            break;
          }
          case 21: {
            YNormalized = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CHideCursorMsg : pb::IMessage<CHideCursorMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CHideCursorMsg> _parser = new pb::MessageParser<CHideCursorMsg>(() => new CHideCursorMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CHideCursorMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHideCursorMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHideCursorMsg(CHideCursorMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CHideCursorMsg Clone() {
      return new CHideCursorMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CHideCursorMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CHideCursorMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CHideCursorMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetCursorMsg : pb::IMessage<CSetCursorMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetCursorMsg> _parser = new pb::MessageParser<CSetCursorMsg>(() => new CSetCursorMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetCursorMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorMsg(CSetCursorMsg other) : this() {
      _hasBits0 = other._hasBits0;
      cursorId_ = other.cursorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorMsg Clone() {
      return new CSetCursorMsg(this);
    }

    /// <summary>Field number for the "cursor_id" field.</summary>
    public const int CursorIdFieldNumber = 1;
    private readonly static ulong CursorIdDefaultValue = 0UL;

    private ulong cursorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CursorId {
      get { if ((_hasBits0 & 1) != 0) { return cursorId_; } else { return CursorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cursorId_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cursor_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetCursorMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetCursorMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CursorId != other.CursorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCursorId) hash ^= CursorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCursorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CursorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetCursorMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasCursorId) {
        CursorId = other.CursorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGetCursorImageMsg : pb::IMessage<CGetCursorImageMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGetCursorImageMsg> _parser = new pb::MessageParser<CGetCursorImageMsg>(() => new CGetCursorImageMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGetCursorImageMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetCursorImageMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetCursorImageMsg(CGetCursorImageMsg other) : this() {
      _hasBits0 = other._hasBits0;
      cursorId_ = other.cursorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetCursorImageMsg Clone() {
      return new CGetCursorImageMsg(this);
    }

    /// <summary>Field number for the "cursor_id" field.</summary>
    public const int CursorIdFieldNumber = 1;
    private readonly static ulong CursorIdDefaultValue = 0UL;

    private ulong cursorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CursorId {
      get { if ((_hasBits0 & 1) != 0) { return cursorId_; } else { return CursorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cursorId_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cursor_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGetCursorImageMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGetCursorImageMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CursorId != other.CursorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCursorId) hash ^= CursorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCursorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CursorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGetCursorImageMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasCursorId) {
        CursorId = other.CursorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetCursorImageMsg : pb::IMessage<CSetCursorImageMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetCursorImageMsg> _parser = new pb::MessageParser<CSetCursorImageMsg>(() => new CSetCursorImageMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetCursorImageMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorImageMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorImageMsg(CSetCursorImageMsg other) : this() {
      _hasBits0 = other._hasBits0;
      cursorId_ = other.cursorId_;
      width_ = other.width_;
      height_ = other.height_;
      hotX_ = other.hotX_;
      hotY_ = other.hotY_;
      image_ = other.image_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorImageMsg Clone() {
      return new CSetCursorImageMsg(this);
    }

    /// <summary>Field number for the "cursor_id" field.</summary>
    public const int CursorIdFieldNumber = 1;
    private readonly static ulong CursorIdDefaultValue = 0UL;

    private ulong cursorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CursorId {
      get { if ((_hasBits0 & 1) != 0) { return cursorId_; } else { return CursorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cursorId_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cursor_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static int WidthDefaultValue = 0;

    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static int HeightDefaultValue = 0;

    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hot_x" field.</summary>
    public const int HotXFieldNumber = 4;
    private readonly static int HotXDefaultValue = 0;

    private int hotX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HotX {
      get { if ((_hasBits0 & 8) != 0) { return hotX_; } else { return HotXDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hotX_ = value;
      }
    }
    /// <summary>Gets whether the "hot_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHotX {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hot_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHotX() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "hot_y" field.</summary>
    public const int HotYFieldNumber = 5;
    private readonly static int HotYDefaultValue = 0;

    private int hotY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HotY {
      get { if ((_hasBits0 & 16) != 0) { return hotY_; } else { return HotYDefaultValue; } }
      set {
        _hasBits0 |= 16;
        hotY_ = value;
      }
    }
    /// <summary>Gets whether the "hot_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHotY {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "hot_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHotY() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 6;
    private readonly static pb::ByteString ImageDefaultValue = pb::ByteString.Empty;

    private pb::ByteString image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Image {
      get { return image_ ?? ImageDefaultValue; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImage {
      get { return image_ != null; }
    }
    /// <summary>Clears the value of the "image" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImage() {
      image_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetCursorImageMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetCursorImageMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CursorId != other.CursorId) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (HotX != other.HotX) return false;
      if (HotY != other.HotY) return false;
      if (Image != other.Image) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCursorId) hash ^= CursorId.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasHotX) hash ^= HotX.GetHashCode();
      if (HasHotY) hash ^= HotY.GetHashCode();
      if (HasImage) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (HasHotX) {
        output.WriteRawTag(32);
        output.WriteInt32(HotX);
      }
      if (HasHotY) {
        output.WriteRawTag(40);
        output.WriteInt32(HotY);
      }
      if (HasImage) {
        output.WriteRawTag(50);
        output.WriteBytes(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (HasHotX) {
        output.WriteRawTag(32);
        output.WriteInt32(HotX);
      }
      if (HasHotY) {
        output.WriteRawTag(40);
        output.WriteInt32(HotY);
      }
      if (HasImage) {
        output.WriteRawTag(50);
        output.WriteBytes(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCursorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CursorId);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (HasHotX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HotX);
      }
      if (HasHotY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HotY);
      }
      if (HasImage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetCursorImageMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasCursorId) {
        CursorId = other.CursorId;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasHotX) {
        HotX = other.HotX;
      }
      if (other.HasHotY) {
        HotY = other.HotY;
      }
      if (other.HasImage) {
        Image = other.Image;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 32: {
            HotX = input.ReadInt32();
            break;
          }
          case 40: {
            HotY = input.ReadInt32();
            break;
          }
          case 50: {
            Image = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 32: {
            HotX = input.ReadInt32();
            break;
          }
          case 40: {
            HotY = input.ReadInt32();
            break;
          }
          case 50: {
            Image = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetCursorScaleMsg : pb::IMessage<CSetCursorScaleMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetCursorScaleMsg> _parser = new pb::MessageParser<CSetCursorScaleMsg>(() => new CSetCursorScaleMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetCursorScaleMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorScaleMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorScaleMsg(CSetCursorScaleMsg other) : this() {
      _hasBits0 = other._hasBits0;
      scale_ = other.scale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCursorScaleMsg Clone() {
      return new CSetCursorScaleMsg(this);
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 1;
    private readonly static float ScaleDefaultValue = 0F;

    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Scale {
      get { if ((_hasBits0 & 1) != 0) { return scale_; } else { return ScaleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scale_ = value;
      }
    }
    /// <summary>Gets whether the "scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScale {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScale() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetCursorScaleMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetCursorScaleMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScale) {
        output.WriteRawTag(13);
        output.WriteFloat(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScale) {
        output.WriteRawTag(13);
        output.WriteFloat(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScale) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetCursorScaleMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasScale) {
        Scale = other.Scale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Scale = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Scale = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideoDecoderInfoMsg : pb::IMessage<CVideoDecoderInfoMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideoDecoderInfoMsg> _parser = new pb::MessageParser<CVideoDecoderInfoMsg>(() => new CVideoDecoderInfoMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideoDecoderInfoMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoDecoderInfoMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoDecoderInfoMsg(CVideoDecoderInfoMsg other) : this() {
      _hasBits0 = other._hasBits0;
      info_ = other.info_;
      threads_ = other.threads_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoDecoderInfoMsg Clone() {
      return new CVideoDecoderInfoMsg(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private readonly static string InfoDefaultValue = "";

    private string info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Info {
      get { return info_ ?? InfoDefaultValue; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInfo {
      get { return info_ != null; }
    }
    /// <summary>Clears the value of the "info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfo() {
      info_ = null;
    }

    /// <summary>Field number for the "threads" field.</summary>
    public const int ThreadsFieldNumber = 2;
    private readonly static int ThreadsDefaultValue = 0;

    private int threads_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Threads {
      get { if ((_hasBits0 & 1) != 0) { return threads_; } else { return ThreadsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        threads_ = value;
      }
    }
    /// <summary>Gets whether the "threads" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreads {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "threads" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreads() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideoDecoderInfoMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideoDecoderInfoMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Info != other.Info) return false;
      if (Threads != other.Threads) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInfo) hash ^= Info.GetHashCode();
      if (HasThreads) hash ^= Threads.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInfo) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (HasThreads) {
        output.WriteRawTag(16);
        output.WriteInt32(Threads);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInfo) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (HasThreads) {
        output.WriteRawTag(16);
        output.WriteInt32(Threads);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (HasThreads) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Threads);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideoDecoderInfoMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      if (other.HasThreads) {
        Threads = other.Threads;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
          case 16: {
            Threads = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
          case 16: {
            Threads = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideoEncoderInfoMsg : pb::IMessage<CVideoEncoderInfoMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideoEncoderInfoMsg> _parser = new pb::MessageParser<CVideoEncoderInfoMsg>(() => new CVideoEncoderInfoMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideoEncoderInfoMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoEncoderInfoMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoEncoderInfoMsg(CVideoEncoderInfoMsg other) : this() {
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoEncoderInfoMsg Clone() {
      return new CVideoEncoderInfoMsg(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private readonly static string InfoDefaultValue = "";

    private string info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Info {
      get { return info_ ?? InfoDefaultValue; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInfo {
      get { return info_ != null; }
    }
    /// <summary>Clears the value of the "info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfo() {
      info_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideoEncoderInfoMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideoEncoderInfoMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInfo) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInfo) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInfo) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideoEncoderInfoMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPauseMsg : pb::IMessage<CPauseMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPauseMsg> _parser = new pb::MessageParser<CPauseMsg>(() => new CPauseMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPauseMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPauseMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPauseMsg(CPauseMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPauseMsg Clone() {
      return new CPauseMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPauseMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPauseMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPauseMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CResumeMsg : pb::IMessage<CResumeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CResumeMsg> _parser = new pb::MessageParser<CResumeMsg>(() => new CResumeMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CResumeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CResumeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CResumeMsg(CResumeMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CResumeMsg Clone() {
      return new CResumeMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CResumeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CResumeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CResumeMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CEnableHighResCaptureMsg : pb::IMessage<CEnableHighResCaptureMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CEnableHighResCaptureMsg> _parser = new pb::MessageParser<CEnableHighResCaptureMsg>(() => new CEnableHighResCaptureMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CEnableHighResCaptureMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEnableHighResCaptureMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEnableHighResCaptureMsg(CEnableHighResCaptureMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEnableHighResCaptureMsg Clone() {
      return new CEnableHighResCaptureMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CEnableHighResCaptureMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CEnableHighResCaptureMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CEnableHighResCaptureMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CDisableHighResCaptureMsg : pb::IMessage<CDisableHighResCaptureMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CDisableHighResCaptureMsg> _parser = new pb::MessageParser<CDisableHighResCaptureMsg>(() => new CDisableHighResCaptureMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CDisableHighResCaptureMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDisableHighResCaptureMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDisableHighResCaptureMsg(CDisableHighResCaptureMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDisableHighResCaptureMsg Clone() {
      return new CDisableHighResCaptureMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CDisableHighResCaptureMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CDisableHighResCaptureMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CDisableHighResCaptureMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CEnableNeptuneDataMsg : pb::IMessage<CEnableNeptuneDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CEnableNeptuneDataMsg> _parser = new pb::MessageParser<CEnableNeptuneDataMsg>(() => new CEnableNeptuneDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CEnableNeptuneDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEnableNeptuneDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEnableNeptuneDataMsg(CEnableNeptuneDataMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CEnableNeptuneDataMsg Clone() {
      return new CEnableNeptuneDataMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CEnableNeptuneDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CEnableNeptuneDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CEnableNeptuneDataMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CDisableNeptuneDataMsg : pb::IMessage<CDisableNeptuneDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CDisableNeptuneDataMsg> _parser = new pb::MessageParser<CDisableNeptuneDataMsg>(() => new CDisableNeptuneDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CDisableNeptuneDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDisableNeptuneDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDisableNeptuneDataMsg(CDisableNeptuneDataMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDisableNeptuneDataMsg Clone() {
      return new CDisableNeptuneDataMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CDisableNeptuneDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CDisableNeptuneDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CDisableNeptuneDataMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CPauseControllerInputMsg : pb::IMessage<CPauseControllerInputMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CPauseControllerInputMsg> _parser = new pb::MessageParser<CPauseControllerInputMsg>(() => new CPauseControllerInputMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CPauseControllerInputMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPauseControllerInputMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPauseControllerInputMsg(CPauseControllerInputMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CPauseControllerInputMsg Clone() {
      return new CPauseControllerInputMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CPauseControllerInputMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CPauseControllerInputMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CPauseControllerInputMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CResumeControllerInputMsg : pb::IMessage<CResumeControllerInputMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CResumeControllerInputMsg> _parser = new pb::MessageParser<CResumeControllerInputMsg>(() => new CResumeControllerInputMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CResumeControllerInputMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CResumeControllerInputMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CResumeControllerInputMsg(CResumeControllerInputMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CResumeControllerInputMsg Clone() {
      return new CResumeControllerInputMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CResumeControllerInputMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CResumeControllerInputMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CResumeControllerInputMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CToggleMagnificationMsg : pb::IMessage<CToggleMagnificationMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CToggleMagnificationMsg> _parser = new pb::MessageParser<CToggleMagnificationMsg>(() => new CToggleMagnificationMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CToggleMagnificationMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CToggleMagnificationMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CToggleMagnificationMsg(CToggleMagnificationMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CToggleMagnificationMsg Clone() {
      return new CToggleMagnificationMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CToggleMagnificationMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CToggleMagnificationMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CToggleMagnificationMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetCapslockMsg : pb::IMessage<CSetCapslockMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetCapslockMsg> _parser = new pb::MessageParser<CSetCapslockMsg>(() => new CSetCapslockMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetCapslockMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCapslockMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCapslockMsg(CSetCapslockMsg other) : this() {
      _hasBits0 = other._hasBits0;
      pressed_ = other.pressed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetCapslockMsg Clone() {
      return new CSetCapslockMsg(this);
    }

    /// <summary>Field number for the "pressed" field.</summary>
    public const int PressedFieldNumber = 1;
    private readonly static bool PressedDefaultValue = false;

    private bool pressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pressed {
      get { if ((_hasBits0 & 1) != 0) { return pressed_; } else { return PressedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pressed_ = value;
      }
    }
    /// <summary>Gets whether the "pressed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPressed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pressed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPressed() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetCapslockMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetCapslockMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pressed != other.Pressed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPressed) hash ^= Pressed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPressed) {
        output.WriteRawTag(8);
        output.WriteBool(Pressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPressed) {
        output.WriteRawTag(8);
        output.WriteBool(Pressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPressed) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetCapslockMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasPressed) {
        Pressed = other.Pressed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pressed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pressed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingKeymapEntry : pb::IMessage<CStreamingKeymapEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingKeymapEntry> _parser = new pb::MessageParser<CStreamingKeymapEntry>(() => new CStreamingKeymapEntry());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingKeymapEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingKeymapEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingKeymapEntry(CStreamingKeymapEntry other) : this() {
      _hasBits0 = other._hasBits0;
      scancode_ = other.scancode_;
      normalKeycode_ = other.normalKeycode_;
      shiftKeycode_ = other.shiftKeycode_;
      capslockeycode_ = other.capslockeycode_;
      shiftCapslockeycode_ = other.shiftCapslockeycode_;
      altgrKeycode_ = other.altgrKeycode_;
      altgrShiftKeycode_ = other.altgrShiftKeycode_;
      altgrCapslockeycode_ = other.altgrCapslockeycode_;
      altgrShiftCapslockeycode_ = other.altgrShiftCapslockeycode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingKeymapEntry Clone() {
      return new CStreamingKeymapEntry(this);
    }

    /// <summary>Field number for the "scancode" field.</summary>
    public const int ScancodeFieldNumber = 1;
    private readonly static int ScancodeDefaultValue = 0;

    private int scancode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Scancode {
      get { if ((_hasBits0 & 1) != 0) { return scancode_; } else { return ScancodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scancode_ = value;
      }
    }
    /// <summary>Gets whether the "scancode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScancode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scancode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScancode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "normal_keycode" field.</summary>
    public const int NormalKeycodeFieldNumber = 2;
    private readonly static int NormalKeycodeDefaultValue = 0;

    private int normalKeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NormalKeycode {
      get { if ((_hasBits0 & 2) != 0) { return normalKeycode_; } else { return NormalKeycodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        normalKeycode_ = value;
      }
    }
    /// <summary>Gets whether the "normal_keycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNormalKeycode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "normal_keycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNormalKeycode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shift_keycode" field.</summary>
    public const int ShiftKeycodeFieldNumber = 3;
    private readonly static int ShiftKeycodeDefaultValue = 0;

    private int shiftKeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShiftKeycode {
      get { if ((_hasBits0 & 4) != 0) { return shiftKeycode_; } else { return ShiftKeycodeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        shiftKeycode_ = value;
      }
    }
    /// <summary>Gets whether the "shift_keycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShiftKeycode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "shift_keycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShiftKeycode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "capslockeycode" field.</summary>
    public const int CapslockeycodeFieldNumber = 4;
    private readonly static int CapslockeycodeDefaultValue = 0;

    private int capslockeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Capslockeycode {
      get { if ((_hasBits0 & 8) != 0) { return capslockeycode_; } else { return CapslockeycodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        capslockeycode_ = value;
      }
    }
    /// <summary>Gets whether the "capslockeycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCapslockeycode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "capslockeycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCapslockeycode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "shift_capslockeycode" field.</summary>
    public const int ShiftCapslockeycodeFieldNumber = 5;
    private readonly static int ShiftCapslockeycodeDefaultValue = 0;

    private int shiftCapslockeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShiftCapslockeycode {
      get { if ((_hasBits0 & 16) != 0) { return shiftCapslockeycode_; } else { return ShiftCapslockeycodeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        shiftCapslockeycode_ = value;
      }
    }
    /// <summary>Gets whether the "shift_capslockeycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShiftCapslockeycode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "shift_capslockeycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShiftCapslockeycode() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "altgr_keycode" field.</summary>
    public const int AltgrKeycodeFieldNumber = 6;
    private readonly static int AltgrKeycodeDefaultValue = 0;

    private int altgrKeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AltgrKeycode {
      get { if ((_hasBits0 & 32) != 0) { return altgrKeycode_; } else { return AltgrKeycodeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        altgrKeycode_ = value;
      }
    }
    /// <summary>Gets whether the "altgr_keycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAltgrKeycode {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "altgr_keycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAltgrKeycode() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "altgr_shift_keycode" field.</summary>
    public const int AltgrShiftKeycodeFieldNumber = 7;
    private readonly static int AltgrShiftKeycodeDefaultValue = 0;

    private int altgrShiftKeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AltgrShiftKeycode {
      get { if ((_hasBits0 & 64) != 0) { return altgrShiftKeycode_; } else { return AltgrShiftKeycodeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        altgrShiftKeycode_ = value;
      }
    }
    /// <summary>Gets whether the "altgr_shift_keycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAltgrShiftKeycode {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "altgr_shift_keycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAltgrShiftKeycode() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "altgr_capslockeycode" field.</summary>
    public const int AltgrCapslockeycodeFieldNumber = 8;
    private readonly static int AltgrCapslockeycodeDefaultValue = 0;

    private int altgrCapslockeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AltgrCapslockeycode {
      get { if ((_hasBits0 & 128) != 0) { return altgrCapslockeycode_; } else { return AltgrCapslockeycodeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        altgrCapslockeycode_ = value;
      }
    }
    /// <summary>Gets whether the "altgr_capslockeycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAltgrCapslockeycode {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "altgr_capslockeycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAltgrCapslockeycode() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "altgr_shift_capslockeycode" field.</summary>
    public const int AltgrShiftCapslockeycodeFieldNumber = 9;
    private readonly static int AltgrShiftCapslockeycodeDefaultValue = 0;

    private int altgrShiftCapslockeycode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AltgrShiftCapslockeycode {
      get { if ((_hasBits0 & 256) != 0) { return altgrShiftCapslockeycode_; } else { return AltgrShiftCapslockeycodeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        altgrShiftCapslockeycode_ = value;
      }
    }
    /// <summary>Gets whether the "altgr_shift_capslockeycode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAltgrShiftCapslockeycode {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "altgr_shift_capslockeycode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAltgrShiftCapslockeycode() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingKeymapEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingKeymapEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Scancode != other.Scancode) return false;
      if (NormalKeycode != other.NormalKeycode) return false;
      if (ShiftKeycode != other.ShiftKeycode) return false;
      if (Capslockeycode != other.Capslockeycode) return false;
      if (ShiftCapslockeycode != other.ShiftCapslockeycode) return false;
      if (AltgrKeycode != other.AltgrKeycode) return false;
      if (AltgrShiftKeycode != other.AltgrShiftKeycode) return false;
      if (AltgrCapslockeycode != other.AltgrCapslockeycode) return false;
      if (AltgrShiftCapslockeycode != other.AltgrShiftCapslockeycode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScancode) hash ^= Scancode.GetHashCode();
      if (HasNormalKeycode) hash ^= NormalKeycode.GetHashCode();
      if (HasShiftKeycode) hash ^= ShiftKeycode.GetHashCode();
      if (HasCapslockeycode) hash ^= Capslockeycode.GetHashCode();
      if (HasShiftCapslockeycode) hash ^= ShiftCapslockeycode.GetHashCode();
      if (HasAltgrKeycode) hash ^= AltgrKeycode.GetHashCode();
      if (HasAltgrShiftKeycode) hash ^= AltgrShiftKeycode.GetHashCode();
      if (HasAltgrCapslockeycode) hash ^= AltgrCapslockeycode.GetHashCode();
      if (HasAltgrShiftCapslockeycode) hash ^= AltgrShiftCapslockeycode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScancode) {
        output.WriteRawTag(8);
        output.WriteInt32(Scancode);
      }
      if (HasNormalKeycode) {
        output.WriteRawTag(16);
        output.WriteInt32(NormalKeycode);
      }
      if (HasShiftKeycode) {
        output.WriteRawTag(24);
        output.WriteInt32(ShiftKeycode);
      }
      if (HasCapslockeycode) {
        output.WriteRawTag(32);
        output.WriteInt32(Capslockeycode);
      }
      if (HasShiftCapslockeycode) {
        output.WriteRawTag(40);
        output.WriteInt32(ShiftCapslockeycode);
      }
      if (HasAltgrKeycode) {
        output.WriteRawTag(48);
        output.WriteInt32(AltgrKeycode);
      }
      if (HasAltgrShiftKeycode) {
        output.WriteRawTag(56);
        output.WriteInt32(AltgrShiftKeycode);
      }
      if (HasAltgrCapslockeycode) {
        output.WriteRawTag(64);
        output.WriteInt32(AltgrCapslockeycode);
      }
      if (HasAltgrShiftCapslockeycode) {
        output.WriteRawTag(72);
        output.WriteInt32(AltgrShiftCapslockeycode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScancode) {
        output.WriteRawTag(8);
        output.WriteInt32(Scancode);
      }
      if (HasNormalKeycode) {
        output.WriteRawTag(16);
        output.WriteInt32(NormalKeycode);
      }
      if (HasShiftKeycode) {
        output.WriteRawTag(24);
        output.WriteInt32(ShiftKeycode);
      }
      if (HasCapslockeycode) {
        output.WriteRawTag(32);
        output.WriteInt32(Capslockeycode);
      }
      if (HasShiftCapslockeycode) {
        output.WriteRawTag(40);
        output.WriteInt32(ShiftCapslockeycode);
      }
      if (HasAltgrKeycode) {
        output.WriteRawTag(48);
        output.WriteInt32(AltgrKeycode);
      }
      if (HasAltgrShiftKeycode) {
        output.WriteRawTag(56);
        output.WriteInt32(AltgrShiftKeycode);
      }
      if (HasAltgrCapslockeycode) {
        output.WriteRawTag(64);
        output.WriteInt32(AltgrCapslockeycode);
      }
      if (HasAltgrShiftCapslockeycode) {
        output.WriteRawTag(72);
        output.WriteInt32(AltgrShiftCapslockeycode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScancode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Scancode);
      }
      if (HasNormalKeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NormalKeycode);
      }
      if (HasShiftKeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShiftKeycode);
      }
      if (HasCapslockeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capslockeycode);
      }
      if (HasShiftCapslockeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShiftCapslockeycode);
      }
      if (HasAltgrKeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AltgrKeycode);
      }
      if (HasAltgrShiftKeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AltgrShiftKeycode);
      }
      if (HasAltgrCapslockeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AltgrCapslockeycode);
      }
      if (HasAltgrShiftCapslockeycode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AltgrShiftCapslockeycode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingKeymapEntry other) {
      if (other == null) {
        return;
      }
      if (other.HasScancode) {
        Scancode = other.Scancode;
      }
      if (other.HasNormalKeycode) {
        NormalKeycode = other.NormalKeycode;
      }
      if (other.HasShiftKeycode) {
        ShiftKeycode = other.ShiftKeycode;
      }
      if (other.HasCapslockeycode) {
        Capslockeycode = other.Capslockeycode;
      }
      if (other.HasShiftCapslockeycode) {
        ShiftCapslockeycode = other.ShiftCapslockeycode;
      }
      if (other.HasAltgrKeycode) {
        AltgrKeycode = other.AltgrKeycode;
      }
      if (other.HasAltgrShiftKeycode) {
        AltgrShiftKeycode = other.AltgrShiftKeycode;
      }
      if (other.HasAltgrCapslockeycode) {
        AltgrCapslockeycode = other.AltgrCapslockeycode;
      }
      if (other.HasAltgrShiftCapslockeycode) {
        AltgrShiftCapslockeycode = other.AltgrShiftCapslockeycode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Scancode = input.ReadInt32();
            break;
          }
          case 16: {
            NormalKeycode = input.ReadInt32();
            break;
          }
          case 24: {
            ShiftKeycode = input.ReadInt32();
            break;
          }
          case 32: {
            Capslockeycode = input.ReadInt32();
            break;
          }
          case 40: {
            ShiftCapslockeycode = input.ReadInt32();
            break;
          }
          case 48: {
            AltgrKeycode = input.ReadInt32();
            break;
          }
          case 56: {
            AltgrShiftKeycode = input.ReadInt32();
            break;
          }
          case 64: {
            AltgrCapslockeycode = input.ReadInt32();
            break;
          }
          case 72: {
            AltgrShiftCapslockeycode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Scancode = input.ReadInt32();
            break;
          }
          case 16: {
            NormalKeycode = input.ReadInt32();
            break;
          }
          case 24: {
            ShiftKeycode = input.ReadInt32();
            break;
          }
          case 32: {
            Capslockeycode = input.ReadInt32();
            break;
          }
          case 40: {
            ShiftCapslockeycode = input.ReadInt32();
            break;
          }
          case 48: {
            AltgrKeycode = input.ReadInt32();
            break;
          }
          case 56: {
            AltgrShiftKeycode = input.ReadInt32();
            break;
          }
          case 64: {
            AltgrCapslockeycode = input.ReadInt32();
            break;
          }
          case 72: {
            AltgrShiftCapslockeycode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingKeymap : pb::IMessage<CStreamingKeymap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingKeymap> _parser = new pb::MessageParser<CStreamingKeymap>(() => new CStreamingKeymap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingKeymap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingKeymap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingKeymap(CStreamingKeymap other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingKeymap Clone() {
      return new CStreamingKeymap(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CStreamingKeymapEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CStreamingKeymapEntry.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamingKeymapEntry> entries_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamingKeymapEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CStreamingKeymapEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingKeymap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingKeymap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingKeymap other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetKeymapMsg : pb::IMessage<CSetKeymapMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetKeymapMsg> _parser = new pb::MessageParser<CSetKeymapMsg>(() => new CSetKeymapMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetKeymapMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetKeymapMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetKeymapMsg(CSetKeymapMsg other) : this() {
      keymap_ = other.keymap_ != null ? other.keymap_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetKeymapMsg Clone() {
      return new CSetKeymapMsg(this);
    }

    /// <summary>Field number for the "keymap" field.</summary>
    public const int KeymapFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CStreamingKeymap keymap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamingKeymap Keymap {
      get { return keymap_; }
      set {
        keymap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetKeymapMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetKeymapMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Keymap, other.Keymap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (keymap_ != null) hash ^= Keymap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (keymap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Keymap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (keymap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Keymap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (keymap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Keymap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetKeymapMsg other) {
      if (other == null) {
        return;
      }
      if (other.keymap_ != null) {
        if (keymap_ == null) {
          Keymap = new global::OpenSteamworks.Protobuf.CStreamingKeymap();
        }
        Keymap.MergeFrom(other.Keymap);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (keymap_ == null) {
              Keymap = new global::OpenSteamworks.Protobuf.CStreamingKeymap();
            }
            input.ReadMessage(Keymap);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (keymap_ == null) {
              Keymap = new global::OpenSteamworks.Protobuf.CStreamingKeymap();
            }
            input.ReadMessage(Keymap);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStopRequest : pb::IMessage<CStopRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStopRequest> _parser = new pb::MessageParser<CStopRequest>(() => new CStopRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStopRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopRequest(CStopRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStopRequest Clone() {
      return new CStopRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStopRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStopRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStopRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CQuitRequest : pb::IMessage<CQuitRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CQuitRequest> _parser = new pb::MessageParser<CQuitRequest>(() => new CQuitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CQuitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CQuitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CQuitRequest(CQuitRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CQuitRequest Clone() {
      return new CQuitRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CQuitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CQuitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CQuitRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CDeleteCursorMsg : pb::IMessage<CDeleteCursorMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CDeleteCursorMsg> _parser = new pb::MessageParser<CDeleteCursorMsg>(() => new CDeleteCursorMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CDeleteCursorMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDeleteCursorMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDeleteCursorMsg(CDeleteCursorMsg other) : this() {
      _hasBits0 = other._hasBits0;
      cursorId_ = other.cursorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDeleteCursorMsg Clone() {
      return new CDeleteCursorMsg(this);
    }

    /// <summary>Field number for the "cursor_id" field.</summary>
    public const int CursorIdFieldNumber = 1;
    private readonly static ulong CursorIdDefaultValue = 0UL;

    private ulong cursorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CursorId {
      get { if ((_hasBits0 & 1) != 0) { return cursorId_; } else { return CursorIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cursorId_ = value;
      }
    }
    /// <summary>Gets whether the "cursor_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCursorId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cursor_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCursorId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CDeleteCursorMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CDeleteCursorMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CursorId != other.CursorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCursorId) hash ^= CursorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCursorId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CursorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCursorId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CursorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CDeleteCursorMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasCursorId) {
        CursorId = other.CursorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CursorId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetStreamingClientConfig : pb::IMessage<CSetStreamingClientConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetStreamingClientConfig> _parser = new pb::MessageParser<CSetStreamingClientConfig>(() => new CSetStreamingClientConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetStreamingClientConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetStreamingClientConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetStreamingClientConfig(CSetStreamingClientConfig other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetStreamingClientConfig Clone() {
      return new CSetStreamingClientConfig(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CStreamingClientConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CStreamingClientConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetStreamingClientConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetStreamingClientConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetStreamingClientConfig other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::OpenSteamworks.Protobuf.CStreamingClientConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::OpenSteamworks.Protobuf.CStreamingClientConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::OpenSteamworks.Protobuf.CStreamingClientConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetQoSMsg : pb::IMessage<CSetQoSMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetQoSMsg> _parser = new pb::MessageParser<CSetQoSMsg>(() => new CSetQoSMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetQoSMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetQoSMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetQoSMsg(CSetQoSMsg other) : this() {
      _hasBits0 = other._hasBits0;
      useQos_ = other.useQos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetQoSMsg Clone() {
      return new CSetQoSMsg(this);
    }

    /// <summary>Field number for the "use_qos" field.</summary>
    public const int UseQosFieldNumber = 1;
    private readonly static bool UseQosDefaultValue = false;

    private bool useQos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseQos {
      get { if ((_hasBits0 & 1) != 0) { return useQos_; } else { return UseQosDefaultValue; } }
      set {
        _hasBits0 |= 1;
        useQos_ = value;
      }
    }
    /// <summary>Gets whether the "use_qos" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseQos {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "use_qos" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseQos() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetQoSMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetQoSMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UseQos != other.UseQos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUseQos) hash ^= UseQos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUseQos) {
        output.WriteRawTag(8);
        output.WriteBool(UseQos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUseQos) {
        output.WriteRawTag(8);
        output.WriteBool(UseQos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUseQos) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetQoSMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasUseQos) {
        UseQos = other.UseQos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UseQos = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UseQos = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetTargetFramerateMsg : pb::IMessage<CSetTargetFramerateMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetTargetFramerateMsg> _parser = new pb::MessageParser<CSetTargetFramerateMsg>(() => new CSetTargetFramerateMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetTargetFramerateMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTargetFramerateMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTargetFramerateMsg(CSetTargetFramerateMsg other) : this() {
      _hasBits0 = other._hasBits0;
      framerate_ = other.framerate_;
      reasons_ = other.reasons_;
      framerateNumerator_ = other.framerateNumerator_;
      framerateDenominator_ = other.framerateDenominator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTargetFramerateMsg Clone() {
      return new CSetTargetFramerateMsg(this);
    }

    /// <summary>Field number for the "framerate" field.</summary>
    public const int FramerateFieldNumber = 1;
    private readonly static uint FramerateDefaultValue = 0;

    private uint framerate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Framerate {
      get { if ((_hasBits0 & 1) != 0) { return framerate_; } else { return FramerateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        framerate_ = value;
      }
    }
    /// <summary>Gets whether the "framerate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFramerate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "framerate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFramerate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reasons" field.</summary>
    public const int ReasonsFieldNumber = 2;
    private readonly static uint ReasonsDefaultValue = 0;

    private uint reasons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reasons {
      get { if ((_hasBits0 & 2) != 0) { return reasons_; } else { return ReasonsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reasons_ = value;
      }
    }
    /// <summary>Gets whether the "reasons" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReasons {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reasons" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReasons() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "framerate_numerator" field.</summary>
    public const int FramerateNumeratorFieldNumber = 3;
    private readonly static uint FramerateNumeratorDefaultValue = 0;

    private uint framerateNumerator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FramerateNumerator {
      get { if ((_hasBits0 & 4) != 0) { return framerateNumerator_; } else { return FramerateNumeratorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        framerateNumerator_ = value;
      }
    }
    /// <summary>Gets whether the "framerate_numerator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFramerateNumerator {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "framerate_numerator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFramerateNumerator() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "framerate_denominator" field.</summary>
    public const int FramerateDenominatorFieldNumber = 4;
    private readonly static uint FramerateDenominatorDefaultValue = 0;

    private uint framerateDenominator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FramerateDenominator {
      get { if ((_hasBits0 & 8) != 0) { return framerateDenominator_; } else { return FramerateDenominatorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        framerateDenominator_ = value;
      }
    }
    /// <summary>Gets whether the "framerate_denominator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFramerateDenominator {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "framerate_denominator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFramerateDenominator() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetTargetFramerateMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetTargetFramerateMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Framerate != other.Framerate) return false;
      if (Reasons != other.Reasons) return false;
      if (FramerateNumerator != other.FramerateNumerator) return false;
      if (FramerateDenominator != other.FramerateDenominator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFramerate) hash ^= Framerate.GetHashCode();
      if (HasReasons) hash ^= Reasons.GetHashCode();
      if (HasFramerateNumerator) hash ^= FramerateNumerator.GetHashCode();
      if (HasFramerateDenominator) hash ^= FramerateDenominator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFramerate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Framerate);
      }
      if (HasReasons) {
        output.WriteRawTag(16);
        output.WriteUInt32(Reasons);
      }
      if (HasFramerateNumerator) {
        output.WriteRawTag(24);
        output.WriteUInt32(FramerateNumerator);
      }
      if (HasFramerateDenominator) {
        output.WriteRawTag(32);
        output.WriteUInt32(FramerateDenominator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFramerate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Framerate);
      }
      if (HasReasons) {
        output.WriteRawTag(16);
        output.WriteUInt32(Reasons);
      }
      if (HasFramerateNumerator) {
        output.WriteRawTag(24);
        output.WriteUInt32(FramerateNumerator);
      }
      if (HasFramerateDenominator) {
        output.WriteRawTag(32);
        output.WriteUInt32(FramerateDenominator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFramerate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Framerate);
      }
      if (HasReasons) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reasons);
      }
      if (HasFramerateNumerator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FramerateNumerator);
      }
      if (HasFramerateDenominator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FramerateDenominator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetTargetFramerateMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasFramerate) {
        Framerate = other.Framerate;
      }
      if (other.HasReasons) {
        Reasons = other.Reasons;
      }
      if (other.HasFramerateNumerator) {
        FramerateNumerator = other.FramerateNumerator;
      }
      if (other.HasFramerateDenominator) {
        FramerateDenominator = other.FramerateDenominator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Framerate = input.ReadUInt32();
            break;
          }
          case 16: {
            Reasons = input.ReadUInt32();
            break;
          }
          case 24: {
            FramerateNumerator = input.ReadUInt32();
            break;
          }
          case 32: {
            FramerateDenominator = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Framerate = input.ReadUInt32();
            break;
          }
          case 16: {
            Reasons = input.ReadUInt32();
            break;
          }
          case 24: {
            FramerateNumerator = input.ReadUInt32();
            break;
          }
          case 32: {
            FramerateDenominator = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetTargetBitrateMsg : pb::IMessage<CSetTargetBitrateMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetTargetBitrateMsg> _parser = new pb::MessageParser<CSetTargetBitrateMsg>(() => new CSetTargetBitrateMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetTargetBitrateMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTargetBitrateMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTargetBitrateMsg(CSetTargetBitrateMsg other) : this() {
      _hasBits0 = other._hasBits0;
      bitrate_ = other.bitrate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTargetBitrateMsg Clone() {
      return new CSetTargetBitrateMsg(this);
    }

    /// <summary>Field number for the "bitrate" field.</summary>
    public const int BitrateFieldNumber = 1;
    private readonly static int BitrateDefaultValue = 0;

    private int bitrate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Bitrate {
      get { if ((_hasBits0 & 1) != 0) { return bitrate_; } else { return BitrateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrate_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrate() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetTargetBitrateMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetTargetBitrateMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bitrate != other.Bitrate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBitrate) hash ^= Bitrate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteInt32(Bitrate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteInt32(Bitrate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBitrate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bitrate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetTargetBitrateMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasBitrate) {
        Bitrate = other.Bitrate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bitrate = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bitrate = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class COverlayEnabledMsg : pb::IMessage<COverlayEnabledMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<COverlayEnabledMsg> _parser = new pb::MessageParser<COverlayEnabledMsg>(() => new COverlayEnabledMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<COverlayEnabledMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public COverlayEnabledMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public COverlayEnabledMsg(COverlayEnabledMsg other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public COverlayEnabledMsg Clone() {
      return new COverlayEnabledMsg(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = false;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as COverlayEnabledMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(COverlayEnabledMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(COverlayEnabledMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetGammaRampMsg : pb::IMessage<CSetGammaRampMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetGammaRampMsg> _parser = new pb::MessageParser<CSetGammaRampMsg>(() => new CSetGammaRampMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetGammaRampMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetGammaRampMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetGammaRampMsg(CSetGammaRampMsg other) : this() {
      gammaRamp_ = other.gammaRamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetGammaRampMsg Clone() {
      return new CSetGammaRampMsg(this);
    }

    /// <summary>Field number for the "gamma_ramp" field.</summary>
    public const int GammaRampFieldNumber = 1;
    private readonly static pb::ByteString GammaRampDefaultValue = pb::ByteString.Empty;

    private pb::ByteString gammaRamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString GammaRamp {
      get { return gammaRamp_ ?? GammaRampDefaultValue; }
      set {
        gammaRamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gamma_ramp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGammaRamp {
      get { return gammaRamp_ != null; }
    }
    /// <summary>Clears the value of the "gamma_ramp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGammaRamp() {
      gammaRamp_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetGammaRampMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetGammaRampMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GammaRamp != other.GammaRamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGammaRamp) hash ^= GammaRamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGammaRamp) {
        output.WriteRawTag(10);
        output.WriteBytes(GammaRamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGammaRamp) {
        output.WriteRawTag(10);
        output.WriteBytes(GammaRamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGammaRamp) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(GammaRamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetGammaRampMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasGammaRamp) {
        GammaRamp = other.GammaRamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GammaRamp = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GammaRamp = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetActivityMsg : pb::IMessage<CSetActivityMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetActivityMsg> _parser = new pb::MessageParser<CSetActivityMsg>(() => new CSetActivityMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetActivityMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetActivityMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetActivityMsg(CSetActivityMsg other) : this() {
      _hasBits0 = other._hasBits0;
      activity_ = other.activity_;
      appid_ = other.appid_;
      gameid_ = other.gameid_;
      gameName_ = other.gameName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetActivityMsg Clone() {
      return new CSetActivityMsg(this);
    }

    /// <summary>Field number for the "activity" field.</summary>
    public const int ActivityFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamActivity ActivityDefaultValue = global::OpenSteamworks.Protobuf.EStreamActivity.Idle;

    private global::OpenSteamworks.Protobuf.EStreamActivity activity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamActivity Activity {
      get { if ((_hasBits0 & 1) != 0) { return activity_; } else { return ActivityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activity_ = value;
      }
    }
    /// <summary>Gets whether the "activity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivity() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 3;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 4) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "game_name" field.</summary>
    public const int GameNameFieldNumber = 4;
    private readonly static string GameNameDefaultValue = "";

    private string gameName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameName {
      get { return gameName_ ?? GameNameDefaultValue; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameName {
      get { return gameName_ != null; }
    }
    /// <summary>Clears the value of the "game_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameName() {
      gameName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetActivityMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetActivityMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Activity != other.Activity) return false;
      if (Appid != other.Appid) return false;
      if (Gameid != other.Gameid) return false;
      if (GameName != other.GameName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivity) hash ^= Activity.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (HasGameName) hash ^= GameName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Activity);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasGameid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Gameid);
      }
      if (HasGameName) {
        output.WriteRawTag(34);
        output.WriteString(GameName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Activity);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasGameid) {
        output.WriteRawTag(24);
        output.WriteUInt64(Gameid);
      }
      if (HasGameName) {
        output.WriteRawTag(34);
        output.WriteString(GameName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activity);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasGameid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gameid);
      }
      if (HasGameName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetActivityMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasActivity) {
        Activity = other.Activity;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      if (other.HasGameName) {
        GameName = other.GameName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Activity = (global::OpenSteamworks.Protobuf.EStreamActivity) input.ReadEnum();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 24: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 34: {
            GameName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Activity = (global::OpenSteamworks.Protobuf.EStreamActivity) input.ReadEnum();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 24: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 34: {
            GameName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSystemSuspendMsg : pb::IMessage<CSystemSuspendMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSystemSuspendMsg> _parser = new pb::MessageParser<CSystemSuspendMsg>(() => new CSystemSuspendMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSystemSuspendMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSystemSuspendMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSystemSuspendMsg(CSystemSuspendMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSystemSuspendMsg Clone() {
      return new CSystemSuspendMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSystemSuspendMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSystemSuspendMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSystemSuspendMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVirtualHereRequestMsg : pb::IMessage<CVirtualHereRequestMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVirtualHereRequestMsg> _parser = new pb::MessageParser<CVirtualHereRequestMsg>(() => new CVirtualHereRequestMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVirtualHereRequestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereRequestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereRequestMsg(CVirtualHereRequestMsg other) : this() {
      hostname_ = other.hostname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereRequestMsg Clone() {
      return new CVirtualHereRequestMsg(this);
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 1;
    private readonly static string HostnameDefaultValue = "";

    private string hostname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hostname {
      get { return hostname_ ?? HostnameDefaultValue; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostname {
      get { return hostname_ != null; }
    }
    /// <summary>Clears the value of the "hostname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostname() {
      hostname_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVirtualHereRequestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVirtualHereRequestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hostname != other.Hostname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostname) hash ^= Hostname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostname) {
        output.WriteRawTag(10);
        output.WriteString(Hostname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostname) {
        output.WriteRawTag(10);
        output.WriteString(Hostname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVirtualHereRequestMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasHostname) {
        Hostname = other.Hostname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hostname = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hostname = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVirtualHereReadyMsg : pb::IMessage<CVirtualHereReadyMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVirtualHereReadyMsg> _parser = new pb::MessageParser<CVirtualHereReadyMsg>(() => new CVirtualHereReadyMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVirtualHereReadyMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereReadyMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereReadyMsg(CVirtualHereReadyMsg other) : this() {
      _hasBits0 = other._hasBits0;
      licensedDeviceCount_ = other.licensedDeviceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereReadyMsg Clone() {
      return new CVirtualHereReadyMsg(this);
    }

    /// <summary>Field number for the "licensed_device_count" field.</summary>
    public const int LicensedDeviceCountFieldNumber = 1;
    private readonly static uint LicensedDeviceCountDefaultValue = 0;

    private uint licensedDeviceCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LicensedDeviceCount {
      get { if ((_hasBits0 & 1) != 0) { return licensedDeviceCount_; } else { return LicensedDeviceCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        licensedDeviceCount_ = value;
      }
    }
    /// <summary>Gets whether the "licensed_device_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLicensedDeviceCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "licensed_device_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLicensedDeviceCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVirtualHereReadyMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVirtualHereReadyMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LicensedDeviceCount != other.LicensedDeviceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLicensedDeviceCount) hash ^= LicensedDeviceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLicensedDeviceCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(LicensedDeviceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLicensedDeviceCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(LicensedDeviceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLicensedDeviceCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LicensedDeviceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVirtualHereReadyMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasLicensedDeviceCount) {
        LicensedDeviceCount = other.LicensedDeviceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LicensedDeviceCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LicensedDeviceCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVirtualHereShareDeviceMsg : pb::IMessage<CVirtualHereShareDeviceMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVirtualHereShareDeviceMsg> _parser = new pb::MessageParser<CVirtualHereShareDeviceMsg>(() => new CVirtualHereShareDeviceMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVirtualHereShareDeviceMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereShareDeviceMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereShareDeviceMsg(CVirtualHereShareDeviceMsg other) : this() {
      deviceAddress_ = other.deviceAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVirtualHereShareDeviceMsg Clone() {
      return new CVirtualHereShareDeviceMsg(this);
    }

    /// <summary>Field number for the "device_address" field.</summary>
    public const int DeviceAddressFieldNumber = 1;
    private readonly static string DeviceAddressDefaultValue = "";

    private string deviceAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceAddress {
      get { return deviceAddress_ ?? DeviceAddressDefaultValue; }
      set {
        deviceAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceAddress {
      get { return deviceAddress_ != null; }
    }
    /// <summary>Clears the value of the "device_address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceAddress() {
      deviceAddress_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVirtualHereShareDeviceMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVirtualHereShareDeviceMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceAddress != other.DeviceAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeviceAddress) hash ^= DeviceAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeviceAddress) {
        output.WriteRawTag(10);
        output.WriteString(DeviceAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeviceAddress) {
        output.WriteRawTag(10);
        output.WriteString(DeviceAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDeviceAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVirtualHereShareDeviceMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasDeviceAddress) {
        DeviceAddress = other.DeviceAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceAddress = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceAddress = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetSpectatorModeMsg : pb::IMessage<CSetSpectatorModeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetSpectatorModeMsg> _parser = new pb::MessageParser<CSetSpectatorModeMsg>(() => new CSetSpectatorModeMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetSpectatorModeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetSpectatorModeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetSpectatorModeMsg(CSetSpectatorModeMsg other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetSpectatorModeMsg Clone() {
      return new CSetSpectatorModeMsg(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = false;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetSpectatorModeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetSpectatorModeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetSpectatorModeMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteHIDMsg : pb::IMessage<CRemoteHIDMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteHIDMsg> _parser = new pb::MessageParser<CRemoteHIDMsg>(() => new CRemoteHIDMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteHIDMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteHIDMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteHIDMsg(CRemoteHIDMsg other) : this() {
      _hasBits0 = other._hasBits0;
      data_ = other.data_;
      activeInput_ = other.activeInput_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteHIDMsg Clone() {
      return new CRemoteHIDMsg(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "active_input" field.</summary>
    public const int ActiveInputFieldNumber = 2;
    private readonly static bool ActiveInputDefaultValue = false;

    private bool activeInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ActiveInput {
      get { if ((_hasBits0 & 1) != 0) { return activeInput_; } else { return ActiveInputDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activeInput_ = value;
      }
    }
    /// <summary>Gets whether the "active_input" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActiveInput {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "active_input" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActiveInput() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteHIDMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteHIDMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (ActiveInput != other.ActiveInput) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasData) hash ^= Data.GetHashCode();
      if (HasActiveInput) hash ^= ActiveInput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasData) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (HasActiveInput) {
        output.WriteRawTag(16);
        output.WriteBool(ActiveInput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasData) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (HasActiveInput) {
        output.WriteRawTag(16);
        output.WriteBool(ActiveInput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (HasActiveInput) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteHIDMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasActiveInput) {
        ActiveInput = other.ActiveInput;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 16: {
            ActiveInput = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 16: {
            ActiveInput = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CTouchConfigActiveMsg : pb::IMessage<CTouchConfigActiveMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CTouchConfigActiveMsg> _parser = new pb::MessageParser<CTouchConfigActiveMsg>(() => new CTouchConfigActiveMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CTouchConfigActiveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchConfigActiveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchConfigActiveMsg(CTouchConfigActiveMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      revision_ = other.revision_;
      creator_ = other.creator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchConfigActiveMsg Clone() {
      return new CTouchConfigActiveMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 2;
    private readonly static uint RevisionDefaultValue = 0;

    private uint revision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Revision {
      get { if ((_hasBits0 & 2) != 0) { return revision_; } else { return RevisionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        revision_ = value;
      }
    }
    /// <summary>Gets whether the "revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRevision {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRevision() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 3;
    private readonly static ulong CreatorDefaultValue = 0UL;

    private ulong creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Creator {
      get { if ((_hasBits0 & 4) != 0) { return creator_; } else { return CreatorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        creator_ = value;
      }
    }
    /// <summary>Gets whether the "creator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreator {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "creator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreator() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CTouchConfigActiveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CTouchConfigActiveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Revision != other.Revision) return false;
      if (Creator != other.Creator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasRevision) hash ^= Revision.GetHashCode();
      if (HasCreator) hash ^= Creator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasRevision) {
        output.WriteRawTag(16);
        output.WriteUInt32(Revision);
      }
      if (HasCreator) {
        output.WriteRawTag(24);
        output.WriteUInt64(Creator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasRevision) {
        output.WriteRawTag(16);
        output.WriteUInt32(Revision);
      }
      if (HasCreator) {
        output.WriteRawTag(24);
        output.WriteUInt64(Creator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasRevision) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Revision);
      }
      if (HasCreator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Creator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CTouchConfigActiveMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasRevision) {
        Revision = other.Revision;
      }
      if (other.HasCreator) {
        Creator = other.Creator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Revision = input.ReadUInt32();
            break;
          }
          case 24: {
            Creator = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Revision = input.ReadUInt32();
            break;
          }
          case 24: {
            Creator = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGetTouchConfigDataMsg : pb::IMessage<CGetTouchConfigDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGetTouchConfigDataMsg> _parser = new pb::MessageParser<CGetTouchConfigDataMsg>(() => new CGetTouchConfigDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGetTouchConfigDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetTouchConfigDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetTouchConfigDataMsg(CGetTouchConfigDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetTouchConfigDataMsg Clone() {
      return new CGetTouchConfigDataMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGetTouchConfigDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGetTouchConfigDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGetTouchConfigDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetTouchConfigDataMsg : pb::IMessage<CSetTouchConfigDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetTouchConfigDataMsg> _parser = new pb::MessageParser<CSetTouchConfigDataMsg>(() => new CSetTouchConfigDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetTouchConfigDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTouchConfigDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTouchConfigDataMsg(CSetTouchConfigDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      revision_ = other.revision_;
      data_ = other.data_;
      layout_ = other.layout_;
      creator_ = other.creator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTouchConfigDataMsg Clone() {
      return new CSetTouchConfigDataMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 2;
    private readonly static uint RevisionDefaultValue = 0;

    private uint revision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Revision {
      get { if ((_hasBits0 & 2) != 0) { return revision_; } else { return RevisionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        revision_ = value;
      }
    }
    /// <summary>Gets whether the "revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRevision {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRevision() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 4;
    private readonly static pb::ByteString LayoutDefaultValue = pb::ByteString.Empty;

    private pb::ByteString layout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Layout {
      get { return layout_ ?? LayoutDefaultValue; }
      set {
        layout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayout {
      get { return layout_ != null; }
    }
    /// <summary>Clears the value of the "layout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayout() {
      layout_ = null;
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 5;
    private readonly static ulong CreatorDefaultValue = 0UL;

    private ulong creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Creator {
      get { if ((_hasBits0 & 4) != 0) { return creator_; } else { return CreatorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        creator_ = value;
      }
    }
    /// <summary>Gets whether the "creator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreator {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "creator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreator() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetTouchConfigDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetTouchConfigDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Revision != other.Revision) return false;
      if (Data != other.Data) return false;
      if (Layout != other.Layout) return false;
      if (Creator != other.Creator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasRevision) hash ^= Revision.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      if (HasLayout) hash ^= Layout.GetHashCode();
      if (HasCreator) hash ^= Creator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasRevision) {
        output.WriteRawTag(16);
        output.WriteUInt32(Revision);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (HasLayout) {
        output.WriteRawTag(34);
        output.WriteBytes(Layout);
      }
      if (HasCreator) {
        output.WriteRawTag(40);
        output.WriteUInt64(Creator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasRevision) {
        output.WriteRawTag(16);
        output.WriteUInt32(Revision);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (HasLayout) {
        output.WriteRawTag(34);
        output.WriteBytes(Layout);
      }
      if (HasCreator) {
        output.WriteRawTag(40);
        output.WriteUInt64(Creator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasRevision) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Revision);
      }
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (HasLayout) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Layout);
      }
      if (HasCreator) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Creator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetTouchConfigDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasRevision) {
        Revision = other.Revision;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasLayout) {
        Layout = other.Layout;
      }
      if (other.HasCreator) {
        Creator = other.Creator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Revision = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 34: {
            Layout = input.ReadBytes();
            break;
          }
          case 40: {
            Creator = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Revision = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 34: {
            Layout = input.ReadBytes();
            break;
          }
          case 40: {
            Creator = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSaveTouchConfigLayoutMsg : pb::IMessage<CSaveTouchConfigLayoutMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSaveTouchConfigLayoutMsg> _parser = new pb::MessageParser<CSaveTouchConfigLayoutMsg>(() => new CSaveTouchConfigLayoutMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSaveTouchConfigLayoutMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaveTouchConfigLayoutMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaveTouchConfigLayoutMsg(CSaveTouchConfigLayoutMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      layout_ = other.layout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSaveTouchConfigLayoutMsg Clone() {
      return new CSaveTouchConfigLayoutMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 4;
    private readonly static pb::ByteString LayoutDefaultValue = pb::ByteString.Empty;

    private pb::ByteString layout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Layout {
      get { return layout_ ?? LayoutDefaultValue; }
      set {
        layout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayout {
      get { return layout_ != null; }
    }
    /// <summary>Clears the value of the "layout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayout() {
      layout_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSaveTouchConfigLayoutMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSaveTouchConfigLayoutMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Layout != other.Layout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasLayout) hash ^= Layout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasLayout) {
        output.WriteRawTag(34);
        output.WriteBytes(Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasLayout) {
        output.WriteRawTag(34);
        output.WriteBytes(Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasLayout) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Layout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSaveTouchConfigLayoutMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasLayout) {
        Layout = other.Layout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 34: {
            Layout = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 34: {
            Layout = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CTouchActionSetActiveMsg : pb::IMessage<CTouchActionSetActiveMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CTouchActionSetActiveMsg> _parser = new pb::MessageParser<CTouchActionSetActiveMsg>(() => new CTouchActionSetActiveMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CTouchActionSetActiveMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetActiveMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetActiveMsg(CTouchActionSetActiveMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      actionsetId_ = other.actionsetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetActiveMsg Clone() {
      return new CTouchActionSetActiveMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actionset_id" field.</summary>
    public const int ActionsetIdFieldNumber = 2;
    private readonly static int ActionsetIdDefaultValue = 0;

    private int actionsetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionsetId {
      get { if ((_hasBits0 & 2) != 0) { return actionsetId_; } else { return ActionsetIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionsetId_ = value;
      }
    }
    /// <summary>Gets whether the "actionset_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionsetId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "actionset_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionsetId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CTouchActionSetActiveMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CTouchActionSetActiveMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (ActionsetId != other.ActionsetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasActionsetId) hash ^= ActionsetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasActionsetId) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionsetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasActionsetId) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionsetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasActionsetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionsetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CTouchActionSetActiveMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasActionsetId) {
        ActionsetId = other.ActionsetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionsetId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionsetId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CTouchActionSetLayerAddedMsg : pb::IMessage<CTouchActionSetLayerAddedMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CTouchActionSetLayerAddedMsg> _parser = new pb::MessageParser<CTouchActionSetLayerAddedMsg>(() => new CTouchActionSetLayerAddedMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CTouchActionSetLayerAddedMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetLayerAddedMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetLayerAddedMsg(CTouchActionSetLayerAddedMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      actionsetId_ = other.actionsetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetLayerAddedMsg Clone() {
      return new CTouchActionSetLayerAddedMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actionset_id" field.</summary>
    public const int ActionsetIdFieldNumber = 2;
    private readonly static int ActionsetIdDefaultValue = 0;

    private int actionsetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionsetId {
      get { if ((_hasBits0 & 2) != 0) { return actionsetId_; } else { return ActionsetIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionsetId_ = value;
      }
    }
    /// <summary>Gets whether the "actionset_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionsetId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "actionset_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionsetId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CTouchActionSetLayerAddedMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CTouchActionSetLayerAddedMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (ActionsetId != other.ActionsetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasActionsetId) hash ^= ActionsetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasActionsetId) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionsetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasActionsetId) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionsetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasActionsetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionsetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CTouchActionSetLayerAddedMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasActionsetId) {
        ActionsetId = other.ActionsetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionsetId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionsetId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CTouchActionSetLayerRemovedMsg : pb::IMessage<CTouchActionSetLayerRemovedMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CTouchActionSetLayerRemovedMsg> _parser = new pb::MessageParser<CTouchActionSetLayerRemovedMsg>(() => new CTouchActionSetLayerRemovedMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CTouchActionSetLayerRemovedMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetLayerRemovedMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetLayerRemovedMsg(CTouchActionSetLayerRemovedMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      actionsetId_ = other.actionsetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTouchActionSetLayerRemovedMsg Clone() {
      return new CTouchActionSetLayerRemovedMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actionset_id" field.</summary>
    public const int ActionsetIdFieldNumber = 2;
    private readonly static int ActionsetIdDefaultValue = 0;

    private int actionsetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionsetId {
      get { if ((_hasBits0 & 2) != 0) { return actionsetId_; } else { return ActionsetIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionsetId_ = value;
      }
    }
    /// <summary>Gets whether the "actionset_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionsetId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "actionset_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionsetId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CTouchActionSetLayerRemovedMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CTouchActionSetLayerRemovedMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (ActionsetId != other.ActionsetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasActionsetId) hash ^= ActionsetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasActionsetId) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionsetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasActionsetId) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionsetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasActionsetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionsetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CTouchActionSetLayerRemovedMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasActionsetId) {
        ActionsetId = other.ActionsetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionsetId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionsetId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGetTouchIconDataMsg : pb::IMessage<CGetTouchIconDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGetTouchIconDataMsg> _parser = new pb::MessageParser<CGetTouchIconDataMsg>(() => new CGetTouchIconDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGetTouchIconDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetTouchIconDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetTouchIconDataMsg(CGetTouchIconDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGetTouchIconDataMsg Clone() {
      return new CGetTouchIconDataMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGetTouchIconDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGetTouchIconDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIcon) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIcon) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGetTouchIconDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetTouchIconDataMsg : pb::IMessage<CSetTouchIconDataMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetTouchIconDataMsg> _parser = new pb::MessageParser<CSetTouchIconDataMsg>(() => new CSetTouchIconDataMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetTouchIconDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTouchIconDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTouchIconDataMsg(CSetTouchIconDataMsg other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      icon_ = other.icon_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetTouchIconDataMsg Clone() {
      return new CSetTouchIconDataMsg(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetTouchIconDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetTouchIconDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Icon != other.Icon) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIcon) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIcon) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetTouchIconDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemotePlayTogetherGroupUpdateMsg : pb::IMessage<CRemotePlayTogetherGroupUpdateMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemotePlayTogetherGroupUpdateMsg> _parser = new pb::MessageParser<CRemotePlayTogetherGroupUpdateMsg>(() => new CRemotePlayTogetherGroupUpdateMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemotePlayTogetherGroupUpdateMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogetherGroupUpdateMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogetherGroupUpdateMsg(CRemotePlayTogetherGroupUpdateMsg other) : this() {
      _hasBits0 = other._hasBits0;
      players_ = other.players_.Clone();
      playerIndex_ = other.playerIndex_;
      miniprofileLocation_ = other.miniprofileLocation_;
      gameName_ = other.gameName_;
      avatarLocation_ = other.avatarLocation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogetherGroupUpdateMsg Clone() {
      return new CRemotePlayTogetherGroupUpdateMsg(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player> players_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Types.Player> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "player_index" field.</summary>
    public const int PlayerIndexFieldNumber = 2;
    private readonly static int PlayerIndexDefaultValue = 0;

    private int playerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerIndex {
      get { if ((_hasBits0 & 1) != 0) { return playerIndex_; } else { return PlayerIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerIndex_ = value;
      }
    }
    /// <summary>Gets whether the "player_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "player_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "miniprofile_location" field.</summary>
    public const int MiniprofileLocationFieldNumber = 3;
    private readonly static string MiniprofileLocationDefaultValue = "";

    private string miniprofileLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MiniprofileLocation {
      get { return miniprofileLocation_ ?? MiniprofileLocationDefaultValue; }
      set {
        miniprofileLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "miniprofile_location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiniprofileLocation {
      get { return miniprofileLocation_ != null; }
    }
    /// <summary>Clears the value of the "miniprofile_location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiniprofileLocation() {
      miniprofileLocation_ = null;
    }

    /// <summary>Field number for the "game_name" field.</summary>
    public const int GameNameFieldNumber = 4;
    private readonly static string GameNameDefaultValue = "";

    private string gameName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameName {
      get { return gameName_ ?? GameNameDefaultValue; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameName {
      get { return gameName_ != null; }
    }
    /// <summary>Clears the value of the "game_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameName() {
      gameName_ = null;
    }

    /// <summary>Field number for the "avatar_location" field.</summary>
    public const int AvatarLocationFieldNumber = 5;
    private readonly static string AvatarLocationDefaultValue = "";

    private string avatarLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarLocation {
      get { return avatarLocation_ ?? AvatarLocationDefaultValue; }
      set {
        avatarLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatar_location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarLocation {
      get { return avatarLocation_ != null; }
    }
    /// <summary>Clears the value of the "avatar_location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarLocation() {
      avatarLocation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemotePlayTogetherGroupUpdateMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemotePlayTogetherGroupUpdateMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      if (PlayerIndex != other.PlayerIndex) return false;
      if (MiniprofileLocation != other.MiniprofileLocation) return false;
      if (GameName != other.GameName) return false;
      if (AvatarLocation != other.AvatarLocation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (HasPlayerIndex) hash ^= PlayerIndex.GetHashCode();
      if (HasMiniprofileLocation) hash ^= MiniprofileLocation.GetHashCode();
      if (HasGameName) hash ^= GameName.GetHashCode();
      if (HasAvatarLocation) hash ^= AvatarLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      players_.WriteTo(output, _repeated_players_codec);
      if (HasPlayerIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerIndex);
      }
      if (HasMiniprofileLocation) {
        output.WriteRawTag(26);
        output.WriteString(MiniprofileLocation);
      }
      if (HasGameName) {
        output.WriteRawTag(34);
        output.WriteString(GameName);
      }
      if (HasAvatarLocation) {
        output.WriteRawTag(42);
        output.WriteString(AvatarLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      players_.WriteTo(ref output, _repeated_players_codec);
      if (HasPlayerIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerIndex);
      }
      if (HasMiniprofileLocation) {
        output.WriteRawTag(26);
        output.WriteString(MiniprofileLocation);
      }
      if (HasGameName) {
        output.WriteRawTag(34);
        output.WriteString(GameName);
      }
      if (HasAvatarLocation) {
        output.WriteRawTag(42);
        output.WriteString(AvatarLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (HasPlayerIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerIndex);
      }
      if (HasMiniprofileLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MiniprofileLocation);
      }
      if (HasGameName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (HasAvatarLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemotePlayTogetherGroupUpdateMsg other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      if (other.HasPlayerIndex) {
        PlayerIndex = other.PlayerIndex;
      }
      if (other.HasMiniprofileLocation) {
        MiniprofileLocation = other.MiniprofileLocation;
      }
      if (other.HasGameName) {
        GameName = other.GameName;
      }
      if (other.HasAvatarLocation) {
        AvatarLocation = other.AvatarLocation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 16: {
            PlayerIndex = input.ReadInt32();
            break;
          }
          case 26: {
            MiniprofileLocation = input.ReadString();
            break;
          }
          case 34: {
            GameName = input.ReadString();
            break;
          }
          case 42: {
            AvatarLocation = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 16: {
            PlayerIndex = input.ReadInt32();
            break;
          }
          case 26: {
            MiniprofileLocation = input.ReadString();
            break;
          }
          case 34: {
            GameName = input.ReadString();
            break;
          }
          case 42: {
            AvatarLocation = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CRemotePlayTogetherGroupUpdateMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Player : pb::IMessage<Player>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Player> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CRemotePlayTogetherGroupUpdateMsg.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Player() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Player(Player other) : this() {
          _hasBits0 = other._hasBits0;
          accountid_ = other.accountid_;
          guestid_ = other.guestid_;
          keyboardEnabled_ = other.keyboardEnabled_;
          mouseEnabled_ = other.mouseEnabled_;
          controllerEnabled_ = other.controllerEnabled_;
          controllerSlots_ = other.controllerSlots_.Clone();
          avatarHash_ = other.avatarHash_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Player Clone() {
          return new Player(this);
        }

        /// <summary>Field number for the "accountid" field.</summary>
        public const int AccountidFieldNumber = 1;
        private readonly static uint AccountidDefaultValue = 0;

        private uint accountid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Accountid {
          get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            accountid_ = value;
          }
        }
        /// <summary>Gets whether the "accountid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAccountid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "accountid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAccountid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "guestid" field.</summary>
        public const int GuestidFieldNumber = 2;
        private readonly static uint GuestidDefaultValue = 0;

        private uint guestid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Guestid {
          get { if ((_hasBits0 & 2) != 0) { return guestid_; } else { return GuestidDefaultValue; } }
          set {
            _hasBits0 |= 2;
            guestid_ = value;
          }
        }
        /// <summary>Gets whether the "guestid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGuestid {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "guestid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGuestid() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "keyboard_enabled" field.</summary>
        public const int KeyboardEnabledFieldNumber = 3;
        private readonly static bool KeyboardEnabledDefaultValue = false;

        private bool keyboardEnabled_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool KeyboardEnabled {
          get { if ((_hasBits0 & 4) != 0) { return keyboardEnabled_; } else { return KeyboardEnabledDefaultValue; } }
          set {
            _hasBits0 |= 4;
            keyboardEnabled_ = value;
          }
        }
        /// <summary>Gets whether the "keyboard_enabled" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasKeyboardEnabled {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "keyboard_enabled" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearKeyboardEnabled() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "mouse_enabled" field.</summary>
        public const int MouseEnabledFieldNumber = 4;
        private readonly static bool MouseEnabledDefaultValue = false;

        private bool mouseEnabled_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MouseEnabled {
          get { if ((_hasBits0 & 8) != 0) { return mouseEnabled_; } else { return MouseEnabledDefaultValue; } }
          set {
            _hasBits0 |= 8;
            mouseEnabled_ = value;
          }
        }
        /// <summary>Gets whether the "mouse_enabled" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMouseEnabled {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "mouse_enabled" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMouseEnabled() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "controller_enabled" field.</summary>
        public const int ControllerEnabledFieldNumber = 5;
        private readonly static bool ControllerEnabledDefaultValue = false;

        private bool controllerEnabled_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ControllerEnabled {
          get { if ((_hasBits0 & 16) != 0) { return controllerEnabled_; } else { return ControllerEnabledDefaultValue; } }
          set {
            _hasBits0 |= 16;
            controllerEnabled_ = value;
          }
        }
        /// <summary>Gets whether the "controller_enabled" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerEnabled {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "controller_enabled" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerEnabled() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "controller_slots" field.</summary>
        public const int ControllerSlotsFieldNumber = 6;
        private static readonly pb::FieldCodec<uint> _repeated_controllerSlots_codec
            = pb::FieldCodec.ForUInt32(48);
        private readonly pbc::RepeatedField<uint> controllerSlots_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<uint> ControllerSlots {
          get { return controllerSlots_; }
        }

        /// <summary>Field number for the "avatar_hash" field.</summary>
        public const int AvatarHashFieldNumber = 7;
        private readonly static pb::ByteString AvatarHashDefaultValue = pb::ByteString.Empty;

        private pb::ByteString avatarHash_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString AvatarHash {
          get { return avatarHash_ ?? AvatarHashDefaultValue; }
          set {
            avatarHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "avatar_hash" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAvatarHash {
          get { return avatarHash_ != null; }
        }
        /// <summary>Clears the value of the "avatar_hash" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAvatarHash() {
          avatarHash_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Player);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Player other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accountid != other.Accountid) return false;
          if (Guestid != other.Guestid) return false;
          if (KeyboardEnabled != other.KeyboardEnabled) return false;
          if (MouseEnabled != other.MouseEnabled) return false;
          if (ControllerEnabled != other.ControllerEnabled) return false;
          if(!controllerSlots_.Equals(other.controllerSlots_)) return false;
          if (AvatarHash != other.AvatarHash) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAccountid) hash ^= Accountid.GetHashCode();
          if (HasGuestid) hash ^= Guestid.GetHashCode();
          if (HasKeyboardEnabled) hash ^= KeyboardEnabled.GetHashCode();
          if (HasMouseEnabled) hash ^= MouseEnabled.GetHashCode();
          if (HasControllerEnabled) hash ^= ControllerEnabled.GetHashCode();
          hash ^= controllerSlots_.GetHashCode();
          if (HasAvatarHash) hash ^= AvatarHash.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAccountid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Accountid);
          }
          if (HasGuestid) {
            output.WriteRawTag(16);
            output.WriteUInt32(Guestid);
          }
          if (HasKeyboardEnabled) {
            output.WriteRawTag(24);
            output.WriteBool(KeyboardEnabled);
          }
          if (HasMouseEnabled) {
            output.WriteRawTag(32);
            output.WriteBool(MouseEnabled);
          }
          if (HasControllerEnabled) {
            output.WriteRawTag(40);
            output.WriteBool(ControllerEnabled);
          }
          controllerSlots_.WriteTo(output, _repeated_controllerSlots_codec);
          if (HasAvatarHash) {
            output.WriteRawTag(58);
            output.WriteBytes(AvatarHash);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAccountid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Accountid);
          }
          if (HasGuestid) {
            output.WriteRawTag(16);
            output.WriteUInt32(Guestid);
          }
          if (HasKeyboardEnabled) {
            output.WriteRawTag(24);
            output.WriteBool(KeyboardEnabled);
          }
          if (HasMouseEnabled) {
            output.WriteRawTag(32);
            output.WriteBool(MouseEnabled);
          }
          if (HasControllerEnabled) {
            output.WriteRawTag(40);
            output.WriteBool(ControllerEnabled);
          }
          controllerSlots_.WriteTo(ref output, _repeated_controllerSlots_codec);
          if (HasAvatarHash) {
            output.WriteRawTag(58);
            output.WriteBytes(AvatarHash);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAccountid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
          }
          if (HasGuestid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guestid);
          }
          if (HasKeyboardEnabled) {
            size += 1 + 1;
          }
          if (HasMouseEnabled) {
            size += 1 + 1;
          }
          if (HasControllerEnabled) {
            size += 1 + 1;
          }
          size += controllerSlots_.CalculateSize(_repeated_controllerSlots_codec);
          if (HasAvatarHash) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AvatarHash);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Player other) {
          if (other == null) {
            return;
          }
          if (other.HasAccountid) {
            Accountid = other.Accountid;
          }
          if (other.HasGuestid) {
            Guestid = other.Guestid;
          }
          if (other.HasKeyboardEnabled) {
            KeyboardEnabled = other.KeyboardEnabled;
          }
          if (other.HasMouseEnabled) {
            MouseEnabled = other.MouseEnabled;
          }
          if (other.HasControllerEnabled) {
            ControllerEnabled = other.ControllerEnabled;
          }
          controllerSlots_.Add(other.controllerSlots_);
          if (other.HasAvatarHash) {
            AvatarHash = other.AvatarHash;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Accountid = input.ReadUInt32();
                break;
              }
              case 16: {
                Guestid = input.ReadUInt32();
                break;
              }
              case 24: {
                KeyboardEnabled = input.ReadBool();
                break;
              }
              case 32: {
                MouseEnabled = input.ReadBool();
                break;
              }
              case 40: {
                ControllerEnabled = input.ReadBool();
                break;
              }
              case 50:
              case 48: {
                controllerSlots_.AddEntriesFrom(input, _repeated_controllerSlots_codec);
                break;
              }
              case 58: {
                AvatarHash = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Accountid = input.ReadUInt32();
                break;
              }
              case 16: {
                Guestid = input.ReadUInt32();
                break;
              }
              case 24: {
                KeyboardEnabled = input.ReadBool();
                break;
              }
              case 32: {
                MouseEnabled = input.ReadBool();
                break;
              }
              case 40: {
                ControllerEnabled = input.ReadBool();
                break;
              }
              case 50:
              case 48: {
                controllerSlots_.AddEntriesFrom(ref input, _repeated_controllerSlots_codec);
                break;
              }
              case 58: {
                AvatarHash = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetInputTemporarilyDisabledMsg : pb::IMessage<CSetInputTemporarilyDisabledMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetInputTemporarilyDisabledMsg> _parser = new pb::MessageParser<CSetInputTemporarilyDisabledMsg>(() => new CSetInputTemporarilyDisabledMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetInputTemporarilyDisabledMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetInputTemporarilyDisabledMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetInputTemporarilyDisabledMsg(CSetInputTemporarilyDisabledMsg other) : this() {
      _hasBits0 = other._hasBits0;
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetInputTemporarilyDisabledMsg Clone() {
      return new CSetInputTemporarilyDisabledMsg(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private readonly static bool DisabledDefaultValue = false;

    private bool disabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Disabled {
      get { if ((_hasBits0 & 1) != 0) { return disabled_; } else { return DisabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        disabled_ = value;
      }
    }
    /// <summary>Gets whether the "disabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "disabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetInputTemporarilyDisabledMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetInputTemporarilyDisabledMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisabled) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisabled) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisabled) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDisabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetInputTemporarilyDisabledMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasDisabled) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetQualityOverrideMsg : pb::IMessage<CSetQualityOverrideMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetQualityOverrideMsg> _parser = new pb::MessageParser<CSetQualityOverrideMsg>(() => new CSetQualityOverrideMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetQualityOverrideMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetQualityOverrideMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetQualityOverrideMsg(CSetQualityOverrideMsg other) : this() {
      _hasBits0 = other._hasBits0;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetQualityOverrideMsg Clone() {
      return new CSetQualityOverrideMsg(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private readonly static int ValueDefaultValue = 0;

    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetQualityOverrideMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetQualityOverrideMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValue) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValue) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetQualityOverrideMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSetBitrateOverrideMsg : pb::IMessage<CSetBitrateOverrideMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSetBitrateOverrideMsg> _parser = new pb::MessageParser<CSetBitrateOverrideMsg>(() => new CSetBitrateOverrideMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSetBitrateOverrideMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetBitrateOverrideMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetBitrateOverrideMsg(CSetBitrateOverrideMsg other) : this() {
      _hasBits0 = other._hasBits0;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSetBitrateOverrideMsg Clone() {
      return new CSetBitrateOverrideMsg(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private readonly static int ValueDefaultValue = 0;

    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSetBitrateOverrideMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSetBitrateOverrideMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValue) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValue) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSetBitrateOverrideMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CShowOnScreenKeyboardMsg : pb::IMessage<CShowOnScreenKeyboardMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CShowOnScreenKeyboardMsg> _parser = new pb::MessageParser<CShowOnScreenKeyboardMsg>(() => new CShowOnScreenKeyboardMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CShowOnScreenKeyboardMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CShowOnScreenKeyboardMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CShowOnScreenKeyboardMsg(CShowOnScreenKeyboardMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CShowOnScreenKeyboardMsg Clone() {
      return new CShowOnScreenKeyboardMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CShowOnScreenKeyboardMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CShowOnScreenKeyboardMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CShowOnScreenKeyboardMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CControllerPersonalizationUpdateMsg : pb::IMessage<CControllerPersonalizationUpdateMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CControllerPersonalizationUpdateMsg> _parser = new pb::MessageParser<CControllerPersonalizationUpdateMsg>(() => new CControllerPersonalizationUpdateMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CControllerPersonalizationUpdateMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CControllerPersonalizationUpdateMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CControllerPersonalizationUpdateMsg(CControllerPersonalizationUpdateMsg other) : this() {
      _hasBits0 = other._hasBits0;
      controllerPath_ = other.controllerPath_;
      controllerName_ = other.controllerName_;
      reverseDiamondButtonLayout_ = other.reverseDiamondButtonLayout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CControllerPersonalizationUpdateMsg Clone() {
      return new CControllerPersonalizationUpdateMsg(this);
    }

    /// <summary>Field number for the "controller_path" field.</summary>
    public const int ControllerPathFieldNumber = 1;
    private readonly static string ControllerPathDefaultValue = "";

    private string controllerPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControllerPath {
      get { return controllerPath_ ?? ControllerPathDefaultValue; }
      set {
        controllerPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "controller_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerPath {
      get { return controllerPath_ != null; }
    }
    /// <summary>Clears the value of the "controller_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerPath() {
      controllerPath_ = null;
    }

    /// <summary>Field number for the "controller_name" field.</summary>
    public const int ControllerNameFieldNumber = 2;
    private readonly static string ControllerNameDefaultValue = "";

    private string controllerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControllerName {
      get { return controllerName_ ?? ControllerNameDefaultValue; }
      set {
        controllerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "controller_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerName {
      get { return controllerName_ != null; }
    }
    /// <summary>Clears the value of the "controller_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerName() {
      controllerName_ = null;
    }

    /// <summary>Field number for the "reverse_diamond_button_layout" field.</summary>
    public const int ReverseDiamondButtonLayoutFieldNumber = 3;
    private readonly static bool ReverseDiamondButtonLayoutDefaultValue = false;

    private bool reverseDiamondButtonLayout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReverseDiamondButtonLayout {
      get { if ((_hasBits0 & 1) != 0) { return reverseDiamondButtonLayout_; } else { return ReverseDiamondButtonLayoutDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reverseDiamondButtonLayout_ = value;
      }
    }
    /// <summary>Gets whether the "reverse_diamond_button_layout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReverseDiamondButtonLayout {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reverse_diamond_button_layout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReverseDiamondButtonLayout() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CControllerPersonalizationUpdateMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CControllerPersonalizationUpdateMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControllerPath != other.ControllerPath) return false;
      if (ControllerName != other.ControllerName) return false;
      if (ReverseDiamondButtonLayout != other.ReverseDiamondButtonLayout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasControllerPath) hash ^= ControllerPath.GetHashCode();
      if (HasControllerName) hash ^= ControllerName.GetHashCode();
      if (HasReverseDiamondButtonLayout) hash ^= ReverseDiamondButtonLayout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasControllerPath) {
        output.WriteRawTag(10);
        output.WriteString(ControllerPath);
      }
      if (HasControllerName) {
        output.WriteRawTag(18);
        output.WriteString(ControllerName);
      }
      if (HasReverseDiamondButtonLayout) {
        output.WriteRawTag(24);
        output.WriteBool(ReverseDiamondButtonLayout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasControllerPath) {
        output.WriteRawTag(10);
        output.WriteString(ControllerPath);
      }
      if (HasControllerName) {
        output.WriteRawTag(18);
        output.WriteString(ControllerName);
      }
      if (HasReverseDiamondButtonLayout) {
        output.WriteRawTag(24);
        output.WriteBool(ReverseDiamondButtonLayout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasControllerPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerPath);
      }
      if (HasControllerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerName);
      }
      if (HasReverseDiamondButtonLayout) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CControllerPersonalizationUpdateMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasControllerPath) {
        ControllerPath = other.ControllerPath;
      }
      if (other.HasControllerName) {
        ControllerName = other.ControllerName;
      }
      if (other.HasReverseDiamondButtonLayout) {
        ReverseDiamondButtonLayout = other.ReverseDiamondButtonLayout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControllerPath = input.ReadString();
            break;
          }
          case 18: {
            ControllerName = input.ReadString();
            break;
          }
          case 24: {
            ReverseDiamondButtonLayout = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ControllerPath = input.ReadString();
            break;
          }
          case 18: {
            ControllerName = input.ReadString();
            break;
          }
          case 24: {
            ReverseDiamondButtonLayout = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVRConnectionReady : pb::IMessage<CVRConnectionReady>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVRConnectionReady> _parser = new pb::MessageParser<CVRConnectionReady>(() => new CVRConnectionReady());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVRConnectionReady> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVRConnectionReady() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVRConnectionReady(CVRConnectionReady other) : this() {
      connectParams_ = other.connectParams_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVRConnectionReady Clone() {
      return new CVRConnectionReady(this);
    }

    /// <summary>Field number for the "connect_params" field.</summary>
    public const int ConnectParamsFieldNumber = 1;
    private readonly static string ConnectParamsDefaultValue = "";

    private string connectParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConnectParams {
      get { return connectParams_ ?? ConnectParamsDefaultValue; }
      set {
        connectParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connect_params" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectParams {
      get { return connectParams_ != null; }
    }
    /// <summary>Clears the value of the "connect_params" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectParams() {
      connectParams_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVRConnectionReady);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVRConnectionReady other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectParams != other.ConnectParams) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConnectParams) hash ^= ConnectParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConnectParams) {
        output.WriteRawTag(10);
        output.WriteString(ConnectParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConnectParams) {
        output.WriteRawTag(10);
        output.WriteString(ConnectParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasConnectParams) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVRConnectionReady other) {
      if (other == null) {
        return;
      }
      if (other.HasConnectParams) {
        ConnectParams = other.ConnectParams;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectParams = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConnectParams = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamDataLostMsg : pb::IMessage<CStreamDataLostMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamDataLostMsg> _parser = new pb::MessageParser<CStreamDataLostMsg>(() => new CStreamDataLostMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamDataLostMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamDataLostMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamDataLostMsg(CStreamDataLostMsg other) : this() {
      packets_ = other.packets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamDataLostMsg Clone() {
      return new CStreamDataLostMsg(this);
    }

    /// <summary>Field number for the "packets" field.</summary>
    public const int PacketsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_packets_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> packets_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Packets {
      get { return packets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamDataLostMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamDataLostMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!packets_.Equals(other.packets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= packets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      packets_.WriteTo(output, _repeated_packets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      packets_.WriteTo(ref output, _repeated_packets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += packets_.CalculateSize(_repeated_packets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamDataLostMsg other) {
      if (other == null) {
        return;
      }
      packets_.Add(other.packets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            packets_.AddEntriesFrom(input, _repeated_packets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            packets_.AddEntriesFrom(ref input, _repeated_packets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CAudioFormat : pb::IMessage<CAudioFormat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CAudioFormat> _parser = new pb::MessageParser<CAudioFormat>(() => new CAudioFormat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CAudioFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAudioFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAudioFormat(CAudioFormat other) : this() {
      _hasBits0 = other._hasBits0;
      format_ = other.format_;
      frequency_ = other.frequency_;
      channels_ = other.channels_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CAudioFormat Clone() {
      return new CAudioFormat(this);
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EAudioFormat FormatDefaultValue = global::OpenSteamworks.Protobuf.EAudioFormat.None;

    private global::OpenSteamworks.Protobuf.EAudioFormat format_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EAudioFormat Format {
      get { if ((_hasBits0 & 1) != 0) { return format_; } else { return FormatDefaultValue; } }
      set {
        _hasBits0 |= 1;
        format_ = value;
      }
    }
    /// <summary>Gets whether the "format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormat {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormat() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 2;
    private readonly static uint FrequencyDefaultValue = 0;

    private uint frequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frequency {
      get { if ((_hasBits0 & 2) != 0) { return frequency_; } else { return FrequencyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        frequency_ = value;
      }
    }
    /// <summary>Gets whether the "frequency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrequency {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "frequency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrequency() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "channels" field.</summary>
    public const int ChannelsFieldNumber = 3;
    private readonly static uint ChannelsDefaultValue = 0;

    private uint channels_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Channels {
      get { if ((_hasBits0 & 4) != 0) { return channels_; } else { return ChannelsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        channels_ = value;
      }
    }
    /// <summary>Gets whether the "channels" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannels {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "channels" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannels() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CAudioFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CAudioFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Format != other.Format) return false;
      if (Frequency != other.Frequency) return false;
      if (Channels != other.Channels) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFormat) hash ^= Format.GetHashCode();
      if (HasFrequency) hash ^= Frequency.GetHashCode();
      if (HasChannels) hash ^= Channels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (HasFrequency) {
        output.WriteRawTag(16);
        output.WriteUInt32(Frequency);
      }
      if (HasChannels) {
        output.WriteRawTag(24);
        output.WriteUInt32(Channels);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (HasFrequency) {
        output.WriteRawTag(16);
        output.WriteUInt32(Frequency);
      }
      if (HasChannels) {
        output.WriteRawTag(24);
        output.WriteUInt32(Channels);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (HasFrequency) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frequency);
      }
      if (HasChannels) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Channels);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CAudioFormat other) {
      if (other == null) {
        return;
      }
      if (other.HasFormat) {
        Format = other.Format;
      }
      if (other.HasFrequency) {
        Frequency = other.Frequency;
      }
      if (other.HasChannels) {
        Channels = other.Channels;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Format = (global::OpenSteamworks.Protobuf.EAudioFormat) input.ReadEnum();
            break;
          }
          case 16: {
            Frequency = input.ReadUInt32();
            break;
          }
          case 24: {
            Channels = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Format = (global::OpenSteamworks.Protobuf.EAudioFormat) input.ReadEnum();
            break;
          }
          case 16: {
            Frequency = input.ReadUInt32();
            break;
          }
          case 24: {
            Channels = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideoFormat : pb::IMessage<CVideoFormat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideoFormat> _parser = new pb::MessageParser<CVideoFormat>(() => new CVideoFormat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideoFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoFormat(CVideoFormat other) : this() {
      _hasBits0 = other._hasBits0;
      format_ = other.format_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoFormat Clone() {
      return new CVideoFormat(this);
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EVideoFormat FormatDefaultValue = global::OpenSteamworks.Protobuf.EVideoFormat.None;

    private global::OpenSteamworks.Protobuf.EVideoFormat format_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EVideoFormat Format {
      get { if ((_hasBits0 & 1) != 0) { return format_; } else { return FormatDefaultValue; } }
      set {
        _hasBits0 |= 1;
        format_ = value;
      }
    }
    /// <summary>Gets whether the "format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormat {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormat() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideoFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideoFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Format != other.Format) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFormat) hash ^= Format.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (HasWidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(24);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideoFormat other) {
      if (other == null) {
        return;
      }
      if (other.HasFormat) {
        Format = other.Format;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Format = (global::OpenSteamworks.Protobuf.EVideoFormat) input.ReadEnum();
            break;
          }
          case 16: {
            Width = input.ReadUInt32();
            break;
          }
          case 24: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Format = (global::OpenSteamworks.Protobuf.EVideoFormat) input.ReadEnum();
            break;
          }
          case 16: {
            Width = input.ReadUInt32();
            break;
          }
          case 24: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CFrameEvent : pb::IMessage<CFrameEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CFrameEvent> _parser = new pb::MessageParser<CFrameEvent>(() => new CFrameEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CFrameEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameEvent(CFrameEvent other) : this() {
      _hasBits0 = other._hasBits0;
      eventId_ = other.eventId_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameEvent Clone() {
      return new CFrameEvent(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamFrameEvent EventIdDefaultValue = global::OpenSteamworks.Protobuf.EStreamFrameEvent.EstreamInputEventStart;

    private global::OpenSteamworks.Protobuf.EStreamFrameEvent eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamFrameEvent EventId {
      get { if ((_hasBits0 & 1) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        eventId_ = value;
      }
    }
    /// <summary>Gets whether the "event_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "event_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private readonly static uint TimestampDefaultValue = 0;

    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Timestamp {
      get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CFrameEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CFrameEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEventId) hash ^= EventId.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEventId) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventId);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEventId) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventId);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEventId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventId);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CFrameEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasEventId) {
        EventId = other.EventId;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventId = (global::OpenSteamworks.Protobuf.EStreamFrameEvent) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EventId = (global::OpenSteamworks.Protobuf.EStreamFrameEvent) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CFrameStats : pb::IMessage<CFrameStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CFrameStats> _parser = new pb::MessageParser<CFrameStats>(() => new CFrameStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CFrameStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStats(CFrameStats other) : this() {
      _hasBits0 = other._hasBits0;
      frameId_ = other.frameId_;
      inputMark_ = other.inputMark_;
      events_ = other.events_.Clone();
      result_ = other.result_;
      frameStartDelta_ = other.frameStartDelta_;
      frameDisplayDelta_ = other.frameDisplayDelta_;
      pingTime_ = other.pingTime_;
      serverBitrate_ = other.serverBitrate_;
      clientBitrate_ = other.clientBitrate_;
      linbandwidth_ = other.linbandwidth_;
      packetLoss_ = other.packetLoss_;
      frameSize_ = other.frameSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStats Clone() {
      return new CFrameStats(this);
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private readonly static uint FrameIdDefaultValue = 0;

    private uint frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FrameId {
      get { if ((_hasBits0 & 1) != 0) { return frameId_; } else { return FrameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        frameId_ = value;
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "input_mark" field.</summary>
    public const int InputMarkFieldNumber = 2;
    private readonly static uint InputMarkDefaultValue = 0;

    private uint inputMark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InputMark {
      get { if ((_hasBits0 & 2) != 0) { return inputMark_; } else { return InputMarkDefaultValue; } }
      set {
        _hasBits0 |= 2;
        inputMark_ = value;
      }
    }
    /// <summary>Gets whether the "input_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInputMark {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "input_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInputMark() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CFrameEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CFrameEvent.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameEvent> events_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private readonly static global::OpenSteamworks.Protobuf.EStreamFrameResult ResultDefaultValue = global::OpenSteamworks.Protobuf.EStreamFrameResult.Pending;

    private global::OpenSteamworks.Protobuf.EStreamFrameResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamFrameResult Result {
      get { if ((_hasBits0 & 4) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 4;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "frame_start_delta" field.</summary>
    public const int FrameStartDeltaFieldNumber = 5;
    private readonly static float FrameStartDeltaDefaultValue = 0F;

    private float frameStartDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FrameStartDelta {
      get { if ((_hasBits0 & 8) != 0) { return frameStartDelta_; } else { return FrameStartDeltaDefaultValue; } }
      set {
        _hasBits0 |= 8;
        frameStartDelta_ = value;
      }
    }
    /// <summary>Gets whether the "frame_start_delta" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameStartDelta {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "frame_start_delta" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameStartDelta() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "frame_display_delta" field.</summary>
    public const int FrameDisplayDeltaFieldNumber = 6;
    private readonly static float FrameDisplayDeltaDefaultValue = 0F;

    private float frameDisplayDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FrameDisplayDelta {
      get { if ((_hasBits0 & 16) != 0) { return frameDisplayDelta_; } else { return FrameDisplayDeltaDefaultValue; } }
      set {
        _hasBits0 |= 16;
        frameDisplayDelta_ = value;
      }
    }
    /// <summary>Gets whether the "frame_display_delta" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameDisplayDelta {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "frame_display_delta" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameDisplayDelta() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ping_time" field.</summary>
    public const int PingTimeFieldNumber = 7;
    private readonly static float PingTimeDefaultValue = 0F;

    private float pingTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PingTime {
      get { if ((_hasBits0 & 32) != 0) { return pingTime_; } else { return PingTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        pingTime_ = value;
      }
    }
    /// <summary>Gets whether the "ping_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPingTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ping_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPingTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "server_bitrate" field.</summary>
    public const int ServerBitrateFieldNumber = 8;
    private readonly static float ServerBitrateDefaultValue = 0F;

    private float serverBitrate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ServerBitrate {
      get { if ((_hasBits0 & 64) != 0) { return serverBitrate_; } else { return ServerBitrateDefaultValue; } }
      set {
        _hasBits0 |= 64;
        serverBitrate_ = value;
      }
    }
    /// <summary>Gets whether the "server_bitrate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerBitrate {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "server_bitrate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerBitrate() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "client_bitrate" field.</summary>
    public const int ClientBitrateFieldNumber = 9;
    private readonly static float ClientBitrateDefaultValue = 0F;

    private float clientBitrate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ClientBitrate {
      get { if ((_hasBits0 & 128) != 0) { return clientBitrate_; } else { return ClientBitrateDefaultValue; } }
      set {
        _hasBits0 |= 128;
        clientBitrate_ = value;
      }
    }
    /// <summary>Gets whether the "client_bitrate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientBitrate {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "client_bitrate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientBitrate() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "linbandwidth" field.</summary>
    public const int LinbandwidthFieldNumber = 10;
    private readonly static float LinbandwidthDefaultValue = 0F;

    private float linbandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Linbandwidth {
      get { if ((_hasBits0 & 256) != 0) { return linbandwidth_; } else { return LinbandwidthDefaultValue; } }
      set {
        _hasBits0 |= 256;
        linbandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "linbandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLinbandwidth {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "linbandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLinbandwidth() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "packet_loss" field.</summary>
    public const int PacketLossFieldNumber = 11;
    private readonly static float PacketLossDefaultValue = 0F;

    private float packetLoss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PacketLoss {
      get { if ((_hasBits0 & 512) != 0) { return packetLoss_; } else { return PacketLossDefaultValue; } }
      set {
        _hasBits0 |= 512;
        packetLoss_ = value;
      }
    }
    /// <summary>Gets whether the "packet_loss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPacketLoss {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "packet_loss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPacketLoss() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "frame_size" field.</summary>
    public const int FrameSizeFieldNumber = 12;
    private readonly static uint FrameSizeDefaultValue = 0;

    private uint frameSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FrameSize {
      get { if ((_hasBits0 & 1024) != 0) { return frameSize_; } else { return FrameSizeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        frameSize_ = value;
      }
    }
    /// <summary>Gets whether the "frame_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameSize {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "frame_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameSize() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CFrameStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CFrameStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (InputMark != other.InputMark) return false;
      if(!events_.Equals(other.events_)) return false;
      if (Result != other.Result) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FrameStartDelta, other.FrameStartDelta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FrameDisplayDelta, other.FrameDisplayDelta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PingTime, other.PingTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ServerBitrate, other.ServerBitrate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ClientBitrate, other.ClientBitrate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Linbandwidth, other.Linbandwidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PacketLoss, other.PacketLoss)) return false;
      if (FrameSize != other.FrameSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (HasInputMark) hash ^= InputMark.GetHashCode();
      hash ^= events_.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasFrameStartDelta) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FrameStartDelta);
      if (HasFrameDisplayDelta) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FrameDisplayDelta);
      if (HasPingTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PingTime);
      if (HasServerBitrate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ServerBitrate);
      if (HasClientBitrate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ClientBitrate);
      if (HasLinbandwidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Linbandwidth);
      if (HasPacketLoss) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PacketLoss);
      if (HasFrameSize) hash ^= FrameSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFrameId) {
        output.WriteRawTag(8);
        output.WriteUInt32(FrameId);
      }
      if (HasInputMark) {
        output.WriteRawTag(16);
        output.WriteUInt32(InputMark);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (HasResult) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Result);
      }
      if (HasFrameStartDelta) {
        output.WriteRawTag(45);
        output.WriteFloat(FrameStartDelta);
      }
      if (HasFrameDisplayDelta) {
        output.WriteRawTag(53);
        output.WriteFloat(FrameDisplayDelta);
      }
      if (HasPingTime) {
        output.WriteRawTag(61);
        output.WriteFloat(PingTime);
      }
      if (HasServerBitrate) {
        output.WriteRawTag(69);
        output.WriteFloat(ServerBitrate);
      }
      if (HasClientBitrate) {
        output.WriteRawTag(77);
        output.WriteFloat(ClientBitrate);
      }
      if (HasLinbandwidth) {
        output.WriteRawTag(85);
        output.WriteFloat(Linbandwidth);
      }
      if (HasPacketLoss) {
        output.WriteRawTag(93);
        output.WriteFloat(PacketLoss);
      }
      if (HasFrameSize) {
        output.WriteRawTag(96);
        output.WriteUInt32(FrameSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFrameId) {
        output.WriteRawTag(8);
        output.WriteUInt32(FrameId);
      }
      if (HasInputMark) {
        output.WriteRawTag(16);
        output.WriteUInt32(InputMark);
      }
      events_.WriteTo(ref output, _repeated_events_codec);
      if (HasResult) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Result);
      }
      if (HasFrameStartDelta) {
        output.WriteRawTag(45);
        output.WriteFloat(FrameStartDelta);
      }
      if (HasFrameDisplayDelta) {
        output.WriteRawTag(53);
        output.WriteFloat(FrameDisplayDelta);
      }
      if (HasPingTime) {
        output.WriteRawTag(61);
        output.WriteFloat(PingTime);
      }
      if (HasServerBitrate) {
        output.WriteRawTag(69);
        output.WriteFloat(ServerBitrate);
      }
      if (HasClientBitrate) {
        output.WriteRawTag(77);
        output.WriteFloat(ClientBitrate);
      }
      if (HasLinbandwidth) {
        output.WriteRawTag(85);
        output.WriteFloat(Linbandwidth);
      }
      if (HasPacketLoss) {
        output.WriteRawTag(93);
        output.WriteFloat(PacketLoss);
      }
      if (HasFrameSize) {
        output.WriteRawTag(96);
        output.WriteUInt32(FrameSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameId);
      }
      if (HasInputMark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputMark);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasFrameStartDelta) {
        size += 1 + 4;
      }
      if (HasFrameDisplayDelta) {
        size += 1 + 4;
      }
      if (HasPingTime) {
        size += 1 + 4;
      }
      if (HasServerBitrate) {
        size += 1 + 4;
      }
      if (HasClientBitrate) {
        size += 1 + 4;
      }
      if (HasLinbandwidth) {
        size += 1 + 4;
      }
      if (HasPacketLoss) {
        size += 1 + 4;
      }
      if (HasFrameSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CFrameStats other) {
      if (other == null) {
        return;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      if (other.HasInputMark) {
        InputMark = other.InputMark;
      }
      events_.Add(other.events_);
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasFrameStartDelta) {
        FrameStartDelta = other.FrameStartDelta;
      }
      if (other.HasFrameDisplayDelta) {
        FrameDisplayDelta = other.FrameDisplayDelta;
      }
      if (other.HasPingTime) {
        PingTime = other.PingTime;
      }
      if (other.HasServerBitrate) {
        ServerBitrate = other.ServerBitrate;
      }
      if (other.HasClientBitrate) {
        ClientBitrate = other.ClientBitrate;
      }
      if (other.HasLinbandwidth) {
        Linbandwidth = other.Linbandwidth;
      }
      if (other.HasPacketLoss) {
        PacketLoss = other.PacketLoss;
      }
      if (other.HasFrameSize) {
        FrameSize = other.FrameSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadUInt32();
            break;
          }
          case 16: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 26: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 32: {
            Result = (global::OpenSteamworks.Protobuf.EStreamFrameResult) input.ReadEnum();
            break;
          }
          case 45: {
            FrameStartDelta = input.ReadFloat();
            break;
          }
          case 53: {
            FrameDisplayDelta = input.ReadFloat();
            break;
          }
          case 61: {
            PingTime = input.ReadFloat();
            break;
          }
          case 69: {
            ServerBitrate = input.ReadFloat();
            break;
          }
          case 77: {
            ClientBitrate = input.ReadFloat();
            break;
          }
          case 85: {
            Linbandwidth = input.ReadFloat();
            break;
          }
          case 93: {
            PacketLoss = input.ReadFloat();
            break;
          }
          case 96: {
            FrameSize = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FrameId = input.ReadUInt32();
            break;
          }
          case 16: {
            InputMark = input.ReadUInt32();
            break;
          }
          case 26: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 32: {
            Result = (global::OpenSteamworks.Protobuf.EStreamFrameResult) input.ReadEnum();
            break;
          }
          case 45: {
            FrameStartDelta = input.ReadFloat();
            break;
          }
          case 53: {
            FrameDisplayDelta = input.ReadFloat();
            break;
          }
          case 61: {
            PingTime = input.ReadFloat();
            break;
          }
          case 69: {
            ServerBitrate = input.ReadFloat();
            break;
          }
          case 77: {
            ClientBitrate = input.ReadFloat();
            break;
          }
          case 85: {
            Linbandwidth = input.ReadFloat();
            break;
          }
          case 93: {
            PacketLoss = input.ReadFloat();
            break;
          }
          case 96: {
            FrameSize = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CFrameStatAccumulatedValue : pb::IMessage<CFrameStatAccumulatedValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CFrameStatAccumulatedValue> _parser = new pb::MessageParser<CFrameStatAccumulatedValue>(() => new CFrameStatAccumulatedValue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CFrameStatAccumulatedValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStatAccumulatedValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStatAccumulatedValue(CFrameStatAccumulatedValue other) : this() {
      _hasBits0 = other._hasBits0;
      statType_ = other.statType_;
      count_ = other.count_;
      average_ = other.average_;
      stddev_ = other.stddev_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStatAccumulatedValue Clone() {
      return new CFrameStatAccumulatedValue(this);
    }

    /// <summary>Field number for the "stat_type" field.</summary>
    public const int StatTypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EFrameAccumulatedStat StatTypeDefaultValue = global::OpenSteamworks.Protobuf.EFrameAccumulatedStat.EframeStatFps;

    private global::OpenSteamworks.Protobuf.EFrameAccumulatedStat statType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EFrameAccumulatedStat StatType {
      get { if ((_hasBits0 & 1) != 0) { return statType_; } else { return StatTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        statType_ = value;
      }
    }
    /// <summary>Gets whether the "stat_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stat_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "average" field.</summary>
    public const int AverageFieldNumber = 3;
    private readonly static float AverageDefaultValue = 0F;

    private float average_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Average {
      get { if ((_hasBits0 & 4) != 0) { return average_; } else { return AverageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        average_ = value;
      }
    }
    /// <summary>Gets whether the "average" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAverage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "average" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAverage() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "stddev" field.</summary>
    public const int StddevFieldNumber = 4;
    private readonly static float StddevDefaultValue = 0F;

    private float stddev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Stddev {
      get { if ((_hasBits0 & 8) != 0) { return stddev_; } else { return StddevDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stddev_ = value;
      }
    }
    /// <summary>Gets whether the "stddev" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStddev {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "stddev" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStddev() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CFrameStatAccumulatedValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CFrameStatAccumulatedValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatType != other.StatType) return false;
      if (Count != other.Count) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Average, other.Average)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Stddev, other.Stddev)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatType) hash ^= StatType.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasAverage) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Average);
      if (HasStddev) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Stddev);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStatType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) StatType);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (HasAverage) {
        output.WriteRawTag(29);
        output.WriteFloat(Average);
      }
      if (HasStddev) {
        output.WriteRawTag(37);
        output.WriteFloat(Stddev);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStatType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) StatType);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (HasAverage) {
        output.WriteRawTag(29);
        output.WriteFloat(Average);
      }
      if (HasStddev) {
        output.WriteRawTag(37);
        output.WriteFloat(Stddev);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStatType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StatType);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (HasAverage) {
        size += 1 + 4;
      }
      if (HasStddev) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CFrameStatAccumulatedValue other) {
      if (other == null) {
        return;
      }
      if (other.HasStatType) {
        StatType = other.StatType;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasAverage) {
        Average = other.Average;
      }
      if (other.HasStddev) {
        Stddev = other.Stddev;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatType = (global::OpenSteamworks.Protobuf.EFrameAccumulatedStat) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 29: {
            Average = input.ReadFloat();
            break;
          }
          case 37: {
            Stddev = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StatType = (global::OpenSteamworks.Protobuf.EFrameAccumulatedStat) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 29: {
            Average = input.ReadFloat();
            break;
          }
          case 37: {
            Stddev = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CFrameStatsListMsg : pb::IMessage<CFrameStatsListMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CFrameStatsListMsg> _parser = new pb::MessageParser<CFrameStatsListMsg>(() => new CFrameStatsListMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CFrameStatsListMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStatsListMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStatsListMsg(CFrameStatsListMsg other) : this() {
      _hasBits0 = other._hasBits0;
      dataType_ = other.dataType_;
      stats_ = other.stats_.Clone();
      accumulatedStats_ = other.accumulatedStats_.Clone();
      latestFrameId_ = other.latestFrameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CFrameStatsListMsg Clone() {
      return new CFrameStatsListMsg(this);
    }

    /// <summary>Field number for the "data_type" field.</summary>
    public const int DataTypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamingDataType DataTypeDefaultValue = global::OpenSteamworks.Protobuf.EStreamingDataType.EstreamingAudioData;

    private global::OpenSteamworks.Protobuf.EStreamingDataType dataType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamingDataType DataType {
      get { if ((_hasBits0 & 1) != 0) { return dataType_; } else { return DataTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dataType_ = value;
      }
    }
    /// <summary>Gets whether the "data_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDataType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "data_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDataType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CFrameStats> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CFrameStats.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameStats> stats_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameStats> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "accumulated_stats" field.</summary>
    public const int AccumulatedStatsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue> _repeated_accumulatedStats_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue> accumulatedStats_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CFrameStatAccumulatedValue> AccumulatedStats {
      get { return accumulatedStats_; }
    }

    /// <summary>Field number for the "latest_frame_id" field.</summary>
    public const int LatestFrameIdFieldNumber = 4;
    private readonly static int LatestFrameIdDefaultValue = 0;

    private int latestFrameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LatestFrameId {
      get { if ((_hasBits0 & 2) != 0) { return latestFrameId_; } else { return LatestFrameIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        latestFrameId_ = value;
      }
    }
    /// <summary>Gets whether the "latest_frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLatestFrameId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "latest_frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLatestFrameId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CFrameStatsListMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CFrameStatsListMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataType != other.DataType) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if(!accumulatedStats_.Equals(other.accumulatedStats_)) return false;
      if (LatestFrameId != other.LatestFrameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDataType) hash ^= DataType.GetHashCode();
      hash ^= stats_.GetHashCode();
      hash ^= accumulatedStats_.GetHashCode();
      if (HasLatestFrameId) hash ^= LatestFrameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDataType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      accumulatedStats_.WriteTo(output, _repeated_accumulatedStats_codec);
      if (HasLatestFrameId) {
        output.WriteRawTag(32);
        output.WriteInt32(LatestFrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDataType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      accumulatedStats_.WriteTo(ref output, _repeated_accumulatedStats_codec);
      if (HasLatestFrameId) {
        output.WriteRawTag(32);
        output.WriteInt32(LatestFrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDataType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      size += accumulatedStats_.CalculateSize(_repeated_accumulatedStats_codec);
      if (HasLatestFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LatestFrameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CFrameStatsListMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasDataType) {
        DataType = other.DataType;
      }
      stats_.Add(other.stats_);
      accumulatedStats_.Add(other.accumulatedStats_);
      if (other.HasLatestFrameId) {
        LatestFrameId = other.LatestFrameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DataType = (global::OpenSteamworks.Protobuf.EStreamingDataType) input.ReadEnum();
            break;
          }
          case 18: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 26: {
            accumulatedStats_.AddEntriesFrom(input, _repeated_accumulatedStats_codec);
            break;
          }
          case 32: {
            LatestFrameId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DataType = (global::OpenSteamworks.Protobuf.EStreamingDataType) input.ReadEnum();
            break;
          }
          case 18: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 26: {
            accumulatedStats_.AddEntriesFrom(ref input, _repeated_accumulatedStats_codec);
            break;
          }
          case 32: {
            LatestFrameId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStreamingSessionStats : pb::IMessage<CStreamingSessionStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStreamingSessionStats> _parser = new pb::MessageParser<CStreamingSessionStats>(() => new CStreamingSessionStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStreamingSessionStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingSessionStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingSessionStats(CStreamingSessionStats other) : this() {
      _hasBits0 = other._hasBits0;
      frameLossPercentage_ = other.frameLossPercentage_;
      averageNetwortimeMs_ = other.averageNetwortimeMs_;
      stddevNetwortimeMs_ = other.stddevNetwortimeMs_;
      testData_ = other.testData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStreamingSessionStats Clone() {
      return new CStreamingSessionStats(this);
    }

    /// <summary>Field number for the "frame_loss_percentage" field.</summary>
    public const int FrameLossPercentageFieldNumber = 1;
    private readonly static float FrameLossPercentageDefaultValue = 0F;

    private float frameLossPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FrameLossPercentage {
      get { if ((_hasBits0 & 1) != 0) { return frameLossPercentage_; } else { return FrameLossPercentageDefaultValue; } }
      set {
        _hasBits0 |= 1;
        frameLossPercentage_ = value;
      }
    }
    /// <summary>Gets whether the "frame_loss_percentage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameLossPercentage {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "frame_loss_percentage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameLossPercentage() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "average_networtime_ms" field.</summary>
    public const int AverageNetwortimeMsFieldNumber = 2;
    private readonly static float AverageNetwortimeMsDefaultValue = 0F;

    private float averageNetwortimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AverageNetwortimeMs {
      get { if ((_hasBits0 & 2) != 0) { return averageNetwortimeMs_; } else { return AverageNetwortimeMsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        averageNetwortimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "average_networtime_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAverageNetwortimeMs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "average_networtime_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAverageNetwortimeMs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "stddev_networtime_ms" field.</summary>
    public const int StddevNetwortimeMsFieldNumber = 3;
    private readonly static float StddevNetwortimeMsDefaultValue = 0F;

    private float stddevNetwortimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float StddevNetwortimeMs {
      get { if ((_hasBits0 & 4) != 0) { return stddevNetwortimeMs_; } else { return StddevNetwortimeMsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        stddevNetwortimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "stddev_networtime_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStddevNetwortimeMs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "stddev_networtime_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStddevNetwortimeMs() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "test_data" field.</summary>
    public const int TestDataFieldNumber = 4;
    private readonly static string TestDataDefaultValue = "";

    private string testData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TestData {
      get { return testData_ ?? TestDataDefaultValue; }
      set {
        testData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "test_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTestData {
      get { return testData_ != null; }
    }
    /// <summary>Clears the value of the "test_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTestData() {
      testData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStreamingSessionStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStreamingSessionStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FrameLossPercentage, other.FrameLossPercentage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AverageNetwortimeMs, other.AverageNetwortimeMs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StddevNetwortimeMs, other.StddevNetwortimeMs)) return false;
      if (TestData != other.TestData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFrameLossPercentage) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FrameLossPercentage);
      if (HasAverageNetwortimeMs) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AverageNetwortimeMs);
      if (HasStddevNetwortimeMs) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StddevNetwortimeMs);
      if (HasTestData) hash ^= TestData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFrameLossPercentage) {
        output.WriteRawTag(13);
        output.WriteFloat(FrameLossPercentage);
      }
      if (HasAverageNetwortimeMs) {
        output.WriteRawTag(21);
        output.WriteFloat(AverageNetwortimeMs);
      }
      if (HasStddevNetwortimeMs) {
        output.WriteRawTag(29);
        output.WriteFloat(StddevNetwortimeMs);
      }
      if (HasTestData) {
        output.WriteRawTag(34);
        output.WriteString(TestData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFrameLossPercentage) {
        output.WriteRawTag(13);
        output.WriteFloat(FrameLossPercentage);
      }
      if (HasAverageNetwortimeMs) {
        output.WriteRawTag(21);
        output.WriteFloat(AverageNetwortimeMs);
      }
      if (HasStddevNetwortimeMs) {
        output.WriteRawTag(29);
        output.WriteFloat(StddevNetwortimeMs);
      }
      if (HasTestData) {
        output.WriteRawTag(34);
        output.WriteString(TestData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFrameLossPercentage) {
        size += 1 + 4;
      }
      if (HasAverageNetwortimeMs) {
        size += 1 + 4;
      }
      if (HasStddevNetwortimeMs) {
        size += 1 + 4;
      }
      if (HasTestData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStreamingSessionStats other) {
      if (other == null) {
        return;
      }
      if (other.HasFrameLossPercentage) {
        FrameLossPercentage = other.FrameLossPercentage;
      }
      if (other.HasAverageNetwortimeMs) {
        AverageNetwortimeMs = other.AverageNetwortimeMs;
      }
      if (other.HasStddevNetwortimeMs) {
        StddevNetwortimeMs = other.StddevNetwortimeMs;
      }
      if (other.HasTestData) {
        TestData = other.TestData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            FrameLossPercentage = input.ReadFloat();
            break;
          }
          case 21: {
            AverageNetwortimeMs = input.ReadFloat();
            break;
          }
          case 29: {
            StddevNetwortimeMs = input.ReadFloat();
            break;
          }
          case 34: {
            TestData = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            FrameLossPercentage = input.ReadFloat();
            break;
          }
          case 21: {
            AverageNetwortimeMs = input.ReadFloat();
            break;
          }
          case 29: {
            StddevNetwortimeMs = input.ReadFloat();
            break;
          }
          case 34: {
            TestData = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CDebugDumpMsg : pb::IMessage<CDebugDumpMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CDebugDumpMsg> _parser = new pb::MessageParser<CDebugDumpMsg>(() => new CDebugDumpMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CDebugDumpMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDebugDumpMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDebugDumpMsg(CDebugDumpMsg other) : this() {
      screenshot_ = other.screenshot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CDebugDumpMsg Clone() {
      return new CDebugDumpMsg(this);
    }

    /// <summary>Field number for the "screenshot" field.</summary>
    public const int ScreenshotFieldNumber = 1;
    private readonly static pb::ByteString ScreenshotDefaultValue = pb::ByteString.Empty;

    private pb::ByteString screenshot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Screenshot {
      get { return screenshot_ ?? ScreenshotDefaultValue; }
      set {
        screenshot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "screenshot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScreenshot {
      get { return screenshot_ != null; }
    }
    /// <summary>Clears the value of the "screenshot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScreenshot() {
      screenshot_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CDebugDumpMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CDebugDumpMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Screenshot != other.Screenshot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScreenshot) hash ^= Screenshot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScreenshot) {
        output.WriteRawTag(10);
        output.WriteBytes(Screenshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScreenshot) {
        output.WriteRawTag(10);
        output.WriteBytes(Screenshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScreenshot) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Screenshot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CDebugDumpMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasScreenshot) {
        Screenshot = other.Screenshot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Screenshot = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Screenshot = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CLogMsg : pb::IMessage<CLogMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CLogMsg> _parser = new pb::MessageParser<CLogMsg>(() => new CLogMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CLogMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CLogMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CLogMsg(CLogMsg other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CLogMsg Clone() {
      return new CLogMsg(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CLogMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CLogMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CLogMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CLogUploadMsg : pb::IMessage<CLogUploadMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CLogUploadMsg> _parser = new pb::MessageParser<CLogUploadMsg>(() => new CLogUploadMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CLogUploadMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CLogUploadMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CLogUploadMsg(CLogUploadMsg other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CLogUploadMsg Clone() {
      return new CLogUploadMsg(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ELogFileType TypeDefaultValue = global::OpenSteamworks.Protobuf.ELogFileType.ElogFileSystemBoot;

    private global::OpenSteamworks.Protobuf.ELogFileType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ELogFileType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CLogUploadMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CLogUploadMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CLogUploadMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.ELogFileType) input.ReadEnum();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.ELogFileType) input.ReadEnum();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CTransportSignalMsg : pb::IMessage<CTransportSignalMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CTransportSignalMsg> _parser = new pb::MessageParser<CTransportSignalMsg>(() => new CTransportSignalMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CTransportSignalMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTransportSignalMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTransportSignalMsg(CTransportSignalMsg other) : this() {
      webrtc_ = other.webrtc_ != null ? other.webrtc_.Clone() : null;
      sdr_ = other.sdr_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CTransportSignalMsg Clone() {
      return new CTransportSignalMsg(this);
    }

    /// <summary>Field number for the "webrtc" field.</summary>
    public const int WebrtcFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage webrtc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage Webrtc {
      get { return webrtc_; }
      set {
        webrtc_ = value;
      }
    }

    /// <summary>Field number for the "sdr" field.</summary>
    public const int SdrFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_sdr_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> sdr_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Sdr {
      get { return sdr_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CTransportSignalMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CTransportSignalMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Webrtc, other.Webrtc)) return false;
      if(!sdr_.Equals(other.sdr_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (webrtc_ != null) hash ^= Webrtc.GetHashCode();
      hash ^= sdr_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (webrtc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Webrtc);
      }
      sdr_.WriteTo(output, _repeated_sdr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (webrtc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Webrtc);
      }
      sdr_.WriteTo(ref output, _repeated_sdr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (webrtc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Webrtc);
      }
      size += sdr_.CalculateSize(_repeated_sdr_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CTransportSignalMsg other) {
      if (other == null) {
        return;
      }
      if (other.webrtc_ != null) {
        if (webrtc_ == null) {
          Webrtc = new global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage();
        }
        Webrtc.MergeFrom(other.Webrtc);
      }
      sdr_.Add(other.sdr_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (webrtc_ == null) {
              Webrtc = new global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage();
            }
            input.ReadMessage(Webrtc);
            break;
          }
          case 18: {
            sdr_.AddEntriesFrom(input, _repeated_sdr_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (webrtc_ == null) {
              Webrtc = new global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage();
            }
            input.ReadMessage(Webrtc);
            break;
          }
          case 18: {
            sdr_.AddEntriesFrom(ref input, _repeated_sdr_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CTransportSignalMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class WebRTCMessage : pb::IMessage<WebRTCMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WebRTCMessage> _parser = new pb::MessageParser<WebRTCMessage>(() => new WebRTCMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<WebRTCMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CTransportSignalMsg.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WebRTCMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WebRTCMessage(WebRTCMessage other) : this() {
          switch (other.MsgCase) {
            case MsgOneofCase.Greeting:
              Greeting = other.Greeting;
              break;
            case MsgOneofCase.Offer:
              Offer = other.Offer;
              break;
            case MsgOneofCase.Answer:
              Answer = other.Answer;
              break;
            case MsgOneofCase.Candidate:
              Candidate = other.Candidate.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WebRTCMessage Clone() {
          return new WebRTCMessage(this);
        }

        /// <summary>Field number for the "greeting" field.</summary>
        public const int GreetingFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Greeting {
          get { return HasGreeting ? (bool) msg_ : false; }
          set {
            msg_ = value;
            msgCase_ = MsgOneofCase.Greeting;
          }
        }
        /// <summary>Gets whether the "greeting" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGreeting {
          get { return msgCase_ == MsgOneofCase.Greeting; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "greeting" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGreeting() {
          if (HasGreeting) {
            ClearMsg();
          }
        }

        /// <summary>Field number for the "offer" field.</summary>
        public const int OfferFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Offer {
          get { return HasOffer ? (string) msg_ : ""; }
          set {
            msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            msgCase_ = MsgOneofCase.Offer;
          }
        }
        /// <summary>Gets whether the "offer" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOffer {
          get { return msgCase_ == MsgOneofCase.Offer; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "offer" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOffer() {
          if (HasOffer) {
            ClearMsg();
          }
        }

        /// <summary>Field number for the "answer" field.</summary>
        public const int AnswerFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Answer {
          get { return HasAnswer ? (string) msg_ : ""; }
          set {
            msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            msgCase_ = MsgOneofCase.Answer;
          }
        }
        /// <summary>Gets whether the "answer" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAnswer {
          get { return msgCase_ == MsgOneofCase.Answer; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "answer" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAnswer() {
          if (HasAnswer) {
            ClearMsg();
          }
        }

        /// <summary>Field number for the "candidate" field.</summary>
        public const int CandidateFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate Candidate {
          get { return msgCase_ == MsgOneofCase.Candidate ? (global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate) msg_ : null; }
          set {
            msg_ = value;
            msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Candidate;
          }
        }

        private object msg_;
        /// <summary>Enum of possible cases for the "msg" oneof.</summary>
        public enum MsgOneofCase {
          None = 0,
          Greeting = 1,
          Offer = 2,
          Answer = 3,
          Candidate = 4,
        }
        private MsgOneofCase msgCase_ = MsgOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MsgOneofCase MsgCase {
          get { return msgCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMsg() {
          msgCase_ = MsgOneofCase.None;
          msg_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as WebRTCMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(WebRTCMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Greeting != other.Greeting) return false;
          if (Offer != other.Offer) return false;
          if (Answer != other.Answer) return false;
          if (!object.Equals(Candidate, other.Candidate)) return false;
          if (MsgCase != other.MsgCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasGreeting) hash ^= Greeting.GetHashCode();
          if (HasOffer) hash ^= Offer.GetHashCode();
          if (HasAnswer) hash ^= Answer.GetHashCode();
          if (msgCase_ == MsgOneofCase.Candidate) hash ^= Candidate.GetHashCode();
          hash ^= (int) msgCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasGreeting) {
            output.WriteRawTag(8);
            output.WriteBool(Greeting);
          }
          if (HasOffer) {
            output.WriteRawTag(18);
            output.WriteString(Offer);
          }
          if (HasAnswer) {
            output.WriteRawTag(26);
            output.WriteString(Answer);
          }
          if (msgCase_ == MsgOneofCase.Candidate) {
            output.WriteRawTag(34);
            output.WriteMessage(Candidate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasGreeting) {
            output.WriteRawTag(8);
            output.WriteBool(Greeting);
          }
          if (HasOffer) {
            output.WriteRawTag(18);
            output.WriteString(Offer);
          }
          if (HasAnswer) {
            output.WriteRawTag(26);
            output.WriteString(Answer);
          }
          if (msgCase_ == MsgOneofCase.Candidate) {
            output.WriteRawTag(34);
            output.WriteMessage(Candidate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasGreeting) {
            size += 1 + 1;
          }
          if (HasOffer) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Offer);
          }
          if (HasAnswer) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
          }
          if (msgCase_ == MsgOneofCase.Candidate) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Candidate);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(WebRTCMessage other) {
          if (other == null) {
            return;
          }
          switch (other.MsgCase) {
            case MsgOneofCase.Greeting:
              Greeting = other.Greeting;
              break;
            case MsgOneofCase.Offer:
              Offer = other.Offer;
              break;
            case MsgOneofCase.Answer:
              Answer = other.Answer;
              break;
            case MsgOneofCase.Candidate:
              if (Candidate == null) {
                Candidate = new global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate();
              }
              Candidate.MergeFrom(other.Candidate);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Greeting = input.ReadBool();
                break;
              }
              case 18: {
                Offer = input.ReadString();
                break;
              }
              case 26: {
                Answer = input.ReadString();
                break;
              }
              case 34: {
                global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate subBuilder = new global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate();
                if (msgCase_ == MsgOneofCase.Candidate) {
                  subBuilder.MergeFrom(Candidate);
                }
                input.ReadMessage(subBuilder);
                Candidate = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Greeting = input.ReadBool();
                break;
              }
              case 18: {
                Offer = input.ReadString();
                break;
              }
              case 26: {
                Answer = input.ReadString();
                break;
              }
              case 34: {
                global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate subBuilder = new global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Types.Candidate();
                if (msgCase_ == MsgOneofCase.Candidate) {
                  subBuilder.MergeFrom(Candidate);
                }
                input.ReadMessage(subBuilder);
                Candidate = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the WebRTCMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Candidate : pb::IMessage<Candidate>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Candidate> _parser = new pb::MessageParser<Candidate>(() => new Candidate());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Candidate> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::OpenSteamworks.Protobuf.CTransportSignalMsg.Types.WebRTCMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Candidate() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Candidate(Candidate other) : this() {
              _hasBits0 = other._hasBits0;
              sdpMid_ = other.sdpMid_;
              sdpMlineIndex_ = other.sdpMlineIndex_;
              candidate_ = other.candidate_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Candidate Clone() {
              return new Candidate(this);
            }

            /// <summary>Field number for the "sdp_mid" field.</summary>
            public const int SdpMidFieldNumber = 1;
            private readonly static string SdpMidDefaultValue = "";

            private string sdpMid_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string SdpMid {
              get { return sdpMid_ ?? SdpMidDefaultValue; }
              set {
                sdpMid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "sdp_mid" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasSdpMid {
              get { return sdpMid_ != null; }
            }
            /// <summary>Clears the value of the "sdp_mid" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearSdpMid() {
              sdpMid_ = null;
            }

            /// <summary>Field number for the "sdp_mline_index" field.</summary>
            public const int SdpMlineIndexFieldNumber = 2;
            private readonly static int SdpMlineIndexDefaultValue = 0;

            private int sdpMlineIndex_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int SdpMlineIndex {
              get { if ((_hasBits0 & 1) != 0) { return sdpMlineIndex_; } else { return SdpMlineIndexDefaultValue; } }
              set {
                _hasBits0 |= 1;
                sdpMlineIndex_ = value;
              }
            }
            /// <summary>Gets whether the "sdp_mline_index" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasSdpMlineIndex {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "sdp_mline_index" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearSdpMlineIndex() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "candidate" field.</summary>
            public const int Candidate_FieldNumber = 3;
            private readonly static string Candidate_DefaultValue = "";

            private string candidate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Candidate_ {
              get { return candidate_ ?? Candidate_DefaultValue; }
              set {
                candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "candidate" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasCandidate_ {
              get { return candidate_ != null; }
            }
            /// <summary>Clears the value of the "candidate" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearCandidate_() {
              candidate_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Candidate);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Candidate other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (SdpMid != other.SdpMid) return false;
              if (SdpMlineIndex != other.SdpMlineIndex) return false;
              if (Candidate_ != other.Candidate_) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasSdpMid) hash ^= SdpMid.GetHashCode();
              if (HasSdpMlineIndex) hash ^= SdpMlineIndex.GetHashCode();
              if (HasCandidate_) hash ^= Candidate_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasSdpMid) {
                output.WriteRawTag(10);
                output.WriteString(SdpMid);
              }
              if (HasSdpMlineIndex) {
                output.WriteRawTag(16);
                output.WriteInt32(SdpMlineIndex);
              }
              if (HasCandidate_) {
                output.WriteRawTag(26);
                output.WriteString(Candidate_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasSdpMid) {
                output.WriteRawTag(10);
                output.WriteString(SdpMid);
              }
              if (HasSdpMlineIndex) {
                output.WriteRawTag(16);
                output.WriteInt32(SdpMlineIndex);
              }
              if (HasCandidate_) {
                output.WriteRawTag(26);
                output.WriteString(Candidate_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasSdpMid) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SdpMid);
              }
              if (HasSdpMlineIndex) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(SdpMlineIndex);
              }
              if (HasCandidate_) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Candidate_);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Candidate other) {
              if (other == null) {
                return;
              }
              if (other.HasSdpMid) {
                SdpMid = other.SdpMid;
              }
              if (other.HasSdpMlineIndex) {
                SdpMlineIndex = other.SdpMlineIndex;
              }
              if (other.HasCandidate_) {
                Candidate_ = other.Candidate_;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    SdpMid = input.ReadString();
                    break;
                  }
                  case 16: {
                    SdpMlineIndex = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    Candidate_ = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    SdpMid = input.ReadString();
                    break;
                  }
                  case 16: {
                    SdpMlineIndex = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    Candidate_ = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CControllerConfigMsg : pb::IMessage<CControllerConfigMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CControllerConfigMsg> _parser = new pb::MessageParser<CControllerConfigMsg>(() => new CControllerConfigMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CControllerConfigMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesRemoteplayReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CControllerConfigMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CControllerConfigMsg(CControllerConfigMsg other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      controllerPath_ = other.controllerPath_;
      appid_ = other.appid_;
      personalizationResponse_ = other.personalizationResponse_ != null ? other.personalizationResponse_.Clone() : null;
      configResponse_ = other.configResponse_.Clone();
      activeConfigChangeMsg_ = other.activeConfigChangeMsg_ != null ? other.activeConfigChangeMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CControllerConfigMsg Clone() {
      return new CControllerConfigMsg(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg TypeDefaultValue = global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg.RequestConfigsForApp;

    private global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "controllerPath" field.</summary>
    public const int ControllerPathFieldNumber = 2;
    private readonly static string ControllerPathDefaultValue = "";

    private string controllerPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ControllerPath {
      get { return controllerPath_ ?? ControllerPathDefaultValue; }
      set {
        controllerPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "controllerPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerPath {
      get { return controllerPath_ != null; }
    }
    /// <summary>Clears the value of the "controllerPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerPath() {
      controllerPath_ = null;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 3;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "personalizationResponse" field.</summary>
    public const int PersonalizationResponseFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse personalizationResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse PersonalizationResponse {
      get { return personalizationResponse_; }
      set {
        personalizationResponse_ = value;
      }
    }

    /// <summary>Field number for the "configResponse" field.</summary>
    public const int ConfigResponseFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse> _repeated_configResponse_codec
        = pb::FieldCodec.ForMessage(50, global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse> configResponse_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerConfigResponse> ConfigResponse {
      get { return configResponse_; }
    }

    /// <summary>Field number for the "activeConfigChangeMsg" field.</summary>
    public const int ActiveConfigChangeMsgFieldNumber = 7;
    private global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg activeConfigChangeMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg ActiveConfigChangeMsg {
      get { return activeConfigChangeMsg_; }
      set {
        activeConfigChangeMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CControllerConfigMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CControllerConfigMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ControllerPath != other.ControllerPath) return false;
      if (Appid != other.Appid) return false;
      if (!object.Equals(PersonalizationResponse, other.PersonalizationResponse)) return false;
      if(!configResponse_.Equals(other.configResponse_)) return false;
      if (!object.Equals(ActiveConfigChangeMsg, other.ActiveConfigChangeMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasControllerPath) hash ^= ControllerPath.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (personalizationResponse_ != null) hash ^= PersonalizationResponse.GetHashCode();
      hash ^= configResponse_.GetHashCode();
      if (activeConfigChangeMsg_ != null) hash ^= ActiveConfigChangeMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasControllerPath) {
        output.WriteRawTag(18);
        output.WriteString(ControllerPath);
      }
      if (HasAppid) {
        output.WriteRawTag(24);
        output.WriteUInt32(Appid);
      }
      if (personalizationResponse_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PersonalizationResponse);
      }
      configResponse_.WriteTo(output, _repeated_configResponse_codec);
      if (activeConfigChangeMsg_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ActiveConfigChangeMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasControllerPath) {
        output.WriteRawTag(18);
        output.WriteString(ControllerPath);
      }
      if (HasAppid) {
        output.WriteRawTag(24);
        output.WriteUInt32(Appid);
      }
      if (personalizationResponse_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PersonalizationResponse);
      }
      configResponse_.WriteTo(ref output, _repeated_configResponse_codec);
      if (activeConfigChangeMsg_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ActiveConfigChangeMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasControllerPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerPath);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (personalizationResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PersonalizationResponse);
      }
      size += configResponse_.CalculateSize(_repeated_configResponse_codec);
      if (activeConfigChangeMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveConfigChangeMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CControllerConfigMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasControllerPath) {
        ControllerPath = other.ControllerPath;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.personalizationResponse_ != null) {
        if (personalizationResponse_ == null) {
          PersonalizationResponse = new global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse();
        }
        PersonalizationResponse.MergeFrom(other.PersonalizationResponse);
      }
      configResponse_.Add(other.configResponse_);
      if (other.activeConfigChangeMsg_ != null) {
        if (activeConfigChangeMsg_ == null) {
          ActiveConfigChangeMsg = new global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg();
        }
        ActiveConfigChangeMsg.MergeFrom(other.ActiveConfigChangeMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg) input.ReadEnum();
            break;
          }
          case 18: {
            ControllerPath = input.ReadString();
            break;
          }
          case 24: {
            Appid = input.ReadUInt32();
            break;
          }
          case 34: {
            if (personalizationResponse_ == null) {
              PersonalizationResponse = new global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse();
            }
            input.ReadMessage(PersonalizationResponse);
            break;
          }
          case 50: {
            configResponse_.AddEntriesFrom(input, _repeated_configResponse_codec);
            break;
          }
          case 58: {
            if (activeConfigChangeMsg_ == null) {
              ActiveConfigChangeMsg = new global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg();
            }
            input.ReadMessage(ActiveConfigChangeMsg);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.EStreamControllerConfigMsg) input.ReadEnum();
            break;
          }
          case 18: {
            ControllerPath = input.ReadString();
            break;
          }
          case 24: {
            Appid = input.ReadUInt32();
            break;
          }
          case 34: {
            if (personalizationResponse_ == null) {
              PersonalizationResponse = new global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerPersonalizationResponse();
            }
            input.ReadMessage(PersonalizationResponse);
            break;
          }
          case 50: {
            configResponse_.AddEntriesFrom(ref input, _repeated_configResponse_codec);
            break;
          }
          case 58: {
            if (activeConfigChangeMsg_ == null) {
              ActiveConfigChangeMsg = new global::OpenSteamworks.Protobuf.CControllerConfigMsg.Types.ControllerActiveConfigMsg();
            }
            input.ReadMessage(ActiveConfigChangeMsg);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CControllerConfigMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ControllerConfigResponse : pb::IMessage<ControllerConfigResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ControllerConfigResponse> _parser = new pb::MessageParser<ControllerConfigResponse>(() => new ControllerConfigResponse());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ControllerConfigResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CControllerConfigMsg.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerConfigResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerConfigResponse(ControllerConfigResponse other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          configURL_ = other.configURL_;
          controllerType_ = other.controllerType_;
          controllerData_ = other.controllerData_;
          selectionOrder_ = other.selectionOrder_;
          actionBlock_ = other.actionBlock_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerConfigResponse Clone() {
          return new ControllerConfigResponse(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "configURL" field.</summary>
        public const int ConfigURLFieldNumber = 2;
        private readonly static string ConfigURLDefaultValue = "";

        private string configURL_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ConfigURL {
          get { return configURL_ ?? ConfigURLDefaultValue; }
          set {
            configURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "configURL" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasConfigURL {
          get { return configURL_ != null; }
        }
        /// <summary>Clears the value of the "configURL" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearConfigURL() {
          configURL_ = null;
        }

        /// <summary>Field number for the "controllerType" field.</summary>
        public const int ControllerTypeFieldNumber = 3;
        private readonly static uint ControllerTypeDefaultValue = 0;

        private uint controllerType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ControllerType {
          get { if ((_hasBits0 & 2) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            controllerType_ = value;
          }
        }
        /// <summary>Gets whether the "controllerType" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "controllerType" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerType() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "controllerData" field.</summary>
        public const int ControllerDataFieldNumber = 4;
        private readonly static string ControllerDataDefaultValue = "";

        private string controllerData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ControllerData {
          get { return controllerData_ ?? ControllerDataDefaultValue; }
          set {
            controllerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "controllerData" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerData {
          get { return controllerData_ != null; }
        }
        /// <summary>Clears the value of the "controllerData" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerData() {
          controllerData_ = null;
        }

        /// <summary>Field number for the "selectionOrder" field.</summary>
        public const int SelectionOrderFieldNumber = 5;
        private readonly static uint SelectionOrderDefaultValue = 0;

        private uint selectionOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint SelectionOrder {
          get { if ((_hasBits0 & 4) != 0) { return selectionOrder_; } else { return SelectionOrderDefaultValue; } }
          set {
            _hasBits0 |= 4;
            selectionOrder_ = value;
          }
        }
        /// <summary>Gets whether the "selectionOrder" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSelectionOrder {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "selectionOrder" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSelectionOrder() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "actionBlock" field.</summary>
        public const int ActionBlockFieldNumber = 6;
        private readonly static bool ActionBlockDefaultValue = false;

        private bool actionBlock_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ActionBlock {
          get { if ((_hasBits0 & 8) != 0) { return actionBlock_; } else { return ActionBlockDefaultValue; } }
          set {
            _hasBits0 |= 8;
            actionBlock_ = value;
          }
        }
        /// <summary>Gets whether the "actionBlock" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasActionBlock {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "actionBlock" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearActionBlock() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ControllerConfigResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ControllerConfigResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (ConfigURL != other.ConfigURL) return false;
          if (ControllerType != other.ControllerType) return false;
          if (ControllerData != other.ControllerData) return false;
          if (SelectionOrder != other.SelectionOrder) return false;
          if (ActionBlock != other.ActionBlock) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasConfigURL) hash ^= ConfigURL.GetHashCode();
          if (HasControllerType) hash ^= ControllerType.GetHashCode();
          if (HasControllerData) hash ^= ControllerData.GetHashCode();
          if (HasSelectionOrder) hash ^= SelectionOrder.GetHashCode();
          if (HasActionBlock) hash ^= ActionBlock.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasConfigURL) {
            output.WriteRawTag(18);
            output.WriteString(ConfigURL);
          }
          if (HasControllerType) {
            output.WriteRawTag(24);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerData) {
            output.WriteRawTag(34);
            output.WriteString(ControllerData);
          }
          if (HasSelectionOrder) {
            output.WriteRawTag(40);
            output.WriteUInt32(SelectionOrder);
          }
          if (HasActionBlock) {
            output.WriteRawTag(48);
            output.WriteBool(ActionBlock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasConfigURL) {
            output.WriteRawTag(18);
            output.WriteString(ConfigURL);
          }
          if (HasControllerType) {
            output.WriteRawTag(24);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerData) {
            output.WriteRawTag(34);
            output.WriteString(ControllerData);
          }
          if (HasSelectionOrder) {
            output.WriteRawTag(40);
            output.WriteUInt32(SelectionOrder);
          }
          if (HasActionBlock) {
            output.WriteRawTag(48);
            output.WriteBool(ActionBlock);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (HasConfigURL) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigURL);
          }
          if (HasControllerType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerType);
          }
          if (HasControllerData) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerData);
          }
          if (HasSelectionOrder) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SelectionOrder);
          }
          if (HasActionBlock) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ControllerConfigResponse other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasConfigURL) {
            ConfigURL = other.ConfigURL;
          }
          if (other.HasControllerType) {
            ControllerType = other.ControllerType;
          }
          if (other.HasControllerData) {
            ControllerData = other.ControllerData;
          }
          if (other.HasSelectionOrder) {
            SelectionOrder = other.SelectionOrder;
          }
          if (other.HasActionBlock) {
            ActionBlock = other.ActionBlock;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 18: {
                ConfigURL = input.ReadString();
                break;
              }
              case 24: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 34: {
                ControllerData = input.ReadString();
                break;
              }
              case 40: {
                SelectionOrder = input.ReadUInt32();
                break;
              }
              case 48: {
                ActionBlock = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 18: {
                ConfigURL = input.ReadString();
                break;
              }
              case 24: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 34: {
                ControllerData = input.ReadString();
                break;
              }
              case 40: {
                SelectionOrder = input.ReadUInt32();
                break;
              }
              case 48: {
                ActionBlock = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ControllerPersonalizationResponse : pb::IMessage<ControllerPersonalizationResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ControllerPersonalizationResponse> _parser = new pb::MessageParser<ControllerPersonalizationResponse>(() => new ControllerPersonalizationResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ControllerPersonalizationResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CControllerConfigMsg.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerPersonalizationResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerPersonalizationResponse(ControllerPersonalizationResponse other) : this() {
          personalizationData_ = other.personalizationData_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerPersonalizationResponse Clone() {
          return new ControllerPersonalizationResponse(this);
        }

        /// <summary>Field number for the "personalizationData" field.</summary>
        public const int PersonalizationDataFieldNumber = 1;
        private readonly static string PersonalizationDataDefaultValue = "";

        private string personalizationData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PersonalizationData {
          get { return personalizationData_ ?? PersonalizationDataDefaultValue; }
          set {
            personalizationData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "personalizationData" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPersonalizationData {
          get { return personalizationData_ != null; }
        }
        /// <summary>Clears the value of the "personalizationData" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPersonalizationData() {
          personalizationData_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ControllerPersonalizationResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ControllerPersonalizationResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PersonalizationData != other.PersonalizationData) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPersonalizationData) hash ^= PersonalizationData.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPersonalizationData) {
            output.WriteRawTag(10);
            output.WriteString(PersonalizationData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPersonalizationData) {
            output.WriteRawTag(10);
            output.WriteString(PersonalizationData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPersonalizationData) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonalizationData);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ControllerPersonalizationResponse other) {
          if (other == null) {
            return;
          }
          if (other.HasPersonalizationData) {
            PersonalizationData = other.PersonalizationData;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                PersonalizationData = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                PersonalizationData = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ControllerActiveConfigChangeResponse : pb::IMessage<ControllerActiveConfigChangeResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ControllerActiveConfigChangeResponse> _parser = new pb::MessageParser<ControllerActiveConfigChangeResponse>(() => new ControllerActiveConfigChangeResponse());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ControllerActiveConfigChangeResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CControllerConfigMsg.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerActiveConfigChangeResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerActiveConfigChangeResponse(ControllerActiveConfigChangeResponse other) : this() {
          _hasBits0 = other._hasBits0;
          configURL_ = other.configURL_;
          controllerType_ = other.controllerType_;
          controllerData_ = other.controllerData_;
          selectionOrder_ = other.selectionOrder_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerActiveConfigChangeResponse Clone() {
          return new ControllerActiveConfigChangeResponse(this);
        }

        /// <summary>Field number for the "configURL" field.</summary>
        public const int ConfigURLFieldNumber = 2;
        private readonly static string ConfigURLDefaultValue = "";

        private string configURL_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ConfigURL {
          get { return configURL_ ?? ConfigURLDefaultValue; }
          set {
            configURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "configURL" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasConfigURL {
          get { return configURL_ != null; }
        }
        /// <summary>Clears the value of the "configURL" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearConfigURL() {
          configURL_ = null;
        }

        /// <summary>Field number for the "controllerType" field.</summary>
        public const int ControllerTypeFieldNumber = 3;
        private readonly static uint ControllerTypeDefaultValue = 0;

        private uint controllerType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ControllerType {
          get { if ((_hasBits0 & 1) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            controllerType_ = value;
          }
        }
        /// <summary>Gets whether the "controllerType" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "controllerType" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "controllerData" field.</summary>
        public const int ControllerDataFieldNumber = 4;
        private readonly static string ControllerDataDefaultValue = "";

        private string controllerData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ControllerData {
          get { return controllerData_ ?? ControllerDataDefaultValue; }
          set {
            controllerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "controllerData" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerData {
          get { return controllerData_ != null; }
        }
        /// <summary>Clears the value of the "controllerData" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerData() {
          controllerData_ = null;
        }

        /// <summary>Field number for the "selectionOrder" field.</summary>
        public const int SelectionOrderFieldNumber = 5;
        private readonly static uint SelectionOrderDefaultValue = 0;

        private uint selectionOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint SelectionOrder {
          get { if ((_hasBits0 & 2) != 0) { return selectionOrder_; } else { return SelectionOrderDefaultValue; } }
          set {
            _hasBits0 |= 2;
            selectionOrder_ = value;
          }
        }
        /// <summary>Gets whether the "selectionOrder" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSelectionOrder {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "selectionOrder" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSelectionOrder() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ControllerActiveConfigChangeResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ControllerActiveConfigChangeResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ConfigURL != other.ConfigURL) return false;
          if (ControllerType != other.ControllerType) return false;
          if (ControllerData != other.ControllerData) return false;
          if (SelectionOrder != other.SelectionOrder) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasConfigURL) hash ^= ConfigURL.GetHashCode();
          if (HasControllerType) hash ^= ControllerType.GetHashCode();
          if (HasControllerData) hash ^= ControllerData.GetHashCode();
          if (HasSelectionOrder) hash ^= SelectionOrder.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasConfigURL) {
            output.WriteRawTag(18);
            output.WriteString(ConfigURL);
          }
          if (HasControllerType) {
            output.WriteRawTag(24);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerData) {
            output.WriteRawTag(34);
            output.WriteString(ControllerData);
          }
          if (HasSelectionOrder) {
            output.WriteRawTag(40);
            output.WriteUInt32(SelectionOrder);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasConfigURL) {
            output.WriteRawTag(18);
            output.WriteString(ConfigURL);
          }
          if (HasControllerType) {
            output.WriteRawTag(24);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerData) {
            output.WriteRawTag(34);
            output.WriteString(ControllerData);
          }
          if (HasSelectionOrder) {
            output.WriteRawTag(40);
            output.WriteUInt32(SelectionOrder);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasConfigURL) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigURL);
          }
          if (HasControllerType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerType);
          }
          if (HasControllerData) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerData);
          }
          if (HasSelectionOrder) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SelectionOrder);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ControllerActiveConfigChangeResponse other) {
          if (other == null) {
            return;
          }
          if (other.HasConfigURL) {
            ConfigURL = other.ConfigURL;
          }
          if (other.HasControllerType) {
            ControllerType = other.ControllerType;
          }
          if (other.HasControllerData) {
            ControllerData = other.ControllerData;
          }
          if (other.HasSelectionOrder) {
            SelectionOrder = other.SelectionOrder;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18: {
                ConfigURL = input.ReadString();
                break;
              }
              case 24: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 34: {
                ControllerData = input.ReadString();
                break;
              }
              case 40: {
                SelectionOrder = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 18: {
                ConfigURL = input.ReadString();
                break;
              }
              case 24: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 34: {
                ControllerData = input.ReadString();
                break;
              }
              case 40: {
                SelectionOrder = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ControllerActiveConfigMsg : pb::IMessage<ControllerActiveConfigMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ControllerActiveConfigMsg> _parser = new pb::MessageParser<ControllerActiveConfigMsg>(() => new ControllerActiveConfigMsg());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ControllerActiveConfigMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CControllerConfigMsg.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerActiveConfigMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerActiveConfigMsg(ControllerActiveConfigMsg other) : this() {
          _hasBits0 = other._hasBits0;
          appid_ = other.appid_;
          configURL_ = other.configURL_;
          controllerType_ = other.controllerType_;
          controllerData_ = other.controllerData_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ControllerActiveConfigMsg Clone() {
          return new ControllerActiveConfigMsg(this);
        }

        /// <summary>Field number for the "appid" field.</summary>
        public const int AppidFieldNumber = 1;
        private readonly static uint AppidDefaultValue = 0;

        private uint appid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Appid {
          get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            appid_ = value;
          }
        }
        /// <summary>Gets whether the "appid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAppid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "appid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAppid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "configURL" field.</summary>
        public const int ConfigURLFieldNumber = 2;
        private readonly static string ConfigURLDefaultValue = "";

        private string configURL_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ConfigURL {
          get { return configURL_ ?? ConfigURLDefaultValue; }
          set {
            configURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "configURL" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasConfigURL {
          get { return configURL_ != null; }
        }
        /// <summary>Clears the value of the "configURL" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearConfigURL() {
          configURL_ = null;
        }

        /// <summary>Field number for the "controllerType" field.</summary>
        public const int ControllerTypeFieldNumber = 3;
        private readonly static uint ControllerTypeDefaultValue = 0;

        private uint controllerType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ControllerType {
          get { if ((_hasBits0 & 2) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            controllerType_ = value;
          }
        }
        /// <summary>Gets whether the "controllerType" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "controllerType" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerType() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "controllerData" field.</summary>
        public const int ControllerDataFieldNumber = 4;
        private readonly static string ControllerDataDefaultValue = "";

        private string controllerData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ControllerData {
          get { return controllerData_ ?? ControllerDataDefaultValue; }
          set {
            controllerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "controllerData" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasControllerData {
          get { return controllerData_ != null; }
        }
        /// <summary>Clears the value of the "controllerData" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearControllerData() {
          controllerData_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ControllerActiveConfigMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ControllerActiveConfigMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Appid != other.Appid) return false;
          if (ConfigURL != other.ConfigURL) return false;
          if (ControllerType != other.ControllerType) return false;
          if (ControllerData != other.ControllerData) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAppid) hash ^= Appid.GetHashCode();
          if (HasConfigURL) hash ^= ConfigURL.GetHashCode();
          if (HasControllerType) hash ^= ControllerType.GetHashCode();
          if (HasControllerData) hash ^= ControllerData.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasConfigURL) {
            output.WriteRawTag(18);
            output.WriteString(ConfigURL);
          }
          if (HasControllerType) {
            output.WriteRawTag(24);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerData) {
            output.WriteRawTag(34);
            output.WriteString(ControllerData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAppid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Appid);
          }
          if (HasConfigURL) {
            output.WriteRawTag(18);
            output.WriteString(ConfigURL);
          }
          if (HasControllerType) {
            output.WriteRawTag(24);
            output.WriteUInt32(ControllerType);
          }
          if (HasControllerData) {
            output.WriteRawTag(34);
            output.WriteString(ControllerData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAppid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
          }
          if (HasConfigURL) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigURL);
          }
          if (HasControllerType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerType);
          }
          if (HasControllerData) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerData);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ControllerActiveConfigMsg other) {
          if (other == null) {
            return;
          }
          if (other.HasAppid) {
            Appid = other.Appid;
          }
          if (other.HasConfigURL) {
            ConfigURL = other.ConfigURL;
          }
          if (other.HasControllerType) {
            ControllerType = other.ControllerType;
          }
          if (other.HasControllerData) {
            ControllerData = other.ControllerData;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 18: {
                ConfigURL = input.ReadString();
                break;
              }
              case 24: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 34: {
                ControllerData = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Appid = input.ReadUInt32();
                break;
              }
              case 18: {
                ConfigURL = input.ReadString();
                break;
              }
              case 24: {
                ControllerType = input.ReadUInt32();
                break;
              }
              case 34: {
                ControllerData = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
