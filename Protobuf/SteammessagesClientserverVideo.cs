// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_clientserver_video.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_clientserver_video.proto</summary>
  public static partial class SteammessagesClientserverVideoReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_clientserver_video.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesClientserverVideoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZzdGVhbW1lc3NhZ2VzX2NsaWVudHNlcnZlcl92aWRlby5wcm90bxogZ29v",
            "Z2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8aGHN0ZWFtbWVzc2FnZXNf",
            "YmFzZS5wcm90byLBAgokQ01zZ1ZpZGVvR2FtZVJlY29yZGluZ1JlcHJlc2Vu",
            "dGF0aW9uEhsKE3JlcHJlc2VudGF0aW9uX25hbWUYAiABKAkSHQoVaG9yaXpv",
            "bnRhbF9yZXNvbHV0aW9uGAMgASgNEhsKE3ZlcnRpY2FsX3Jlc29sdXRpb24Y",
            "BCABKA0SEgoKZnJhbWVfcmF0ZRgFIAEoARIRCgliYW5kd2lkdGgYBiABKA0S",
            "GQoRYXVkaW9fc2FtcGxlX3JhdGUYByABKA0SGQoRZnJhbWVfcmF0ZV9zdHJp",
            "bmcYCCABKAkSDQoFY29kZWMYCSABKAkSHAoUYXVkaW9fY2hhbm5lbF9jb25m",
            "aWcYCiABKA0SNgoMc2VnbWVudF9pbmZvGAsgAygLMiAuQ1ZpZGVvX0dhbWVS",
            "ZWNvcmRpbmdTZWdtZW50SW5mbyK0AQofQ01zZ1ZpZGVvR2FtZVJlY29yZGlu",
            "Z0NvbXBvbmVudBIWCg5jb21wb25lbnRfbmFtZRgBIAEoCRIQCghjb250ZW50",
            "cxgCIAEoDRIUCgxzZWdtZW50X3NpemUYAyABKA0SEQoJZmlsZV90eXBlGAQg",
            "ASgJEj4KD3JlcHJlc2VudGF0aW9ucxgFIAMoCzIlLkNNc2dWaWRlb0dhbWVS",
            "ZWNvcmRpbmdSZXByZXNlbnRhdGlvbiKfAgoZQ01zZ1ZpZGVvR2FtZVJlY29y",
            "ZGluZ0RlZhIPCgdzdGVhbWlkGAEgASgEEg4KBmFwcF9pZBgCIAEoDRIUCgxu",
            "dW1fc2VnbWVudHMYAyABKA0SGwoTbGVuZ3RoX21pbGxpc2Vjb25kcxgEIAEo",
            "DRIiChpzZWdtZW50X2R1cmF0aW9uX3RpbWVzY2FsZRgFIAEoDRIYChBzZWdt",
            "ZW50X2R1cmF0aW9uGAYgASgNEjQKCmNvbXBvbmVudHMYByADKAsyIC5DTXNn",
            "VmlkZW9HYW1lUmVjb3JkaW5nQ29tcG9uZW50EhUKDXN0YXJ0X3RpbWVfbXMY",
            "CCABKA0SIwobc3RhcnRfb2Zmc2V0X2luX3RpbWVsaW5lX21zGAkgASgNIooB",
            "Ch9DVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRJbmZvEhYKDnNlZ21lbnRf",
            "bnVtYmVyGAEgASgNEhoKEnNlZ21lbnRfc2l6ZV9ieXRlcxgCIAEoBBIWCg5j",
            "b21wb25lbnRfbmFtZRgDIAEoCRIbChNyZXByZXNlbnRhdGlvbl9uYW1lGAQg",
            "ASgJIo8CCiVDVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRVcGxvYWRJbmZv",
            "EjYKDHNlZ21lbnRfaW5mbxgBIAEoCzIgLkNWaWRlb19HYW1lUmVjb3JkaW5n",
            "U2VnbWVudEluZm8SEAoIdXJsX2hvc3QYAiABKAkSEAoIdXJsX3BhdGgYAyAB",
            "KAkSEQoJdXNlX2h0dHBzGAQgASgIEksKD3JlcXVlc3RfaGVhZGVycxgFIAMo",
            "CzIyLkNWaWRlb19HYW1lUmVjb3JkaW5nU2VnbWVudFVwbG9hZEluZm8uSFRU",
            "UEhlYWRlcnMaKgoLSFRUUEhlYWRlcnMSDAoEbmFtZRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCUIfSAGAAQCqAhdPcGVuU3RlYW13b3Jrcy5Qcm90b2J1Zg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation), global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation.Parser, new[]{ "RepresentationName", "HorizontalResolution", "VerticalResolution", "FrameRate", "Bandwidth", "AudioSampleRate", "FrameRateString", "Codec", "AudioChannelConfig", "SegmentInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent), global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent.Parser, new[]{ "ComponentName", "Contents", "SegmentSize", "FileType", "Representations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef), global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef.Parser, new[]{ "Steamid", "AppId", "NumSegments", "LengthMilliseconds", "SegmentDurationTimescale", "SegmentDuration", "Components", "StartTimeMs", "StartOffsetInTimelineMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo), global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo.Parser, new[]{ "SegmentNumber", "SegmentSizeBytes", "ComponentName", "RepresentationName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo), global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Parser, new[]{ "SegmentInfo", "UrlHost", "UrlPath", "UseHttps", "RequestHeaders" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders), global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders.Parser, new[]{ "Name", "Value" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVideoGameRecordingRepresentation : pb::IMessage<CMsgVideoGameRecordingRepresentation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVideoGameRecordingRepresentation> _parser = new pb::MessageParser<CMsgVideoGameRecordingRepresentation>(() => new CMsgVideoGameRecordingRepresentation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVideoGameRecordingRepresentation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientserverVideoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingRepresentation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingRepresentation(CMsgVideoGameRecordingRepresentation other) : this() {
      _hasBits0 = other._hasBits0;
      representationName_ = other.representationName_;
      horizontalResolution_ = other.horizontalResolution_;
      verticalResolution_ = other.verticalResolution_;
      frameRate_ = other.frameRate_;
      bandwidth_ = other.bandwidth_;
      audioSampleRate_ = other.audioSampleRate_;
      frameRateString_ = other.frameRateString_;
      codec_ = other.codec_;
      audioChannelConfig_ = other.audioChannelConfig_;
      segmentInfo_ = other.segmentInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingRepresentation Clone() {
      return new CMsgVideoGameRecordingRepresentation(this);
    }

    /// <summary>Field number for the "representation_name" field.</summary>
    public const int RepresentationNameFieldNumber = 2;
    private readonly static string RepresentationNameDefaultValue = "";

    private string representationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RepresentationName {
      get { return representationName_ ?? RepresentationNameDefaultValue; }
      set {
        representationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "representation_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRepresentationName {
      get { return representationName_ != null; }
    }
    /// <summary>Clears the value of the "representation_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRepresentationName() {
      representationName_ = null;
    }

    /// <summary>Field number for the "horizontal_resolution" field.</summary>
    public const int HorizontalResolutionFieldNumber = 3;
    private readonly static uint HorizontalResolutionDefaultValue = 0;

    private uint horizontalResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HorizontalResolution {
      get { if ((_hasBits0 & 1) != 0) { return horizontalResolution_; } else { return HorizontalResolutionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        horizontalResolution_ = value;
      }
    }
    /// <summary>Gets whether the "horizontal_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHorizontalResolution {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "horizontal_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHorizontalResolution() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "vertical_resolution" field.</summary>
    public const int VerticalResolutionFieldNumber = 4;
    private readonly static uint VerticalResolutionDefaultValue = 0;

    private uint verticalResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VerticalResolution {
      get { if ((_hasBits0 & 2) != 0) { return verticalResolution_; } else { return VerticalResolutionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        verticalResolution_ = value;
      }
    }
    /// <summary>Gets whether the "vertical_resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerticalResolution {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "vertical_resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerticalResolution() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "frame_rate" field.</summary>
    public const int FrameRateFieldNumber = 5;
    private readonly static double FrameRateDefaultValue = 0D;

    private double frameRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FrameRate {
      get { if ((_hasBits0 & 4) != 0) { return frameRate_; } else { return FrameRateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        frameRate_ = value;
      }
    }
    /// <summary>Gets whether the "frame_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameRate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "frame_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameRate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bandwidth" field.</summary>
    public const int BandwidthFieldNumber = 6;
    private readonly static uint BandwidthDefaultValue = 0;

    private uint bandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bandwidth {
      get { if ((_hasBits0 & 8) != 0) { return bandwidth_; } else { return BandwidthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBandwidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBandwidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "audio_sample_rate" field.</summary>
    public const int AudioSampleRateFieldNumber = 7;
    private readonly static uint AudioSampleRateDefaultValue = 0;

    private uint audioSampleRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AudioSampleRate {
      get { if ((_hasBits0 & 16) != 0) { return audioSampleRate_; } else { return AudioSampleRateDefaultValue; } }
      set {
        _hasBits0 |= 16;
        audioSampleRate_ = value;
      }
    }
    /// <summary>Gets whether the "audio_sample_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioSampleRate {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "audio_sample_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioSampleRate() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "frame_rate_string" field.</summary>
    public const int FrameRateStringFieldNumber = 8;
    private readonly static string FrameRateStringDefaultValue = "";

    private string frameRateString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameRateString {
      get { return frameRateString_ ?? FrameRateStringDefaultValue; }
      set {
        frameRateString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_rate_string" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameRateString {
      get { return frameRateString_ != null; }
    }
    /// <summary>Clears the value of the "frame_rate_string" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameRateString() {
      frameRateString_ = null;
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 9;
    private readonly static string CodecDefaultValue = "";

    private string codec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Codec {
      get { return codec_ ?? CodecDefaultValue; }
      set {
        codec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "codec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCodec {
      get { return codec_ != null; }
    }
    /// <summary>Clears the value of the "codec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodec() {
      codec_ = null;
    }

    /// <summary>Field number for the "audio_channel_config" field.</summary>
    public const int AudioChannelConfigFieldNumber = 10;
    private readonly static uint AudioChannelConfigDefaultValue = 0;

    private uint audioChannelConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AudioChannelConfig {
      get { if ((_hasBits0 & 32) != 0) { return audioChannelConfig_; } else { return AudioChannelConfigDefaultValue; } }
      set {
        _hasBits0 |= 32;
        audioChannelConfig_ = value;
      }
    }
    /// <summary>Gets whether the "audio_channel_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioChannelConfig {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "audio_channel_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioChannelConfig() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "segment_info" field.</summary>
    public const int SegmentInfoFieldNumber = 11;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> _repeated_segmentInfo_codec
        = pb::FieldCodec.ForMessage(90, global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> segmentInfo_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> SegmentInfo {
      get { return segmentInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVideoGameRecordingRepresentation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVideoGameRecordingRepresentation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RepresentationName != other.RepresentationName) return false;
      if (HorizontalResolution != other.HorizontalResolution) return false;
      if (VerticalResolution != other.VerticalResolution) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FrameRate, other.FrameRate)) return false;
      if (Bandwidth != other.Bandwidth) return false;
      if (AudioSampleRate != other.AudioSampleRate) return false;
      if (FrameRateString != other.FrameRateString) return false;
      if (Codec != other.Codec) return false;
      if (AudioChannelConfig != other.AudioChannelConfig) return false;
      if(!segmentInfo_.Equals(other.segmentInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRepresentationName) hash ^= RepresentationName.GetHashCode();
      if (HasHorizontalResolution) hash ^= HorizontalResolution.GetHashCode();
      if (HasVerticalResolution) hash ^= VerticalResolution.GetHashCode();
      if (HasFrameRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FrameRate);
      if (HasBandwidth) hash ^= Bandwidth.GetHashCode();
      if (HasAudioSampleRate) hash ^= AudioSampleRate.GetHashCode();
      if (HasFrameRateString) hash ^= FrameRateString.GetHashCode();
      if (HasCodec) hash ^= Codec.GetHashCode();
      if (HasAudioChannelConfig) hash ^= AudioChannelConfig.GetHashCode();
      hash ^= segmentInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRepresentationName) {
        output.WriteRawTag(18);
        output.WriteString(RepresentationName);
      }
      if (HasHorizontalResolution) {
        output.WriteRawTag(24);
        output.WriteUInt32(HorizontalResolution);
      }
      if (HasVerticalResolution) {
        output.WriteRawTag(32);
        output.WriteUInt32(VerticalResolution);
      }
      if (HasFrameRate) {
        output.WriteRawTag(41);
        output.WriteDouble(FrameRate);
      }
      if (HasBandwidth) {
        output.WriteRawTag(48);
        output.WriteUInt32(Bandwidth);
      }
      if (HasAudioSampleRate) {
        output.WriteRawTag(56);
        output.WriteUInt32(AudioSampleRate);
      }
      if (HasFrameRateString) {
        output.WriteRawTag(66);
        output.WriteString(FrameRateString);
      }
      if (HasCodec) {
        output.WriteRawTag(74);
        output.WriteString(Codec);
      }
      if (HasAudioChannelConfig) {
        output.WriteRawTag(80);
        output.WriteUInt32(AudioChannelConfig);
      }
      segmentInfo_.WriteTo(output, _repeated_segmentInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRepresentationName) {
        output.WriteRawTag(18);
        output.WriteString(RepresentationName);
      }
      if (HasHorizontalResolution) {
        output.WriteRawTag(24);
        output.WriteUInt32(HorizontalResolution);
      }
      if (HasVerticalResolution) {
        output.WriteRawTag(32);
        output.WriteUInt32(VerticalResolution);
      }
      if (HasFrameRate) {
        output.WriteRawTag(41);
        output.WriteDouble(FrameRate);
      }
      if (HasBandwidth) {
        output.WriteRawTag(48);
        output.WriteUInt32(Bandwidth);
      }
      if (HasAudioSampleRate) {
        output.WriteRawTag(56);
        output.WriteUInt32(AudioSampleRate);
      }
      if (HasFrameRateString) {
        output.WriteRawTag(66);
        output.WriteString(FrameRateString);
      }
      if (HasCodec) {
        output.WriteRawTag(74);
        output.WriteString(Codec);
      }
      if (HasAudioChannelConfig) {
        output.WriteRawTag(80);
        output.WriteUInt32(AudioChannelConfig);
      }
      segmentInfo_.WriteTo(ref output, _repeated_segmentInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRepresentationName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepresentationName);
      }
      if (HasHorizontalResolution) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HorizontalResolution);
      }
      if (HasVerticalResolution) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VerticalResolution);
      }
      if (HasFrameRate) {
        size += 1 + 8;
      }
      if (HasBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bandwidth);
      }
      if (HasAudioSampleRate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AudioSampleRate);
      }
      if (HasFrameRateString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameRateString);
      }
      if (HasCodec) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codec);
      }
      if (HasAudioChannelConfig) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AudioChannelConfig);
      }
      size += segmentInfo_.CalculateSize(_repeated_segmentInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVideoGameRecordingRepresentation other) {
      if (other == null) {
        return;
      }
      if (other.HasRepresentationName) {
        RepresentationName = other.RepresentationName;
      }
      if (other.HasHorizontalResolution) {
        HorizontalResolution = other.HorizontalResolution;
      }
      if (other.HasVerticalResolution) {
        VerticalResolution = other.VerticalResolution;
      }
      if (other.HasFrameRate) {
        FrameRate = other.FrameRate;
      }
      if (other.HasBandwidth) {
        Bandwidth = other.Bandwidth;
      }
      if (other.HasAudioSampleRate) {
        AudioSampleRate = other.AudioSampleRate;
      }
      if (other.HasFrameRateString) {
        FrameRateString = other.FrameRateString;
      }
      if (other.HasCodec) {
        Codec = other.Codec;
      }
      if (other.HasAudioChannelConfig) {
        AudioChannelConfig = other.AudioChannelConfig;
      }
      segmentInfo_.Add(other.segmentInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            RepresentationName = input.ReadString();
            break;
          }
          case 24: {
            HorizontalResolution = input.ReadUInt32();
            break;
          }
          case 32: {
            VerticalResolution = input.ReadUInt32();
            break;
          }
          case 41: {
            FrameRate = input.ReadDouble();
            break;
          }
          case 48: {
            Bandwidth = input.ReadUInt32();
            break;
          }
          case 56: {
            AudioSampleRate = input.ReadUInt32();
            break;
          }
          case 66: {
            FrameRateString = input.ReadString();
            break;
          }
          case 74: {
            Codec = input.ReadString();
            break;
          }
          case 80: {
            AudioChannelConfig = input.ReadUInt32();
            break;
          }
          case 90: {
            segmentInfo_.AddEntriesFrom(input, _repeated_segmentInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            RepresentationName = input.ReadString();
            break;
          }
          case 24: {
            HorizontalResolution = input.ReadUInt32();
            break;
          }
          case 32: {
            VerticalResolution = input.ReadUInt32();
            break;
          }
          case 41: {
            FrameRate = input.ReadDouble();
            break;
          }
          case 48: {
            Bandwidth = input.ReadUInt32();
            break;
          }
          case 56: {
            AudioSampleRate = input.ReadUInt32();
            break;
          }
          case 66: {
            FrameRateString = input.ReadString();
            break;
          }
          case 74: {
            Codec = input.ReadString();
            break;
          }
          case 80: {
            AudioChannelConfig = input.ReadUInt32();
            break;
          }
          case 90: {
            segmentInfo_.AddEntriesFrom(ref input, _repeated_segmentInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVideoGameRecordingComponent : pb::IMessage<CMsgVideoGameRecordingComponent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVideoGameRecordingComponent> _parser = new pb::MessageParser<CMsgVideoGameRecordingComponent>(() => new CMsgVideoGameRecordingComponent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVideoGameRecordingComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientserverVideoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingComponent(CMsgVideoGameRecordingComponent other) : this() {
      _hasBits0 = other._hasBits0;
      componentName_ = other.componentName_;
      contents_ = other.contents_;
      segmentSize_ = other.segmentSize_;
      fileType_ = other.fileType_;
      representations_ = other.representations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingComponent Clone() {
      return new CMsgVideoGameRecordingComponent(this);
    }

    /// <summary>Field number for the "component_name" field.</summary>
    public const int ComponentNameFieldNumber = 1;
    private readonly static string ComponentNameDefaultValue = "";

    private string componentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentName {
      get { return componentName_ ?? ComponentNameDefaultValue; }
      set {
        componentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "component_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComponentName {
      get { return componentName_ != null; }
    }
    /// <summary>Clears the value of the "component_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComponentName() {
      componentName_ = null;
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 2;
    private readonly static uint ContentsDefaultValue = 0;

    private uint contents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Contents {
      get { if ((_hasBits0 & 1) != 0) { return contents_; } else { return ContentsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        contents_ = value;
      }
    }
    /// <summary>Gets whether the "contents" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContents {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "contents" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContents() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "segment_size" field.</summary>
    public const int SegmentSizeFieldNumber = 3;
    private readonly static uint SegmentSizeDefaultValue = 0;

    private uint segmentSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentSize {
      get { if ((_hasBits0 & 2) != 0) { return segmentSize_; } else { return SegmentSizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        segmentSize_ = value;
      }
    }
    /// <summary>Gets whether the "segment_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "segment_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "file_type" field.</summary>
    public const int FileTypeFieldNumber = 4;
    private readonly static string FileTypeDefaultValue = "";

    private string fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileType {
      get { return fileType_ ?? FileTypeDefaultValue; }
      set {
        fileType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "file_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileType {
      get { return fileType_ != null; }
    }
    /// <summary>Clears the value of the "file_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileType() {
      fileType_ = null;
    }

    /// <summary>Field number for the "representations" field.</summary>
    public const int RepresentationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation> _repeated_representations_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation> representations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingRepresentation> Representations {
      get { return representations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVideoGameRecordingComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVideoGameRecordingComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ComponentName != other.ComponentName) return false;
      if (Contents != other.Contents) return false;
      if (SegmentSize != other.SegmentSize) return false;
      if (FileType != other.FileType) return false;
      if(!representations_.Equals(other.representations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasComponentName) hash ^= ComponentName.GetHashCode();
      if (HasContents) hash ^= Contents.GetHashCode();
      if (HasSegmentSize) hash ^= SegmentSize.GetHashCode();
      if (HasFileType) hash ^= FileType.GetHashCode();
      hash ^= representations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasComponentName) {
        output.WriteRawTag(10);
        output.WriteString(ComponentName);
      }
      if (HasContents) {
        output.WriteRawTag(16);
        output.WriteUInt32(Contents);
      }
      if (HasSegmentSize) {
        output.WriteRawTag(24);
        output.WriteUInt32(SegmentSize);
      }
      if (HasFileType) {
        output.WriteRawTag(34);
        output.WriteString(FileType);
      }
      representations_.WriteTo(output, _repeated_representations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasComponentName) {
        output.WriteRawTag(10);
        output.WriteString(ComponentName);
      }
      if (HasContents) {
        output.WriteRawTag(16);
        output.WriteUInt32(Contents);
      }
      if (HasSegmentSize) {
        output.WriteRawTag(24);
        output.WriteUInt32(SegmentSize);
      }
      if (HasFileType) {
        output.WriteRawTag(34);
        output.WriteString(FileType);
      }
      representations_.WriteTo(ref output, _repeated_representations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasComponentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentName);
      }
      if (HasContents) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Contents);
      }
      if (HasSegmentSize) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentSize);
      }
      if (HasFileType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileType);
      }
      size += representations_.CalculateSize(_repeated_representations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVideoGameRecordingComponent other) {
      if (other == null) {
        return;
      }
      if (other.HasComponentName) {
        ComponentName = other.ComponentName;
      }
      if (other.HasContents) {
        Contents = other.Contents;
      }
      if (other.HasSegmentSize) {
        SegmentSize = other.SegmentSize;
      }
      if (other.HasFileType) {
        FileType = other.FileType;
      }
      representations_.Add(other.representations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ComponentName = input.ReadString();
            break;
          }
          case 16: {
            Contents = input.ReadUInt32();
            break;
          }
          case 24: {
            SegmentSize = input.ReadUInt32();
            break;
          }
          case 34: {
            FileType = input.ReadString();
            break;
          }
          case 42: {
            representations_.AddEntriesFrom(input, _repeated_representations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ComponentName = input.ReadString();
            break;
          }
          case 16: {
            Contents = input.ReadUInt32();
            break;
          }
          case 24: {
            SegmentSize = input.ReadUInt32();
            break;
          }
          case 34: {
            FileType = input.ReadString();
            break;
          }
          case 42: {
            representations_.AddEntriesFrom(ref input, _repeated_representations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgVideoGameRecordingDef : pb::IMessage<CMsgVideoGameRecordingDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgVideoGameRecordingDef> _parser = new pb::MessageParser<CMsgVideoGameRecordingDef>(() => new CMsgVideoGameRecordingDef());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgVideoGameRecordingDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientserverVideoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingDef(CMsgVideoGameRecordingDef other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      appId_ = other.appId_;
      numSegments_ = other.numSegments_;
      lengthMilliseconds_ = other.lengthMilliseconds_;
      segmentDurationTimescale_ = other.segmentDurationTimescale_;
      segmentDuration_ = other.segmentDuration_;
      components_ = other.components_.Clone();
      startTimeMs_ = other.startTimeMs_;
      startOffsetInTimelineMs_ = other.startOffsetInTimelineMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgVideoGameRecordingDef Clone() {
      return new CMsgVideoGameRecordingDef(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private readonly static uint AppIdDefaultValue = 0;

    private uint appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AppId {
      get { if ((_hasBits0 & 2) != 0) { return appId_; } else { return AppIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appId_ = value;
      }
    }
    /// <summary>Gets whether the "app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "num_segments" field.</summary>
    public const int NumSegmentsFieldNumber = 3;
    private readonly static uint NumSegmentsDefaultValue = 0;

    private uint numSegments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumSegments {
      get { if ((_hasBits0 & 4) != 0) { return numSegments_; } else { return NumSegmentsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        numSegments_ = value;
      }
    }
    /// <summary>Gets whether the "num_segments" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumSegments {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "num_segments" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumSegments() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "length_milliseconds" field.</summary>
    public const int LengthMillisecondsFieldNumber = 4;
    private readonly static uint LengthMillisecondsDefaultValue = 0;

    private uint lengthMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LengthMilliseconds {
      get { if ((_hasBits0 & 8) != 0) { return lengthMilliseconds_; } else { return LengthMillisecondsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lengthMilliseconds_ = value;
      }
    }
    /// <summary>Gets whether the "length_milliseconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLengthMilliseconds {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "length_milliseconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLengthMilliseconds() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "segment_duration_timescale" field.</summary>
    public const int SegmentDurationTimescaleFieldNumber = 5;
    private readonly static uint SegmentDurationTimescaleDefaultValue = 0;

    private uint segmentDurationTimescale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentDurationTimescale {
      get { if ((_hasBits0 & 16) != 0) { return segmentDurationTimescale_; } else { return SegmentDurationTimescaleDefaultValue; } }
      set {
        _hasBits0 |= 16;
        segmentDurationTimescale_ = value;
      }
    }
    /// <summary>Gets whether the "segment_duration_timescale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentDurationTimescale {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "segment_duration_timescale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentDurationTimescale() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "segment_duration" field.</summary>
    public const int SegmentDurationFieldNumber = 6;
    private readonly static uint SegmentDurationDefaultValue = 0;

    private uint segmentDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentDuration {
      get { if ((_hasBits0 & 32) != 0) { return segmentDuration_; } else { return SegmentDurationDefaultValue; } }
      set {
        _hasBits0 |= 32;
        segmentDuration_ = value;
      }
    }
    /// <summary>Gets whether the "segment_duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentDuration {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "segment_duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentDuration() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent> _repeated_components_codec
        = pb::FieldCodec.ForMessage(58, global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent> components_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingComponent> Components {
      get { return components_; }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 8;
    private readonly static uint StartTimeMsDefaultValue = 0;

    private uint startTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartTimeMs {
      get { if ((_hasBits0 & 64) != 0) { return startTimeMs_; } else { return StartTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        startTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTimeMs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "start_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTimeMs() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "start_offset_in_timeline_ms" field.</summary>
    public const int StartOffsetInTimelineMsFieldNumber = 9;
    private readonly static uint StartOffsetInTimelineMsDefaultValue = 0;

    private uint startOffsetInTimelineMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartOffsetInTimelineMs {
      get { if ((_hasBits0 & 128) != 0) { return startOffsetInTimelineMs_; } else { return StartOffsetInTimelineMsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        startOffsetInTimelineMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset_in_timeline_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffsetInTimelineMs {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "start_offset_in_timeline_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffsetInTimelineMs() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgVideoGameRecordingDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgVideoGameRecordingDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (AppId != other.AppId) return false;
      if (NumSegments != other.NumSegments) return false;
      if (LengthMilliseconds != other.LengthMilliseconds) return false;
      if (SegmentDurationTimescale != other.SegmentDurationTimescale) return false;
      if (SegmentDuration != other.SegmentDuration) return false;
      if(!components_.Equals(other.components_)) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (StartOffsetInTimelineMs != other.StartOffsetInTimelineMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasAppId) hash ^= AppId.GetHashCode();
      if (HasNumSegments) hash ^= NumSegments.GetHashCode();
      if (HasLengthMilliseconds) hash ^= LengthMilliseconds.GetHashCode();
      if (HasSegmentDurationTimescale) hash ^= SegmentDurationTimescale.GetHashCode();
      if (HasSegmentDuration) hash ^= SegmentDuration.GetHashCode();
      hash ^= components_.GetHashCode();
      if (HasStartTimeMs) hash ^= StartTimeMs.GetHashCode();
      if (HasStartOffsetInTimelineMs) hash ^= StartOffsetInTimelineMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasAppId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AppId);
      }
      if (HasNumSegments) {
        output.WriteRawTag(24);
        output.WriteUInt32(NumSegments);
      }
      if (HasLengthMilliseconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(LengthMilliseconds);
      }
      if (HasSegmentDurationTimescale) {
        output.WriteRawTag(40);
        output.WriteUInt32(SegmentDurationTimescale);
      }
      if (HasSegmentDuration) {
        output.WriteRawTag(48);
        output.WriteUInt32(SegmentDuration);
      }
      components_.WriteTo(output, _repeated_components_codec);
      if (HasStartTimeMs) {
        output.WriteRawTag(64);
        output.WriteUInt32(StartTimeMs);
      }
      if (HasStartOffsetInTimelineMs) {
        output.WriteRawTag(72);
        output.WriteUInt32(StartOffsetInTimelineMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Steamid);
      }
      if (HasAppId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AppId);
      }
      if (HasNumSegments) {
        output.WriteRawTag(24);
        output.WriteUInt32(NumSegments);
      }
      if (HasLengthMilliseconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(LengthMilliseconds);
      }
      if (HasSegmentDurationTimescale) {
        output.WriteRawTag(40);
        output.WriteUInt32(SegmentDurationTimescale);
      }
      if (HasSegmentDuration) {
        output.WriteRawTag(48);
        output.WriteUInt32(SegmentDuration);
      }
      components_.WriteTo(ref output, _repeated_components_codec);
      if (HasStartTimeMs) {
        output.WriteRawTag(64);
        output.WriteUInt32(StartTimeMs);
      }
      if (HasStartOffsetInTimelineMs) {
        output.WriteRawTag(72);
        output.WriteUInt32(StartOffsetInTimelineMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
      }
      if (HasAppId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
      }
      if (HasNumSegments) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumSegments);
      }
      if (HasLengthMilliseconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LengthMilliseconds);
      }
      if (HasSegmentDurationTimescale) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentDurationTimescale);
      }
      if (HasSegmentDuration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentDuration);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      if (HasStartTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartTimeMs);
      }
      if (HasStartOffsetInTimelineMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartOffsetInTimelineMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgVideoGameRecordingDef other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasNumSegments) {
        NumSegments = other.NumSegments;
      }
      if (other.HasLengthMilliseconds) {
        LengthMilliseconds = other.LengthMilliseconds;
      }
      if (other.HasSegmentDurationTimescale) {
        SegmentDurationTimescale = other.SegmentDurationTimescale;
      }
      if (other.HasSegmentDuration) {
        SegmentDuration = other.SegmentDuration;
      }
      components_.Add(other.components_);
      if (other.HasStartTimeMs) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.HasStartOffsetInTimelineMs) {
        StartOffsetInTimelineMs = other.StartOffsetInTimelineMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            AppId = input.ReadUInt32();
            break;
          }
          case 24: {
            NumSegments = input.ReadUInt32();
            break;
          }
          case 32: {
            LengthMilliseconds = input.ReadUInt32();
            break;
          }
          case 40: {
            SegmentDurationTimescale = input.ReadUInt32();
            break;
          }
          case 48: {
            SegmentDuration = input.ReadUInt32();
            break;
          }
          case 58: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
          case 64: {
            StartTimeMs = input.ReadUInt32();
            break;
          }
          case 72: {
            StartOffsetInTimelineMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Steamid = input.ReadUInt64();
            break;
          }
          case 16: {
            AppId = input.ReadUInt32();
            break;
          }
          case 24: {
            NumSegments = input.ReadUInt32();
            break;
          }
          case 32: {
            LengthMilliseconds = input.ReadUInt32();
            break;
          }
          case 40: {
            SegmentDurationTimescale = input.ReadUInt32();
            break;
          }
          case 48: {
            SegmentDuration = input.ReadUInt32();
            break;
          }
          case 58: {
            components_.AddEntriesFrom(ref input, _repeated_components_codec);
            break;
          }
          case 64: {
            StartTimeMs = input.ReadUInt32();
            break;
          }
          case 72: {
            StartOffsetInTimelineMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_GameRecordingSegmentInfo : pb::IMessage<CVideo_GameRecordingSegmentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_GameRecordingSegmentInfo> _parser = new pb::MessageParser<CVideo_GameRecordingSegmentInfo>(() => new CVideo_GameRecordingSegmentInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_GameRecordingSegmentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientserverVideoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingSegmentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingSegmentInfo(CVideo_GameRecordingSegmentInfo other) : this() {
      _hasBits0 = other._hasBits0;
      segmentNumber_ = other.segmentNumber_;
      segmentSizeBytes_ = other.segmentSizeBytes_;
      componentName_ = other.componentName_;
      representationName_ = other.representationName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingSegmentInfo Clone() {
      return new CVideo_GameRecordingSegmentInfo(this);
    }

    /// <summary>Field number for the "segment_number" field.</summary>
    public const int SegmentNumberFieldNumber = 1;
    private readonly static uint SegmentNumberDefaultValue = 0;

    private uint segmentNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentNumber {
      get { if ((_hasBits0 & 1) != 0) { return segmentNumber_; } else { return SegmentNumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        segmentNumber_ = value;
      }
    }
    /// <summary>Gets whether the "segment_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "segment_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "segment_size_bytes" field.</summary>
    public const int SegmentSizeBytesFieldNumber = 2;
    private readonly static ulong SegmentSizeBytesDefaultValue = 0UL;

    private ulong segmentSizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SegmentSizeBytes {
      get { if ((_hasBits0 & 2) != 0) { return segmentSizeBytes_; } else { return SegmentSizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        segmentSizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "segment_size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentSizeBytes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "segment_size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentSizeBytes() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "component_name" field.</summary>
    public const int ComponentNameFieldNumber = 3;
    private readonly static string ComponentNameDefaultValue = "";

    private string componentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentName {
      get { return componentName_ ?? ComponentNameDefaultValue; }
      set {
        componentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "component_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComponentName {
      get { return componentName_ != null; }
    }
    /// <summary>Clears the value of the "component_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComponentName() {
      componentName_ = null;
    }

    /// <summary>Field number for the "representation_name" field.</summary>
    public const int RepresentationNameFieldNumber = 4;
    private readonly static string RepresentationNameDefaultValue = "";

    private string representationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RepresentationName {
      get { return representationName_ ?? RepresentationNameDefaultValue; }
      set {
        representationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "representation_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRepresentationName {
      get { return representationName_ != null; }
    }
    /// <summary>Clears the value of the "representation_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRepresentationName() {
      representationName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_GameRecordingSegmentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_GameRecordingSegmentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SegmentNumber != other.SegmentNumber) return false;
      if (SegmentSizeBytes != other.SegmentSizeBytes) return false;
      if (ComponentName != other.ComponentName) return false;
      if (RepresentationName != other.RepresentationName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSegmentNumber) hash ^= SegmentNumber.GetHashCode();
      if (HasSegmentSizeBytes) hash ^= SegmentSizeBytes.GetHashCode();
      if (HasComponentName) hash ^= ComponentName.GetHashCode();
      if (HasRepresentationName) hash ^= RepresentationName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSegmentNumber) {
        output.WriteRawTag(8);
        output.WriteUInt32(SegmentNumber);
      }
      if (HasSegmentSizeBytes) {
        output.WriteRawTag(16);
        output.WriteUInt64(SegmentSizeBytes);
      }
      if (HasComponentName) {
        output.WriteRawTag(26);
        output.WriteString(ComponentName);
      }
      if (HasRepresentationName) {
        output.WriteRawTag(34);
        output.WriteString(RepresentationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSegmentNumber) {
        output.WriteRawTag(8);
        output.WriteUInt32(SegmentNumber);
      }
      if (HasSegmentSizeBytes) {
        output.WriteRawTag(16);
        output.WriteUInt64(SegmentSizeBytes);
      }
      if (HasComponentName) {
        output.WriteRawTag(26);
        output.WriteString(ComponentName);
      }
      if (HasRepresentationName) {
        output.WriteRawTag(34);
        output.WriteString(RepresentationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSegmentNumber) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentNumber);
      }
      if (HasSegmentSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SegmentSizeBytes);
      }
      if (HasComponentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentName);
      }
      if (HasRepresentationName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepresentationName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_GameRecordingSegmentInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSegmentNumber) {
        SegmentNumber = other.SegmentNumber;
      }
      if (other.HasSegmentSizeBytes) {
        SegmentSizeBytes = other.SegmentSizeBytes;
      }
      if (other.HasComponentName) {
        ComponentName = other.ComponentName;
      }
      if (other.HasRepresentationName) {
        RepresentationName = other.RepresentationName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SegmentNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            SegmentSizeBytes = input.ReadUInt64();
            break;
          }
          case 26: {
            ComponentName = input.ReadString();
            break;
          }
          case 34: {
            RepresentationName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SegmentNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            SegmentSizeBytes = input.ReadUInt64();
            break;
          }
          case 26: {
            ComponentName = input.ReadString();
            break;
          }
          case 34: {
            RepresentationName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_GameRecordingSegmentUploadInfo : pb::IMessage<CVideo_GameRecordingSegmentUploadInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_GameRecordingSegmentUploadInfo> _parser = new pb::MessageParser<CVideo_GameRecordingSegmentUploadInfo>(() => new CVideo_GameRecordingSegmentUploadInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_GameRecordingSegmentUploadInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientserverVideoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingSegmentUploadInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingSegmentUploadInfo(CVideo_GameRecordingSegmentUploadInfo other) : this() {
      _hasBits0 = other._hasBits0;
      segmentInfo_ = other.segmentInfo_ != null ? other.segmentInfo_.Clone() : null;
      urlHost_ = other.urlHost_;
      urlPath_ = other.urlPath_;
      useHttps_ = other.useHttps_;
      requestHeaders_ = other.requestHeaders_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingSegmentUploadInfo Clone() {
      return new CVideo_GameRecordingSegmentUploadInfo(this);
    }

    /// <summary>Field number for the "segment_info" field.</summary>
    public const int SegmentInfoFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo segmentInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo SegmentInfo {
      get { return segmentInfo_; }
      set {
        segmentInfo_ = value;
      }
    }

    /// <summary>Field number for the "url_host" field.</summary>
    public const int UrlHostFieldNumber = 2;
    private readonly static string UrlHostDefaultValue = "";

    private string urlHost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UrlHost {
      get { return urlHost_ ?? UrlHostDefaultValue; }
      set {
        urlHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url_host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrlHost {
      get { return urlHost_ != null; }
    }
    /// <summary>Clears the value of the "url_host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrlHost() {
      urlHost_ = null;
    }

    /// <summary>Field number for the "url_path" field.</summary>
    public const int UrlPathFieldNumber = 3;
    private readonly static string UrlPathDefaultValue = "";

    private string urlPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UrlPath {
      get { return urlPath_ ?? UrlPathDefaultValue; }
      set {
        urlPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrlPath {
      get { return urlPath_ != null; }
    }
    /// <summary>Clears the value of the "url_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrlPath() {
      urlPath_ = null;
    }

    /// <summary>Field number for the "use_https" field.</summary>
    public const int UseHttpsFieldNumber = 4;
    private readonly static bool UseHttpsDefaultValue = false;

    private bool useHttps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseHttps {
      get { if ((_hasBits0 & 1) != 0) { return useHttps_; } else { return UseHttpsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        useHttps_ = value;
      }
    }
    /// <summary>Gets whether the "use_https" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseHttps {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "use_https" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseHttps() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "request_headers" field.</summary>
    public const int RequestHeadersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders> _repeated_requestHeaders_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders> requestHeaders_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Types.HTTPHeaders> RequestHeaders {
      get { return requestHeaders_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_GameRecordingSegmentUploadInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_GameRecordingSegmentUploadInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SegmentInfo, other.SegmentInfo)) return false;
      if (UrlHost != other.UrlHost) return false;
      if (UrlPath != other.UrlPath) return false;
      if (UseHttps != other.UseHttps) return false;
      if(!requestHeaders_.Equals(other.requestHeaders_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (segmentInfo_ != null) hash ^= SegmentInfo.GetHashCode();
      if (HasUrlHost) hash ^= UrlHost.GetHashCode();
      if (HasUrlPath) hash ^= UrlPath.GetHashCode();
      if (HasUseHttps) hash ^= UseHttps.GetHashCode();
      hash ^= requestHeaders_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (segmentInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SegmentInfo);
      }
      if (HasUrlHost) {
        output.WriteRawTag(18);
        output.WriteString(UrlHost);
      }
      if (HasUrlPath) {
        output.WriteRawTag(26);
        output.WriteString(UrlPath);
      }
      if (HasUseHttps) {
        output.WriteRawTag(32);
        output.WriteBool(UseHttps);
      }
      requestHeaders_.WriteTo(output, _repeated_requestHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (segmentInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SegmentInfo);
      }
      if (HasUrlHost) {
        output.WriteRawTag(18);
        output.WriteString(UrlHost);
      }
      if (HasUrlPath) {
        output.WriteRawTag(26);
        output.WriteString(UrlPath);
      }
      if (HasUseHttps) {
        output.WriteRawTag(32);
        output.WriteBool(UseHttps);
      }
      requestHeaders_.WriteTo(ref output, _repeated_requestHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (segmentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SegmentInfo);
      }
      if (HasUrlHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlHost);
      }
      if (HasUrlPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlPath);
      }
      if (HasUseHttps) {
        size += 1 + 1;
      }
      size += requestHeaders_.CalculateSize(_repeated_requestHeaders_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_GameRecordingSegmentUploadInfo other) {
      if (other == null) {
        return;
      }
      if (other.segmentInfo_ != null) {
        if (segmentInfo_ == null) {
          SegmentInfo = new global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo();
        }
        SegmentInfo.MergeFrom(other.SegmentInfo);
      }
      if (other.HasUrlHost) {
        UrlHost = other.UrlHost;
      }
      if (other.HasUrlPath) {
        UrlPath = other.UrlPath;
      }
      if (other.HasUseHttps) {
        UseHttps = other.UseHttps;
      }
      requestHeaders_.Add(other.requestHeaders_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (segmentInfo_ == null) {
              SegmentInfo = new global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo();
            }
            input.ReadMessage(SegmentInfo);
            break;
          }
          case 18: {
            UrlHost = input.ReadString();
            break;
          }
          case 26: {
            UrlPath = input.ReadString();
            break;
          }
          case 32: {
            UseHttps = input.ReadBool();
            break;
          }
          case 42: {
            requestHeaders_.AddEntriesFrom(input, _repeated_requestHeaders_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (segmentInfo_ == null) {
              SegmentInfo = new global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo();
            }
            input.ReadMessage(SegmentInfo);
            break;
          }
          case 18: {
            UrlHost = input.ReadString();
            break;
          }
          case 26: {
            UrlPath = input.ReadString();
            break;
          }
          case 32: {
            UseHttps = input.ReadBool();
            break;
          }
          case 42: {
            requestHeaders_.AddEntriesFrom(ref input, _repeated_requestHeaders_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CVideo_GameRecordingSegmentUploadInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class HTTPHeaders : pb::IMessage<HTTPHeaders>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<HTTPHeaders> _parser = new pb::MessageParser<HTTPHeaders>(() => new HTTPHeaders());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<HTTPHeaders> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HTTPHeaders() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HTTPHeaders(HTTPHeaders other) : this() {
          name_ = other.name_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HTTPHeaders Clone() {
          return new HTTPHeaders(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private readonly static string ValueDefaultValue = "";

        private string value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Value {
          get { return value_ ?? ValueDefaultValue; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasValue {
          get { return value_ != null; }
        }
        /// <summary>Clears the value of the "value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValue() {
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as HTTPHeaders);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(HTTPHeaders other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasValue) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasValue) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasValue) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(HTTPHeaders other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
