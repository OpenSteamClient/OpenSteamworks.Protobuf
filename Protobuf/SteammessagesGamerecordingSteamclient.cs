// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_gamerecording.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_gamerecording.steamclient.proto</summary>
  public static partial class SteammessagesGamerecordingSteamclientReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_gamerecording.steamclient.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesGamerecordingSteamclientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1zdGVhbW1lc3NhZ2VzX2dhbWVyZWNvcmRpbmcuc3RlYW1jbGllbnQucHJv",
            "dG8aIGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvGhhzdGVhbW1l",
            "c3NhZ2VzX2Jhc2UucHJvdG8aLHN0ZWFtbWVzc2FnZXNfdW5pZmllZF9iYXNl",
            "LnN0ZWFtY2xpZW50LnByb3RvGiZzdGVhbW1lc3NhZ2VzX2NsaWVudHNlcnZl",
            "cl92aWRlby5wcm90byK0AQoTQ1ZpZGVvTWFuYWdlckNsaXBJRBIdChV2aWRl",
            "b19tYW5hZ2VyX2NsaXBfaWQYASABKAYSHgoWdmlkZW9fbWFuYWdlcl92aWRl",
            "b19pZBgCIAEoBhIaChJzZXJ2ZXJfdGltZWxpbmVfaWQYAyABKAYSFAoMbWFu",
            "aWZlc3RfdXJsGAQgASgJEhMKC2R1cmF0aW9uX21zGAUgASgNEhcKD3N0YXJ0",
            "X29mZnNldF9tcxgGIAEoDSLZAQoSQ0dhbWVSZWNvcmRpbmdDbGlwEg8KB2Ns",
            "aXBfaWQYASABKAYSDgoGZ2FtZWlkGAIgASgEEhUKDWRhdGVfcmVjb3JkZWQY",
            "BCABKA0SHQoVdG90YWxfZmlsZV9zaXplX2J5dGVzGAcgASgEEicKCXZpZGVv",
            "X2lkcxgJIAMoCzIULkNWaWRlb01hbmFnZXJDbGlwSUQSFQoNb3duZXJfc3Rl",
            "YW1pZBgKIAEoBhIXCg91cGxvYWRfY29tcGxldGUYCyABKAgSEwoLZHVyYXRp",
            "b25fbXMYDCABKA0iegomQ0dhbWVSZWNvcmRpbmdfQ3JlYXRlU2hhcmVDbGlw",
            "X1JlcXVlc3QSIQoEY2xpcBgCIAEoCzITLkNHYW1lUmVjb3JkaW5nQ2xpcBIt",
            "Cgl2aWRlb19kZWYYAyADKAsyGi5DTXNnVmlkZW9HYW1lUmVjb3JkaW5nRGVm",
            "IkwKJ0NHYW1lUmVjb3JkaW5nX0NyZWF0ZVNoYXJlQ2xpcF9SZXNwb25zZRIh",
            "CgRjbGlwGAEgASgLMhMuQ0dhbWVSZWNvcmRpbmdDbGlwIjoKJ0NHYW1lUmVj",
            "b3JkaW5nX0RlbGV0ZVNoYXJlZENsaXBfUmVxdWVzdBIPCgdjbGlwX2lkGAIg",
            "ASgGIioKKENHYW1lUmVjb3JkaW5nX0RlbGV0ZVNoYXJlZENsaXBfUmVzcG9u",
            "c2UiPQoqQ0dhbWVSZWNvcmRpbmdfR2V0U2luZ2xlU2hhcmVkQ2xpcF9SZXF1",
            "ZXN0Eg8KB2NsaXBfaWQYAiABKAYiUAorQ0dhbWVSZWNvcmRpbmdfR2V0U2lu",
            "Z2xlU2hhcmVkQ2xpcF9SZXNwb25zZRIhCgRjbGlwGAEgASgLMhMuQ0dhbWVS",
            "ZWNvcmRpbmdDbGlwIrkBCi9DVmlkZW9fQmVnaW5HYW1lUmVjb3JkaW5nU2Vn",
            "bWVudHNVcGxvYWRfUmVxdWVzdBIUCgxyZWNvcmRpbmdfaWQYASABKAQSFgoO",
            "Y29tcG9uZW50X25hbWUYAiABKAkSGwoTcmVwcmVzZW50YXRpb25fbmFtZRgD",
            "IAEoCRI7ChFzZWdtZW50c190b19zdG9yZRgEIAMoCzIgLkNWaWRlb19HYW1l",
            "UmVjb3JkaW5nU2VnbWVudEluZm8ihwEKMENWaWRlb19CZWdpbkdhbWVSZWNv",
            "cmRpbmdTZWdtZW50c1VwbG9hZF9SZXNwb25zZRI/Cg9zZWdtZW50c19uZWVk",
            "ZWQYASADKAsyJi5DVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRVcGxvYWRJ",
            "bmZvEhIKCmNhbGxfYWdhaW4YAiABKAgiyAEKMENWaWRlb19Db21taXRHYW1l",
            "UmVjb3JkaW5nU2VnbWVudHNVcGxvYWRfUmVxdWVzdBIUCgxyZWNvcmRpbmdf",
            "aWQYASABKAQSFgoOY29tcG9uZW50X25hbWUYAiABKAkSGwoTcmVwcmVzZW50",
            "YXRpb25fbmFtZRgDIAEoCRIcChRmaXJzdF9zZWdtZW50X251bWJlchgEIAEo",
            "DRIUCgxudW1fc2VnbWVudHMYBSABKA0SFQoNdXBsb2FkX3Jlc3VsdBgGIAEo",
            "DSIzCjFDVmlkZW9fQ29tbWl0R2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2Fk",
            "X1Jlc3BvbnNlIlIKOkNWaWRlb19HYW1lUmVjb3JkaW5nR2V0TmV4dEJhdGNo",
            "T2ZTZWdtZW50c1RvVXBsb2FkX1JlcXVlc3QSFAoMcmVjb3JkaW5nX2lkGAEg",
            "ASgEIn4KO0NWaWRlb19HYW1lUmVjb3JkaW5nR2V0TmV4dEJhdGNoT2ZTZWdt",
            "ZW50c1RvVXBsb2FkX1Jlc3BvbnNlEj8KD3NlZ21lbnRzX25lZWRlZBgBIAMo",
            "CzImLkNWaWRlb19HYW1lUmVjb3JkaW5nU2VnbWVudFVwbG9hZEluZm8ihQEK",
            "MENWaWRlb19HYW1lUmVjb3JkaW5nQ29tbWl0U2VnbWVudFVwbG9hZHNfUmVx",
            "dWVzdBIUCgxyZWNvcmRpbmdfaWQYASABKAQSOwoRc2VnbWVudHNfdXBsb2Fk",
            "ZWQYAiADKAsyIC5DVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRJbmZvIjMK",
            "MUNWaWRlb19HYW1lUmVjb3JkaW5nQ29tbWl0U2VnbWVudFVwbG9hZHNfUmVz",
            "cG9uc2Uy1AIKEUdhbWVSZWNvcmRpbmdDbGlwEmQKD0NyZWF0ZVNoYXJlQ2xp",
            "cBInLkNHYW1lUmVjb3JkaW5nX0NyZWF0ZVNoYXJlQ2xpcF9SZXF1ZXN0Gigu",
            "Q0dhbWVSZWNvcmRpbmdfQ3JlYXRlU2hhcmVDbGlwX1Jlc3BvbnNlEmcKEERl",
            "bGV0ZVNoYXJlZENsaXASKC5DR2FtZVJlY29yZGluZ19EZWxldGVTaGFyZWRD",
            "bGlwX1JlcXVlc3QaKS5DR2FtZVJlY29yZGluZ19EZWxldGVTaGFyZWRDbGlw",
            "X1Jlc3BvbnNlEnAKE0dldFNpbmdsZVNoYXJlZENsaXASKy5DR2FtZVJlY29y",
            "ZGluZ19HZXRTaW5nbGVTaGFyZWRDbGlwX1JlcXVlc3QaLC5DR2FtZVJlY29y",
            "ZGluZ19HZXRTaW5nbGVTaGFyZWRDbGlwX1Jlc3BvbnNlMr8ECglWaWRlb0Ns",
            "aXAShwEKIEJlZ2luR2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkEjAuQ1Zp",
            "ZGVvX0JlZ2luR2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkX1JlcXVlc3Qa",
            "MS5DVmlkZW9fQmVnaW5HYW1lUmVjb3JkaW5nU2VnbWVudHNVcGxvYWRfUmVz",
            "cG9uc2USigEKIUNvbW1pdEdhbWVSZWNvcmRpbmdTZWdtZW50c1VwbG9hZBIx",
            "LkNWaWRlb19Db21taXRHYW1lUmVjb3JkaW5nU2VnbWVudHNVcGxvYWRfUmVx",
            "dWVzdBoyLkNWaWRlb19Db21taXRHYW1lUmVjb3JkaW5nU2VnbWVudHNVcGxv",
            "YWRfUmVzcG9uc2USmwEKHkdldE5leHRCYXRjaE9mU2VnbWVudHNUb1VwbG9h",
            "ZBI7LkNWaWRlb19HYW1lUmVjb3JkaW5nR2V0TmV4dEJhdGNoT2ZTZWdtZW50",
            "c1RvVXBsb2FkX1JlcXVlc3QaPC5DVmlkZW9fR2FtZVJlY29yZGluZ0dldE5l",
            "eHRCYXRjaE9mU2VnbWVudHNUb1VwbG9hZF9SZXNwb25zZRJ9ChRDb21taXRT",
            "ZWdtZW50VXBsb2FkcxIxLkNWaWRlb19HYW1lUmVjb3JkaW5nQ29tbWl0U2Vn",
            "bWVudFVwbG9hZHNfUmVxdWVzdBoyLkNWaWRlb19HYW1lUmVjb3JkaW5nQ29t",
            "bWl0U2VnbWVudFVwbG9hZHNfUmVzcG9uc2VCHYABAaoCF09wZW5TdGVhbXdv",
            "cmtzLlByb3RvYnVm"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesUnifiedBaseSteamclientReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesClientserverVideoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideoManagerClipID), global::OpenSteamworks.Protobuf.CVideoManagerClipID.Parser, new[]{ "VideoManagerClipId", "VideoManagerVideoId", "ServerTimelineId", "ManifestUrl", "DurationMs", "StartOffsetMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecordingClip), global::OpenSteamworks.Protobuf.CGameRecordingClip.Parser, new[]{ "ClipId", "Gameid", "DateRecorded", "TotalFileSizeBytes", "VideoIds", "OwnerSteamid", "UploadComplete", "DurationMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecording_CreateShareClip_Request), global::OpenSteamworks.Protobuf.CGameRecording_CreateShareClip_Request.Parser, new[]{ "Clip", "VideoDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecording_CreateShareClip_Response), global::OpenSteamworks.Protobuf.CGameRecording_CreateShareClip_Response.Parser, new[]{ "Clip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecording_DeleteSharedClip_Request), global::OpenSteamworks.Protobuf.CGameRecording_DeleteSharedClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecording_DeleteSharedClip_Response), global::OpenSteamworks.Protobuf.CGameRecording_DeleteSharedClip_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecording_GetSingleSharedClip_Request), global::OpenSteamworks.Protobuf.CGameRecording_GetSingleSharedClip_Request.Parser, new[]{ "ClipId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameRecording_GetSingleSharedClip_Response), global::OpenSteamworks.Protobuf.CGameRecording_GetSingleSharedClip_Response.Parser, new[]{ "Clip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_BeginGameRecordingSegmentsUpload_Request), global::OpenSteamworks.Protobuf.CVideo_BeginGameRecordingSegmentsUpload_Request.Parser, new[]{ "RecordingId", "ComponentName", "RepresentationName", "SegmentsToStore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_BeginGameRecordingSegmentsUpload_Response), global::OpenSteamworks.Protobuf.CVideo_BeginGameRecordingSegmentsUpload_Response.Parser, new[]{ "SegmentsNeeded", "CallAgain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_CommitGameRecordingSegmentsUpload_Request), global::OpenSteamworks.Protobuf.CVideo_CommitGameRecordingSegmentsUpload_Request.Parser, new[]{ "RecordingId", "ComponentName", "RepresentationName", "FirstSegmentNumber", "NumSegments", "UploadResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_CommitGameRecordingSegmentsUpload_Response), global::OpenSteamworks.Protobuf.CVideo_CommitGameRecordingSegmentsUpload_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request), global::OpenSteamworks.Protobuf.CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request.Parser, new[]{ "RecordingId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response), global::OpenSteamworks.Protobuf.CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response.Parser, new[]{ "SegmentsNeeded" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingCommitSegmentUploads_Request), global::OpenSteamworks.Protobuf.CVideo_GameRecordingCommitSegmentUploads_Request.Parser, new[]{ "RecordingId", "SegmentsUploaded" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CVideo_GameRecordingCommitSegmentUploads_Response), global::OpenSteamworks.Protobuf.CVideo_GameRecordingCommitSegmentUploads_Response.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideoManagerClipID : pb::IMessage<CVideoManagerClipID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideoManagerClipID> _parser = new pb::MessageParser<CVideoManagerClipID>(() => new CVideoManagerClipID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideoManagerClipID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoManagerClipID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoManagerClipID(CVideoManagerClipID other) : this() {
      _hasBits0 = other._hasBits0;
      videoManagerClipId_ = other.videoManagerClipId_;
      videoManagerVideoId_ = other.videoManagerVideoId_;
      serverTimelineId_ = other.serverTimelineId_;
      manifestUrl_ = other.manifestUrl_;
      durationMs_ = other.durationMs_;
      startOffsetMs_ = other.startOffsetMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideoManagerClipID Clone() {
      return new CVideoManagerClipID(this);
    }

    /// <summary>Field number for the "video_manager_clip_id" field.</summary>
    public const int VideoManagerClipIdFieldNumber = 1;
    private readonly static ulong VideoManagerClipIdDefaultValue = 0UL;

    private ulong videoManagerClipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VideoManagerClipId {
      get { if ((_hasBits0 & 1) != 0) { return videoManagerClipId_; } else { return VideoManagerClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        videoManagerClipId_ = value;
      }
    }
    /// <summary>Gets whether the "video_manager_clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoManagerClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "video_manager_clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoManagerClipId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "video_manager_video_id" field.</summary>
    public const int VideoManagerVideoIdFieldNumber = 2;
    private readonly static ulong VideoManagerVideoIdDefaultValue = 0UL;

    private ulong videoManagerVideoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VideoManagerVideoId {
      get { if ((_hasBits0 & 2) != 0) { return videoManagerVideoId_; } else { return VideoManagerVideoIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        videoManagerVideoId_ = value;
      }
    }
    /// <summary>Gets whether the "video_manager_video_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoManagerVideoId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "video_manager_video_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoManagerVideoId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "server_timeline_id" field.</summary>
    public const int ServerTimelineIdFieldNumber = 3;
    private readonly static ulong ServerTimelineIdDefaultValue = 0UL;

    private ulong serverTimelineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ServerTimelineId {
      get { if ((_hasBits0 & 4) != 0) { return serverTimelineId_; } else { return ServerTimelineIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        serverTimelineId_ = value;
      }
    }
    /// <summary>Gets whether the "server_timeline_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerTimelineId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "server_timeline_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerTimelineId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "manifest_url" field.</summary>
    public const int ManifestUrlFieldNumber = 4;
    private readonly static string ManifestUrlDefaultValue = "";

    private string manifestUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ManifestUrl {
      get { return manifestUrl_ ?? ManifestUrlDefaultValue; }
      set {
        manifestUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "manifest_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasManifestUrl {
      get { return manifestUrl_ != null; }
    }
    /// <summary>Clears the value of the "manifest_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearManifestUrl() {
      manifestUrl_ = null;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 5;
    private readonly static uint DurationMsDefaultValue = 0;

    private uint durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DurationMs {
      get { if ((_hasBits0 & 8) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "start_offset_ms" field.</summary>
    public const int StartOffsetMsFieldNumber = 6;
    private readonly static uint StartOffsetMsDefaultValue = 0;

    private uint startOffsetMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartOffsetMs {
      get { if ((_hasBits0 & 16) != 0) { return startOffsetMs_; } else { return StartOffsetMsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        startOffsetMs_ = value;
      }
    }
    /// <summary>Gets whether the "start_offset_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOffsetMs {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "start_offset_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOffsetMs() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideoManagerClipID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideoManagerClipID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VideoManagerClipId != other.VideoManagerClipId) return false;
      if (VideoManagerVideoId != other.VideoManagerVideoId) return false;
      if (ServerTimelineId != other.ServerTimelineId) return false;
      if (ManifestUrl != other.ManifestUrl) return false;
      if (DurationMs != other.DurationMs) return false;
      if (StartOffsetMs != other.StartOffsetMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVideoManagerClipId) hash ^= VideoManagerClipId.GetHashCode();
      if (HasVideoManagerVideoId) hash ^= VideoManagerVideoId.GetHashCode();
      if (HasServerTimelineId) hash ^= ServerTimelineId.GetHashCode();
      if (HasManifestUrl) hash ^= ManifestUrl.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasStartOffsetMs) hash ^= StartOffsetMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVideoManagerClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        output.WriteRawTag(17);
        output.WriteFixed64(VideoManagerVideoId);
      }
      if (HasServerTimelineId) {
        output.WriteRawTag(25);
        output.WriteFixed64(ServerTimelineId);
      }
      if (HasManifestUrl) {
        output.WriteRawTag(34);
        output.WriteString(ManifestUrl);
      }
      if (HasDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt32(DurationMs);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt32(StartOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVideoManagerClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(VideoManagerClipId);
      }
      if (HasVideoManagerVideoId) {
        output.WriteRawTag(17);
        output.WriteFixed64(VideoManagerVideoId);
      }
      if (HasServerTimelineId) {
        output.WriteRawTag(25);
        output.WriteFixed64(ServerTimelineId);
      }
      if (HasManifestUrl) {
        output.WriteRawTag(34);
        output.WriteString(ManifestUrl);
      }
      if (HasDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt32(DurationMs);
      }
      if (HasStartOffsetMs) {
        output.WriteRawTag(48);
        output.WriteUInt32(StartOffsetMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVideoManagerClipId) {
        size += 1 + 8;
      }
      if (HasVideoManagerVideoId) {
        size += 1 + 8;
      }
      if (HasServerTimelineId) {
        size += 1 + 8;
      }
      if (HasManifestUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ManifestUrl);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DurationMs);
      }
      if (HasStartOffsetMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartOffsetMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideoManagerClipID other) {
      if (other == null) {
        return;
      }
      if (other.HasVideoManagerClipId) {
        VideoManagerClipId = other.VideoManagerClipId;
      }
      if (other.HasVideoManagerVideoId) {
        VideoManagerVideoId = other.VideoManagerVideoId;
      }
      if (other.HasServerTimelineId) {
        ServerTimelineId = other.ServerTimelineId;
      }
      if (other.HasManifestUrl) {
        ManifestUrl = other.ManifestUrl;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasStartOffsetMs) {
        StartOffsetMs = other.StartOffsetMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            VideoManagerClipId = input.ReadFixed64();
            break;
          }
          case 17: {
            VideoManagerVideoId = input.ReadFixed64();
            break;
          }
          case 25: {
            ServerTimelineId = input.ReadFixed64();
            break;
          }
          case 34: {
            ManifestUrl = input.ReadString();
            break;
          }
          case 40: {
            DurationMs = input.ReadUInt32();
            break;
          }
          case 48: {
            StartOffsetMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            VideoManagerClipId = input.ReadFixed64();
            break;
          }
          case 17: {
            VideoManagerVideoId = input.ReadFixed64();
            break;
          }
          case 25: {
            ServerTimelineId = input.ReadFixed64();
            break;
          }
          case 34: {
            ManifestUrl = input.ReadString();
            break;
          }
          case 40: {
            DurationMs = input.ReadUInt32();
            break;
          }
          case 48: {
            StartOffsetMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecordingClip : pb::IMessage<CGameRecordingClip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecordingClip> _parser = new pb::MessageParser<CGameRecordingClip>(() => new CGameRecordingClip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecordingClip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingClip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingClip(CGameRecordingClip other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      gameid_ = other.gameid_;
      dateRecorded_ = other.dateRecorded_;
      totalFileSizeBytes_ = other.totalFileSizeBytes_;
      videoIds_ = other.videoIds_.Clone();
      ownerSteamid_ = other.ownerSteamid_;
      uploadComplete_ = other.uploadComplete_;
      durationMs_ = other.durationMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecordingClip Clone() {
      return new CGameRecordingClip(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 1;
    private readonly static ulong ClipIdDefaultValue = 0UL;

    private ulong clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClipId {
      get { if ((_hasBits0 & 1) != 0) { return clipId_; } else { return ClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipId_ = value;
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 2;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 2) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "date_recorded" field.</summary>
    public const int DateRecordedFieldNumber = 4;
    private readonly static uint DateRecordedDefaultValue = 0;

    private uint dateRecorded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DateRecorded {
      get { if ((_hasBits0 & 4) != 0) { return dateRecorded_; } else { return DateRecordedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dateRecorded_ = value;
      }
    }
    /// <summary>Gets whether the "date_recorded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDateRecorded {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "date_recorded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDateRecorded() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_file_size_bytes" field.</summary>
    public const int TotalFileSizeBytesFieldNumber = 7;
    private readonly static ulong TotalFileSizeBytesDefaultValue = 0UL;

    private ulong totalFileSizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalFileSizeBytes {
      get { if ((_hasBits0 & 8) != 0) { return totalFileSizeBytes_; } else { return TotalFileSizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalFileSizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "total_file_size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalFileSizeBytes {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_file_size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalFileSizeBytes() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "video_ids" field.</summary>
    public const int VideoIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideoManagerClipID> _repeated_videoIds_codec
        = pb::FieldCodec.ForMessage(74, global::OpenSteamworks.Protobuf.CVideoManagerClipID.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideoManagerClipID> videoIds_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideoManagerClipID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideoManagerClipID> VideoIds {
      get { return videoIds_; }
    }

    /// <summary>Field number for the "owner_steamid" field.</summary>
    public const int OwnerSteamidFieldNumber = 10;
    private readonly static ulong OwnerSteamidDefaultValue = 0UL;

    private ulong ownerSteamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong OwnerSteamid {
      get { if ((_hasBits0 & 16) != 0) { return ownerSteamid_; } else { return OwnerSteamidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ownerSteamid_ = value;
      }
    }
    /// <summary>Gets whether the "owner_steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerSteamid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "owner_steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerSteamid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "upload_complete" field.</summary>
    public const int UploadCompleteFieldNumber = 11;
    private readonly static bool UploadCompleteDefaultValue = false;

    private bool uploadComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UploadComplete {
      get { if ((_hasBits0 & 32) != 0) { return uploadComplete_; } else { return UploadCompleteDefaultValue; } }
      set {
        _hasBits0 |= 32;
        uploadComplete_ = value;
      }
    }
    /// <summary>Gets whether the "upload_complete" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUploadComplete {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "upload_complete" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUploadComplete() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 12;
    private readonly static uint DurationMsDefaultValue = 0;

    private uint durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DurationMs {
      get { if ((_hasBits0 & 64) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecordingClip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecordingClip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      if (Gameid != other.Gameid) return false;
      if (DateRecorded != other.DateRecorded) return false;
      if (TotalFileSizeBytes != other.TotalFileSizeBytes) return false;
      if(!videoIds_.Equals(other.videoIds_)) return false;
      if (OwnerSteamid != other.OwnerSteamid) return false;
      if (UploadComplete != other.UploadComplete) return false;
      if (DurationMs != other.DurationMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (HasDateRecorded) hash ^= DateRecorded.GetHashCode();
      if (HasTotalFileSizeBytes) hash ^= TotalFileSizeBytes.GetHashCode();
      hash ^= videoIds_.GetHashCode();
      if (HasOwnerSteamid) hash ^= OwnerSteamid.GetHashCode();
      if (HasUploadComplete) hash ^= UploadComplete.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ClipId);
      }
      if (HasGameid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Gameid);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateRecorded);
      }
      if (HasTotalFileSizeBytes) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalFileSizeBytes);
      }
      videoIds_.WriteTo(output, _repeated_videoIds_codec);
      if (HasOwnerSteamid) {
        output.WriteRawTag(81);
        output.WriteFixed64(OwnerSteamid);
      }
      if (HasUploadComplete) {
        output.WriteRawTag(88);
        output.WriteBool(UploadComplete);
      }
      if (HasDurationMs) {
        output.WriteRawTag(96);
        output.WriteUInt32(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ClipId);
      }
      if (HasGameid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Gameid);
      }
      if (HasDateRecorded) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateRecorded);
      }
      if (HasTotalFileSizeBytes) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalFileSizeBytes);
      }
      videoIds_.WriteTo(ref output, _repeated_videoIds_codec);
      if (HasOwnerSteamid) {
        output.WriteRawTag(81);
        output.WriteFixed64(OwnerSteamid);
      }
      if (HasUploadComplete) {
        output.WriteRawTag(88);
        output.WriteBool(UploadComplete);
      }
      if (HasDurationMs) {
        output.WriteRawTag(96);
        output.WriteUInt32(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + 8;
      }
      if (HasGameid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gameid);
      }
      if (HasDateRecorded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateRecorded);
      }
      if (HasTotalFileSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalFileSizeBytes);
      }
      size += videoIds_.CalculateSize(_repeated_videoIds_codec);
      if (HasOwnerSteamid) {
        size += 1 + 8;
      }
      if (HasUploadComplete) {
        size += 1 + 1;
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DurationMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecordingClip other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      if (other.HasDateRecorded) {
        DateRecorded = other.DateRecorded;
      }
      if (other.HasTotalFileSizeBytes) {
        TotalFileSizeBytes = other.TotalFileSizeBytes;
      }
      videoIds_.Add(other.videoIds_);
      if (other.HasOwnerSteamid) {
        OwnerSteamid = other.OwnerSteamid;
      }
      if (other.HasUploadComplete) {
        UploadComplete = other.UploadComplete;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ClipId = input.ReadFixed64();
            break;
          }
          case 16: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 32: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 56: {
            TotalFileSizeBytes = input.ReadUInt64();
            break;
          }
          case 74: {
            videoIds_.AddEntriesFrom(input, _repeated_videoIds_codec);
            break;
          }
          case 81: {
            OwnerSteamid = input.ReadFixed64();
            break;
          }
          case 88: {
            UploadComplete = input.ReadBool();
            break;
          }
          case 96: {
            DurationMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            ClipId = input.ReadFixed64();
            break;
          }
          case 16: {
            Gameid = input.ReadUInt64();
            break;
          }
          case 32: {
            DateRecorded = input.ReadUInt32();
            break;
          }
          case 56: {
            TotalFileSizeBytes = input.ReadUInt64();
            break;
          }
          case 74: {
            videoIds_.AddEntriesFrom(ref input, _repeated_videoIds_codec);
            break;
          }
          case 81: {
            OwnerSteamid = input.ReadFixed64();
            break;
          }
          case 88: {
            UploadComplete = input.ReadBool();
            break;
          }
          case 96: {
            DurationMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_CreateShareClip_Request : pb::IMessage<CGameRecording_CreateShareClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_CreateShareClip_Request> _parser = new pb::MessageParser<CGameRecording_CreateShareClip_Request>(() => new CGameRecording_CreateShareClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_CreateShareClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Request(CGameRecording_CreateShareClip_Request other) : this() {
      clip_ = other.clip_ != null ? other.clip_.Clone() : null;
      videoDef_ = other.videoDef_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Request Clone() {
      return new CGameRecording_CreateShareClip_Request(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.CGameRecordingClip clip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameRecordingClip Clip {
      get { return clip_; }
      set {
        clip_ = value;
      }
    }

    /// <summary>Field number for the "video_def" field.</summary>
    public const int VideoDefFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef> _repeated_videoDef_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef> videoDef_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgVideoGameRecordingDef> VideoDef {
      get { return videoDef_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_CreateShareClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_CreateShareClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clip, other.Clip)) return false;
      if(!videoDef_.Equals(other.videoDef_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (clip_ != null) hash ^= Clip.GetHashCode();
      hash ^= videoDef_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clip_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Clip);
      }
      videoDef_.WriteTo(output, _repeated_videoDef_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clip_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Clip);
      }
      videoDef_.WriteTo(ref output, _repeated_videoDef_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (clip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clip);
      }
      size += videoDef_.CalculateSize(_repeated_videoDef_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_CreateShareClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.clip_ != null) {
        if (clip_ == null) {
          Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
        }
        Clip.MergeFrom(other.Clip);
      }
      videoDef_.Add(other.videoDef_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
          case 26: {
            videoDef_.AddEntriesFrom(input, _repeated_videoDef_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
          case 26: {
            videoDef_.AddEntriesFrom(ref input, _repeated_videoDef_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_CreateShareClip_Response : pb::IMessage<CGameRecording_CreateShareClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_CreateShareClip_Response> _parser = new pb::MessageParser<CGameRecording_CreateShareClip_Response>(() => new CGameRecording_CreateShareClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_CreateShareClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Response(CGameRecording_CreateShareClip_Response other) : this() {
      clip_ = other.clip_ != null ? other.clip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_CreateShareClip_Response Clone() {
      return new CGameRecording_CreateShareClip_Response(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CGameRecordingClip clip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameRecordingClip Clip {
      get { return clip_; }
      set {
        clip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_CreateShareClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_CreateShareClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clip, other.Clip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (clip_ != null) hash ^= Clip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (clip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_CreateShareClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.clip_ != null) {
        if (clip_ == null) {
          Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
        }
        Clip.MergeFrom(other.Clip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_DeleteSharedClip_Request : pb::IMessage<CGameRecording_DeleteSharedClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_DeleteSharedClip_Request> _parser = new pb::MessageParser<CGameRecording_DeleteSharedClip_Request>(() => new CGameRecording_DeleteSharedClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_DeleteSharedClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Request(CGameRecording_DeleteSharedClip_Request other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Request Clone() {
      return new CGameRecording_DeleteSharedClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 2;
    private readonly static ulong ClipIdDefaultValue = 0UL;

    private ulong clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClipId {
      get { if ((_hasBits0 & 1) != 0) { return clipId_; } else { return ClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipId_ = value;
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_DeleteSharedClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_DeleteSharedClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_DeleteSharedClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_DeleteSharedClip_Response : pb::IMessage<CGameRecording_DeleteSharedClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_DeleteSharedClip_Response> _parser = new pb::MessageParser<CGameRecording_DeleteSharedClip_Response>(() => new CGameRecording_DeleteSharedClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_DeleteSharedClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Response(CGameRecording_DeleteSharedClip_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_DeleteSharedClip_Response Clone() {
      return new CGameRecording_DeleteSharedClip_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_DeleteSharedClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_DeleteSharedClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_DeleteSharedClip_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetSingleSharedClip_Request : pb::IMessage<CGameRecording_GetSingleSharedClip_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetSingleSharedClip_Request> _parser = new pb::MessageParser<CGameRecording_GetSingleSharedClip_Request>(() => new CGameRecording_GetSingleSharedClip_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetSingleSharedClip_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Request(CGameRecording_GetSingleSharedClip_Request other) : this() {
      _hasBits0 = other._hasBits0;
      clipId_ = other.clipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Request Clone() {
      return new CGameRecording_GetSingleSharedClip_Request(this);
    }

    /// <summary>Field number for the "clip_id" field.</summary>
    public const int ClipIdFieldNumber = 2;
    private readonly static ulong ClipIdDefaultValue = 0UL;

    private ulong clipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClipId {
      get { if ((_hasBits0 & 1) != 0) { return clipId_; } else { return ClipIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipId_ = value;
      }
    }
    /// <summary>Gets whether the "clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetSingleSharedClip_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetSingleSharedClip_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClipId != other.ClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipId) hash ^= ClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipId) {
        output.WriteRawTag(17);
        output.WriteFixed64(ClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetSingleSharedClip_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasClipId) {
        ClipId = other.ClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            ClipId = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CGameRecording_GetSingleSharedClip_Response : pb::IMessage<CGameRecording_GetSingleSharedClip_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameRecording_GetSingleSharedClip_Response> _parser = new pb::MessageParser<CGameRecording_GetSingleSharedClip_Response>(() => new CGameRecording_GetSingleSharedClip_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameRecording_GetSingleSharedClip_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Response(CGameRecording_GetSingleSharedClip_Response other) : this() {
      clip_ = other.clip_ != null ? other.clip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameRecording_GetSingleSharedClip_Response Clone() {
      return new CGameRecording_GetSingleSharedClip_Response(this);
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CGameRecordingClip clip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameRecordingClip Clip {
      get { return clip_; }
      set {
        clip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameRecording_GetSingleSharedClip_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameRecording_GetSingleSharedClip_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clip, other.Clip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (clip_ != null) hash ^= Clip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (clip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameRecording_GetSingleSharedClip_Response other) {
      if (other == null) {
        return;
      }
      if (other.clip_ != null) {
        if (clip_ == null) {
          Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
        }
        Clip.MergeFrom(other.Clip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (clip_ == null) {
              Clip = new global::OpenSteamworks.Protobuf.CGameRecordingClip();
            }
            input.ReadMessage(Clip);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_BeginGameRecordingSegmentsUpload_Request : pb::IMessage<CVideo_BeginGameRecordingSegmentsUpload_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_BeginGameRecordingSegmentsUpload_Request> _parser = new pb::MessageParser<CVideo_BeginGameRecordingSegmentsUpload_Request>(() => new CVideo_BeginGameRecordingSegmentsUpload_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_BeginGameRecordingSegmentsUpload_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_BeginGameRecordingSegmentsUpload_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_BeginGameRecordingSegmentsUpload_Request(CVideo_BeginGameRecordingSegmentsUpload_Request other) : this() {
      _hasBits0 = other._hasBits0;
      recordingId_ = other.recordingId_;
      componentName_ = other.componentName_;
      representationName_ = other.representationName_;
      segmentsToStore_ = other.segmentsToStore_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_BeginGameRecordingSegmentsUpload_Request Clone() {
      return new CVideo_BeginGameRecordingSegmentsUpload_Request(this);
    }

    /// <summary>Field number for the "recording_id" field.</summary>
    public const int RecordingIdFieldNumber = 1;
    private readonly static ulong RecordingIdDefaultValue = 0UL;

    private ulong recordingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RecordingId {
      get { if ((_hasBits0 & 1) != 0) { return recordingId_; } else { return RecordingIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        recordingId_ = value;
      }
    }
    /// <summary>Gets whether the "recording_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "recording_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "component_name" field.</summary>
    public const int ComponentNameFieldNumber = 2;
    private readonly static string ComponentNameDefaultValue = "";

    private string componentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentName {
      get { return componentName_ ?? ComponentNameDefaultValue; }
      set {
        componentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "component_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComponentName {
      get { return componentName_ != null; }
    }
    /// <summary>Clears the value of the "component_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComponentName() {
      componentName_ = null;
    }

    /// <summary>Field number for the "representation_name" field.</summary>
    public const int RepresentationNameFieldNumber = 3;
    private readonly static string RepresentationNameDefaultValue = "";

    private string representationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RepresentationName {
      get { return representationName_ ?? RepresentationNameDefaultValue; }
      set {
        representationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "representation_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRepresentationName {
      get { return representationName_ != null; }
    }
    /// <summary>Clears the value of the "representation_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRepresentationName() {
      representationName_ = null;
    }

    /// <summary>Field number for the "segments_to_store" field.</summary>
    public const int SegmentsToStoreFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> _repeated_segmentsToStore_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> segmentsToStore_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> SegmentsToStore {
      get { return segmentsToStore_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_BeginGameRecordingSegmentsUpload_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_BeginGameRecordingSegmentsUpload_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingId != other.RecordingId) return false;
      if (ComponentName != other.ComponentName) return false;
      if (RepresentationName != other.RepresentationName) return false;
      if(!segmentsToStore_.Equals(other.segmentsToStore_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingId) hash ^= RecordingId.GetHashCode();
      if (HasComponentName) hash ^= ComponentName.GetHashCode();
      if (HasRepresentationName) hash ^= RepresentationName.GetHashCode();
      hash ^= segmentsToStore_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      if (HasComponentName) {
        output.WriteRawTag(18);
        output.WriteString(ComponentName);
      }
      if (HasRepresentationName) {
        output.WriteRawTag(26);
        output.WriteString(RepresentationName);
      }
      segmentsToStore_.WriteTo(output, _repeated_segmentsToStore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      if (HasComponentName) {
        output.WriteRawTag(18);
        output.WriteString(ComponentName);
      }
      if (HasRepresentationName) {
        output.WriteRawTag(26);
        output.WriteString(RepresentationName);
      }
      segmentsToStore_.WriteTo(ref output, _repeated_segmentsToStore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RecordingId);
      }
      if (HasComponentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentName);
      }
      if (HasRepresentationName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepresentationName);
      }
      size += segmentsToStore_.CalculateSize(_repeated_segmentsToStore_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_BeginGameRecordingSegmentsUpload_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingId) {
        RecordingId = other.RecordingId;
      }
      if (other.HasComponentName) {
        ComponentName = other.ComponentName;
      }
      if (other.HasRepresentationName) {
        RepresentationName = other.RepresentationName;
      }
      segmentsToStore_.Add(other.segmentsToStore_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
          case 18: {
            ComponentName = input.ReadString();
            break;
          }
          case 26: {
            RepresentationName = input.ReadString();
            break;
          }
          case 34: {
            segmentsToStore_.AddEntriesFrom(input, _repeated_segmentsToStore_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
          case 18: {
            ComponentName = input.ReadString();
            break;
          }
          case 26: {
            RepresentationName = input.ReadString();
            break;
          }
          case 34: {
            segmentsToStore_.AddEntriesFrom(ref input, _repeated_segmentsToStore_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_BeginGameRecordingSegmentsUpload_Response : pb::IMessage<CVideo_BeginGameRecordingSegmentsUpload_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_BeginGameRecordingSegmentsUpload_Response> _parser = new pb::MessageParser<CVideo_BeginGameRecordingSegmentsUpload_Response>(() => new CVideo_BeginGameRecordingSegmentsUpload_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_BeginGameRecordingSegmentsUpload_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_BeginGameRecordingSegmentsUpload_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_BeginGameRecordingSegmentsUpload_Response(CVideo_BeginGameRecordingSegmentsUpload_Response other) : this() {
      _hasBits0 = other._hasBits0;
      segmentsNeeded_ = other.segmentsNeeded_.Clone();
      callAgain_ = other.callAgain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_BeginGameRecordingSegmentsUpload_Response Clone() {
      return new CVideo_BeginGameRecordingSegmentsUpload_Response(this);
    }

    /// <summary>Field number for the "segments_needed" field.</summary>
    public const int SegmentsNeededFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo> _repeated_segmentsNeeded_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo> segmentsNeeded_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo> SegmentsNeeded {
      get { return segmentsNeeded_; }
    }

    /// <summary>Field number for the "call_again" field.</summary>
    public const int CallAgainFieldNumber = 2;
    private readonly static bool CallAgainDefaultValue = false;

    private bool callAgain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CallAgain {
      get { if ((_hasBits0 & 1) != 0) { return callAgain_; } else { return CallAgainDefaultValue; } }
      set {
        _hasBits0 |= 1;
        callAgain_ = value;
      }
    }
    /// <summary>Gets whether the "call_again" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallAgain {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "call_again" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallAgain() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_BeginGameRecordingSegmentsUpload_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_BeginGameRecordingSegmentsUpload_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!segmentsNeeded_.Equals(other.segmentsNeeded_)) return false;
      if (CallAgain != other.CallAgain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= segmentsNeeded_.GetHashCode();
      if (HasCallAgain) hash ^= CallAgain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      segmentsNeeded_.WriteTo(output, _repeated_segmentsNeeded_codec);
      if (HasCallAgain) {
        output.WriteRawTag(16);
        output.WriteBool(CallAgain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      segmentsNeeded_.WriteTo(ref output, _repeated_segmentsNeeded_codec);
      if (HasCallAgain) {
        output.WriteRawTag(16);
        output.WriteBool(CallAgain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += segmentsNeeded_.CalculateSize(_repeated_segmentsNeeded_codec);
      if (HasCallAgain) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_BeginGameRecordingSegmentsUpload_Response other) {
      if (other == null) {
        return;
      }
      segmentsNeeded_.Add(other.segmentsNeeded_);
      if (other.HasCallAgain) {
        CallAgain = other.CallAgain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            segmentsNeeded_.AddEntriesFrom(input, _repeated_segmentsNeeded_codec);
            break;
          }
          case 16: {
            CallAgain = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            segmentsNeeded_.AddEntriesFrom(ref input, _repeated_segmentsNeeded_codec);
            break;
          }
          case 16: {
            CallAgain = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_CommitGameRecordingSegmentsUpload_Request : pb::IMessage<CVideo_CommitGameRecordingSegmentsUpload_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_CommitGameRecordingSegmentsUpload_Request> _parser = new pb::MessageParser<CVideo_CommitGameRecordingSegmentsUpload_Request>(() => new CVideo_CommitGameRecordingSegmentsUpload_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_CommitGameRecordingSegmentsUpload_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_CommitGameRecordingSegmentsUpload_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_CommitGameRecordingSegmentsUpload_Request(CVideo_CommitGameRecordingSegmentsUpload_Request other) : this() {
      _hasBits0 = other._hasBits0;
      recordingId_ = other.recordingId_;
      componentName_ = other.componentName_;
      representationName_ = other.representationName_;
      firstSegmentNumber_ = other.firstSegmentNumber_;
      numSegments_ = other.numSegments_;
      uploadResult_ = other.uploadResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_CommitGameRecordingSegmentsUpload_Request Clone() {
      return new CVideo_CommitGameRecordingSegmentsUpload_Request(this);
    }

    /// <summary>Field number for the "recording_id" field.</summary>
    public const int RecordingIdFieldNumber = 1;
    private readonly static ulong RecordingIdDefaultValue = 0UL;

    private ulong recordingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RecordingId {
      get { if ((_hasBits0 & 1) != 0) { return recordingId_; } else { return RecordingIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        recordingId_ = value;
      }
    }
    /// <summary>Gets whether the "recording_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "recording_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "component_name" field.</summary>
    public const int ComponentNameFieldNumber = 2;
    private readonly static string ComponentNameDefaultValue = "";

    private string componentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComponentName {
      get { return componentName_ ?? ComponentNameDefaultValue; }
      set {
        componentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "component_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComponentName {
      get { return componentName_ != null; }
    }
    /// <summary>Clears the value of the "component_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComponentName() {
      componentName_ = null;
    }

    /// <summary>Field number for the "representation_name" field.</summary>
    public const int RepresentationNameFieldNumber = 3;
    private readonly static string RepresentationNameDefaultValue = "";

    private string representationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RepresentationName {
      get { return representationName_ ?? RepresentationNameDefaultValue; }
      set {
        representationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "representation_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRepresentationName {
      get { return representationName_ != null; }
    }
    /// <summary>Clears the value of the "representation_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRepresentationName() {
      representationName_ = null;
    }

    /// <summary>Field number for the "first_segment_number" field.</summary>
    public const int FirstSegmentNumberFieldNumber = 4;
    private readonly static uint FirstSegmentNumberDefaultValue = 0;

    private uint firstSegmentNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirstSegmentNumber {
      get { if ((_hasBits0 & 2) != 0) { return firstSegmentNumber_; } else { return FirstSegmentNumberDefaultValue; } }
      set {
        _hasBits0 |= 2;
        firstSegmentNumber_ = value;
      }
    }
    /// <summary>Gets whether the "first_segment_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirstSegmentNumber {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "first_segment_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirstSegmentNumber() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "num_segments" field.</summary>
    public const int NumSegmentsFieldNumber = 5;
    private readonly static uint NumSegmentsDefaultValue = 0;

    private uint numSegments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumSegments {
      get { if ((_hasBits0 & 4) != 0) { return numSegments_; } else { return NumSegmentsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        numSegments_ = value;
      }
    }
    /// <summary>Gets whether the "num_segments" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumSegments {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "num_segments" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumSegments() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "upload_result" field.</summary>
    public const int UploadResultFieldNumber = 6;
    private readonly static uint UploadResultDefaultValue = 0;

    private uint uploadResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UploadResult {
      get { if ((_hasBits0 & 8) != 0) { return uploadResult_; } else { return UploadResultDefaultValue; } }
      set {
        _hasBits0 |= 8;
        uploadResult_ = value;
      }
    }
    /// <summary>Gets whether the "upload_result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUploadResult {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "upload_result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUploadResult() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_CommitGameRecordingSegmentsUpload_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_CommitGameRecordingSegmentsUpload_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingId != other.RecordingId) return false;
      if (ComponentName != other.ComponentName) return false;
      if (RepresentationName != other.RepresentationName) return false;
      if (FirstSegmentNumber != other.FirstSegmentNumber) return false;
      if (NumSegments != other.NumSegments) return false;
      if (UploadResult != other.UploadResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingId) hash ^= RecordingId.GetHashCode();
      if (HasComponentName) hash ^= ComponentName.GetHashCode();
      if (HasRepresentationName) hash ^= RepresentationName.GetHashCode();
      if (HasFirstSegmentNumber) hash ^= FirstSegmentNumber.GetHashCode();
      if (HasNumSegments) hash ^= NumSegments.GetHashCode();
      if (HasUploadResult) hash ^= UploadResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      if (HasComponentName) {
        output.WriteRawTag(18);
        output.WriteString(ComponentName);
      }
      if (HasRepresentationName) {
        output.WriteRawTag(26);
        output.WriteString(RepresentationName);
      }
      if (HasFirstSegmentNumber) {
        output.WriteRawTag(32);
        output.WriteUInt32(FirstSegmentNumber);
      }
      if (HasNumSegments) {
        output.WriteRawTag(40);
        output.WriteUInt32(NumSegments);
      }
      if (HasUploadResult) {
        output.WriteRawTag(48);
        output.WriteUInt32(UploadResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      if (HasComponentName) {
        output.WriteRawTag(18);
        output.WriteString(ComponentName);
      }
      if (HasRepresentationName) {
        output.WriteRawTag(26);
        output.WriteString(RepresentationName);
      }
      if (HasFirstSegmentNumber) {
        output.WriteRawTag(32);
        output.WriteUInt32(FirstSegmentNumber);
      }
      if (HasNumSegments) {
        output.WriteRawTag(40);
        output.WriteUInt32(NumSegments);
      }
      if (HasUploadResult) {
        output.WriteRawTag(48);
        output.WriteUInt32(UploadResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RecordingId);
      }
      if (HasComponentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentName);
      }
      if (HasRepresentationName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepresentationName);
      }
      if (HasFirstSegmentNumber) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstSegmentNumber);
      }
      if (HasNumSegments) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumSegments);
      }
      if (HasUploadResult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UploadResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_CommitGameRecordingSegmentsUpload_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingId) {
        RecordingId = other.RecordingId;
      }
      if (other.HasComponentName) {
        ComponentName = other.ComponentName;
      }
      if (other.HasRepresentationName) {
        RepresentationName = other.RepresentationName;
      }
      if (other.HasFirstSegmentNumber) {
        FirstSegmentNumber = other.FirstSegmentNumber;
      }
      if (other.HasNumSegments) {
        NumSegments = other.NumSegments;
      }
      if (other.HasUploadResult) {
        UploadResult = other.UploadResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
          case 18: {
            ComponentName = input.ReadString();
            break;
          }
          case 26: {
            RepresentationName = input.ReadString();
            break;
          }
          case 32: {
            FirstSegmentNumber = input.ReadUInt32();
            break;
          }
          case 40: {
            NumSegments = input.ReadUInt32();
            break;
          }
          case 48: {
            UploadResult = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
          case 18: {
            ComponentName = input.ReadString();
            break;
          }
          case 26: {
            RepresentationName = input.ReadString();
            break;
          }
          case 32: {
            FirstSegmentNumber = input.ReadUInt32();
            break;
          }
          case 40: {
            NumSegments = input.ReadUInt32();
            break;
          }
          case 48: {
            UploadResult = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_CommitGameRecordingSegmentsUpload_Response : pb::IMessage<CVideo_CommitGameRecordingSegmentsUpload_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_CommitGameRecordingSegmentsUpload_Response> _parser = new pb::MessageParser<CVideo_CommitGameRecordingSegmentsUpload_Response>(() => new CVideo_CommitGameRecordingSegmentsUpload_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_CommitGameRecordingSegmentsUpload_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_CommitGameRecordingSegmentsUpload_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_CommitGameRecordingSegmentsUpload_Response(CVideo_CommitGameRecordingSegmentsUpload_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_CommitGameRecordingSegmentsUpload_Response Clone() {
      return new CVideo_CommitGameRecordingSegmentsUpload_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_CommitGameRecordingSegmentsUpload_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_CommitGameRecordingSegmentsUpload_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_CommitGameRecordingSegmentsUpload_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request : pb::IMessage<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request> _parser = new pb::MessageParser<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request>(() => new CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request other) : this() {
      _hasBits0 = other._hasBits0;
      recordingId_ = other.recordingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request Clone() {
      return new CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request(this);
    }

    /// <summary>Field number for the "recording_id" field.</summary>
    public const int RecordingIdFieldNumber = 1;
    private readonly static ulong RecordingIdDefaultValue = 0UL;

    private ulong recordingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RecordingId {
      get { if ((_hasBits0 & 1) != 0) { return recordingId_; } else { return RecordingIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        recordingId_ = value;
      }
    }
    /// <summary>Gets whether the "recording_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "recording_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingId != other.RecordingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingId) hash ^= RecordingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RecordingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingId) {
        RecordingId = other.RecordingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response : pb::IMessage<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response> _parser = new pb::MessageParser<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response>(() => new CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response other) : this() {
      segmentsNeeded_ = other.segmentsNeeded_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response Clone() {
      return new CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response(this);
    }

    /// <summary>Field number for the "segments_needed" field.</summary>
    public const int SegmentsNeededFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo> _repeated_segmentsNeeded_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo> segmentsNeeded_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentUploadInfo> SegmentsNeeded {
      get { return segmentsNeeded_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!segmentsNeeded_.Equals(other.segmentsNeeded_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= segmentsNeeded_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      segmentsNeeded_.WriteTo(output, _repeated_segmentsNeeded_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      segmentsNeeded_.WriteTo(ref output, _repeated_segmentsNeeded_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += segmentsNeeded_.CalculateSize(_repeated_segmentsNeeded_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response other) {
      if (other == null) {
        return;
      }
      segmentsNeeded_.Add(other.segmentsNeeded_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            segmentsNeeded_.AddEntriesFrom(input, _repeated_segmentsNeeded_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            segmentsNeeded_.AddEntriesFrom(ref input, _repeated_segmentsNeeded_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_GameRecordingCommitSegmentUploads_Request : pb::IMessage<CVideo_GameRecordingCommitSegmentUploads_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_GameRecordingCommitSegmentUploads_Request> _parser = new pb::MessageParser<CVideo_GameRecordingCommitSegmentUploads_Request>(() => new CVideo_GameRecordingCommitSegmentUploads_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_GameRecordingCommitSegmentUploads_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingCommitSegmentUploads_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingCommitSegmentUploads_Request(CVideo_GameRecordingCommitSegmentUploads_Request other) : this() {
      _hasBits0 = other._hasBits0;
      recordingId_ = other.recordingId_;
      segmentsUploaded_ = other.segmentsUploaded_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingCommitSegmentUploads_Request Clone() {
      return new CVideo_GameRecordingCommitSegmentUploads_Request(this);
    }

    /// <summary>Field number for the "recording_id" field.</summary>
    public const int RecordingIdFieldNumber = 1;
    private readonly static ulong RecordingIdDefaultValue = 0UL;

    private ulong recordingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RecordingId {
      get { if ((_hasBits0 & 1) != 0) { return recordingId_; } else { return RecordingIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        recordingId_ = value;
      }
    }
    /// <summary>Gets whether the "recording_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "recording_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "segments_uploaded" field.</summary>
    public const int SegmentsUploadedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> _repeated_segmentsUploaded_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> segmentsUploaded_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CVideo_GameRecordingSegmentInfo> SegmentsUploaded {
      get { return segmentsUploaded_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_GameRecordingCommitSegmentUploads_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_GameRecordingCommitSegmentUploads_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingId != other.RecordingId) return false;
      if(!segmentsUploaded_.Equals(other.segmentsUploaded_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingId) hash ^= RecordingId.GetHashCode();
      hash ^= segmentsUploaded_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      segmentsUploaded_.WriteTo(output, _repeated_segmentsUploaded_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingId) {
        output.WriteRawTag(8);
        output.WriteUInt64(RecordingId);
      }
      segmentsUploaded_.WriteTo(ref output, _repeated_segmentsUploaded_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RecordingId);
      }
      size += segmentsUploaded_.CalculateSize(_repeated_segmentsUploaded_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_GameRecordingCommitSegmentUploads_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingId) {
        RecordingId = other.RecordingId;
      }
      segmentsUploaded_.Add(other.segmentsUploaded_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
          case 18: {
            segmentsUploaded_.AddEntriesFrom(input, _repeated_segmentsUploaded_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RecordingId = input.ReadUInt64();
            break;
          }
          case 18: {
            segmentsUploaded_.AddEntriesFrom(ref input, _repeated_segmentsUploaded_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CVideo_GameRecordingCommitSegmentUploads_Response : pb::IMessage<CVideo_GameRecordingCommitSegmentUploads_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CVideo_GameRecordingCommitSegmentUploads_Response> _parser = new pb::MessageParser<CVideo_GameRecordingCommitSegmentUploads_Response>(() => new CVideo_GameRecordingCommitSegmentUploads_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CVideo_GameRecordingCommitSegmentUploads_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamerecordingSteamclientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingCommitSegmentUploads_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingCommitSegmentUploads_Response(CVideo_GameRecordingCommitSegmentUploads_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CVideo_GameRecordingCommitSegmentUploads_Response Clone() {
      return new CVideo_GameRecordingCommitSegmentUploads_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CVideo_GameRecordingCommitSegmentUploads_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CVideo_GameRecordingCommitSegmentUploads_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CVideo_GameRecordingCommitSegmentUploads_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
