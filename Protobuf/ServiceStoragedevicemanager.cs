// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_storagedevicemanager.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_storagedevicemanager.proto</summary>
  public static partial class ServiceStoragedevicemanagerReflection {

    #region Descriptor
    /// <summary>File descriptor for service_storagedevicemanager.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceStoragedevicemanagerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJzZXJ2aWNlX3N0b3JhZ2VkZXZpY2VtYW5hZ2VyLnByb3RvGiBnb29nbGUv",
            "cHJvdG9idWYvZGVzY3JpcHRvci5wcm90bxoRY29tbW9uX2Jhc2UucHJvdG8i",
            "RgojQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0Fkb3B0X1JlcXVlc3QSEAoIZHJp",
            "dmVfaWQYASABKA0SDQoFbGFiZWwYAiABKAkiJgokQ1N0b3JhZ2VEZXZpY2VN",
            "YW5hZ2VyX0Fkb3B0X1Jlc3BvbnNlIjcKI0NTdG9yYWdlRGV2aWNlTWFuYWdl",
            "cl9FamVjdF9SZXF1ZXN0EhAKCGRyaXZlX2lkGAEgASgNIiYKJENTdG9yYWdl",
            "RGV2aWNlTWFuYWdlcl9FamVjdF9SZXNwb25zZSI9CiRDU3RvcmFnZURldmlj",
            "ZU1hbmFnZXJfRm9ybWF0X1JlcXVlc3QSFQoNYmxvY2RldmljZV9pZBgBIAEo",
            "DSInCiVDU3RvcmFnZURldmljZU1hbmFnZXJfRm9ybWF0X1Jlc3BvbnNlIigK",
            "JkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9HZXRTdGF0ZV9SZXF1ZXN0IlUKJ0NT",
            "dG9yYWdlRGV2aWNlTWFuYWdlcl9HZXRTdGF0ZV9SZXNwb25zZRIqCgVzdGF0",
            "ZRgBIAEoCzIbLkNTdG9yYWdlRGV2aWNlTWFuYWdlclN0YXRlIjIKMENTdG9y",
            "YWdlRGV2aWNlTWFuYWdlcl9Jc1NlcnZpY2VBdmFpbGFibGVfUmVxdWVzdCJJ",
            "CjFDU3RvcmFnZURldmljZU1hbmFnZXJfSXNTZXJ2aWNlQXZhaWxhYmxlX1Jl",
            "c3BvbnNlEhQKDGlzX2F2YWlsYWJsZRgBIAEoCCIxCi9DU3RvcmFnZURldmlj",
            "ZU1hbmFnZXJfU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbiInCiVDU3RvcmFn",
            "ZURldmljZU1hbmFnZXJfVHJpbUFsbF9SZXF1ZXN0IigKJkNTdG9yYWdlRGV2",
            "aWNlTWFuYWdlcl9UcmltQWxsX1Jlc3BvbnNlIj4KJUNTdG9yYWdlRGV2aWNl",
            "TWFuYWdlcl9Vbm1vdW50X1JlcXVlc3QSFQoNYmxvY2RldmljZV9pZBgBIAEo",
            "DSIoCiZDU3RvcmFnZURldmljZU1hbmFnZXJfVW5tb3VudF9SZXNwb25zZSLD",
            "AgogQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyQmxvY2tEZXZpY2USDQoCaWQYASAB",
            "KA06ATASEwoIZHJpdmVfaWQYAiABKA06ATASDAoEcGF0aBgDIAEoCRIVCg1m",
            "cmllbmRseV9wYXRoGAQgASgJEg0KBWxhYmVsGAUgASgJEhIKCnNpemVfYnl0",
            "ZXMYBiABKAQSFgoOaXNfZm9ybWF0dGFibGUYByABKAgSFAoMaXNfcmVhZF9v",
            "bmx5GAggASgIEhYKDmlzX3Jvb3RfZGV2aWNlGAkgASgIEh4KDGNvbnRlbnRf",
            "dHlwZRgKIAEoBUIIgrUYBGVudW0SIQoPZmlsZXN5c3RlbV90eXBlGAsgASgF",
            "QgiCtRgEZW51bRITCgttb3VudF9wYXRocxgMIAMoCRIVCg1pc191bm1vdW50",
            "aW5nGA0gASgIIo0CChpDU3RvcmFnZURldmljZU1hbmFnZXJEcml2ZRINCgJp",
            "ZBgBIAEoDToBMBINCgVtb2RlbBgCIAEoCRIOCgZ2ZW5kb3IYAyABKAkSDgoG",
            "c2VyaWFsGAQgASgJEhQKDGlzX2VqZWN0YWJsZRgFIAEoCBISCgpzaXplX2J5",
            "dGVzGAYgASgEEhwKCm1lZGlhX3R5cGUYByABKAVCCIK1GARlbnVtEhYKDmlz",
            "X3VuZm9ybWF0dGVkGAggASgIEh0KC2Fkb3B0X3N0YWdlGAkgASgFQgiCtRgE",
            "ZW51bRIWCg5pc19mb3JtYXR0YWJsZRgKIAEoCBIaChJpc19tZWRpYV9hdmFp",
            "bGFibGUYCyABKAgi7wEKGkNTdG9yYWdlRGV2aWNlTWFuYWdlclN0YXRlEisK",
            "BmRyaXZlcxgBIAMoCzIbLkNTdG9yYWdlRGV2aWNlTWFuYWdlckRyaXZlEjYK",
            "C2Jsb2NkZXZpY2VzGAIgAygLMiEuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyQmxv",
            "Y2tEZXZpY2USHAoUaXNfdW5tb3VudF9zdXBwb3J0ZWQYAyABKAgSGQoRaXNf",
            "dHJpbV9zdXBwb3J0ZWQYBCABKAgSFwoPaXNfdHJpbV9ydW5uaW5nGAUgASgI",
            "EhoKEmlzX2Fkb3B0X3N1cHBvcnRlZBgGIAEoCDKEBgoUU3RvcmFnZURldmlj",
            "ZU1hbmFnZXISVAoFQWRvcHQSJC5DU3RvcmFnZURldmljZU1hbmFnZXJfQWRv",
            "cHRfUmVxdWVzdBolLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9BZG9wdF9SZXNw",
            "b25zZRJUCgVFamVjdBIkLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9FamVjdF9S",
            "ZXF1ZXN0GiUuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0VqZWN0X1Jlc3BvbnNl",
            "ElcKBkZvcm1hdBIlLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Gb3JtYXRfUmVx",
            "dWVzdBomLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Gb3JtYXRfUmVzcG9uc2US",
            "XQoIR2V0U3RhdGUSJy5DU3RvcmFnZURldmljZU1hbmFnZXJfR2V0U3RhdGVf",
            "UmVxdWVzdBooLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9HZXRTdGF0ZV9SZXNw",
            "b25zZRJ7ChJJc1NlcnZpY2VBdmFpbGFibGUSMS5DU3RvcmFnZURldmljZU1h",
            "bmFnZXJfSXNTZXJ2aWNlQXZhaWxhYmxlX1JlcXVlc3QaMi5DU3RvcmFnZURl",
            "dmljZU1hbmFnZXJfSXNTZXJ2aWNlQXZhaWxhYmxlX1Jlc3BvbnNlElMKEk5v",
            "dGlmeVN0YXRlQ2hhbmdlZBIwLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9TdGF0",
            "ZUNoYW5nZWRfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJaCgdUcmltQWxs",
            "EiYuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX1RyaW1BbGxfUmVxdWVzdBonLkNT",
            "dG9yYWdlRGV2aWNlTWFuYWdlcl9UcmltQWxsX1Jlc3BvbnNlEloKB1VubW91",
            "bnQSJi5DU3RvcmFnZURldmljZU1hbmFnZXJfVW5tb3VudF9SZXF1ZXN0Gicu",
            "Q1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX1VubW91bnRfUmVzcG9uc2VCIKoCHU9w",
            "ZW5TdGVhbXdvcmtzLlByb3RvYnVmLldlYlVJ"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.WebUI.CommonBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Adopt_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Adopt_Request.Parser, new[]{ "DriveId", "Label" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Adopt_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Adopt_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Eject_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Eject_Request.Parser, new[]{ "DriveId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Eject_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Eject_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Format_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Format_Request.Parser, new[]{ "BlocdeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Format_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Format_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_GetState_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_GetState_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_GetState_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_GetState_Response.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_IsServiceAvailable_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_IsServiceAvailable_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_IsServiceAvailable_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_IsServiceAvailable_Response.Parser, new[]{ "IsAvailable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_StateChanged_Notification), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_StateChanged_Notification.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_TrimAll_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_TrimAll_Request.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_TrimAll_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_TrimAll_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Unmount_Request), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Unmount_Request.Parser, new[]{ "BlocdeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Unmount_Response), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManager_Unmount_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice.Parser, new[]{ "Id", "DriveId", "Path", "FriendlyPath", "Label", "SizeBytes", "IsFormattable", "IsReadOnly", "IsRootDevice", "ContentType", "FilesystemType", "MountPaths", "IsUnmounting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive.Parser, new[]{ "Id", "Model", "Vendor", "Serial", "IsEjectable", "SizeBytes", "MediaType", "IsUnformatted", "AdoptStage", "IsFormattable", "IsMediaAvailable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState), global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState.Parser, new[]{ "Drives", "Blocdevices", "IsUnmountSupported", "IsTrimSupported", "IsTrimRunning", "IsAdoptSupported" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Adopt_Request : pb::IMessage<CStorageDeviceManager_Adopt_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Adopt_Request> _parser = new pb::MessageParser<CStorageDeviceManager_Adopt_Request>(() => new CStorageDeviceManager_Adopt_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Adopt_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Adopt_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Adopt_Request(CStorageDeviceManager_Adopt_Request other) : this() {
      _hasBits0 = other._hasBits0;
      driveId_ = other.driveId_;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Adopt_Request Clone() {
      return new CStorageDeviceManager_Adopt_Request(this);
    }

    /// <summary>Field number for the "drive_id" field.</summary>
    public const int DriveIdFieldNumber = 1;
    private readonly static uint DriveIdDefaultValue = 0;

    private uint driveId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DriveId {
      get { if ((_hasBits0 & 1) != 0) { return driveId_; } else { return DriveIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        driveId_ = value;
      }
    }
    /// <summary>Gets whether the "drive_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDriveId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "drive_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDriveId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 2;
    private readonly static string LabelDefaultValue = "";

    private string label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLabel() {
      label_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Adopt_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Adopt_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DriveId != other.DriveId) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDriveId) hash ^= DriveId.GetHashCode();
      if (HasLabel) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDriveId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DriveId);
      }
      if (HasLabel) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDriveId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DriveId);
      }
      if (HasLabel) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDriveId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DriveId);
      }
      if (HasLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Adopt_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasDriveId) {
        DriveId = other.DriveId;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DriveId = input.ReadUInt32();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DriveId = input.ReadUInt32();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Adopt_Response : pb::IMessage<CStorageDeviceManager_Adopt_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Adopt_Response> _parser = new pb::MessageParser<CStorageDeviceManager_Adopt_Response>(() => new CStorageDeviceManager_Adopt_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Adopt_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Adopt_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Adopt_Response(CStorageDeviceManager_Adopt_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Adopt_Response Clone() {
      return new CStorageDeviceManager_Adopt_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Adopt_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Adopt_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Adopt_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Eject_Request : pb::IMessage<CStorageDeviceManager_Eject_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Eject_Request> _parser = new pb::MessageParser<CStorageDeviceManager_Eject_Request>(() => new CStorageDeviceManager_Eject_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Eject_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Eject_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Eject_Request(CStorageDeviceManager_Eject_Request other) : this() {
      _hasBits0 = other._hasBits0;
      driveId_ = other.driveId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Eject_Request Clone() {
      return new CStorageDeviceManager_Eject_Request(this);
    }

    /// <summary>Field number for the "drive_id" field.</summary>
    public const int DriveIdFieldNumber = 1;
    private readonly static uint DriveIdDefaultValue = 0;

    private uint driveId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DriveId {
      get { if ((_hasBits0 & 1) != 0) { return driveId_; } else { return DriveIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        driveId_ = value;
      }
    }
    /// <summary>Gets whether the "drive_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDriveId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "drive_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDriveId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Eject_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Eject_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DriveId != other.DriveId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDriveId) hash ^= DriveId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDriveId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DriveId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDriveId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DriveId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDriveId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DriveId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Eject_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasDriveId) {
        DriveId = other.DriveId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DriveId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DriveId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Eject_Response : pb::IMessage<CStorageDeviceManager_Eject_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Eject_Response> _parser = new pb::MessageParser<CStorageDeviceManager_Eject_Response>(() => new CStorageDeviceManager_Eject_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Eject_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Eject_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Eject_Response(CStorageDeviceManager_Eject_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Eject_Response Clone() {
      return new CStorageDeviceManager_Eject_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Eject_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Eject_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Eject_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Format_Request : pb::IMessage<CStorageDeviceManager_Format_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Format_Request> _parser = new pb::MessageParser<CStorageDeviceManager_Format_Request>(() => new CStorageDeviceManager_Format_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Format_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Format_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Format_Request(CStorageDeviceManager_Format_Request other) : this() {
      _hasBits0 = other._hasBits0;
      blocdeviceId_ = other.blocdeviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Format_Request Clone() {
      return new CStorageDeviceManager_Format_Request(this);
    }

    /// <summary>Field number for the "blocdevice_id" field.</summary>
    public const int BlocdeviceIdFieldNumber = 1;
    private readonly static uint BlocdeviceIdDefaultValue = 0;

    private uint blocdeviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlocdeviceId {
      get { if ((_hasBits0 & 1) != 0) { return blocdeviceId_; } else { return BlocdeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blocdeviceId_ = value;
      }
    }
    /// <summary>Gets whether the "blocdevice_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlocdeviceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blocdevice_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlocdeviceId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Format_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Format_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlocdeviceId != other.BlocdeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBlocdeviceId) hash ^= BlocdeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBlocdeviceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlocdeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBlocdeviceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlocdeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBlocdeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlocdeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Format_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasBlocdeviceId) {
        BlocdeviceId = other.BlocdeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlocdeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlocdeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Format_Response : pb::IMessage<CStorageDeviceManager_Format_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Format_Response> _parser = new pb::MessageParser<CStorageDeviceManager_Format_Response>(() => new CStorageDeviceManager_Format_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Format_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Format_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Format_Response(CStorageDeviceManager_Format_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Format_Response Clone() {
      return new CStorageDeviceManager_Format_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Format_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Format_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Format_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_GetState_Request : pb::IMessage<CStorageDeviceManager_GetState_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_GetState_Request> _parser = new pb::MessageParser<CStorageDeviceManager_GetState_Request>(() => new CStorageDeviceManager_GetState_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_GetState_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_GetState_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_GetState_Request(CStorageDeviceManager_GetState_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_GetState_Request Clone() {
      return new CStorageDeviceManager_GetState_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_GetState_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_GetState_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_GetState_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_GetState_Response : pb::IMessage<CStorageDeviceManager_GetState_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_GetState_Response> _parser = new pb::MessageParser<CStorageDeviceManager_GetState_Response>(() => new CStorageDeviceManager_GetState_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_GetState_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_GetState_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_GetState_Response(CStorageDeviceManager_GetState_Response other) : this() {
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_GetState_Response Clone() {
      return new CStorageDeviceManager_GetState_Response(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_GetState_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_GetState_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_GetState_Response other) {
      if (other == null) {
        return;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_IsServiceAvailable_Request : pb::IMessage<CStorageDeviceManager_IsServiceAvailable_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_IsServiceAvailable_Request> _parser = new pb::MessageParser<CStorageDeviceManager_IsServiceAvailable_Request>(() => new CStorageDeviceManager_IsServiceAvailable_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_IsServiceAvailable_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_IsServiceAvailable_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_IsServiceAvailable_Request(CStorageDeviceManager_IsServiceAvailable_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_IsServiceAvailable_Request Clone() {
      return new CStorageDeviceManager_IsServiceAvailable_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_IsServiceAvailable_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_IsServiceAvailable_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_IsServiceAvailable_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_IsServiceAvailable_Response : pb::IMessage<CStorageDeviceManager_IsServiceAvailable_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_IsServiceAvailable_Response> _parser = new pb::MessageParser<CStorageDeviceManager_IsServiceAvailable_Response>(() => new CStorageDeviceManager_IsServiceAvailable_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_IsServiceAvailable_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_IsServiceAvailable_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_IsServiceAvailable_Response(CStorageDeviceManager_IsServiceAvailable_Response other) : this() {
      _hasBits0 = other._hasBits0;
      isAvailable_ = other.isAvailable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_IsServiceAvailable_Response Clone() {
      return new CStorageDeviceManager_IsServiceAvailable_Response(this);
    }

    /// <summary>Field number for the "is_available" field.</summary>
    public const int IsAvailableFieldNumber = 1;
    private readonly static bool IsAvailableDefaultValue = false;

    private bool isAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAvailable {
      get { if ((_hasBits0 & 1) != 0) { return isAvailable_; } else { return IsAvailableDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isAvailable_ = value;
      }
    }
    /// <summary>Gets whether the "is_available" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAvailable {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_available" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAvailable() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_IsServiceAvailable_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_IsServiceAvailable_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsAvailable != other.IsAvailable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsAvailable) hash ^= IsAvailable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsAvailable) {
        output.WriteRawTag(8);
        output.WriteBool(IsAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsAvailable) {
        output.WriteRawTag(8);
        output.WriteBool(IsAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsAvailable) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_IsServiceAvailable_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasIsAvailable) {
        IsAvailable = other.IsAvailable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsAvailable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsAvailable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_StateChanged_Notification : pb::IMessage<CStorageDeviceManager_StateChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_StateChanged_Notification> _parser = new pb::MessageParser<CStorageDeviceManager_StateChanged_Notification>(() => new CStorageDeviceManager_StateChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_StateChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_StateChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_StateChanged_Notification(CStorageDeviceManager_StateChanged_Notification other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_StateChanged_Notification Clone() {
      return new CStorageDeviceManager_StateChanged_Notification(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_StateChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_StateChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_StateChanged_Notification other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_TrimAll_Request : pb::IMessage<CStorageDeviceManager_TrimAll_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_TrimAll_Request> _parser = new pb::MessageParser<CStorageDeviceManager_TrimAll_Request>(() => new CStorageDeviceManager_TrimAll_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_TrimAll_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_TrimAll_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_TrimAll_Request(CStorageDeviceManager_TrimAll_Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_TrimAll_Request Clone() {
      return new CStorageDeviceManager_TrimAll_Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_TrimAll_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_TrimAll_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_TrimAll_Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_TrimAll_Response : pb::IMessage<CStorageDeviceManager_TrimAll_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_TrimAll_Response> _parser = new pb::MessageParser<CStorageDeviceManager_TrimAll_Response>(() => new CStorageDeviceManager_TrimAll_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_TrimAll_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_TrimAll_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_TrimAll_Response(CStorageDeviceManager_TrimAll_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_TrimAll_Response Clone() {
      return new CStorageDeviceManager_TrimAll_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_TrimAll_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_TrimAll_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_TrimAll_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Unmount_Request : pb::IMessage<CStorageDeviceManager_Unmount_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Unmount_Request> _parser = new pb::MessageParser<CStorageDeviceManager_Unmount_Request>(() => new CStorageDeviceManager_Unmount_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Unmount_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Unmount_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Unmount_Request(CStorageDeviceManager_Unmount_Request other) : this() {
      _hasBits0 = other._hasBits0;
      blocdeviceId_ = other.blocdeviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Unmount_Request Clone() {
      return new CStorageDeviceManager_Unmount_Request(this);
    }

    /// <summary>Field number for the "blocdevice_id" field.</summary>
    public const int BlocdeviceIdFieldNumber = 1;
    private readonly static uint BlocdeviceIdDefaultValue = 0;

    private uint blocdeviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlocdeviceId {
      get { if ((_hasBits0 & 1) != 0) { return blocdeviceId_; } else { return BlocdeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blocdeviceId_ = value;
      }
    }
    /// <summary>Gets whether the "blocdevice_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlocdeviceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blocdevice_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlocdeviceId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Unmount_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Unmount_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlocdeviceId != other.BlocdeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBlocdeviceId) hash ^= BlocdeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBlocdeviceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlocdeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBlocdeviceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlocdeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBlocdeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlocdeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Unmount_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasBlocdeviceId) {
        BlocdeviceId = other.BlocdeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlocdeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlocdeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManager_Unmount_Response : pb::IMessage<CStorageDeviceManager_Unmount_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManager_Unmount_Response> _parser = new pb::MessageParser<CStorageDeviceManager_Unmount_Response>(() => new CStorageDeviceManager_Unmount_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManager_Unmount_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Unmount_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Unmount_Response(CStorageDeviceManager_Unmount_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManager_Unmount_Response Clone() {
      return new CStorageDeviceManager_Unmount_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManager_Unmount_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManager_Unmount_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManager_Unmount_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManagerBlockDevice : pb::IMessage<CStorageDeviceManagerBlockDevice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManagerBlockDevice> _parser = new pb::MessageParser<CStorageDeviceManagerBlockDevice>(() => new CStorageDeviceManagerBlockDevice());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManagerBlockDevice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerBlockDevice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerBlockDevice(CStorageDeviceManagerBlockDevice other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      driveId_ = other.driveId_;
      path_ = other.path_;
      friendlyPath_ = other.friendlyPath_;
      label_ = other.label_;
      sizeBytes_ = other.sizeBytes_;
      isFormattable_ = other.isFormattable_;
      isReadOnly_ = other.isReadOnly_;
      isRootDevice_ = other.isRootDevice_;
      contentType_ = other.contentType_;
      filesystemType_ = other.filesystemType_;
      mountPaths_ = other.mountPaths_.Clone();
      isUnmounting_ = other.isUnmounting_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerBlockDevice Clone() {
      return new CStorageDeviceManagerBlockDevice(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "drive_id" field.</summary>
    public const int DriveIdFieldNumber = 2;
    private readonly static uint DriveIdDefaultValue = 0;

    private uint driveId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DriveId {
      get { if ((_hasBits0 & 2) != 0) { return driveId_; } else { return DriveIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        driveId_ = value;
      }
    }
    /// <summary>Gets whether the "drive_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDriveId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "drive_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDriveId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private readonly static string PathDefaultValue = "";

    private string path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_ ?? PathDefaultValue; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPath {
      get { return path_ != null; }
    }
    /// <summary>Clears the value of the "path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPath() {
      path_ = null;
    }

    /// <summary>Field number for the "friendly_path" field.</summary>
    public const int FriendlyPathFieldNumber = 4;
    private readonly static string FriendlyPathDefaultValue = "";

    private string friendlyPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FriendlyPath {
      get { return friendlyPath_ ?? FriendlyPathDefaultValue; }
      set {
        friendlyPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "friendly_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFriendlyPath {
      get { return friendlyPath_ != null; }
    }
    /// <summary>Clears the value of the "friendly_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFriendlyPath() {
      friendlyPath_ = null;
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 5;
    private readonly static string LabelDefaultValue = "";

    private string label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLabel() {
      label_ = null;
    }

    /// <summary>Field number for the "size_bytes" field.</summary>
    public const int SizeBytesFieldNumber = 6;
    private readonly static ulong SizeBytesDefaultValue = 0UL;

    private ulong sizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SizeBytes {
      get { if ((_hasBits0 & 4) != 0) { return sizeBytes_; } else { return SizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        sizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSizeBytes {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSizeBytes() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_formattable" field.</summary>
    public const int IsFormattableFieldNumber = 7;
    private readonly static bool IsFormattableDefaultValue = false;

    private bool isFormattable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFormattable {
      get { if ((_hasBits0 & 8) != 0) { return isFormattable_; } else { return IsFormattableDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isFormattable_ = value;
      }
    }
    /// <summary>Gets whether the "is_formattable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsFormattable {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_formattable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsFormattable() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "is_read_only" field.</summary>
    public const int IsReadOnlyFieldNumber = 8;
    private readonly static bool IsReadOnlyDefaultValue = false;

    private bool isReadOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsReadOnly {
      get { if ((_hasBits0 & 16) != 0) { return isReadOnly_; } else { return IsReadOnlyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isReadOnly_ = value;
      }
    }
    /// <summary>Gets whether the "is_read_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsReadOnly {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_read_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsReadOnly() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "is_root_device" field.</summary>
    public const int IsRootDeviceFieldNumber = 9;
    private readonly static bool IsRootDeviceDefaultValue = false;

    private bool isRootDevice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRootDevice {
      get { if ((_hasBits0 & 32) != 0) { return isRootDevice_; } else { return IsRootDeviceDefaultValue; } }
      set {
        _hasBits0 |= 32;
        isRootDevice_ = value;
      }
    }
    /// <summary>Gets whether the "is_root_device" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRootDevice {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "is_root_device" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRootDevice() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 10;
    private readonly static int ContentTypeDefaultValue = 0;

    private int contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ContentType {
      get { if ((_hasBits0 & 64) != 0) { return contentType_; } else { return ContentTypeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        contentType_ = value;
      }
    }
    /// <summary>Gets whether the "content_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContentType {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "content_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContentType() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "filesystem_type" field.</summary>
    public const int FilesystemTypeFieldNumber = 11;
    private readonly static int FilesystemTypeDefaultValue = 0;

    private int filesystemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FilesystemType {
      get { if ((_hasBits0 & 128) != 0) { return filesystemType_; } else { return FilesystemTypeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        filesystemType_ = value;
      }
    }
    /// <summary>Gets whether the "filesystem_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilesystemType {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "filesystem_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilesystemType() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "mount_paths" field.</summary>
    public const int MountPathsFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_mountPaths_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> mountPaths_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> MountPaths {
      get { return mountPaths_; }
    }

    /// <summary>Field number for the "is_unmounting" field.</summary>
    public const int IsUnmountingFieldNumber = 13;
    private readonly static bool IsUnmountingDefaultValue = false;

    private bool isUnmounting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnmounting {
      get { if ((_hasBits0 & 256) != 0) { return isUnmounting_; } else { return IsUnmountingDefaultValue; } }
      set {
        _hasBits0 |= 256;
        isUnmounting_ = value;
      }
    }
    /// <summary>Gets whether the "is_unmounting" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUnmounting {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_unmounting" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUnmounting() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManagerBlockDevice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManagerBlockDevice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DriveId != other.DriveId) return false;
      if (Path != other.Path) return false;
      if (FriendlyPath != other.FriendlyPath) return false;
      if (Label != other.Label) return false;
      if (SizeBytes != other.SizeBytes) return false;
      if (IsFormattable != other.IsFormattable) return false;
      if (IsReadOnly != other.IsReadOnly) return false;
      if (IsRootDevice != other.IsRootDevice) return false;
      if (ContentType != other.ContentType) return false;
      if (FilesystemType != other.FilesystemType) return false;
      if(!mountPaths_.Equals(other.mountPaths_)) return false;
      if (IsUnmounting != other.IsUnmounting) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasDriveId) hash ^= DriveId.GetHashCode();
      if (HasPath) hash ^= Path.GetHashCode();
      if (HasFriendlyPath) hash ^= FriendlyPath.GetHashCode();
      if (HasLabel) hash ^= Label.GetHashCode();
      if (HasSizeBytes) hash ^= SizeBytes.GetHashCode();
      if (HasIsFormattable) hash ^= IsFormattable.GetHashCode();
      if (HasIsReadOnly) hash ^= IsReadOnly.GetHashCode();
      if (HasIsRootDevice) hash ^= IsRootDevice.GetHashCode();
      if (HasContentType) hash ^= ContentType.GetHashCode();
      if (HasFilesystemType) hash ^= FilesystemType.GetHashCode();
      hash ^= mountPaths_.GetHashCode();
      if (HasIsUnmounting) hash ^= IsUnmounting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasDriveId) {
        output.WriteRawTag(16);
        output.WriteUInt32(DriveId);
      }
      if (HasPath) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (HasFriendlyPath) {
        output.WriteRawTag(34);
        output.WriteString(FriendlyPath);
      }
      if (HasLabel) {
        output.WriteRawTag(42);
        output.WriteString(Label);
      }
      if (HasSizeBytes) {
        output.WriteRawTag(48);
        output.WriteUInt64(SizeBytes);
      }
      if (HasIsFormattable) {
        output.WriteRawTag(56);
        output.WriteBool(IsFormattable);
      }
      if (HasIsReadOnly) {
        output.WriteRawTag(64);
        output.WriteBool(IsReadOnly);
      }
      if (HasIsRootDevice) {
        output.WriteRawTag(72);
        output.WriteBool(IsRootDevice);
      }
      if (HasContentType) {
        output.WriteRawTag(80);
        output.WriteInt32(ContentType);
      }
      if (HasFilesystemType) {
        output.WriteRawTag(88);
        output.WriteInt32(FilesystemType);
      }
      mountPaths_.WriteTo(output, _repeated_mountPaths_codec);
      if (HasIsUnmounting) {
        output.WriteRawTag(104);
        output.WriteBool(IsUnmounting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasDriveId) {
        output.WriteRawTag(16);
        output.WriteUInt32(DriveId);
      }
      if (HasPath) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (HasFriendlyPath) {
        output.WriteRawTag(34);
        output.WriteString(FriendlyPath);
      }
      if (HasLabel) {
        output.WriteRawTag(42);
        output.WriteString(Label);
      }
      if (HasSizeBytes) {
        output.WriteRawTag(48);
        output.WriteUInt64(SizeBytes);
      }
      if (HasIsFormattable) {
        output.WriteRawTag(56);
        output.WriteBool(IsFormattable);
      }
      if (HasIsReadOnly) {
        output.WriteRawTag(64);
        output.WriteBool(IsReadOnly);
      }
      if (HasIsRootDevice) {
        output.WriteRawTag(72);
        output.WriteBool(IsRootDevice);
      }
      if (HasContentType) {
        output.WriteRawTag(80);
        output.WriteInt32(ContentType);
      }
      if (HasFilesystemType) {
        output.WriteRawTag(88);
        output.WriteInt32(FilesystemType);
      }
      mountPaths_.WriteTo(ref output, _repeated_mountPaths_codec);
      if (HasIsUnmounting) {
        output.WriteRawTag(104);
        output.WriteBool(IsUnmounting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasDriveId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DriveId);
      }
      if (HasPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (HasFriendlyPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendlyPath);
      }
      if (HasLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (HasSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SizeBytes);
      }
      if (HasIsFormattable) {
        size += 1 + 1;
      }
      if (HasIsReadOnly) {
        size += 1 + 1;
      }
      if (HasIsRootDevice) {
        size += 1 + 1;
      }
      if (HasContentType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
      }
      if (HasFilesystemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FilesystemType);
      }
      size += mountPaths_.CalculateSize(_repeated_mountPaths_codec);
      if (HasIsUnmounting) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManagerBlockDevice other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasDriveId) {
        DriveId = other.DriveId;
      }
      if (other.HasPath) {
        Path = other.Path;
      }
      if (other.HasFriendlyPath) {
        FriendlyPath = other.FriendlyPath;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.HasSizeBytes) {
        SizeBytes = other.SizeBytes;
      }
      if (other.HasIsFormattable) {
        IsFormattable = other.IsFormattable;
      }
      if (other.HasIsReadOnly) {
        IsReadOnly = other.IsReadOnly;
      }
      if (other.HasIsRootDevice) {
        IsRootDevice = other.IsRootDevice;
      }
      if (other.HasContentType) {
        ContentType = other.ContentType;
      }
      if (other.HasFilesystemType) {
        FilesystemType = other.FilesystemType;
      }
      mountPaths_.Add(other.mountPaths_);
      if (other.HasIsUnmounting) {
        IsUnmounting = other.IsUnmounting;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            DriveId = input.ReadUInt32();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            FriendlyPath = input.ReadString();
            break;
          }
          case 42: {
            Label = input.ReadString();
            break;
          }
          case 48: {
            SizeBytes = input.ReadUInt64();
            break;
          }
          case 56: {
            IsFormattable = input.ReadBool();
            break;
          }
          case 64: {
            IsReadOnly = input.ReadBool();
            break;
          }
          case 72: {
            IsRootDevice = input.ReadBool();
            break;
          }
          case 80: {
            ContentType = input.ReadInt32();
            break;
          }
          case 88: {
            FilesystemType = input.ReadInt32();
            break;
          }
          case 98: {
            mountPaths_.AddEntriesFrom(input, _repeated_mountPaths_codec);
            break;
          }
          case 104: {
            IsUnmounting = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            DriveId = input.ReadUInt32();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            FriendlyPath = input.ReadString();
            break;
          }
          case 42: {
            Label = input.ReadString();
            break;
          }
          case 48: {
            SizeBytes = input.ReadUInt64();
            break;
          }
          case 56: {
            IsFormattable = input.ReadBool();
            break;
          }
          case 64: {
            IsReadOnly = input.ReadBool();
            break;
          }
          case 72: {
            IsRootDevice = input.ReadBool();
            break;
          }
          case 80: {
            ContentType = input.ReadInt32();
            break;
          }
          case 88: {
            FilesystemType = input.ReadInt32();
            break;
          }
          case 98: {
            mountPaths_.AddEntriesFrom(ref input, _repeated_mountPaths_codec);
            break;
          }
          case 104: {
            IsUnmounting = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManagerDrive : pb::IMessage<CStorageDeviceManagerDrive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManagerDrive> _parser = new pb::MessageParser<CStorageDeviceManagerDrive>(() => new CStorageDeviceManagerDrive());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManagerDrive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerDrive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerDrive(CStorageDeviceManagerDrive other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      model_ = other.model_;
      vendor_ = other.vendor_;
      serial_ = other.serial_;
      isEjectable_ = other.isEjectable_;
      sizeBytes_ = other.sizeBytes_;
      mediaType_ = other.mediaType_;
      isUnformatted_ = other.isUnformatted_;
      adoptStage_ = other.adoptStage_;
      isFormattable_ = other.isFormattable_;
      isMediaAvailable_ = other.isMediaAvailable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerDrive Clone() {
      return new CStorageDeviceManagerDrive(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private readonly static string ModelDefaultValue = "";

    private string model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Model {
      get { return model_ ?? ModelDefaultValue; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModel {
      get { return model_ != null; }
    }
    /// <summary>Clears the value of the "model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModel() {
      model_ = null;
    }

    /// <summary>Field number for the "vendor" field.</summary>
    public const int VendorFieldNumber = 3;
    private readonly static string VendorDefaultValue = "";

    private string vendor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Vendor {
      get { return vendor_ ?? VendorDefaultValue; }
      set {
        vendor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vendor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVendor {
      get { return vendor_ != null; }
    }
    /// <summary>Clears the value of the "vendor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVendor() {
      vendor_ = null;
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 4;
    private readonly static string SerialDefaultValue = "";

    private string serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Serial {
      get { return serial_ ?? SerialDefaultValue; }
      set {
        serial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSerial {
      get { return serial_ != null; }
    }
    /// <summary>Clears the value of the "serial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSerial() {
      serial_ = null;
    }

    /// <summary>Field number for the "is_ejectable" field.</summary>
    public const int IsEjectableFieldNumber = 5;
    private readonly static bool IsEjectableDefaultValue = false;

    private bool isEjectable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEjectable {
      get { if ((_hasBits0 & 2) != 0) { return isEjectable_; } else { return IsEjectableDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isEjectable_ = value;
      }
    }
    /// <summary>Gets whether the "is_ejectable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEjectable {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_ejectable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEjectable() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "size_bytes" field.</summary>
    public const int SizeBytesFieldNumber = 6;
    private readonly static ulong SizeBytesDefaultValue = 0UL;

    private ulong sizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SizeBytes {
      get { if ((_hasBits0 & 4) != 0) { return sizeBytes_; } else { return SizeBytesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        sizeBytes_ = value;
      }
    }
    /// <summary>Gets whether the "size_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSizeBytes {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "size_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSizeBytes() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "media_type" field.</summary>
    public const int MediaTypeFieldNumber = 7;
    private readonly static int MediaTypeDefaultValue = 0;

    private int mediaType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MediaType {
      get { if ((_hasBits0 & 8) != 0) { return mediaType_; } else { return MediaTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mediaType_ = value;
      }
    }
    /// <summary>Gets whether the "media_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMediaType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "media_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMediaType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "is_unformatted" field.</summary>
    public const int IsUnformattedFieldNumber = 8;
    private readonly static bool IsUnformattedDefaultValue = false;

    private bool isUnformatted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnformatted {
      get { if ((_hasBits0 & 16) != 0) { return isUnformatted_; } else { return IsUnformattedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isUnformatted_ = value;
      }
    }
    /// <summary>Gets whether the "is_unformatted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUnformatted {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_unformatted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUnformatted() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "adopt_stage" field.</summary>
    public const int AdoptStageFieldNumber = 9;
    private readonly static int AdoptStageDefaultValue = 0;

    private int adoptStage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AdoptStage {
      get { if ((_hasBits0 & 32) != 0) { return adoptStage_; } else { return AdoptStageDefaultValue; } }
      set {
        _hasBits0 |= 32;
        adoptStage_ = value;
      }
    }
    /// <summary>Gets whether the "adopt_stage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdoptStage {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "adopt_stage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdoptStage() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "is_formattable" field.</summary>
    public const int IsFormattableFieldNumber = 10;
    private readonly static bool IsFormattableDefaultValue = false;

    private bool isFormattable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFormattable {
      get { if ((_hasBits0 & 64) != 0) { return isFormattable_; } else { return IsFormattableDefaultValue; } }
      set {
        _hasBits0 |= 64;
        isFormattable_ = value;
      }
    }
    /// <summary>Gets whether the "is_formattable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsFormattable {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "is_formattable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsFormattable() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "is_media_available" field.</summary>
    public const int IsMediaAvailableFieldNumber = 11;
    private readonly static bool IsMediaAvailableDefaultValue = false;

    private bool isMediaAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMediaAvailable {
      get { if ((_hasBits0 & 128) != 0) { return isMediaAvailable_; } else { return IsMediaAvailableDefaultValue; } }
      set {
        _hasBits0 |= 128;
        isMediaAvailable_ = value;
      }
    }
    /// <summary>Gets whether the "is_media_available" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsMediaAvailable {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "is_media_available" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsMediaAvailable() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManagerDrive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManagerDrive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Model != other.Model) return false;
      if (Vendor != other.Vendor) return false;
      if (Serial != other.Serial) return false;
      if (IsEjectable != other.IsEjectable) return false;
      if (SizeBytes != other.SizeBytes) return false;
      if (MediaType != other.MediaType) return false;
      if (IsUnformatted != other.IsUnformatted) return false;
      if (AdoptStage != other.AdoptStage) return false;
      if (IsFormattable != other.IsFormattable) return false;
      if (IsMediaAvailable != other.IsMediaAvailable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasModel) hash ^= Model.GetHashCode();
      if (HasVendor) hash ^= Vendor.GetHashCode();
      if (HasSerial) hash ^= Serial.GetHashCode();
      if (HasIsEjectable) hash ^= IsEjectable.GetHashCode();
      if (HasSizeBytes) hash ^= SizeBytes.GetHashCode();
      if (HasMediaType) hash ^= MediaType.GetHashCode();
      if (HasIsUnformatted) hash ^= IsUnformatted.GetHashCode();
      if (HasAdoptStage) hash ^= AdoptStage.GetHashCode();
      if (HasIsFormattable) hash ^= IsFormattable.GetHashCode();
      if (HasIsMediaAvailable) hash ^= IsMediaAvailable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasModel) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (HasVendor) {
        output.WriteRawTag(26);
        output.WriteString(Vendor);
      }
      if (HasSerial) {
        output.WriteRawTag(34);
        output.WriteString(Serial);
      }
      if (HasIsEjectable) {
        output.WriteRawTag(40);
        output.WriteBool(IsEjectable);
      }
      if (HasSizeBytes) {
        output.WriteRawTag(48);
        output.WriteUInt64(SizeBytes);
      }
      if (HasMediaType) {
        output.WriteRawTag(56);
        output.WriteInt32(MediaType);
      }
      if (HasIsUnformatted) {
        output.WriteRawTag(64);
        output.WriteBool(IsUnformatted);
      }
      if (HasAdoptStage) {
        output.WriteRawTag(72);
        output.WriteInt32(AdoptStage);
      }
      if (HasIsFormattable) {
        output.WriteRawTag(80);
        output.WriteBool(IsFormattable);
      }
      if (HasIsMediaAvailable) {
        output.WriteRawTag(88);
        output.WriteBool(IsMediaAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasModel) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (HasVendor) {
        output.WriteRawTag(26);
        output.WriteString(Vendor);
      }
      if (HasSerial) {
        output.WriteRawTag(34);
        output.WriteString(Serial);
      }
      if (HasIsEjectable) {
        output.WriteRawTag(40);
        output.WriteBool(IsEjectable);
      }
      if (HasSizeBytes) {
        output.WriteRawTag(48);
        output.WriteUInt64(SizeBytes);
      }
      if (HasMediaType) {
        output.WriteRawTag(56);
        output.WriteInt32(MediaType);
      }
      if (HasIsUnformatted) {
        output.WriteRawTag(64);
        output.WriteBool(IsUnformatted);
      }
      if (HasAdoptStage) {
        output.WriteRawTag(72);
        output.WriteInt32(AdoptStage);
      }
      if (HasIsFormattable) {
        output.WriteRawTag(80);
        output.WriteBool(IsFormattable);
      }
      if (HasIsMediaAvailable) {
        output.WriteRawTag(88);
        output.WriteBool(IsMediaAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasModel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (HasVendor) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Vendor);
      }
      if (HasSerial) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Serial);
      }
      if (HasIsEjectable) {
        size += 1 + 1;
      }
      if (HasSizeBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SizeBytes);
      }
      if (HasMediaType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MediaType);
      }
      if (HasIsUnformatted) {
        size += 1 + 1;
      }
      if (HasAdoptStage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdoptStage);
      }
      if (HasIsFormattable) {
        size += 1 + 1;
      }
      if (HasIsMediaAvailable) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManagerDrive other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasModel) {
        Model = other.Model;
      }
      if (other.HasVendor) {
        Vendor = other.Vendor;
      }
      if (other.HasSerial) {
        Serial = other.Serial;
      }
      if (other.HasIsEjectable) {
        IsEjectable = other.IsEjectable;
      }
      if (other.HasSizeBytes) {
        SizeBytes = other.SizeBytes;
      }
      if (other.HasMediaType) {
        MediaType = other.MediaType;
      }
      if (other.HasIsUnformatted) {
        IsUnformatted = other.IsUnformatted;
      }
      if (other.HasAdoptStage) {
        AdoptStage = other.AdoptStage;
      }
      if (other.HasIsFormattable) {
        IsFormattable = other.IsFormattable;
      }
      if (other.HasIsMediaAvailable) {
        IsMediaAvailable = other.IsMediaAvailable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            Vendor = input.ReadString();
            break;
          }
          case 34: {
            Serial = input.ReadString();
            break;
          }
          case 40: {
            IsEjectable = input.ReadBool();
            break;
          }
          case 48: {
            SizeBytes = input.ReadUInt64();
            break;
          }
          case 56: {
            MediaType = input.ReadInt32();
            break;
          }
          case 64: {
            IsUnformatted = input.ReadBool();
            break;
          }
          case 72: {
            AdoptStage = input.ReadInt32();
            break;
          }
          case 80: {
            IsFormattable = input.ReadBool();
            break;
          }
          case 88: {
            IsMediaAvailable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            Vendor = input.ReadString();
            break;
          }
          case 34: {
            Serial = input.ReadString();
            break;
          }
          case 40: {
            IsEjectable = input.ReadBool();
            break;
          }
          case 48: {
            SizeBytes = input.ReadUInt64();
            break;
          }
          case 56: {
            MediaType = input.ReadInt32();
            break;
          }
          case 64: {
            IsUnformatted = input.ReadBool();
            break;
          }
          case 72: {
            AdoptStage = input.ReadInt32();
            break;
          }
          case 80: {
            IsFormattable = input.ReadBool();
            break;
          }
          case 88: {
            IsMediaAvailable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CStorageDeviceManagerState : pb::IMessage<CStorageDeviceManagerState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CStorageDeviceManagerState> _parser = new pb::MessageParser<CStorageDeviceManagerState>(() => new CStorageDeviceManagerState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CStorageDeviceManagerState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceStoragedevicemanagerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerState(CStorageDeviceManagerState other) : this() {
      _hasBits0 = other._hasBits0;
      drives_ = other.drives_.Clone();
      blocdevices_ = other.blocdevices_.Clone();
      isUnmountSupported_ = other.isUnmountSupported_;
      isTrimSupported_ = other.isTrimSupported_;
      isTrimRunning_ = other.isTrimRunning_;
      isAdoptSupported_ = other.isAdoptSupported_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CStorageDeviceManagerState Clone() {
      return new CStorageDeviceManagerState(this);
    }

    /// <summary>Field number for the "drives" field.</summary>
    public const int DrivesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive> _repeated_drives_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive> drives_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerDrive> Drives {
      get { return drives_; }
    }

    /// <summary>Field number for the "blocdevices" field.</summary>
    public const int BlocdevicesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice> _repeated_blocdevices_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice> blocdevices_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CStorageDeviceManagerBlockDevice> Blocdevices {
      get { return blocdevices_; }
    }

    /// <summary>Field number for the "is_unmount_supported" field.</summary>
    public const int IsUnmountSupportedFieldNumber = 3;
    private readonly static bool IsUnmountSupportedDefaultValue = false;

    private bool isUnmountSupported_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnmountSupported {
      get { if ((_hasBits0 & 1) != 0) { return isUnmountSupported_; } else { return IsUnmountSupportedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isUnmountSupported_ = value;
      }
    }
    /// <summary>Gets whether the "is_unmount_supported" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUnmountSupported {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_unmount_supported" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUnmountSupported() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_trim_supported" field.</summary>
    public const int IsTrimSupportedFieldNumber = 4;
    private readonly static bool IsTrimSupportedDefaultValue = false;

    private bool isTrimSupported_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTrimSupported {
      get { if ((_hasBits0 & 2) != 0) { return isTrimSupported_; } else { return IsTrimSupportedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isTrimSupported_ = value;
      }
    }
    /// <summary>Gets whether the "is_trim_supported" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsTrimSupported {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_trim_supported" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsTrimSupported() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_trim_running" field.</summary>
    public const int IsTrimRunningFieldNumber = 5;
    private readonly static bool IsTrimRunningDefaultValue = false;

    private bool isTrimRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTrimRunning {
      get { if ((_hasBits0 & 4) != 0) { return isTrimRunning_; } else { return IsTrimRunningDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isTrimRunning_ = value;
      }
    }
    /// <summary>Gets whether the "is_trim_running" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsTrimRunning {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_trim_running" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsTrimRunning() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_adopt_supported" field.</summary>
    public const int IsAdoptSupportedFieldNumber = 6;
    private readonly static bool IsAdoptSupportedDefaultValue = false;

    private bool isAdoptSupported_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAdoptSupported {
      get { if ((_hasBits0 & 8) != 0) { return isAdoptSupported_; } else { return IsAdoptSupportedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isAdoptSupported_ = value;
      }
    }
    /// <summary>Gets whether the "is_adopt_supported" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAdoptSupported {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_adopt_supported" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAdoptSupported() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CStorageDeviceManagerState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CStorageDeviceManagerState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!drives_.Equals(other.drives_)) return false;
      if(!blocdevices_.Equals(other.blocdevices_)) return false;
      if (IsUnmountSupported != other.IsUnmountSupported) return false;
      if (IsTrimSupported != other.IsTrimSupported) return false;
      if (IsTrimRunning != other.IsTrimRunning) return false;
      if (IsAdoptSupported != other.IsAdoptSupported) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= drives_.GetHashCode();
      hash ^= blocdevices_.GetHashCode();
      if (HasIsUnmountSupported) hash ^= IsUnmountSupported.GetHashCode();
      if (HasIsTrimSupported) hash ^= IsTrimSupported.GetHashCode();
      if (HasIsTrimRunning) hash ^= IsTrimRunning.GetHashCode();
      if (HasIsAdoptSupported) hash ^= IsAdoptSupported.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      drives_.WriteTo(output, _repeated_drives_codec);
      blocdevices_.WriteTo(output, _repeated_blocdevices_codec);
      if (HasIsUnmountSupported) {
        output.WriteRawTag(24);
        output.WriteBool(IsUnmountSupported);
      }
      if (HasIsTrimSupported) {
        output.WriteRawTag(32);
        output.WriteBool(IsTrimSupported);
      }
      if (HasIsTrimRunning) {
        output.WriteRawTag(40);
        output.WriteBool(IsTrimRunning);
      }
      if (HasIsAdoptSupported) {
        output.WriteRawTag(48);
        output.WriteBool(IsAdoptSupported);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      drives_.WriteTo(ref output, _repeated_drives_codec);
      blocdevices_.WriteTo(ref output, _repeated_blocdevices_codec);
      if (HasIsUnmountSupported) {
        output.WriteRawTag(24);
        output.WriteBool(IsUnmountSupported);
      }
      if (HasIsTrimSupported) {
        output.WriteRawTag(32);
        output.WriteBool(IsTrimSupported);
      }
      if (HasIsTrimRunning) {
        output.WriteRawTag(40);
        output.WriteBool(IsTrimRunning);
      }
      if (HasIsAdoptSupported) {
        output.WriteRawTag(48);
        output.WriteBool(IsAdoptSupported);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += drives_.CalculateSize(_repeated_drives_codec);
      size += blocdevices_.CalculateSize(_repeated_blocdevices_codec);
      if (HasIsUnmountSupported) {
        size += 1 + 1;
      }
      if (HasIsTrimSupported) {
        size += 1 + 1;
      }
      if (HasIsTrimRunning) {
        size += 1 + 1;
      }
      if (HasIsAdoptSupported) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CStorageDeviceManagerState other) {
      if (other == null) {
        return;
      }
      drives_.Add(other.drives_);
      blocdevices_.Add(other.blocdevices_);
      if (other.HasIsUnmountSupported) {
        IsUnmountSupported = other.IsUnmountSupported;
      }
      if (other.HasIsTrimSupported) {
        IsTrimSupported = other.IsTrimSupported;
      }
      if (other.HasIsTrimRunning) {
        IsTrimRunning = other.IsTrimRunning;
      }
      if (other.HasIsAdoptSupported) {
        IsAdoptSupported = other.IsAdoptSupported;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            drives_.AddEntriesFrom(input, _repeated_drives_codec);
            break;
          }
          case 18: {
            blocdevices_.AddEntriesFrom(input, _repeated_blocdevices_codec);
            break;
          }
          case 24: {
            IsUnmountSupported = input.ReadBool();
            break;
          }
          case 32: {
            IsTrimSupported = input.ReadBool();
            break;
          }
          case 40: {
            IsTrimRunning = input.ReadBool();
            break;
          }
          case 48: {
            IsAdoptSupported = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            drives_.AddEntriesFrom(ref input, _repeated_drives_codec);
            break;
          }
          case 18: {
            blocdevices_.AddEntriesFrom(ref input, _repeated_blocdevices_codec);
            break;
          }
          case 24: {
            IsUnmountSupported = input.ReadBool();
            break;
          }
          case 32: {
            IsTrimSupported = input.ReadBool();
            break;
          }
          case 40: {
            IsTrimRunning = input.ReadBool();
            break;
          }
          case 48: {
            IsAdoptSupported = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
